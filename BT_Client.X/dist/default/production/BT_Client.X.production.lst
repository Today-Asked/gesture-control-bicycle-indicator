

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Jan 15 21:27:06 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Generated 25/07/2024 GMT
    39                           ; 
    40                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4520 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000FE0                     bsr             equ	4064
    73   000FE9                     fsr0            equ	4073
    74   000FEA                     fsr0h           equ	4074
    75   000FE9                     fsr0l           equ	4073
    76   000FE1                     fsr1            equ	4065
    77   000FE2                     fsr1h           equ	4066
    78   000FE1                     fsr1l           equ	4065
    79   000FD9                     fsr2            equ	4057
    80   000FDA                     fsr2h           equ	4058
    81   000FD9                     fsr2l           equ	4057
    82   000FEF                     indf0           equ	4079
    83   000FE7                     indf1           equ	4071
    84   000FDF                     indf2           equ	4063
    85   000FF2                     intcon          equ	4082
    86   000000                     nvmcon          equ	0
    87   000FF9                     pcl             equ	4089
    88   000FFA                     pclath          equ	4090
    89   000FFB                     pclatu          equ	4091
    90   000FEB                     plusw0          equ	4075
    91   000FE3                     plusw1          equ	4067
    92   000FDB                     plusw2          equ	4059
    93   000FED                     postdec0        equ	4077
    94   000FE5                     postdec1        equ	4069
    95   000FDD                     postdec2        equ	4061
    96   000FEE                     postinc0        equ	4078
    97   000FE6                     postinc1        equ	4070
    98   000FDE                     postinc2        equ	4062
    99   000FEC                     preinc0         equ	4076
   100   000FE4                     preinc1         equ	4068
   101   000FDC                     preinc2         equ	4060
   102   000FF3                     prod            equ	4083
   103   000FF4                     prodh           equ	4084
   104   000FF3                     prodl           equ	4083
   105   000FD8                     status          equ	4056
   106   000FF5                     tablat          equ	4085
   107   000FF6                     tblptr          equ	4086
   108   000FF7                     tblptrh         equ	4087
   109   000FF6                     tblptrl         equ	4086
   110   000FF8                     tblptru         equ	4088
   111   000FFD                     tosl            equ	4093
   112   000FE8                     wreg            equ	4072
   113   000F80                     PORTA           equ	3968	;# 
   114   000F81                     PORTB           equ	3969	;# 
   115   000F82                     PORTC           equ	3970	;# 
   116   000F83                     PORTD           equ	3971	;# 
   117   000F84                     PORTE           equ	3972	;# 
   118   000F89                     LATA            equ	3977	;# 
   119   000F8A                     LATB            equ	3978	;# 
   120   000F8B                     LATC            equ	3979	;# 
   121   000F8C                     LATD            equ	3980	;# 
   122   000F8D                     LATE            equ	3981	;# 
   123   000F92                     TRISA           equ	3986	;# 
   124   000F92                     DDRA            equ	3986	;# 
   125   000F93                     TRISB           equ	3987	;# 
   126   000F93                     DDRB            equ	3987	;# 
   127   000F94                     TRISC           equ	3988	;# 
   128   000F94                     DDRC            equ	3988	;# 
   129   000F95                     TRISD           equ	3989	;# 
   130   000F95                     DDRD            equ	3989	;# 
   131   000F96                     TRISE           equ	3990	;# 
   132   000F96                     DDRE            equ	3990	;# 
   133   000F9B                     OSCTUNE         equ	3995	;# 
   134   000F9D                     PIE1            equ	3997	;# 
   135   000F9E                     PIR1            equ	3998	;# 
   136   000F9F                     IPR1            equ	3999	;# 
   137   000FA0                     PIE2            equ	4000	;# 
   138   000FA1                     PIR2            equ	4001	;# 
   139   000FA2                     IPR2            equ	4002	;# 
   140   000FA6                     EECON1          equ	4006	;# 
   141   000FA7                     EECON2          equ	4007	;# 
   142   000FA8                     EEDATA          equ	4008	;# 
   143   000FA9                     EEADR           equ	4009	;# 
   144   000FAB                     RCSTA           equ	4011	;# 
   145   000FAB                     RCSTA1          equ	4011	;# 
   146   000FAC                     TXSTA           equ	4012	;# 
   147   000FAC                     TXSTA1          equ	4012	;# 
   148   000FAD                     TXREG           equ	4013	;# 
   149   000FAD                     TXREG1          equ	4013	;# 
   150   000FAE                     RCREG           equ	4014	;# 
   151   000FAE                     RCREG1          equ	4014	;# 
   152   000FAF                     SPBRG           equ	4015	;# 
   153   000FAF                     SPBRG1          equ	4015	;# 
   154   000FB0                     SPBRGH          equ	4016	;# 
   155   000FB1                     T3CON           equ	4017	;# 
   156   000FB2                     TMR3            equ	4018	;# 
   157   000FB2                     TMR3L           equ	4018	;# 
   158   000FB3                     TMR3H           equ	4019	;# 
   159   000FB4                     CMCON           equ	4020	;# 
   160   000FB5                     CVRCON          equ	4021	;# 
   161   000FB6                     ECCP1AS         equ	4022	;# 
   162   000FB6                     ECCPAS          equ	4022	;# 
   163   000FB7                     PWM1CON         equ	4023	;# 
   164   000FB7                     ECCP1DEL        equ	4023	;# 
   165   000FB8                     BAUDCON         equ	4024	;# 
   166   000FB8                     BAUDCTL         equ	4024	;# 
   167   000FBA                     CCP2CON         equ	4026	;# 
   168   000FBB                     CCPR2           equ	4027	;# 
   169   000FBB                     CCPR2L          equ	4027	;# 
   170   000FBC                     CCPR2H          equ	4028	;# 
   171   000FBD                     CCP1CON         equ	4029	;# 
   172   000FBE                     CCPR1           equ	4030	;# 
   173   000FBE                     CCPR1L          equ	4030	;# 
   174   000FBF                     CCPR1H          equ	4031	;# 
   175   000FC0                     ADCON2          equ	4032	;# 
   176   000FC1                     ADCON1          equ	4033	;# 
   177   000FC2                     ADCON0          equ	4034	;# 
   178   000FC3                     ADRES           equ	4035	;# 
   179   000FC3                     ADRESL          equ	4035	;# 
   180   000FC4                     ADRESH          equ	4036	;# 
   181   000FC5                     SSPCON2         equ	4037	;# 
   182   000FC6                     SSPCON1         equ	4038	;# 
   183   000FC7                     SSPSTAT         equ	4039	;# 
   184   000FC8                     SSPADD          equ	4040	;# 
   185   000FC9                     SSPBUF          equ	4041	;# 
   186   000FCA                     T2CON           equ	4042	;# 
   187   000FCB                     PR2             equ	4043	;# 
   188   000FCB                     MEMCON          equ	4043	;# 
   189   000FCC                     TMR2            equ	4044	;# 
   190   000FCD                     T1CON           equ	4045	;# 
   191   000FCE                     TMR1            equ	4046	;# 
   192   000FCE                     TMR1L           equ	4046	;# 
   193   000FCF                     TMR1H           equ	4047	;# 
   194   000FD0                     RCON            equ	4048	;# 
   195   000FD1                     WDTCON          equ	4049	;# 
   196   000FD2                     HLVDCON         equ	4050	;# 
   197   000FD2                     LVDCON          equ	4050	;# 
   198   000FD3                     OSCCON          equ	4051	;# 
   199   000FD5                     T0CON           equ	4053	;# 
   200   000FD6                     TMR0            equ	4054	;# 
   201   000FD6                     TMR0L           equ	4054	;# 
   202   000FD7                     TMR0H           equ	4055	;# 
   203   000FD8                     STATUS          equ	4056	;# 
   204   000FD9                     FSR2            equ	4057	;# 
   205   000FD9                     FSR2L           equ	4057	;# 
   206   000FDA                     FSR2H           equ	4058	;# 
   207   000FDB                     PLUSW2          equ	4059	;# 
   208   000FDC                     PREINC2         equ	4060	;# 
   209   000FDD                     POSTDEC2        equ	4061	;# 
   210   000FDE                     POSTINC2        equ	4062	;# 
   211   000FDF                     INDF2           equ	4063	;# 
   212   000FE0                     BSR             equ	4064	;# 
   213   000FE1                     FSR1            equ	4065	;# 
   214   000FE1                     FSR1L           equ	4065	;# 
   215   000FE2                     FSR1H           equ	4066	;# 
   216   000FE3                     PLUSW1          equ	4067	;# 
   217   000FE4                     PREINC1         equ	4068	;# 
   218   000FE5                     POSTDEC1        equ	4069	;# 
   219   000FE6                     POSTINC1        equ	4070	;# 
   220   000FE7                     INDF1           equ	4071	;# 
   221   000FE8                     WREG            equ	4072	;# 
   222   000FE9                     FSR0            equ	4073	;# 
   223   000FE9                     FSR0L           equ	4073	;# 
   224   000FEA                     FSR0H           equ	4074	;# 
   225   000FEB                     PLUSW0          equ	4075	;# 
   226   000FEC                     PREINC0         equ	4076	;# 
   227   000FED                     POSTDEC0        equ	4077	;# 
   228   000FEE                     POSTINC0        equ	4078	;# 
   229   000FEF                     INDF0           equ	4079	;# 
   230   000FF0                     INTCON3         equ	4080	;# 
   231   000FF1                     INTCON2         equ	4081	;# 
   232   000FF2                     INTCON          equ	4082	;# 
   233   000FF3                     PROD            equ	4083	;# 
   234   000FF3                     PRODL           equ	4083	;# 
   235   000FF4                     PRODH           equ	4084	;# 
   236   000FF5                     TABLAT          equ	4085	;# 
   237   000FF6                     TBLPTR          equ	4086	;# 
   238   000FF6                     TBLPTRL         equ	4086	;# 
   239   000FF7                     TBLPTRH         equ	4087	;# 
   240   000FF8                     TBLPTRU         equ	4088	;# 
   241   000FF9                     PCLAT           equ	4089	;# 
   242   000FF9                     PC              equ	4089	;# 
   243   000FF9                     PCL             equ	4089	;# 
   244   000FFA                     PCLATH          equ	4090	;# 
   245   000FFB                     PCLATU          equ	4091	;# 
   246   000FFC                     STKPTR          equ	4092	;# 
   247   000FFD                     TOS             equ	4093	;# 
   248   000FFD                     TOSL            equ	4093	;# 
   249   000FFE                     TOSH            equ	4094	;# 
   250   000FFF                     TOSU            equ	4095	;# 
   251   000F80                     PORTA           equ	3968	;# 
   252   000F81                     PORTB           equ	3969	;# 
   253   000F82                     PORTC           equ	3970	;# 
   254   000F83                     PORTD           equ	3971	;# 
   255   000F84                     PORTE           equ	3972	;# 
   256   000F89                     LATA            equ	3977	;# 
   257   000F8A                     LATB            equ	3978	;# 
   258   000F8B                     LATC            equ	3979	;# 
   259   000F8C                     LATD            equ	3980	;# 
   260   000F8D                     LATE            equ	3981	;# 
   261   000F92                     TRISA           equ	3986	;# 
   262   000F92                     DDRA            equ	3986	;# 
   263   000F93                     TRISB           equ	3987	;# 
   264   000F93                     DDRB            equ	3987	;# 
   265   000F94                     TRISC           equ	3988	;# 
   266   000F94                     DDRC            equ	3988	;# 
   267   000F95                     TRISD           equ	3989	;# 
   268   000F95                     DDRD            equ	3989	;# 
   269   000F96                     TRISE           equ	3990	;# 
   270   000F96                     DDRE            equ	3990	;# 
   271   000F9B                     OSCTUNE         equ	3995	;# 
   272   000F9D                     PIE1            equ	3997	;# 
   273   000F9E                     PIR1            equ	3998	;# 
   274   000F9F                     IPR1            equ	3999	;# 
   275   000FA0                     PIE2            equ	4000	;# 
   276   000FA1                     PIR2            equ	4001	;# 
   277   000FA2                     IPR2            equ	4002	;# 
   278   000FA6                     EECON1          equ	4006	;# 
   279   000FA7                     EECON2          equ	4007	;# 
   280   000FA8                     EEDATA          equ	4008	;# 
   281   000FA9                     EEADR           equ	4009	;# 
   282   000FAB                     RCSTA           equ	4011	;# 
   283   000FAB                     RCSTA1          equ	4011	;# 
   284   000FAC                     TXSTA           equ	4012	;# 
   285   000FAC                     TXSTA1          equ	4012	;# 
   286   000FAD                     TXREG           equ	4013	;# 
   287   000FAD                     TXREG1          equ	4013	;# 
   288   000FAE                     RCREG           equ	4014	;# 
   289   000FAE                     RCREG1          equ	4014	;# 
   290   000FAF                     SPBRG           equ	4015	;# 
   291   000FAF                     SPBRG1          equ	4015	;# 
   292   000FB0                     SPBRGH          equ	4016	;# 
   293   000FB1                     T3CON           equ	4017	;# 
   294   000FB2                     TMR3            equ	4018	;# 
   295   000FB2                     TMR3L           equ	4018	;# 
   296   000FB3                     TMR3H           equ	4019	;# 
   297   000FB4                     CMCON           equ	4020	;# 
   298   000FB5                     CVRCON          equ	4021	;# 
   299   000FB6                     ECCP1AS         equ	4022	;# 
   300   000FB6                     ECCPAS          equ	4022	;# 
   301   000FB7                     PWM1CON         equ	4023	;# 
   302   000FB7                     ECCP1DEL        equ	4023	;# 
   303   000FB8                     BAUDCON         equ	4024	;# 
   304   000FB8                     BAUDCTL         equ	4024	;# 
   305   000FBA                     CCP2CON         equ	4026	;# 
   306   000FBB                     CCPR2           equ	4027	;# 
   307   000FBB                     CCPR2L          equ	4027	;# 
   308   000FBC                     CCPR2H          equ	4028	;# 
   309   000FBD                     CCP1CON         equ	4029	;# 
   310   000FBE                     CCPR1           equ	4030	;# 
   311   000FBE                     CCPR1L          equ	4030	;# 
   312   000FBF                     CCPR1H          equ	4031	;# 
   313   000FC0                     ADCON2          equ	4032	;# 
   314   000FC1                     ADCON1          equ	4033	;# 
   315   000FC2                     ADCON0          equ	4034	;# 
   316   000FC3                     ADRES           equ	4035	;# 
   317   000FC3                     ADRESL          equ	4035	;# 
   318   000FC4                     ADRESH          equ	4036	;# 
   319   000FC5                     SSPCON2         equ	4037	;# 
   320   000FC6                     SSPCON1         equ	4038	;# 
   321   000FC7                     SSPSTAT         equ	4039	;# 
   322   000FC8                     SSPADD          equ	4040	;# 
   323   000FC9                     SSPBUF          equ	4041	;# 
   324   000FCA                     T2CON           equ	4042	;# 
   325   000FCB                     PR2             equ	4043	;# 
   326   000FCB                     MEMCON          equ	4043	;# 
   327   000FCC                     TMR2            equ	4044	;# 
   328   000FCD                     T1CON           equ	4045	;# 
   329   000FCE                     TMR1            equ	4046	;# 
   330   000FCE                     TMR1L           equ	4046	;# 
   331   000FCF                     TMR1H           equ	4047	;# 
   332   000FD0                     RCON            equ	4048	;# 
   333   000FD1                     WDTCON          equ	4049	;# 
   334   000FD2                     HLVDCON         equ	4050	;# 
   335   000FD2                     LVDCON          equ	4050	;# 
   336   000FD3                     OSCCON          equ	4051	;# 
   337   000FD5                     T0CON           equ	4053	;# 
   338   000FD6                     TMR0            equ	4054	;# 
   339   000FD6                     TMR0L           equ	4054	;# 
   340   000FD7                     TMR0H           equ	4055	;# 
   341   000FD8                     STATUS          equ	4056	;# 
   342   000FD9                     FSR2            equ	4057	;# 
   343   000FD9                     FSR2L           equ	4057	;# 
   344   000FDA                     FSR2H           equ	4058	;# 
   345   000FDB                     PLUSW2          equ	4059	;# 
   346   000FDC                     PREINC2         equ	4060	;# 
   347   000FDD                     POSTDEC2        equ	4061	;# 
   348   000FDE                     POSTINC2        equ	4062	;# 
   349   000FDF                     INDF2           equ	4063	;# 
   350   000FE0                     BSR             equ	4064	;# 
   351   000FE1                     FSR1            equ	4065	;# 
   352   000FE1                     FSR1L           equ	4065	;# 
   353   000FE2                     FSR1H           equ	4066	;# 
   354   000FE3                     PLUSW1          equ	4067	;# 
   355   000FE4                     PREINC1         equ	4068	;# 
   356   000FE5                     POSTDEC1        equ	4069	;# 
   357   000FE6                     POSTINC1        equ	4070	;# 
   358   000FE7                     INDF1           equ	4071	;# 
   359   000FE8                     WREG            equ	4072	;# 
   360   000FE9                     FSR0            equ	4073	;# 
   361   000FE9                     FSR0L           equ	4073	;# 
   362   000FEA                     FSR0H           equ	4074	;# 
   363   000FEB                     PLUSW0          equ	4075	;# 
   364   000FEC                     PREINC0         equ	4076	;# 
   365   000FED                     POSTDEC0        equ	4077	;# 
   366   000FEE                     POSTINC0        equ	4078	;# 
   367   000FEF                     INDF0           equ	4079	;# 
   368   000FF0                     INTCON3         equ	4080	;# 
   369   000FF1                     INTCON2         equ	4081	;# 
   370   000FF2                     INTCON          equ	4082	;# 
   371   000FF3                     PROD            equ	4083	;# 
   372   000FF3                     PRODL           equ	4083	;# 
   373   000FF4                     PRODH           equ	4084	;# 
   374   000FF5                     TABLAT          equ	4085	;# 
   375   000FF6                     TBLPTR          equ	4086	;# 
   376   000FF6                     TBLPTRL         equ	4086	;# 
   377   000FF7                     TBLPTRH         equ	4087	;# 
   378   000FF8                     TBLPTRU         equ	4088	;# 
   379   000FF9                     PCLAT           equ	4089	;# 
   380   000FF9                     PC              equ	4089	;# 
   381   000FF9                     PCL             equ	4089	;# 
   382   000FFA                     PCLATH          equ	4090	;# 
   383   000FFB                     PCLATU          equ	4091	;# 
   384   000FFC                     STKPTR          equ	4092	;# 
   385   000FFD                     TOS             equ	4093	;# 
   386   000FFD                     TOSL            equ	4093	;# 
   387   000FFE                     TOSH            equ	4094	;# 
   388   000FFF                     TOSU            equ	4095	;# 
   389   000F80                     PORTA           equ	3968	;# 
   390   000F81                     PORTB           equ	3969	;# 
   391   000F82                     PORTC           equ	3970	;# 
   392   000F83                     PORTD           equ	3971	;# 
   393   000F84                     PORTE           equ	3972	;# 
   394   000F89                     LATA            equ	3977	;# 
   395   000F8A                     LATB            equ	3978	;# 
   396   000F8B                     LATC            equ	3979	;# 
   397   000F8C                     LATD            equ	3980	;# 
   398   000F8D                     LATE            equ	3981	;# 
   399   000F92                     TRISA           equ	3986	;# 
   400   000F92                     DDRA            equ	3986	;# 
   401   000F93                     TRISB           equ	3987	;# 
   402   000F93                     DDRB            equ	3987	;# 
   403   000F94                     TRISC           equ	3988	;# 
   404   000F94                     DDRC            equ	3988	;# 
   405   000F95                     TRISD           equ	3989	;# 
   406   000F95                     DDRD            equ	3989	;# 
   407   000F96                     TRISE           equ	3990	;# 
   408   000F96                     DDRE            equ	3990	;# 
   409   000F9B                     OSCTUNE         equ	3995	;# 
   410   000F9D                     PIE1            equ	3997	;# 
   411   000F9E                     PIR1            equ	3998	;# 
   412   000F9F                     IPR1            equ	3999	;# 
   413   000FA0                     PIE2            equ	4000	;# 
   414   000FA1                     PIR2            equ	4001	;# 
   415   000FA2                     IPR2            equ	4002	;# 
   416   000FA6                     EECON1          equ	4006	;# 
   417   000FA7                     EECON2          equ	4007	;# 
   418   000FA8                     EEDATA          equ	4008	;# 
   419   000FA9                     EEADR           equ	4009	;# 
   420   000FAB                     RCSTA           equ	4011	;# 
   421   000FAB                     RCSTA1          equ	4011	;# 
   422   000FAC                     TXSTA           equ	4012	;# 
   423   000FAC                     TXSTA1          equ	4012	;# 
   424   000FAD                     TXREG           equ	4013	;# 
   425   000FAD                     TXREG1          equ	4013	;# 
   426   000FAE                     RCREG           equ	4014	;# 
   427   000FAE                     RCREG1          equ	4014	;# 
   428   000FAF                     SPBRG           equ	4015	;# 
   429   000FAF                     SPBRG1          equ	4015	;# 
   430   000FB0                     SPBRGH          equ	4016	;# 
   431   000FB1                     T3CON           equ	4017	;# 
   432   000FB2                     TMR3            equ	4018	;# 
   433   000FB2                     TMR3L           equ	4018	;# 
   434   000FB3                     TMR3H           equ	4019	;# 
   435   000FB4                     CMCON           equ	4020	;# 
   436   000FB5                     CVRCON          equ	4021	;# 
   437   000FB6                     ECCP1AS         equ	4022	;# 
   438   000FB6                     ECCPAS          equ	4022	;# 
   439   000FB7                     PWM1CON         equ	4023	;# 
   440   000FB7                     ECCP1DEL        equ	4023	;# 
   441   000FB8                     BAUDCON         equ	4024	;# 
   442   000FB8                     BAUDCTL         equ	4024	;# 
   443   000FBA                     CCP2CON         equ	4026	;# 
   444   000FBB                     CCPR2           equ	4027	;# 
   445   000FBB                     CCPR2L          equ	4027	;# 
   446   000FBC                     CCPR2H          equ	4028	;# 
   447   000FBD                     CCP1CON         equ	4029	;# 
   448   000FBE                     CCPR1           equ	4030	;# 
   449   000FBE                     CCPR1L          equ	4030	;# 
   450   000FBF                     CCPR1H          equ	4031	;# 
   451   000FC0                     ADCON2          equ	4032	;# 
   452   000FC1                     ADCON1          equ	4033	;# 
   453   000FC2                     ADCON0          equ	4034	;# 
   454   000FC3                     ADRES           equ	4035	;# 
   455   000FC3                     ADRESL          equ	4035	;# 
   456   000FC4                     ADRESH          equ	4036	;# 
   457   000FC5                     SSPCON2         equ	4037	;# 
   458   000FC6                     SSPCON1         equ	4038	;# 
   459   000FC7                     SSPSTAT         equ	4039	;# 
   460   000FC8                     SSPADD          equ	4040	;# 
   461   000FC9                     SSPBUF          equ	4041	;# 
   462   000FCA                     T2CON           equ	4042	;# 
   463   000FCB                     PR2             equ	4043	;# 
   464   000FCB                     MEMCON          equ	4043	;# 
   465   000FCC                     TMR2            equ	4044	;# 
   466   000FCD                     T1CON           equ	4045	;# 
   467   000FCE                     TMR1            equ	4046	;# 
   468   000FCE                     TMR1L           equ	4046	;# 
   469   000FCF                     TMR1H           equ	4047	;# 
   470   000FD0                     RCON            equ	4048	;# 
   471   000FD1                     WDTCON          equ	4049	;# 
   472   000FD2                     HLVDCON         equ	4050	;# 
   473   000FD2                     LVDCON          equ	4050	;# 
   474   000FD3                     OSCCON          equ	4051	;# 
   475   000FD5                     T0CON           equ	4053	;# 
   476   000FD6                     TMR0            equ	4054	;# 
   477   000FD6                     TMR0L           equ	4054	;# 
   478   000FD7                     TMR0H           equ	4055	;# 
   479   000FD8                     STATUS          equ	4056	;# 
   480   000FD9                     FSR2            equ	4057	;# 
   481   000FD9                     FSR2L           equ	4057	;# 
   482   000FDA                     FSR2H           equ	4058	;# 
   483   000FDB                     PLUSW2          equ	4059	;# 
   484   000FDC                     PREINC2         equ	4060	;# 
   485   000FDD                     POSTDEC2        equ	4061	;# 
   486   000FDE                     POSTINC2        equ	4062	;# 
   487   000FDF                     INDF2           equ	4063	;# 
   488   000FE0                     BSR             equ	4064	;# 
   489   000FE1                     FSR1            equ	4065	;# 
   490   000FE1                     FSR1L           equ	4065	;# 
   491   000FE2                     FSR1H           equ	4066	;# 
   492   000FE3                     PLUSW1          equ	4067	;# 
   493   000FE4                     PREINC1         equ	4068	;# 
   494   000FE5                     POSTDEC1        equ	4069	;# 
   495   000FE6                     POSTINC1        equ	4070	;# 
   496   000FE7                     INDF1           equ	4071	;# 
   497   000FE8                     WREG            equ	4072	;# 
   498   000FE9                     FSR0            equ	4073	;# 
   499   000FE9                     FSR0L           equ	4073	;# 
   500   000FEA                     FSR0H           equ	4074	;# 
   501   000FEB                     PLUSW0          equ	4075	;# 
   502   000FEC                     PREINC0         equ	4076	;# 
   503   000FED                     POSTDEC0        equ	4077	;# 
   504   000FEE                     POSTINC0        equ	4078	;# 
   505   000FEF                     INDF0           equ	4079	;# 
   506   000FF0                     INTCON3         equ	4080	;# 
   507   000FF1                     INTCON2         equ	4081	;# 
   508   000FF2                     INTCON          equ	4082	;# 
   509   000FF3                     PROD            equ	4083	;# 
   510   000FF3                     PRODL           equ	4083	;# 
   511   000FF4                     PRODH           equ	4084	;# 
   512   000FF5                     TABLAT          equ	4085	;# 
   513   000FF6                     TBLPTR          equ	4086	;# 
   514   000FF6                     TBLPTRL         equ	4086	;# 
   515   000FF7                     TBLPTRH         equ	4087	;# 
   516   000FF8                     TBLPTRU         equ	4088	;# 
   517   000FF9                     PCLAT           equ	4089	;# 
   518   000FF9                     PC              equ	4089	;# 
   519   000FF9                     PCL             equ	4089	;# 
   520   000FFA                     PCLATH          equ	4090	;# 
   521   000FFB                     PCLATU          equ	4091	;# 
   522   000FFC                     STKPTR          equ	4092	;# 
   523   000FFD                     TOS             equ	4093	;# 
   524   000FFD                     TOSL            equ	4093	;# 
   525   000FFE                     TOSH            equ	4094	;# 
   526   000FFF                     TOSU            equ	4095	;# 
   527   000F80                     PORTA           equ	3968	;# 
   528   000F81                     PORTB           equ	3969	;# 
   529   000F82                     PORTC           equ	3970	;# 
   530   000F83                     PORTD           equ	3971	;# 
   531   000F84                     PORTE           equ	3972	;# 
   532   000F89                     LATA            equ	3977	;# 
   533   000F8A                     LATB            equ	3978	;# 
   534   000F8B                     LATC            equ	3979	;# 
   535   000F8C                     LATD            equ	3980	;# 
   536   000F8D                     LATE            equ	3981	;# 
   537   000F92                     TRISA           equ	3986	;# 
   538   000F92                     DDRA            equ	3986	;# 
   539   000F93                     TRISB           equ	3987	;# 
   540   000F93                     DDRB            equ	3987	;# 
   541   000F94                     TRISC           equ	3988	;# 
   542   000F94                     DDRC            equ	3988	;# 
   543   000F95                     TRISD           equ	3989	;# 
   544   000F95                     DDRD            equ	3989	;# 
   545   000F96                     TRISE           equ	3990	;# 
   546   000F96                     DDRE            equ	3990	;# 
   547   000F9B                     OSCTUNE         equ	3995	;# 
   548   000F9D                     PIE1            equ	3997	;# 
   549   000F9E                     PIR1            equ	3998	;# 
   550   000F9F                     IPR1            equ	3999	;# 
   551   000FA0                     PIE2            equ	4000	;# 
   552   000FA1                     PIR2            equ	4001	;# 
   553   000FA2                     IPR2            equ	4002	;# 
   554   000FA6                     EECON1          equ	4006	;# 
   555   000FA7                     EECON2          equ	4007	;# 
   556   000FA8                     EEDATA          equ	4008	;# 
   557   000FA9                     EEADR           equ	4009	;# 
   558   000FAB                     RCSTA           equ	4011	;# 
   559   000FAB                     RCSTA1          equ	4011	;# 
   560   000FAC                     TXSTA           equ	4012	;# 
   561   000FAC                     TXSTA1          equ	4012	;# 
   562   000FAD                     TXREG           equ	4013	;# 
   563   000FAD                     TXREG1          equ	4013	;# 
   564   000FAE                     RCREG           equ	4014	;# 
   565   000FAE                     RCREG1          equ	4014	;# 
   566   000FAF                     SPBRG           equ	4015	;# 
   567   000FAF                     SPBRG1          equ	4015	;# 
   568   000FB0                     SPBRGH          equ	4016	;# 
   569   000FB1                     T3CON           equ	4017	;# 
   570   000FB2                     TMR3            equ	4018	;# 
   571   000FB2                     TMR3L           equ	4018	;# 
   572   000FB3                     TMR3H           equ	4019	;# 
   573   000FB4                     CMCON           equ	4020	;# 
   574   000FB5                     CVRCON          equ	4021	;# 
   575   000FB6                     ECCP1AS         equ	4022	;# 
   576   000FB6                     ECCPAS          equ	4022	;# 
   577   000FB7                     PWM1CON         equ	4023	;# 
   578   000FB7                     ECCP1DEL        equ	4023	;# 
   579   000FB8                     BAUDCON         equ	4024	;# 
   580   000FB8                     BAUDCTL         equ	4024	;# 
   581   000FBA                     CCP2CON         equ	4026	;# 
   582   000FBB                     CCPR2           equ	4027	;# 
   583   000FBB                     CCPR2L          equ	4027	;# 
   584   000FBC                     CCPR2H          equ	4028	;# 
   585   000FBD                     CCP1CON         equ	4029	;# 
   586   000FBE                     CCPR1           equ	4030	;# 
   587   000FBE                     CCPR1L          equ	4030	;# 
   588   000FBF                     CCPR1H          equ	4031	;# 
   589   000FC0                     ADCON2          equ	4032	;# 
   590   000FC1                     ADCON1          equ	4033	;# 
   591   000FC2                     ADCON0          equ	4034	;# 
   592   000FC3                     ADRES           equ	4035	;# 
   593   000FC3                     ADRESL          equ	4035	;# 
   594   000FC4                     ADRESH          equ	4036	;# 
   595   000FC5                     SSPCON2         equ	4037	;# 
   596   000FC6                     SSPCON1         equ	4038	;# 
   597   000FC7                     SSPSTAT         equ	4039	;# 
   598   000FC8                     SSPADD          equ	4040	;# 
   599   000FC9                     SSPBUF          equ	4041	;# 
   600   000FCA                     T2CON           equ	4042	;# 
   601   000FCB                     PR2             equ	4043	;# 
   602   000FCB                     MEMCON          equ	4043	;# 
   603   000FCC                     TMR2            equ	4044	;# 
   604   000FCD                     T1CON           equ	4045	;# 
   605   000FCE                     TMR1            equ	4046	;# 
   606   000FCE                     TMR1L           equ	4046	;# 
   607   000FCF                     TMR1H           equ	4047	;# 
   608   000FD0                     RCON            equ	4048	;# 
   609   000FD1                     WDTCON          equ	4049	;# 
   610   000FD2                     HLVDCON         equ	4050	;# 
   611   000FD2                     LVDCON          equ	4050	;# 
   612   000FD3                     OSCCON          equ	4051	;# 
   613   000FD5                     T0CON           equ	4053	;# 
   614   000FD6                     TMR0            equ	4054	;# 
   615   000FD6                     TMR0L           equ	4054	;# 
   616   000FD7                     TMR0H           equ	4055	;# 
   617   000FD8                     STATUS          equ	4056	;# 
   618   000FD9                     FSR2            equ	4057	;# 
   619   000FD9                     FSR2L           equ	4057	;# 
   620   000FDA                     FSR2H           equ	4058	;# 
   621   000FDB                     PLUSW2          equ	4059	;# 
   622   000FDC                     PREINC2         equ	4060	;# 
   623   000FDD                     POSTDEC2        equ	4061	;# 
   624   000FDE                     POSTINC2        equ	4062	;# 
   625   000FDF                     INDF2           equ	4063	;# 
   626   000FE0                     BSR             equ	4064	;# 
   627   000FE1                     FSR1            equ	4065	;# 
   628   000FE1                     FSR1L           equ	4065	;# 
   629   000FE2                     FSR1H           equ	4066	;# 
   630   000FE3                     PLUSW1          equ	4067	;# 
   631   000FE4                     PREINC1         equ	4068	;# 
   632   000FE5                     POSTDEC1        equ	4069	;# 
   633   000FE6                     POSTINC1        equ	4070	;# 
   634   000FE7                     INDF1           equ	4071	;# 
   635   000FE8                     WREG            equ	4072	;# 
   636   000FE9                     FSR0            equ	4073	;# 
   637   000FE9                     FSR0L           equ	4073	;# 
   638   000FEA                     FSR0H           equ	4074	;# 
   639   000FEB                     PLUSW0          equ	4075	;# 
   640   000FEC                     PREINC0         equ	4076	;# 
   641   000FED                     POSTDEC0        equ	4077	;# 
   642   000FEE                     POSTINC0        equ	4078	;# 
   643   000FEF                     INDF0           equ	4079	;# 
   644   000FF0                     INTCON3         equ	4080	;# 
   645   000FF1                     INTCON2         equ	4081	;# 
   646   000FF2                     INTCON          equ	4082	;# 
   647   000FF3                     PROD            equ	4083	;# 
   648   000FF3                     PRODL           equ	4083	;# 
   649   000FF4                     PRODH           equ	4084	;# 
   650   000FF5                     TABLAT          equ	4085	;# 
   651   000FF6                     TBLPTR          equ	4086	;# 
   652   000FF6                     TBLPTRL         equ	4086	;# 
   653   000FF7                     TBLPTRH         equ	4087	;# 
   654   000FF8                     TBLPTRU         equ	4088	;# 
   655   000FF9                     PCLAT           equ	4089	;# 
   656   000FF9                     PC              equ	4089	;# 
   657   000FF9                     PCL             equ	4089	;# 
   658   000FFA                     PCLATH          equ	4090	;# 
   659   000FFB                     PCLATU          equ	4091	;# 
   660   000FFC                     STKPTR          equ	4092	;# 
   661   000FFD                     TOS             equ	4093	;# 
   662   000FFD                     TOSL            equ	4093	;# 
   663   000FFE                     TOSH            equ	4094	;# 
   664   000FFF                     TOSU            equ	4095	;# 
   665   000F80                     PORTA           equ	3968	;# 
   666   000F81                     PORTB           equ	3969	;# 
   667   000F82                     PORTC           equ	3970	;# 
   668   000F83                     PORTD           equ	3971	;# 
   669   000F84                     PORTE           equ	3972	;# 
   670   000F89                     LATA            equ	3977	;# 
   671   000F8A                     LATB            equ	3978	;# 
   672   000F8B                     LATC            equ	3979	;# 
   673   000F8C                     LATD            equ	3980	;# 
   674   000F8D                     LATE            equ	3981	;# 
   675   000F92                     TRISA           equ	3986	;# 
   676   000F92                     DDRA            equ	3986	;# 
   677   000F93                     TRISB           equ	3987	;# 
   678   000F93                     DDRB            equ	3987	;# 
   679   000F94                     TRISC           equ	3988	;# 
   680   000F94                     DDRC            equ	3988	;# 
   681   000F95                     TRISD           equ	3989	;# 
   682   000F95                     DDRD            equ	3989	;# 
   683   000F96                     TRISE           equ	3990	;# 
   684   000F96                     DDRE            equ	3990	;# 
   685   000F9B                     OSCTUNE         equ	3995	;# 
   686   000F9D                     PIE1            equ	3997	;# 
   687   000F9E                     PIR1            equ	3998	;# 
   688   000F9F                     IPR1            equ	3999	;# 
   689   000FA0                     PIE2            equ	4000	;# 
   690   000FA1                     PIR2            equ	4001	;# 
   691   000FA2                     IPR2            equ	4002	;# 
   692   000FA6                     EECON1          equ	4006	;# 
   693   000FA7                     EECON2          equ	4007	;# 
   694   000FA8                     EEDATA          equ	4008	;# 
   695   000FA9                     EEADR           equ	4009	;# 
   696   000FAB                     RCSTA           equ	4011	;# 
   697   000FAB                     RCSTA1          equ	4011	;# 
   698   000FAC                     TXSTA           equ	4012	;# 
   699   000FAC                     TXSTA1          equ	4012	;# 
   700   000FAD                     TXREG           equ	4013	;# 
   701   000FAD                     TXREG1          equ	4013	;# 
   702   000FAE                     RCREG           equ	4014	;# 
   703   000FAE                     RCREG1          equ	4014	;# 
   704   000FAF                     SPBRG           equ	4015	;# 
   705   000FAF                     SPBRG1          equ	4015	;# 
   706   000FB0                     SPBRGH          equ	4016	;# 
   707   000FB1                     T3CON           equ	4017	;# 
   708   000FB2                     TMR3            equ	4018	;# 
   709   000FB2                     TMR3L           equ	4018	;# 
   710   000FB3                     TMR3H           equ	4019	;# 
   711   000FB4                     CMCON           equ	4020	;# 
   712   000FB5                     CVRCON          equ	4021	;# 
   713   000FB6                     ECCP1AS         equ	4022	;# 
   714   000FB6                     ECCPAS          equ	4022	;# 
   715   000FB7                     PWM1CON         equ	4023	;# 
   716   000FB7                     ECCP1DEL        equ	4023	;# 
   717   000FB8                     BAUDCON         equ	4024	;# 
   718   000FB8                     BAUDCTL         equ	4024	;# 
   719   000FBA                     CCP2CON         equ	4026	;# 
   720   000FBB                     CCPR2           equ	4027	;# 
   721   000FBB                     CCPR2L          equ	4027	;# 
   722   000FBC                     CCPR2H          equ	4028	;# 
   723   000FBD                     CCP1CON         equ	4029	;# 
   724   000FBE                     CCPR1           equ	4030	;# 
   725   000FBE                     CCPR1L          equ	4030	;# 
   726   000FBF                     CCPR1H          equ	4031	;# 
   727   000FC0                     ADCON2          equ	4032	;# 
   728   000FC1                     ADCON1          equ	4033	;# 
   729   000FC2                     ADCON0          equ	4034	;# 
   730   000FC3                     ADRES           equ	4035	;# 
   731   000FC3                     ADRESL          equ	4035	;# 
   732   000FC4                     ADRESH          equ	4036	;# 
   733   000FC5                     SSPCON2         equ	4037	;# 
   734   000FC6                     SSPCON1         equ	4038	;# 
   735   000FC7                     SSPSTAT         equ	4039	;# 
   736   000FC8                     SSPADD          equ	4040	;# 
   737   000FC9                     SSPBUF          equ	4041	;# 
   738   000FCA                     T2CON           equ	4042	;# 
   739   000FCB                     PR2             equ	4043	;# 
   740   000FCB                     MEMCON          equ	4043	;# 
   741   000FCC                     TMR2            equ	4044	;# 
   742   000FCD                     T1CON           equ	4045	;# 
   743   000FCE                     TMR1            equ	4046	;# 
   744   000FCE                     TMR1L           equ	4046	;# 
   745   000FCF                     TMR1H           equ	4047	;# 
   746   000FD0                     RCON            equ	4048	;# 
   747   000FD1                     WDTCON          equ	4049	;# 
   748   000FD2                     HLVDCON         equ	4050	;# 
   749   000FD2                     LVDCON          equ	4050	;# 
   750   000FD3                     OSCCON          equ	4051	;# 
   751   000FD5                     T0CON           equ	4053	;# 
   752   000FD6                     TMR0            equ	4054	;# 
   753   000FD6                     TMR0L           equ	4054	;# 
   754   000FD7                     TMR0H           equ	4055	;# 
   755   000FD8                     STATUS          equ	4056	;# 
   756   000FD9                     FSR2            equ	4057	;# 
   757   000FD9                     FSR2L           equ	4057	;# 
   758   000FDA                     FSR2H           equ	4058	;# 
   759   000FDB                     PLUSW2          equ	4059	;# 
   760   000FDC                     PREINC2         equ	4060	;# 
   761   000FDD                     POSTDEC2        equ	4061	;# 
   762   000FDE                     POSTINC2        equ	4062	;# 
   763   000FDF                     INDF2           equ	4063	;# 
   764   000FE0                     BSR             equ	4064	;# 
   765   000FE1                     FSR1            equ	4065	;# 
   766   000FE1                     FSR1L           equ	4065	;# 
   767   000FE2                     FSR1H           equ	4066	;# 
   768   000FE3                     PLUSW1          equ	4067	;# 
   769   000FE4                     PREINC1         equ	4068	;# 
   770   000FE5                     POSTDEC1        equ	4069	;# 
   771   000FE6                     POSTINC1        equ	4070	;# 
   772   000FE7                     INDF1           equ	4071	;# 
   773   000FE8                     WREG            equ	4072	;# 
   774   000FE9                     FSR0            equ	4073	;# 
   775   000FE9                     FSR0L           equ	4073	;# 
   776   000FEA                     FSR0H           equ	4074	;# 
   777   000FEB                     PLUSW0          equ	4075	;# 
   778   000FEC                     PREINC0         equ	4076	;# 
   779   000FED                     POSTDEC0        equ	4077	;# 
   780   000FEE                     POSTINC0        equ	4078	;# 
   781   000FEF                     INDF0           equ	4079	;# 
   782   000FF0                     INTCON3         equ	4080	;# 
   783   000FF1                     INTCON2         equ	4081	;# 
   784   000FF2                     INTCON          equ	4082	;# 
   785   000FF3                     PROD            equ	4083	;# 
   786   000FF3                     PRODL           equ	4083	;# 
   787   000FF4                     PRODH           equ	4084	;# 
   788   000FF5                     TABLAT          equ	4085	;# 
   789   000FF6                     TBLPTR          equ	4086	;# 
   790   000FF6                     TBLPTRL         equ	4086	;# 
   791   000FF7                     TBLPTRH         equ	4087	;# 
   792   000FF8                     TBLPTRU         equ	4088	;# 
   793   000FF9                     PCLAT           equ	4089	;# 
   794   000FF9                     PC              equ	4089	;# 
   795   000FF9                     PCL             equ	4089	;# 
   796   000FFA                     PCLATH          equ	4090	;# 
   797   000FFB                     PCLATU          equ	4091	;# 
   798   000FFC                     STKPTR          equ	4092	;# 
   799   000FFD                     TOS             equ	4093	;# 
   800   000FFD                     TOSL            equ	4093	;# 
   801   000FFE                     TOSH            equ	4094	;# 
   802   000FFF                     TOSU            equ	4095	;# 
   803   000F80                     PORTA           equ	3968	;# 
   804   000F81                     PORTB           equ	3969	;# 
   805   000F82                     PORTC           equ	3970	;# 
   806   000F83                     PORTD           equ	3971	;# 
   807   000F84                     PORTE           equ	3972	;# 
   808   000F89                     LATA            equ	3977	;# 
   809   000F8A                     LATB            equ	3978	;# 
   810   000F8B                     LATC            equ	3979	;# 
   811   000F8C                     LATD            equ	3980	;# 
   812   000F8D                     LATE            equ	3981	;# 
   813   000F92                     TRISA           equ	3986	;# 
   814   000F92                     DDRA            equ	3986	;# 
   815   000F93                     TRISB           equ	3987	;# 
   816   000F93                     DDRB            equ	3987	;# 
   817   000F94                     TRISC           equ	3988	;# 
   818   000F94                     DDRC            equ	3988	;# 
   819   000F95                     TRISD           equ	3989	;# 
   820   000F95                     DDRD            equ	3989	;# 
   821   000F96                     TRISE           equ	3990	;# 
   822   000F96                     DDRE            equ	3990	;# 
   823   000F9B                     OSCTUNE         equ	3995	;# 
   824   000F9D                     PIE1            equ	3997	;# 
   825   000F9E                     PIR1            equ	3998	;# 
   826   000F9F                     IPR1            equ	3999	;# 
   827   000FA0                     PIE2            equ	4000	;# 
   828   000FA1                     PIR2            equ	4001	;# 
   829   000FA2                     IPR2            equ	4002	;# 
   830   000FA6                     EECON1          equ	4006	;# 
   831   000FA7                     EECON2          equ	4007	;# 
   832   000FA8                     EEDATA          equ	4008	;# 
   833   000FA9                     EEADR           equ	4009	;# 
   834   000FAB                     RCSTA           equ	4011	;# 
   835   000FAB                     RCSTA1          equ	4011	;# 
   836   000FAC                     TXSTA           equ	4012	;# 
   837   000FAC                     TXSTA1          equ	4012	;# 
   838   000FAD                     TXREG           equ	4013	;# 
   839   000FAD                     TXREG1          equ	4013	;# 
   840   000FAE                     RCREG           equ	4014	;# 
   841   000FAE                     RCREG1          equ	4014	;# 
   842   000FAF                     SPBRG           equ	4015	;# 
   843   000FAF                     SPBRG1          equ	4015	;# 
   844   000FB0                     SPBRGH          equ	4016	;# 
   845   000FB1                     T3CON           equ	4017	;# 
   846   000FB2                     TMR3            equ	4018	;# 
   847   000FB2                     TMR3L           equ	4018	;# 
   848   000FB3                     TMR3H           equ	4019	;# 
   849   000FB4                     CMCON           equ	4020	;# 
   850   000FB5                     CVRCON          equ	4021	;# 
   851   000FB6                     ECCP1AS         equ	4022	;# 
   852   000FB6                     ECCPAS          equ	4022	;# 
   853   000FB7                     PWM1CON         equ	4023	;# 
   854   000FB7                     ECCP1DEL        equ	4023	;# 
   855   000FB8                     BAUDCON         equ	4024	;# 
   856   000FB8                     BAUDCTL         equ	4024	;# 
   857   000FBA                     CCP2CON         equ	4026	;# 
   858   000FBB                     CCPR2           equ	4027	;# 
   859   000FBB                     CCPR2L          equ	4027	;# 
   860   000FBC                     CCPR2H          equ	4028	;# 
   861   000FBD                     CCP1CON         equ	4029	;# 
   862   000FBE                     CCPR1           equ	4030	;# 
   863   000FBE                     CCPR1L          equ	4030	;# 
   864   000FBF                     CCPR1H          equ	4031	;# 
   865   000FC0                     ADCON2          equ	4032	;# 
   866   000FC1                     ADCON1          equ	4033	;# 
   867   000FC2                     ADCON0          equ	4034	;# 
   868   000FC3                     ADRES           equ	4035	;# 
   869   000FC3                     ADRESL          equ	4035	;# 
   870   000FC4                     ADRESH          equ	4036	;# 
   871   000FC5                     SSPCON2         equ	4037	;# 
   872   000FC6                     SSPCON1         equ	4038	;# 
   873   000FC7                     SSPSTAT         equ	4039	;# 
   874   000FC8                     SSPADD          equ	4040	;# 
   875   000FC9                     SSPBUF          equ	4041	;# 
   876   000FCA                     T2CON           equ	4042	;# 
   877   000FCB                     PR2             equ	4043	;# 
   878   000FCB                     MEMCON          equ	4043	;# 
   879   000FCC                     TMR2            equ	4044	;# 
   880   000FCD                     T1CON           equ	4045	;# 
   881   000FCE                     TMR1            equ	4046	;# 
   882   000FCE                     TMR1L           equ	4046	;# 
   883   000FCF                     TMR1H           equ	4047	;# 
   884   000FD0                     RCON            equ	4048	;# 
   885   000FD1                     WDTCON          equ	4049	;# 
   886   000FD2                     HLVDCON         equ	4050	;# 
   887   000FD2                     LVDCON          equ	4050	;# 
   888   000FD3                     OSCCON          equ	4051	;# 
   889   000FD5                     T0CON           equ	4053	;# 
   890   000FD6                     TMR0            equ	4054	;# 
   891   000FD6                     TMR0L           equ	4054	;# 
   892   000FD7                     TMR0H           equ	4055	;# 
   893   000FD8                     STATUS          equ	4056	;# 
   894   000FD9                     FSR2            equ	4057	;# 
   895   000FD9                     FSR2L           equ	4057	;# 
   896   000FDA                     FSR2H           equ	4058	;# 
   897   000FDB                     PLUSW2          equ	4059	;# 
   898   000FDC                     PREINC2         equ	4060	;# 
   899   000FDD                     POSTDEC2        equ	4061	;# 
   900   000FDE                     POSTINC2        equ	4062	;# 
   901   000FDF                     INDF2           equ	4063	;# 
   902   000FE0                     BSR             equ	4064	;# 
   903   000FE1                     FSR1            equ	4065	;# 
   904   000FE1                     FSR1L           equ	4065	;# 
   905   000FE2                     FSR1H           equ	4066	;# 
   906   000FE3                     PLUSW1          equ	4067	;# 
   907   000FE4                     PREINC1         equ	4068	;# 
   908   000FE5                     POSTDEC1        equ	4069	;# 
   909   000FE6                     POSTINC1        equ	4070	;# 
   910   000FE7                     INDF1           equ	4071	;# 
   911   000FE8                     WREG            equ	4072	;# 
   912   000FE9                     FSR0            equ	4073	;# 
   913   000FE9                     FSR0L           equ	4073	;# 
   914   000FEA                     FSR0H           equ	4074	;# 
   915   000FEB                     PLUSW0          equ	4075	;# 
   916   000FEC                     PREINC0         equ	4076	;# 
   917   000FED                     POSTDEC0        equ	4077	;# 
   918   000FEE                     POSTINC0        equ	4078	;# 
   919   000FEF                     INDF0           equ	4079	;# 
   920   000FF0                     INTCON3         equ	4080	;# 
   921   000FF1                     INTCON2         equ	4081	;# 
   922   000FF2                     INTCON          equ	4082	;# 
   923   000FF3                     PROD            equ	4083	;# 
   924   000FF3                     PRODL           equ	4083	;# 
   925   000FF4                     PRODH           equ	4084	;# 
   926   000FF5                     TABLAT          equ	4085	;# 
   927   000FF6                     TBLPTR          equ	4086	;# 
   928   000FF6                     TBLPTRL         equ	4086	;# 
   929   000FF7                     TBLPTRH         equ	4087	;# 
   930   000FF8                     TBLPTRU         equ	4088	;# 
   931   000FF9                     PCLAT           equ	4089	;# 
   932   000FF9                     PC              equ	4089	;# 
   933   000FF9                     PCL             equ	4089	;# 
   934   000FFA                     PCLATH          equ	4090	;# 
   935   000FFB                     PCLATU          equ	4091	;# 
   936   000FFC                     STKPTR          equ	4092	;# 
   937   000FFD                     TOS             equ	4093	;# 
   938   000FFD                     TOSL            equ	4093	;# 
   939   000FFE                     TOSH            equ	4094	;# 
   940   000FFF                     TOSU            equ	4095	;# 
   941   007CF1                     _TMR2IF         set	31985
   942   007D5C                     _CREN           set	32092
   943   007CF5                     _RCIF           set	31989
   944   007E9C                     _IRCF0          set	32412
   945   007E9D                     _IRCF1          set	32413
   946   007E9E                     _IRCF2          set	32414
   947   007E07                     _ADFM           set	32263
   948   000F89                     _LATAbits       set	3977
   949   000FAE                     _RCREG          set	4014
   950   000FAD                     _TXREG          set	4013
   951   000FAB                     _RCSTAbits      set	4011
   952   000FAF                     _SPBRG          set	4015
   953   000FB8                     _BAUDCONbits    set	4024
   954   000FAC                     _TXSTAbits      set	4012
   955   000FCB                     _PR2            set	4043
   956   000FCA                     _T2CON          set	4042
   957   000F9D                     _PIE1bits       set	3997
   958   000F92                     _TRISAbits      set	3986
   959   000F89                     _LATA           set	3977
   960   000FF2                     _INTCONbits     set	4082
   961   000FD0                     _RCONbits       set	4048
   962   000F9F                     _IPR1bits       set	3999
   963   000F9E                     _PIR1bits       set	3998
   964   000FBD                     _CCP1CON        set	4029
   965   000F94                     _TRISCbits      set	3988
   966   000FC2                     _ADCON0bits     set	4034
   967   000FC3                     _ADRESL         set	4035
   968   000FC4                     _ADRESH         set	4036
   969   000FC0                     _ADCON2bits     set	4032
   970   000FC1                     _ADCON1         set	4033
   971   000F92                     _TRISA          set	3986
   972                           
   973                           	psect	smallconst
   974   000600                     __psmallconst:
   975                           	callstack 0
   976   000600  00                 	db	0
   977   000601                     STR_1:
   978   000601  0D                 	db	13
   979   000602  0A                 	db	10
   980   000603  00                 	db	0
   981   000603                     STR_2           equ	STR_1+2
   982   000603                     STR_3           equ	STR_1+2
   983   000603                     STR_4           equ	STR_1+2
   984   000603                     STR_5           equ	STR_1+2
   985   000603                     STR_6           equ	STR_1+2
   986   000603                     STR_7           equ	STR_1+2
   987   000604  00                 	db	0	; dummy byte at the end
   988   000002                     __activetblptr  equ	2
   989                           
   990                           ; #config settings
   991                           
   992                           	psect	cinit
   993   0008D0                     __pcinit:
   994                           	callstack 0
   995   0008D0                     start_initialization:
   996                           	callstack 0
   997   0008D0                     __initialization:
   998                           	callstack 0
   999                           
  1000                           ; Clear objects allocated to COMRAM (48 bytes)
  1001   0008D0  EE00  F001         	lfsr	0,__pbssCOMRAM
  1002   0008D4  0E30               	movlw	48
  1003   0008D6                     clear_0:
  1004   0008D6  6AEE               	clrf	postinc0,c
  1005   0008D8  06E8               	decf	wreg,f,c
  1006   0008DA  E1FD               	bnz	clear_0
  1007   0008DC                     end_of_initialization:
  1008                           	callstack 0
  1009   0008DC                     __end_of__initialization:
  1010                           	callstack 0
  1011   0008DC  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1012   0008DE  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1013   0008E0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1014   0008E2  6EF8               	movwf	tblptru,c
  1015   0008E4  0100               	movlb	0
  1016   0008E6  EF03  F003         	goto	_main	;jump to C main() function
  1017                           
  1018                           	psect	bssCOMRAM
  1019   000001                     __pbssCOMRAM:
  1020                           	callstack 0
  1021   000001                     _str:
  1022                           	callstack 0
  1023   000001                     	ds	20
  1024   000015                     _postpostscaler:
  1025                           	callstack 0
  1026   000015                     	ds	2
  1027   000017                     _dir:
  1028                           	callstack 0
  1029   000017                     	ds	2
  1030   000019                     _state:
  1031                           	callstack 0
  1032   000019                     	ds	2
  1033   00001B                     _lenStr:
  1034                           	callstack 0
  1035   00001B                     	ds	2
  1036   00001D                     _mystring:
  1037                           	callstack 0
  1038   00001D                     	ds	20
  1039                           
  1040                           	psect	cstackBANK0
  1041   000080                     __pcstackBANK0:
  1042                           	callstack 0
  1043   000080                     displayBinary@num:
  1044                           	callstack 0
  1045   000080                     ledLeftOff@num:
  1046                           	callstack 0
  1047   000080                     
  1048                           ; 1 bytes @ 0x0
  1049   000080                     	ds	2
  1050   000082                     ??_displayBinary:
  1051   000082                     
  1052                           ; 1 bytes @ 0x2
  1053   000082                     	ds	1
  1054   000083                     ledRightOn@num:
  1055                           	callstack 0
  1056   000083                     ledRightOff@num:
  1057                           	callstack 0
  1058   000083                     ledLeftOn@num:
  1059                           	callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x3
  1062   000083                     	ds	2
  1063   000085                     ??_main:
  1064                           
  1065                           ; 1 bytes @ 0x5
  1066   000085                     	ds	2
  1067                           
  1068                           	psect	cstackCOMRAM
  1069   000031                     __pcstackCOMRAM:
  1070                           	callstack 0
  1071   000031                     ?_strlen:
  1072                           	callstack 0
  1073   000031                     UART_Write@data:
  1074                           	callstack 0
  1075   000031                     strlen@s:
  1076                           	callstack 0
  1077   000031                     ClearBuffer@i:
  1078                           	callstack 0
  1079   000031                     
  1080                           ; 1 bytes @ 0x0
  1081   000031                     	ds	1
  1082   000032                     UART_Write_Text@text:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x1
  1086   000032                     	ds	1
  1087   000033                     strcpy@dest:
  1088                           	callstack 0
  1089   000033                     strlen@a:
  1090                           	callstack 0
  1091   000033                     ??_UART_Write_Text:
  1092                           
  1093                           ; 1 bytes @ 0x2
  1094   000033                     	ds	1
  1095   000034                     UART_Write_Text@i:
  1096                           	callstack 0
  1097   000034                     strcpy@src:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x3
  1101   000034                     	ds	2
  1102   000036                     MyusartRead@receivedData:
  1103                           	callstack 0
  1104   000036                     ??_strcpy:
  1105   000036                     
  1106                           ; 1 bytes @ 0x5
  1107   000036                     	ds	2
  1108   000038                     strcpy@d:
  1109                           	callstack 0
  1110                           
  1111                           ; 1 bytes @ 0x7
  1112   000038                     	ds	1
  1113   000039                     ??_Lo_ISR:
  1114                           
  1115                           ; 1 bytes @ 0x8
  1116   000039                     	ds	13
  1117   000046                     Lo_ISR@command:
  1118                           	callstack 0
  1119                           
  1120                           ; 20 bytes @ 0x15
  1121   000046                     	ds	20
  1122                           
  1123 ;;
  1124 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1125 ;;
  1126 ;; *************** function _main *****************
  1127 ;; Defined at:
  1128 ;;		line 67 in file "main.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;		None
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;		None
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2, status,0, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1142 ;;      Params:         0       0       0       0       0       0       0
  1143 ;;      Locals:         0       0       0       0       0       0       0
  1144 ;;      Temps:          0       2       0       0       0       0       0
  1145 ;;      Totals:         0       2       0       0       0       0       0
  1146 ;;Total ram usage:        2 bytes
  1147 ;; Hardware stack levels required when called: 7
  1148 ;; This function calls:
  1149 ;;		_SYSTEM_Initialize
  1150 ;;		_displayBinary
  1151 ;;		_initialState
  1152 ;;		_ledLeftOff
  1153 ;;		_ledLeftOn
  1154 ;;		_ledRightOff
  1155 ;;		_ledRightOn
  1156 ;; This function is called by:
  1157 ;;		Startup code after reset
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text0
  1162   000606                     __ptext0:
  1163                           	callstack 0
  1164   000606                     _main:
  1165                           	callstack 24
  1166   000606                     
  1167                           ;main.c: 69:     SYSTEM_Initialize() ;
  1168   000606  ECAF  F004         	call	_SYSTEM_Initialize	;wreg free
  1169   00060A  EF44  F003         	goto	l1596
  1170   00060E                     l1574:
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;main.c: 74:                 initialState();
  1174   00060E  ECC9  F004         	call	_initialState	;wreg free
  1175                           
  1176                           ;main.c: 75:                 break;
  1177   000612  EF44  F003         	goto	l1596
  1178   000616                     l1576:
  1179                           
  1180                           ; BSR set to: 0
  1181                           ;main.c: 77:                 ledRightOn(1);
  1182   000616  0E00               	movlw	0
  1183   000618  6F84               	movwf	(ledRightOn@num+1)& (0+255),b
  1184   00061A  0E01               	movlw	1
  1185   00061C  6F83               	movwf	ledRightOn@num& (0+255),b
  1186   00061E  EC75  F004         	call	_ledRightOn	;wreg free
  1187                           
  1188                           ;main.c: 78:                 break;
  1189   000622  EF44  F003         	goto	l1596
  1190   000626                     l1578:
  1191                           
  1192                           ; BSR set to: 0
  1193                           ;main.c: 80:                 ledRightOff(2);
  1194   000626  0E00               	movlw	0
  1195   000628  6F84               	movwf	(ledRightOff@num+1)& (0+255),b
  1196   00062A  0E02               	movlw	2
  1197   00062C  6F83               	movwf	ledRightOff@num& (0+255),b
  1198   00062E  EC82  F004         	call	_ledRightOff	;wreg free
  1199                           
  1200                           ;main.c: 81:                 break;
  1201   000632  EF44  F003         	goto	l1596
  1202   000636                     l1580:
  1203                           
  1204                           ; BSR set to: 0
  1205                           ;main.c: 83:                 ledLeftOn(3);
  1206   000636  0E00               	movlw	0
  1207   000638  6F84               	movwf	(ledLeftOn@num+1)& (0+255),b
  1208   00063A  0E03               	movlw	3
  1209   00063C  6F83               	movwf	ledLeftOn@num& (0+255),b
  1210   00063E  ECA5  F004         	call	_ledLeftOn	;wreg free
  1211                           
  1212                           ;main.c: 84:                 break;
  1213   000642  EF44  F003         	goto	l1596
  1214   000646                     l1582:
  1215                           
  1216                           ; BSR set to: 0
  1217                           ;main.c: 86:                 displayBinary(4);
  1218   000646  0E00               	movlw	0
  1219   000648  6F81               	movwf	(displayBinary@num+1)& (0+255),b
  1220   00064A  0E04               	movlw	4
  1221   00064C  6F80               	movwf	displayBinary@num& (0+255),b
  1222   00064E  EC71  F003         	call	_displayBinary	;wreg free
  1223   000652                     
  1224                           ;main.c: 87:                 ledLeftOff(4);
  1225   000652  0E00               	movlw	0
  1226   000654  0100               	movlb	0	; () banked
  1227   000656  6F81               	movwf	(ledLeftOff@num+1)& (0+255),b
  1228   000658  0E04               	movlw	4
  1229   00065A  6F80               	movwf	ledLeftOff@num& (0+255),b
  1230   00065C  ECC5  F004         	call	_ledLeftOff	;wreg free
  1231                           
  1232                           ;main.c: 88:                 break;
  1233   000660  EF44  F003         	goto	l1596
  1234   000664                     l1586:
  1235                           
  1236                           ; BSR set to: 0
  1237                           ;main.c: 90:                 displayBinary(5);
  1238   000664  0E00               	movlw	0
  1239   000666  6F81               	movwf	(displayBinary@num+1)& (0+255),b
  1240   000668  0E05               	movlw	5
  1241   00066A  6F80               	movwf	displayBinary@num& (0+255),b
  1242   00066C  EC71  F003         	call	_displayBinary	;wreg free
  1243   000670                     
  1244                           ;main.c: 91:                 LATAbits.LATA6 = 1;;
  1245   000670  8C89               	bsf	137,6,c	;volatile
  1246                           
  1247                           ;main.c: 92:                 break;
  1248   000672  EF44  F003         	goto	l1596
  1249   000676                     l1590:
  1250                           
  1251                           ; BSR set to: 0
  1252                           ;main.c: 94:                 displayBinary(6);
  1253   000676  0E00               	movlw	0
  1254   000678  6F81               	movwf	(displayBinary@num+1)& (0+255),b
  1255   00067A  0E06               	movlw	6
  1256   00067C  6F80               	movwf	displayBinary@num& (0+255),b
  1257   00067E  EC71  F003         	call	_displayBinary	;wreg free
  1258   000682                     
  1259                           ;main.c: 95:                 LATAbits.LATA6 = 0;;
  1260   000682  9C89               	bcf	137,6,c	;volatile
  1261                           
  1262                           ;main.c: 96:                 break;
  1263   000684  EF44  F003         	goto	l1596
  1264   000688                     l195:
  1265   000688                     l1596:
  1266   000688  C019  F085         	movff	_state,??_main
  1267   00068C  C01A  F086         	movff	_state+1,??_main+1
  1268                           
  1269                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1270                           ; Switch size 1, requested type "simple"
  1271                           ; Number of cases is 1, Range of values is 0 to 0
  1272                           ; switch strategies available:
  1273                           ; Name         Instructions Cycles
  1274                           ; simple_byte            4     3 (average)
  1275                           ;	Chosen strategy is simple_byte
  1276   000690  0100               	movlb	0	; () banked
  1277   000692  5186               	movf	(??_main+1)& (0+255),w,b
  1278   000694  0A00               	xorlw	0	; case 0
  1279   000696  B4D8               	btfsc	status,2,c
  1280   000698  EF50  F003         	goto	l1634
  1281   00069C  EF44  F003         	goto	l195
  1282   0006A0                     l1634:
  1283                           
  1284                           ; BSR set to: 0
  1285                           ; Switch size 1, requested type "simple"
  1286                           ; Number of cases is 7, Range of values is 0 to 6
  1287                           ; switch strategies available:
  1288                           ; Name         Instructions Cycles
  1289                           ; simple_byte           22    12 (average)
  1290                           ;	Chosen strategy is simple_byte
  1291   0006A0  5185               	movf	??_main& (0+255),w,b
  1292   0006A2  0A00               	xorlw	0	; case 0
  1293   0006A4  B4D8               	btfsc	status,2,c
  1294   0006A6  EF07  F003         	goto	l1574
  1295   0006AA  0A01               	xorlw	1	; case 1
  1296   0006AC  B4D8               	btfsc	status,2,c
  1297   0006AE  EF0B  F003         	goto	l1576
  1298   0006B2  0A03               	xorlw	3	; case 2
  1299   0006B4  B4D8               	btfsc	status,2,c
  1300   0006B6  EF13  F003         	goto	l1578
  1301   0006BA  0A01               	xorlw	1	; case 3
  1302   0006BC  B4D8               	btfsc	status,2,c
  1303   0006BE  EF1B  F003         	goto	l1580
  1304   0006C2  0A07               	xorlw	7	; case 4
  1305   0006C4  B4D8               	btfsc	status,2,c
  1306   0006C6  EF23  F003         	goto	l1582
  1307   0006CA  0A01               	xorlw	1	; case 5
  1308   0006CC  B4D8               	btfsc	status,2,c
  1309   0006CE  EF32  F003         	goto	l1586
  1310   0006D2  0A03               	xorlw	3	; case 6
  1311   0006D4  B4D8               	btfsc	status,2,c
  1312   0006D6  EF3B  F003         	goto	l1590
  1313   0006DA  EF44  F003         	goto	l195
  1314   0006DE  EF10  F002         	goto	start
  1315   0006E2                     __end_of_main:
  1316                           	callstack 0
  1317                           
  1318 ;; *************** function _ledRightOn *****************
  1319 ;; Defined at:
  1320 ;;		line 31 in file "main.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  num             2    3[BANK0 ] int 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1334 ;;      Params:         0       2       0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0
  1337 ;;      Totals:         0       2       0       0       0       0       0
  1338 ;;Total ram usage:        2 bytes
  1339 ;; Hardware stack levels used: 1
  1340 ;; Hardware stack levels required when called: 6
  1341 ;; This function calls:
  1342 ;;		_displayBinary
  1343 ;; This function is called by:
  1344 ;;		_main
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text1
  1349   0008EA                     __ptext1:
  1350                           	callstack 0
  1351   0008EA                     _ledRightOn:
  1352                           	callstack 24
  1353   0008EA                     
  1354                           ;main.c: 32:     displayBinary(num);
  1355   0008EA  C083  F080         	movff	ledRightOn@num,displayBinary@num
  1356   0008EE  C084  F081         	movff	ledRightOn@num+1,displayBinary@num+1
  1357   0008F2  EC71  F003         	call	_displayBinary	;wreg free
  1358   0008F6                     
  1359                           ;main.c: 33:     LATAbits.LATA7 = 1;
  1360   0008F6  8E89               	bsf	137,7,c	;volatile
  1361   0008F8                     
  1362                           ;main.c: 34:     LATAbits.LATA5 = 0;;
  1363   0008F8  9A89               	bcf	137,5,c	;volatile
  1364   0008FA                     
  1365                           ;main.c: 35:     dir = 1;
  1366   0008FA  0E00               	movlw	0
  1367   0008FC  6E18               	movwf	(_dir+1)^0,c
  1368   0008FE  0E01               	movlw	1
  1369   000900  6E17               	movwf	_dir^0,c
  1370   000902  0012               	return		;funcret
  1371   000904                     __end_of_ledRightOn:
  1372                           	callstack 0
  1373                           
  1374 ;; *************** function _ledRightOff *****************
  1375 ;; Defined at:
  1376 ;;		line 38 in file "main.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  num             2    3[BANK0 ] int 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2, status,0, cstack
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1390 ;;      Params:         0       2       0       0       0       0       0
  1391 ;;      Locals:         0       0       0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0
  1393 ;;      Totals:         0       2       0       0       0       0       0
  1394 ;;Total ram usage:        2 bytes
  1395 ;; Hardware stack levels used: 1
  1396 ;; Hardware stack levels required when called: 6
  1397 ;; This function calls:
  1398 ;;		_displayBinary
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text2
  1405   000904                     __ptext2:
  1406                           	callstack 0
  1407   000904                     _ledRightOff:
  1408                           	callstack 24
  1409   000904                     
  1410                           ;main.c: 39:     dir = 0;
  1411   000904  0E00               	movlw	0
  1412   000906  6E18               	movwf	(_dir+1)^0,c
  1413   000908  0E00               	movlw	0
  1414   00090A  6E17               	movwf	_dir^0,c
  1415   00090C                     
  1416                           ;main.c: 40:     displayBinary(num);
  1417   00090C  C083  F080         	movff	ledRightOff@num,displayBinary@num
  1418   000910  C084  F081         	movff	ledRightOff@num+1,displayBinary@num+1
  1419   000914  EC71  F003         	call	_displayBinary	;wreg free
  1420   000918                     
  1421                           ;main.c: 43:     LATAbits.LATA7 = 0;
  1422   000918  9E89               	bcf	137,7,c	;volatile
  1423   00091A  0012               	return		;funcret
  1424   00091C                     __end_of_ledRightOff:
  1425                           	callstack 0
  1426                           
  1427 ;; *************** function _ledLeftOn *****************
  1428 ;; Defined at:
  1429 ;;		line 46 in file "main.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  num             2    3[BANK0 ] int 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, status,2, status,0, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1443 ;;      Params:         0       2       0       0       0       0       0
  1444 ;;      Locals:         0       0       0       0       0       0       0
  1445 ;;      Temps:          0       0       0       0       0       0       0
  1446 ;;      Totals:         0       2       0       0       0       0       0
  1447 ;;Total ram usage:        2 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; Hardware stack levels required when called: 6
  1450 ;; This function calls:
  1451 ;;		_displayBinary
  1452 ;; This function is called by:
  1453 ;;		_main
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text3
  1458   00094A                     __ptext3:
  1459                           	callstack 0
  1460   00094A                     _ledLeftOn:
  1461                           	callstack 24
  1462   00094A                     
  1463                           ;main.c: 47:     dir = -1;
  1464   00094A  6817               	setf	_dir^0,c
  1465   00094C  6818               	setf	(_dir+1)^0,c
  1466                           
  1467                           ;main.c: 49:     LATAbits.LATA5 = 1;
  1468   00094E  8A89               	bsf	137,5,c	;volatile
  1469   000950                     
  1470                           ;main.c: 50:     displayBinary(num);
  1471   000950  C083  F080         	movff	ledLeftOn@num,displayBinary@num
  1472   000954  C084  F081         	movff	ledLeftOn@num+1,displayBinary@num+1
  1473   000958  EC71  F003         	call	_displayBinary	;wreg free
  1474   00095C  0012               	return		;funcret
  1475   00095E                     __end_of_ledLeftOn:
  1476                           	callstack 0
  1477                           
  1478 ;; *************** function _displayBinary *****************
  1479 ;; Defined at:
  1480 ;;		line 20 in file "main.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  num             2    0[BANK0 ] int 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;		None
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  1    wreg      void 
  1487 ;; Registers used:
  1488 ;;		wreg, status,2, status,0
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1494 ;;      Params:         0       2       0       0       0       0       0
  1495 ;;      Locals:         0       0       0       0       0       0       0
  1496 ;;      Temps:          0       1       0       0       0       0       0
  1497 ;;      Totals:         0       3       0       0       0       0       0
  1498 ;;Total ram usage:        3 bytes
  1499 ;; Hardware stack levels used: 1
  1500 ;; Hardware stack levels required when called: 5
  1501 ;; This function calls:
  1502 ;;		Nothing
  1503 ;; This function is called by:
  1504 ;;		_ledRightOn
  1505 ;;		_ledRightOff
  1506 ;;		_ledLeftOn
  1507 ;;		_main
  1508 ;;		_BrakeOn
  1509 ;;		_BrakeOff
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text4
  1514   0006E2                     __ptext4:
  1515                           	callstack 0
  1516   0006E2                     _displayBinary:
  1517                           	callstack 24
  1518   0006E2                     
  1519                           ;main.c: 22:      LATAbits.LATA1 = (num & 0x01) ? 1 : 0;
  1520   0006E2  0100               	movlb	0	; () banked
  1521   0006E4  B180               	btfsc	displayBinary@num& (0+255),0,b
  1522   0006E6  EF77  F003         	goto	u981
  1523   0006EA  EF7B  F003         	goto	u980
  1524   0006EE                     u981:
  1525   0006EE  6B82               	clrf	??_displayBinary& (0+255),b
  1526   0006F0  2B82               	incf	??_displayBinary& (0+255),f,b
  1527   0006F2  EF7D  F003         	goto	u998
  1528   0006F6                     u980:
  1529   0006F6  0100               	movlb	0	; () banked
  1530   0006F8  6B82               	clrf	??_displayBinary& (0+255),b
  1531   0006FA                     u998:
  1532   0006FA  4782               	rlncf	??_displayBinary& (0+255),f,b
  1533   0006FC  5089               	movf	137,w,c	;volatile
  1534   0006FE  1982               	xorwf	??_displayBinary& (0+255),w,b
  1535   000700  0BFD               	andlw	-3
  1536   000702  1982               	xorwf	??_displayBinary& (0+255),w,b
  1537   000704  6E89               	movwf	137,c	;volatile
  1538                           
  1539                           ;main.c: 23:      LATAbits.LATA2 = (num & 0x02) ? 1 : 0;
  1540   000706  B380               	btfsc	displayBinary@num& (0+255),1,b
  1541   000708  EF88  F003         	goto	u1001
  1542   00070C  EF8C  F003         	goto	u1000
  1543   000710                     u1001:
  1544   000710  6B82               	clrf	??_displayBinary& (0+255),b
  1545   000712  2B82               	incf	??_displayBinary& (0+255),f,b
  1546   000714  EF8E  F003         	goto	u1018
  1547   000718                     u1000:
  1548   000718  0100               	movlb	0	; () banked
  1549   00071A  6B82               	clrf	??_displayBinary& (0+255),b
  1550   00071C                     u1018:
  1551   00071C  4782               	rlncf	??_displayBinary& (0+255),f,b
  1552   00071E  4782               	rlncf	??_displayBinary& (0+255),f,b
  1553   000720  5089               	movf	137,w,c	;volatile
  1554   000722  1982               	xorwf	??_displayBinary& (0+255),w,b
  1555   000724  0BFB               	andlw	-5
  1556   000726  1982               	xorwf	??_displayBinary& (0+255),w,b
  1557   000728  6E89               	movwf	137,c	;volatile
  1558                           
  1559                           ;main.c: 24:      LATAbits.LATA3 = (num & 0x04) ? 1 : 0;
  1560   00072A  B580               	btfsc	displayBinary@num& (0+255),2,b
  1561   00072C  EF9A  F003         	goto	u1021
  1562   000730  EF9E  F003         	goto	u1020
  1563   000734                     u1021:
  1564   000734  6B82               	clrf	??_displayBinary& (0+255),b
  1565   000736  2B82               	incf	??_displayBinary& (0+255),f,b
  1566   000738  EFA0  F003         	goto	u1038
  1567   00073C                     u1020:
  1568   00073C  0100               	movlb	0	; () banked
  1569   00073E  6B82               	clrf	??_displayBinary& (0+255),b
  1570   000740                     u1038:
  1571   000740  4782               	rlncf	??_displayBinary& (0+255),f,b
  1572   000742  4782               	rlncf	??_displayBinary& (0+255),f,b
  1573   000744  4782               	rlncf	??_displayBinary& (0+255),f,b
  1574   000746  5089               	movf	137,w,c	;volatile
  1575   000748  1982               	xorwf	??_displayBinary& (0+255),w,b
  1576   00074A  0BF7               	andlw	-9
  1577   00074C  1982               	xorwf	??_displayBinary& (0+255),w,b
  1578   00074E  6E89               	movwf	137,c	;volatile
  1579                           
  1580                           ;main.c: 25:      LATAbits.LATA4 = (num & 0x08) ? 1 : 0;
  1581   000750  B780               	btfsc	displayBinary@num& (0+255),3,b
  1582   000752  EFAD  F003         	goto	u1041
  1583   000756  EFB1  F003         	goto	u1040
  1584   00075A                     u1041:
  1585   00075A  6B82               	clrf	??_displayBinary& (0+255),b
  1586   00075C  2B82               	incf	??_displayBinary& (0+255),f,b
  1587   00075E  EFB3  F003         	goto	u1058
  1588   000762                     u1040:
  1589   000762  0100               	movlb	0	; () banked
  1590   000764  6B82               	clrf	??_displayBinary& (0+255),b
  1591   000766                     u1058:
  1592   000766  3B82               	swapf	??_displayBinary& (0+255),f,b
  1593   000768  5089               	movf	137,w,c	;volatile
  1594   00076A  1982               	xorwf	??_displayBinary& (0+255),w,b
  1595   00076C  0BEF               	andlw	-17
  1596   00076E  1982               	xorwf	??_displayBinary& (0+255),w,b
  1597   000770  6E89               	movwf	137,c	;volatile
  1598   000772                     
  1599                           ; BSR set to: 0
  1600   000772  0012               	return		;funcret
  1601   000774                     __end_of_displayBinary:
  1602                           	callstack 0
  1603                           
  1604 ;; *************** function _ledLeftOff *****************
  1605 ;; Defined at:
  1606 ;;		line 53 in file "main.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  num             2    0[BANK0 ] int 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		None
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1620 ;;      Params:         0       2       0       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0       0       0
  1622 ;;      Temps:          0       0       0       0       0       0       0
  1623 ;;      Totals:         0       2       0       0       0       0       0
  1624 ;;Total ram usage:        2 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; Hardware stack levels required when called: 5
  1627 ;; This function calls:
  1628 ;;		Nothing
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text5
  1635   00098A                     __ptext5:
  1636                           	callstack 0
  1637   00098A                     _ledLeftOff:
  1638                           	callstack 25
  1639   00098A                     
  1640                           ;main.c: 54:     LATAbits.LATA5 = 0;
  1641   00098A  9A89               	bcf	137,5,c	;volatile
  1642   00098C  0012               	return		;funcret
  1643   00098E                     __end_of_ledLeftOff:
  1644                           	callstack 0
  1645                           
  1646 ;; *************** function _initialState *****************
  1647 ;; Defined at:
  1648 ;;		line 28 in file "main.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;		None
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;		None
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		None
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1662 ;;      Params:         0       0       0       0       0       0       0
  1663 ;;      Locals:         0       0       0       0       0       0       0
  1664 ;;      Temps:          0       0       0       0       0       0       0
  1665 ;;      Totals:         0       0       0       0       0       0       0
  1666 ;;Total ram usage:        0 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; Hardware stack levels required when called: 5
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_main
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text6
  1677   000992                     __ptext6:
  1678                           	callstack 0
  1679   000992                     _initialState:
  1680                           	callstack 25
  1681   000992  0012               	return		;funcret
  1682   000994                     __end_of_initialState:
  1683                           	callstack 0
  1684                           
  1685 ;; *************** function _SYSTEM_Initialize *****************
  1686 ;; Defined at:
  1687 ;;		line 60 in file "setting_hardaware/setting.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1701 ;;      Params:         0       0       0       0       0       0       0
  1702 ;;      Locals:         0       0       0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0
  1704 ;;      Totals:         0       0       0       0       0       0       0
  1705 ;;Total ram usage:        0 bytes
  1706 ;; Hardware stack levels used: 1
  1707 ;; Hardware stack levels required when called: 6
  1708 ;; This function calls:
  1709 ;;		_INTERRUPT_Initialize
  1710 ;;		_OSCILLATOR_Initialize
  1711 ;;		_TMR2_Initialize
  1712 ;;		_UART_Initialize
  1713 ;; This function is called by:
  1714 ;;		_main
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text7
  1719   00095E                     __ptext7:
  1720                           	callstack 0
  1721   00095E                     _SYSTEM_Initialize:
  1722                           	callstack 24
  1723   00095E                     
  1724                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
  1725   00095E  ECBE  F004         	call	_OSCILLATOR_Initialize	;wreg free
  1726                           
  1727                           ;setting_hardaware/setting.c: 64:     TMR2_Initialize();
  1728   000962  ECB8  F004         	call	_TMR2_Initialize	;wreg free
  1729   000966                     
  1730                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  1731   000966  EC8E  F004         	call	_INTERRUPT_Initialize	;wreg free
  1732   00096A                     
  1733                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
  1734   00096A  EC57  F004         	call	_UART_Initialize	;wreg free
  1735   00096E  0012               	return		;funcret
  1736   000970                     __end_of_SYSTEM_Initialize:
  1737                           	callstack 0
  1738                           
  1739 ;; *************** function _UART_Initialize *****************
  1740 ;; Defined at:
  1741 ;;		line 10 in file "setting_hardaware/uart.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;		None
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;		None
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  1    wreg      void 
  1748 ;; Registers used:
  1749 ;;		wreg, status,2
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1755 ;;      Params:         0       0       0       0       0       0       0
  1756 ;;      Locals:         0       0       0       0       0       0       0
  1757 ;;      Temps:          0       0       0       0       0       0       0
  1758 ;;      Totals:         0       0       0       0       0       0       0
  1759 ;;Total ram usage:        0 bytes
  1760 ;; Hardware stack levels used: 1
  1761 ;; Hardware stack levels required when called: 5
  1762 ;; This function calls:
  1763 ;;		Nothing
  1764 ;; This function is called by:
  1765 ;;		_SYSTEM_Initialize
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           	psect	text8
  1770   0008AE                     __ptext8:
  1771                           	callstack 0
  1772   0008AE                     _UART_Initialize:
  1773                           	callstack 24
  1774   0008AE                     
  1775                           ;setting_hardaware/uart.c: 21:     TRISCbits.TRISC6 = 1;
  1776   0008AE  8C94               	bsf	148,6,c	;volatile
  1777                           
  1778                           ;setting_hardaware/uart.c: 22:     TRISCbits.TRISC7 = 1;
  1779   0008B0  8E94               	bsf	148,7,c	;volatile
  1780                           
  1781                           ;setting_hardaware/uart.c: 25:     TXSTAbits.SYNC = 0;
  1782   0008B2  98AC               	bcf	172,4,c	;volatile
  1783                           
  1784                           ;setting_hardaware/uart.c: 26:     BAUDCONbits.BRG16 = 0;
  1785   0008B4  96B8               	bcf	184,3,c	;volatile
  1786                           
  1787                           ;setting_hardaware/uart.c: 27:     TXSTAbits.BRGH = 1;
  1788   0008B6  84AC               	bsf	172,2,c	;volatile
  1789   0008B8                     
  1790                           ;setting_hardaware/uart.c: 28:     SPBRG = 25;
  1791   0008B8  0E19               	movlw	25
  1792   0008BA  6EAF               	movwf	175,c	;volatile
  1793   0008BC                     
  1794                           ;setting_hardaware/uart.c: 31:     RCSTAbits.SPEN = 1;
  1795   0008BC  8EAB               	bsf	171,7,c	;volatile
  1796   0008BE                     
  1797                           ;setting_hardaware/uart.c: 32:     PIR1bits.TXIF = 0;
  1798   0008BE  989E               	bcf	158,4,c	;volatile
  1799   0008C0                     
  1800                           ;setting_hardaware/uart.c: 33:     PIR1bits.RCIF = 1;
  1801   0008C0  8A9E               	bsf	158,5,c	;volatile
  1802   0008C2                     
  1803                           ;setting_hardaware/uart.c: 34:     TXSTAbits.TXEN = 1;
  1804   0008C2  8AAC               	bsf	172,5,c	;volatile
  1805   0008C4                     
  1806                           ;setting_hardaware/uart.c: 35:     RCSTAbits.CREN = 1;
  1807   0008C4  88AB               	bsf	171,4,c	;volatile
  1808   0008C6                     
  1809                           ;setting_hardaware/uart.c: 36:     PIE1bits.TXIE = 0;
  1810   0008C6  989D               	bcf	157,4,c	;volatile
  1811   0008C8                     
  1812                           ;setting_hardaware/uart.c: 37:     IPR1bits.TXIP = 0;
  1813   0008C8  989F               	bcf	159,4,c	;volatile
  1814   0008CA                     
  1815                           ;setting_hardaware/uart.c: 38:     PIE1bits.RCIE = 1;
  1816   0008CA  8A9D               	bsf	157,5,c	;volatile
  1817   0008CC                     
  1818                           ;setting_hardaware/uart.c: 39:     IPR1bits.RCIP = 0;
  1819   0008CC  9A9F               	bcf	159,5,c	;volatile
  1820   0008CE  0012               	return		;funcret
  1821   0008D0                     __end_of_UART_Initialize:
  1822                           	callstack 0
  1823                           
  1824 ;; *************** function _TMR2_Initialize *****************
  1825 ;; Defined at:
  1826 ;;		line 82 in file "setting_hardaware/setting.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		None
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1840 ;;      Params:         0       0       0       0       0       0       0
  1841 ;;      Locals:         0       0       0       0       0       0       0
  1842 ;;      Temps:          0       0       0       0       0       0       0
  1843 ;;      Totals:         0       0       0       0       0       0       0
  1844 ;;Total ram usage:        0 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; Hardware stack levels required when called: 5
  1847 ;; This function calls:
  1848 ;;		Nothing
  1849 ;; This function is called by:
  1850 ;;		_SYSTEM_Initialize
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text9
  1855   000970                     __ptext9:
  1856                           	callstack 0
  1857   000970                     _TMR2_Initialize:
  1858                           	callstack 24
  1859   000970                     
  1860                           ;setting_hardaware/setting.c: 83:     PIR1bits.TMR2IF = 0;
  1861   000970  929E               	bcf	158,1,c	;volatile
  1862                           
  1863                           ;setting_hardaware/setting.c: 84:     IPR1bits.TMR2IP = 0;
  1864   000972  929F               	bcf	159,1,c	;volatile
  1865                           
  1866                           ;setting_hardaware/setting.c: 85:     PIE1bits.TMR2IE = 1;
  1867   000974  829D               	bsf	157,1,c	;volatile
  1868                           
  1869                           ;setting_hardaware/setting.c: 86:     T2CON = 255;
  1870   000976  68CA               	setf	202,c	;volatile
  1871                           
  1872                           ;setting_hardaware/setting.c: 87:     PR2 = 255;
  1873   000978  68CB               	setf	203,c	;volatile
  1874   00097A  0012               	return		;funcret
  1875   00097C                     __end_of_TMR2_Initialize:
  1876                           	callstack 0
  1877                           
  1878 ;; *************** function _OSCILLATOR_Initialize *****************
  1879 ;; Defined at:
  1880 ;;		line 73 in file "setting_hardaware/setting.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		None
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1894 ;;      Params:         0       0       0       0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0       0
  1897 ;;      Totals:         0       0       0       0       0       0       0
  1898 ;;Total ram usage:        0 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 5
  1901 ;; This function calls:
  1902 ;;		Nothing
  1903 ;; This function is called by:
  1904 ;;		_SYSTEM_Initialize
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text10
  1909   00097C                     __ptext10:
  1910                           	callstack 0
  1911   00097C                     _OSCILLATOR_Initialize:
  1912                           	callstack 24
  1913   00097C                     
  1914                           ;setting_hardaware/setting.c: 75:     IRCF2 = 1;
  1915   00097C  8CD3               	bsf	4051,6,c	;volatile
  1916                           
  1917                           ;setting_hardaware/setting.c: 76:     IRCF1 = 1;
  1918   00097E  8AD3               	bsf	4051,5,c	;volatile
  1919                           
  1920                           ;setting_hardaware/setting.c: 77:     IRCF0 = 0;
  1921   000980  98D3               	bcf	4051,4,c	;volatile
  1922   000982  0012               	return		;funcret
  1923   000984                     __end_of_OSCILLATOR_Initialize:
  1924                           	callstack 0
  1925                           
  1926 ;; *************** function _INTERRUPT_Initialize *****************
  1927 ;; Defined at:
  1928 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;		None
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      void 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1942 ;;      Params:         0       0       0       0       0       0       0
  1943 ;;      Locals:         0       0       0       0       0       0       0
  1944 ;;      Temps:          0       0       0       0       0       0       0
  1945 ;;      Totals:         0       0       0       0       0       0       0
  1946 ;;Total ram usage:        0 bytes
  1947 ;; Hardware stack levels used: 1
  1948 ;; Hardware stack levels required when called: 5
  1949 ;; This function calls:
  1950 ;;		Nothing
  1951 ;; This function is called by:
  1952 ;;		_SYSTEM_Initialize
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text11
  1957   00091C                     __ptext11:
  1958                           	callstack 0
  1959   00091C                     _INTERRUPT_Initialize:
  1960                           	callstack 24
  1961   00091C                     
  1962                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
  1963   00091C  8ED0               	bsf	208,7,c	;volatile
  1964                           
  1965                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
  1966   00091E  8EF2               	bsf	242,7,c	;volatile
  1967                           
  1968                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
  1969   000920  8CF2               	bsf	242,6,c	;volatile
  1970   000922                     
  1971                           ;setting_hardaware/interrupt_manager.c: 10:     ADCON1 = 0x0f;
  1972   000922  0E0F               	movlw	15
  1973   000924  6EC1               	movwf	193,c	;volatile
  1974   000926                     
  1975                           ;setting_hardaware/interrupt_manager.c: 11:     LATA = 0x00;
  1976   000926  6A89               	clrf	137,c	;volatile
  1977   000928                     
  1978                           ;setting_hardaware/interrupt_manager.c: 12:     TRISAbits.TRISA5 = 0;
  1979   000928  9A92               	bcf	146,5,c	;volatile
  1980   00092A                     
  1981                           ;setting_hardaware/interrupt_manager.c: 13:     TRISAbits.TRISA6 = 0;
  1982   00092A  9C92               	bcf	146,6,c	;volatile
  1983   00092C                     
  1984                           ;setting_hardaware/interrupt_manager.c: 14:     TRISAbits.TRISA7 = 0;
  1985   00092C  9E92               	bcf	146,7,c	;volatile
  1986   00092E                     
  1987                           ;setting_hardaware/interrupt_manager.c: 16:     INTCONbits.INT0IE = 1;
  1988   00092E  88F2               	bsf	242,4,c	;volatile
  1989   000930                     
  1990                           ;setting_hardaware/interrupt_manager.c: 17:     INTCONbits.INT0IF = 0;
  1991   000930  92F2               	bcf	242,1,c	;volatile
  1992   000932  0012               	return		;funcret
  1993   000934                     __end_of_INTERRUPT_Initialize:
  1994                           	callstack 0
  1995                           
  1996 ;; *************** function _Lo_ISR *****************
  1997 ;; Defined at:
  1998 ;;		line 110 in file "main.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;		None
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  command        20   21[COMRAM] unsigned char [20]
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2012 ;;      Params:         0       0       0       0       0       0       0
  2013 ;;      Locals:        20       0       0       0       0       0       0
  2014 ;;      Temps:         13       0       0       0       0       0       0
  2015 ;;      Totals:        33       0       0       0       0       0       0
  2016 ;;Total ram usage:       33 bytes
  2017 ;; Hardware stack levels used: 1
  2018 ;; Hardware stack levels required when called: 4
  2019 ;; This function calls:
  2020 ;;		_ClearBuffer
  2021 ;;		_GetString
  2022 ;;		_MyusartRead
  2023 ;;		_strcpy
  2024 ;;		_strlen
  2025 ;; This function is called by:
  2026 ;;		Interrupt level 1
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	intcodelo
  2031   000018                     __pintcodelo:
  2032                           	callstack 0
  2033   000018                     _Lo_ISR:
  2034                           	callstack 24
  2035                           
  2036                           ;incstack = 0
  2037   000018  805A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2038   00001A  CFD8 F03B          	movff	status,??_Lo_ISR+2
  2039   00001E  CFE8 F03C          	movff	wreg,??_Lo_ISR+3
  2040   000022  CFE0 F03D          	movff	bsr,??_Lo_ISR+4
  2041   000026  CFE1 F03E          	movff	fsr1l,??_Lo_ISR+5
  2042   00002A  CFE2 F03F          	movff	fsr1h,??_Lo_ISR+6
  2043   00002E  CFD9 F040          	movff	fsr2l,??_Lo_ISR+7
  2044   000032  CFDA F041          	movff	fsr2h,??_Lo_ISR+8
  2045   000036  CFF6 F042          	movff	tblptrl,??_Lo_ISR+9
  2046   00003A  CFF7 F043          	movff	tblptrh,??_Lo_ISR+10
  2047   00003E  CFF8 F044          	movff	tblptru,??_Lo_ISR+11
  2048   000042  CFF5 F045          	movff	tablat,??_Lo_ISR+12
  2049   000046                     
  2050                           ;main.c: 112:     if(RCIF)
  2051   000046  AA9E               	btfss	3998,5,c	;volatile
  2052   000048  EF28  F000         	goto	i1u64_21
  2053   00004C  EF2A  F000         	goto	i1u64_20
  2054   000050                     i1u64_21:
  2055   000050  EFA6  F001         	goto	i1l217
  2056   000054                     i1u64_20:
  2057   000054                     
  2058                           ;main.c: 113:     {;main.c: 114:         if(RCSTAbits.OERR)
  2059   000054  A2AB               	btfss	171,1,c	;volatile
  2060   000056  EF2F  F000         	goto	i1u65_21
  2061   00005A  EF31  F000         	goto	i1u65_20
  2062   00005E                     i1u65_21:
  2063   00005E  EF34  F000         	goto	i1l1366
  2064   000062                     i1u65_20:
  2065   000062                     
  2066                           ;main.c: 115:         {;main.c: 116:             CREN = 0;
  2067   000062  98AB               	bcf	4011,4,c	;volatile
  2068                           
  2069                           ;main.c: 117:             __nop();
  2070   000064  0000               	nop	
  2071                           
  2072                           ;main.c: 118:             CREN = 1;
  2073   000066  88AB               	bsf	4011,4,c	;volatile
  2074   000068                     i1l1366:
  2075                           
  2076                           ;main.c: 121:         MyusartRead();
  2077   000068  EC23  F004         	call	_MyusartRead	;wreg free
  2078   00006C                     
  2079                           ;main.c: 122:         char command[20];;main.c: 123:         if(RCREG == '\r' || RCREG =
      +                          = '\n'){
  2080   00006C  0E0D               	movlw	13
  2081   00006E  18AE               	xorwf	174,w,c	;volatile
  2082   000070  B4D8               	btfsc	status,2,c
  2083   000072  EF3D  F000         	goto	i1u66_21
  2084   000076  EF3F  F000         	goto	i1u66_20
  2085   00007A                     i1u66_21:
  2086   00007A  EF48  F000         	goto	i1l1372
  2087   00007E                     i1u66_20:
  2088   00007E  0E0A               	movlw	10
  2089   000080  18AE               	xorwf	174,w,c	;volatile
  2090   000082  A4D8               	btfss	status,2,c
  2091   000084  EF46  F000         	goto	i1u67_21
  2092   000088  EF48  F000         	goto	i1u67_20
  2093   00008C                     i1u67_21:
  2094   00008C  EF54  F000         	goto	i1l1376
  2095   000090                     i1u67_20:
  2096   000090                     i1l1372:
  2097                           
  2098                           ;main.c: 124:             strcpy(command, GetString());
  2099   000090  0E46               	movlw	low Lo_ISR@command
  2100   000092  6E33               	movwf	strcpy@dest^0,c
  2101   000094  ECC7  F004         	call	_GetString	;wreg free
  2102   000098  6E39               	movwf	??_Lo_ISR^0,c
  2103   00009A  C039  F034         	movff	??_Lo_ISR,strcpy@src
  2104   00009E  6A35               	clrf	(strcpy@src+1)^0,c
  2105   0000A0  ECBA  F003         	call	_strcpy	;wreg free
  2106   0000A4                     
  2107                           ;main.c: 125:             ClearBuffer();
  2108   0000A4  EC05  F004         	call	_ClearBuffer	;wreg free
  2109   0000A8                     i1l1376:
  2110                           
  2111                           ;main.c: 127:         if(command[0] == 'L' && command[1] == 'R' && command[2] == 'N' && 
      +                          strlen(command) == 3){
  2112   0000A8  0E4C               	movlw	76
  2113   0000AA  1846               	xorwf	Lo_ISR@command^0,w,c
  2114   0000AC  A4D8               	btfss	status,2,c
  2115   0000AE  EF5B  F000         	goto	i1u68_21
  2116   0000B2  EF5D  F000         	goto	i1u68_20
  2117   0000B6                     i1u68_21:
  2118   0000B6  EF8F  F000         	goto	i1l1394
  2119   0000BA                     i1u68_20:
  2120   0000BA  0E52               	movlw	82
  2121   0000BC  1847               	xorwf	(Lo_ISR@command+1)^0,w,c
  2122   0000BE  A4D8               	btfss	status,2,c
  2123   0000C0  EF64  F000         	goto	i1u69_21
  2124   0000C4  EF66  F000         	goto	i1u69_20
  2125   0000C8                     i1u69_21:
  2126   0000C8  EF8F  F000         	goto	i1l1394
  2127   0000CC                     i1u69_20:
  2128   0000CC  0E4E               	movlw	78
  2129   0000CE  1848               	xorwf	(Lo_ISR@command+2)^0,w,c
  2130   0000D0  A4D8               	btfss	status,2,c
  2131   0000D2  EF6D  F000         	goto	i1u70_21
  2132   0000D6  EF6F  F000         	goto	i1u70_20
  2133   0000DA                     i1u70_21:
  2134   0000DA  EF8F  F000         	goto	i1l1394
  2135   0000DE                     i1u70_20:
  2136   0000DE  0E46               	movlw	low Lo_ISR@command
  2137   0000E0  6E31               	movwf	strlen@s^0,c
  2138   0000E2  EC40  F004         	call	_strlen	;wreg free
  2139   0000E6  0E03               	movlw	3
  2140   0000E8  1831               	xorwf	?_strlen^0,w,c
  2141   0000EA  1032               	iorwf	(?_strlen+1)^0,w,c
  2142   0000EC  A4D8               	btfss	status,2,c
  2143   0000EE  EF7B  F000         	goto	i1u71_21
  2144   0000F2  EF7D  F000         	goto	i1u71_20
  2145   0000F6                     i1u71_21:
  2146   0000F6  EF8F  F000         	goto	i1l1394
  2147   0000FA                     i1u71_20:
  2148   0000FA                     
  2149                           ;main.c: 128:             state = 1;
  2150   0000FA  0E00               	movlw	0
  2151   0000FC  6E1A               	movwf	(_state+1)^0,c
  2152   0000FE  0E01               	movlw	1
  2153   000100  6E19               	movwf	_state^0,c
  2154   000102                     
  2155                           ;main.c: 129:             ClearBuffer();
  2156   000102  EC05  F004         	call	_ClearBuffer	;wreg free
  2157   000106                     
  2158                           ;main.c: 130:             strcpy(command, "");
  2159   000106  0E46               	movlw	low Lo_ISR@command
  2160   000108  6E33               	movwf	strcpy@dest^0,c
  2161   00010A  0E03               	movlw	low (STR_1+2)
  2162   00010C  6E34               	movwf	strcpy@src^0,c
  2163   00010E  5034               	movf	strcpy@src^0,w,c
  2164   000110  A4D8               	btfss	status,2,c
  2165   000112  0E06               	movlw	high __smallconst
  2166   000114  6E35               	movwf	(strcpy@src+1)^0,c
  2167   000116  ECBA  F003         	call	_strcpy	;wreg free
  2168   00011A  EFF8  F001         	goto	i1l223
  2169   00011E                     i1l1394:
  2170   00011E  0E4C               	movlw	76
  2171   000120  1846               	xorwf	Lo_ISR@command^0,w,c
  2172   000122  A4D8               	btfss	status,2,c
  2173   000124  EF96  F000         	goto	i1u72_21
  2174   000128  EF98  F000         	goto	i1u72_20
  2175   00012C                     i1u72_21:
  2176   00012C  EFCA  F000         	goto	i1l1412
  2177   000130                     i1u72_20:
  2178   000130  0E52               	movlw	82
  2179   000132  1847               	xorwf	(Lo_ISR@command+1)^0,w,c
  2180   000134  A4D8               	btfss	status,2,c
  2181   000136  EF9F  F000         	goto	i1u73_21
  2182   00013A  EFA1  F000         	goto	i1u73_20
  2183   00013E                     i1u73_21:
  2184   00013E  EFCA  F000         	goto	i1l1412
  2185   000142                     i1u73_20:
  2186   000142  0E46               	movlw	70
  2187   000144  1848               	xorwf	(Lo_ISR@command+2)^0,w,c
  2188   000146  A4D8               	btfss	status,2,c
  2189   000148  EFA8  F000         	goto	i1u74_21
  2190   00014C  EFAA  F000         	goto	i1u74_20
  2191   000150                     i1u74_21:
  2192   000150  EFCA  F000         	goto	i1l1412
  2193   000154                     i1u74_20:
  2194   000154  0E46               	movlw	low Lo_ISR@command
  2195   000156  6E31               	movwf	strlen@s^0,c
  2196   000158  EC40  F004         	call	_strlen	;wreg free
  2197   00015C  0E03               	movlw	3
  2198   00015E  1831               	xorwf	?_strlen^0,w,c
  2199   000160  1032               	iorwf	(?_strlen+1)^0,w,c
  2200   000162  A4D8               	btfss	status,2,c
  2201   000164  EFB6  F000         	goto	i1u75_21
  2202   000168  EFB8  F000         	goto	i1u75_20
  2203   00016C                     i1u75_21:
  2204   00016C  EFCA  F000         	goto	i1l1412
  2205   000170                     i1u75_20:
  2206   000170                     
  2207                           ;main.c: 134:             state = 2;
  2208   000170  0E00               	movlw	0
  2209   000172  6E1A               	movwf	(_state+1)^0,c
  2210   000174  0E02               	movlw	2
  2211   000176  6E19               	movwf	_state^0,c
  2212   000178                     
  2213                           ;main.c: 135:             ClearBuffer();
  2214   000178  EC05  F004         	call	_ClearBuffer	;wreg free
  2215   00017C                     
  2216                           ;main.c: 136:             strcpy(command, "");
  2217   00017C  0E46               	movlw	low Lo_ISR@command
  2218   00017E  6E33               	movwf	strcpy@dest^0,c
  2219   000180  0E03               	movlw	low (STR_1+2)
  2220   000182  6E34               	movwf	strcpy@src^0,c
  2221   000184  5034               	movf	strcpy@src^0,w,c
  2222   000186  A4D8               	btfss	status,2,c
  2223   000188  0E06               	movlw	high __smallconst
  2224   00018A  6E35               	movwf	(strcpy@src+1)^0,c
  2225   00018C  ECBA  F003         	call	_strcpy	;wreg free
  2226   000190  EFF8  F001         	goto	i1l223
  2227   000194                     i1l1412:
  2228   000194  0E4C               	movlw	76
  2229   000196  1846               	xorwf	Lo_ISR@command^0,w,c
  2230   000198  A4D8               	btfss	status,2,c
  2231   00019A  EFD1  F000         	goto	i1u76_21
  2232   00019E  EFD3  F000         	goto	i1u76_20
  2233   0001A2                     i1u76_21:
  2234   0001A2  EF05  F001         	goto	i1l1430
  2235   0001A6                     i1u76_20:
  2236   0001A6  0E4C               	movlw	76
  2237   0001A8  1847               	xorwf	(Lo_ISR@command+1)^0,w,c
  2238   0001AA  A4D8               	btfss	status,2,c
  2239   0001AC  EFDA  F000         	goto	i1u77_21
  2240   0001B0  EFDC  F000         	goto	i1u77_20
  2241   0001B4                     i1u77_21:
  2242   0001B4  EF05  F001         	goto	i1l1430
  2243   0001B8                     i1u77_20:
  2244   0001B8  0E4E               	movlw	78
  2245   0001BA  1848               	xorwf	(Lo_ISR@command+2)^0,w,c
  2246   0001BC  A4D8               	btfss	status,2,c
  2247   0001BE  EFE3  F000         	goto	i1u78_21
  2248   0001C2  EFE5  F000         	goto	i1u78_20
  2249   0001C6                     i1u78_21:
  2250   0001C6  EF05  F001         	goto	i1l1430
  2251   0001CA                     i1u78_20:
  2252   0001CA  0E46               	movlw	low Lo_ISR@command
  2253   0001CC  6E31               	movwf	strlen@s^0,c
  2254   0001CE  EC40  F004         	call	_strlen	;wreg free
  2255   0001D2  0E03               	movlw	3
  2256   0001D4  1831               	xorwf	?_strlen^0,w,c
  2257   0001D6  1032               	iorwf	(?_strlen+1)^0,w,c
  2258   0001D8  A4D8               	btfss	status,2,c
  2259   0001DA  EFF1  F000         	goto	i1u79_21
  2260   0001DE  EFF3  F000         	goto	i1u79_20
  2261   0001E2                     i1u79_21:
  2262   0001E2  EF05  F001         	goto	i1l1430
  2263   0001E6                     i1u79_20:
  2264   0001E6                     
  2265                           ;main.c: 140:             state = 3;
  2266   0001E6  0E00               	movlw	0
  2267   0001E8  6E1A               	movwf	(_state+1)^0,c
  2268   0001EA  0E03               	movlw	3
  2269   0001EC  6E19               	movwf	_state^0,c
  2270   0001EE                     
  2271                           ;main.c: 141:             ClearBuffer();
  2272   0001EE  EC05  F004         	call	_ClearBuffer	;wreg free
  2273   0001F2                     
  2274                           ;main.c: 142:             strcpy(command, "");
  2275   0001F2  0E46               	movlw	low Lo_ISR@command
  2276   0001F4  6E33               	movwf	strcpy@dest^0,c
  2277   0001F6  0E03               	movlw	low (STR_1+2)
  2278   0001F8  6E34               	movwf	strcpy@src^0,c
  2279   0001FA  5034               	movf	strcpy@src^0,w,c
  2280   0001FC  A4D8               	btfss	status,2,c
  2281   0001FE  0E06               	movlw	high __smallconst
  2282   000200  6E35               	movwf	(strcpy@src+1)^0,c
  2283   000202  ECBA  F003         	call	_strcpy	;wreg free
  2284   000206  EFF8  F001         	goto	i1l223
  2285   00020A                     i1l1430:
  2286   00020A  0E4C               	movlw	76
  2287   00020C  1846               	xorwf	Lo_ISR@command^0,w,c
  2288   00020E  A4D8               	btfss	status,2,c
  2289   000210  EF0C  F001         	goto	i1u80_21
  2290   000214  EF0E  F001         	goto	i1u80_20
  2291   000218                     i1u80_21:
  2292   000218  EF40  F001         	goto	i1l1448
  2293   00021C                     i1u80_20:
  2294   00021C  0E4C               	movlw	76
  2295   00021E  1847               	xorwf	(Lo_ISR@command+1)^0,w,c
  2296   000220  A4D8               	btfss	status,2,c
  2297   000222  EF15  F001         	goto	i1u81_21
  2298   000226  EF17  F001         	goto	i1u81_20
  2299   00022A                     i1u81_21:
  2300   00022A  EF40  F001         	goto	i1l1448
  2301   00022E                     i1u81_20:
  2302   00022E  0E46               	movlw	70
  2303   000230  1848               	xorwf	(Lo_ISR@command+2)^0,w,c
  2304   000232  A4D8               	btfss	status,2,c
  2305   000234  EF1E  F001         	goto	i1u82_21
  2306   000238  EF20  F001         	goto	i1u82_20
  2307   00023C                     i1u82_21:
  2308   00023C  EF40  F001         	goto	i1l1448
  2309   000240                     i1u82_20:
  2310   000240  0E46               	movlw	low Lo_ISR@command
  2311   000242  6E31               	movwf	strlen@s^0,c
  2312   000244  EC40  F004         	call	_strlen	;wreg free
  2313   000248  0E03               	movlw	3
  2314   00024A  1831               	xorwf	?_strlen^0,w,c
  2315   00024C  1032               	iorwf	(?_strlen+1)^0,w,c
  2316   00024E  A4D8               	btfss	status,2,c
  2317   000250  EF2C  F001         	goto	i1u83_21
  2318   000254  EF2E  F001         	goto	i1u83_20
  2319   000258                     i1u83_21:
  2320   000258  EF40  F001         	goto	i1l1448
  2321   00025C                     i1u83_20:
  2322   00025C                     
  2323                           ;main.c: 146:             state = 4;
  2324   00025C  0E00               	movlw	0
  2325   00025E  6E1A               	movwf	(_state+1)^0,c
  2326   000260  0E04               	movlw	4
  2327   000262  6E19               	movwf	_state^0,c
  2328   000264                     
  2329                           ;main.c: 147:             ClearBuffer();
  2330   000264  EC05  F004         	call	_ClearBuffer	;wreg free
  2331   000268                     
  2332                           ;main.c: 148:             strcpy(command, "");
  2333   000268  0E46               	movlw	low Lo_ISR@command
  2334   00026A  6E33               	movwf	strcpy@dest^0,c
  2335   00026C  0E03               	movlw	low (STR_1+2)
  2336   00026E  6E34               	movwf	strcpy@src^0,c
  2337   000270  5034               	movf	strcpy@src^0,w,c
  2338   000272  A4D8               	btfss	status,2,c
  2339   000274  0E06               	movlw	high __smallconst
  2340   000276  6E35               	movwf	(strcpy@src+1)^0,c
  2341   000278  ECBA  F003         	call	_strcpy	;wreg free
  2342   00027C  EFF8  F001         	goto	i1l223
  2343   000280                     i1l1448:
  2344   000280  0E42               	movlw	66
  2345   000282  1846               	xorwf	Lo_ISR@command^0,w,c
  2346   000284  A4D8               	btfss	status,2,c
  2347   000286  EF47  F001         	goto	i1u84_21
  2348   00028A  EF49  F001         	goto	i1u84_20
  2349   00028E                     i1u84_21:
  2350   00028E  EF72  F001         	goto	i1l1464
  2351   000292                     i1u84_20:
  2352   000292  0E4E               	movlw	78
  2353   000294  1847               	xorwf	(Lo_ISR@command+1)^0,w,c
  2354   000296  A4D8               	btfss	status,2,c
  2355   000298  EF50  F001         	goto	i1u85_21
  2356   00029C  EF52  F001         	goto	i1u85_20
  2357   0002A0                     i1u85_21:
  2358   0002A0  EF72  F001         	goto	i1l1464
  2359   0002A4                     i1u85_20:
  2360   0002A4  0E46               	movlw	low Lo_ISR@command
  2361   0002A6  6E31               	movwf	strlen@s^0,c
  2362   0002A8  EC40  F004         	call	_strlen	;wreg free
  2363   0002AC  0E02               	movlw	2
  2364   0002AE  1831               	xorwf	?_strlen^0,w,c
  2365   0002B0  1032               	iorwf	(?_strlen+1)^0,w,c
  2366   0002B2  A4D8               	btfss	status,2,c
  2367   0002B4  EF5E  F001         	goto	i1u86_21
  2368   0002B8  EF60  F001         	goto	i1u86_20
  2369   0002BC                     i1u86_21:
  2370   0002BC  EF72  F001         	goto	i1l1464
  2371   0002C0                     i1u86_20:
  2372   0002C0                     
  2373                           ;main.c: 152:             state = 5;
  2374   0002C0  0E00               	movlw	0
  2375   0002C2  6E1A               	movwf	(_state+1)^0,c
  2376   0002C4  0E05               	movlw	5
  2377   0002C6  6E19               	movwf	_state^0,c
  2378   0002C8                     
  2379                           ;main.c: 153:             ClearBuffer();
  2380   0002C8  EC05  F004         	call	_ClearBuffer	;wreg free
  2381   0002CC                     
  2382                           ;main.c: 154:             strcpy(command, "");
  2383   0002CC  0E46               	movlw	low Lo_ISR@command
  2384   0002CE  6E33               	movwf	strcpy@dest^0,c
  2385   0002D0  0E03               	movlw	low (STR_1+2)
  2386   0002D2  6E34               	movwf	strcpy@src^0,c
  2387   0002D4  5034               	movf	strcpy@src^0,w,c
  2388   0002D6  A4D8               	btfss	status,2,c
  2389   0002D8  0E06               	movlw	high __smallconst
  2390   0002DA  6E35               	movwf	(strcpy@src+1)^0,c
  2391   0002DC  ECBA  F003         	call	_strcpy	;wreg free
  2392   0002E0  EFF8  F001         	goto	i1l223
  2393   0002E4                     i1l1464:
  2394   0002E4  0E42               	movlw	66
  2395   0002E6  1846               	xorwf	Lo_ISR@command^0,w,c
  2396   0002E8  A4D8               	btfss	status,2,c
  2397   0002EA  EF79  F001         	goto	i1u87_21
  2398   0002EE  EF7B  F001         	goto	i1u87_20
  2399   0002F2                     i1u87_21:
  2400   0002F2  EFA4  F001         	goto	i1l228
  2401   0002F6                     i1u87_20:
  2402   0002F6  0E46               	movlw	70
  2403   0002F8  1847               	xorwf	(Lo_ISR@command+1)^0,w,c
  2404   0002FA  A4D8               	btfss	status,2,c
  2405   0002FC  EF82  F001         	goto	i1u88_21
  2406   000300  EF84  F001         	goto	i1u88_20
  2407   000304                     i1u88_21:
  2408   000304  EFA4  F001         	goto	i1l228
  2409   000308                     i1u88_20:
  2410   000308  0E46               	movlw	low Lo_ISR@command
  2411   00030A  6E31               	movwf	strlen@s^0,c
  2412   00030C  EC40  F004         	call	_strlen	;wreg free
  2413   000310  0E02               	movlw	2
  2414   000312  1831               	xorwf	?_strlen^0,w,c
  2415   000314  1032               	iorwf	(?_strlen+1)^0,w,c
  2416   000316  A4D8               	btfss	status,2,c
  2417   000318  EF90  F001         	goto	i1u89_21
  2418   00031C  EF92  F001         	goto	i1u89_20
  2419   000320                     i1u89_21:
  2420   000320  EFA4  F001         	goto	i1l228
  2421   000324                     i1u89_20:
  2422   000324                     
  2423                           ;main.c: 158:             state = 6;
  2424   000324  0E00               	movlw	0
  2425   000326  6E1A               	movwf	(_state+1)^0,c
  2426   000328  0E06               	movlw	6
  2427   00032A  6E19               	movwf	_state^0,c
  2428   00032C                     
  2429                           ;main.c: 159:             ClearBuffer();
  2430   00032C  EC05  F004         	call	_ClearBuffer	;wreg free
  2431   000330                     
  2432                           ;main.c: 160:             strcpy(command, "");
  2433   000330  0E46               	movlw	low Lo_ISR@command
  2434   000332  6E33               	movwf	strcpy@dest^0,c
  2435   000334  0E03               	movlw	low (STR_1+2)
  2436   000336  6E34               	movwf	strcpy@src^0,c
  2437   000338  5034               	movf	strcpy@src^0,w,c
  2438   00033A  A4D8               	btfss	status,2,c
  2439   00033C  0E06               	movlw	high __smallconst
  2440   00033E  6E35               	movwf	(strcpy@src+1)^0,c
  2441   000340  ECBA  F003         	call	_strcpy	;wreg free
  2442   000344  EFF8  F001         	goto	i1l223
  2443   000348                     i1l228:
  2444   000348  EFF8  F001         	goto	i1l223
  2445   00034C                     i1l217:
  2446   00034C  A29E               	btfss	3998,1,c	;volatile
  2447   00034E  EFAB  F001         	goto	i1u90_21
  2448   000352  EFAD  F001         	goto	i1u90_20
  2449   000356                     i1u90_21:
  2450   000356  EFF8  F001         	goto	i1l223
  2451   00035A                     i1u90_20:
  2452   00035A                     
  2453                           ;main.c: 169:         TMR2IF = 0;
  2454   00035A  929E               	bcf	3998,1,c	;volatile
  2455   00035C                     
  2456                           ;main.c: 170:         postpostscaler = (postpostscaler+1)%8;
  2457   00035C  0E01               	movlw	1
  2458   00035E  2415               	addwf	_postpostscaler^0,w,c
  2459   000360  6E39               	movwf	??_Lo_ISR^0,c
  2460   000362  0E00               	movlw	0
  2461   000364  2016               	addwfc	(_postpostscaler+1)^0,w,c
  2462   000366  6E3A               	movwf	(??_Lo_ISR+1)^0,c
  2463   000368  0E07               	movlw	7
  2464   00036A  1439               	andwf	??_Lo_ISR^0,w,c
  2465   00036C  6E15               	movwf	_postpostscaler^0,c
  2466   00036E  6A16               	clrf	(_postpostscaler+1)^0,c
  2467                           
  2468                           ;main.c: 171:         if(!postpostscaler){
  2469   000370  5015               	movf	_postpostscaler^0,w,c
  2470   000372  1016               	iorwf	(_postpostscaler+1)^0,w,c
  2471   000374  A4D8               	btfss	status,2,c
  2472   000376  EFBF  F001         	goto	i1u91_21
  2473   00037A  EFC1  F001         	goto	i1u91_20
  2474   00037E                     i1u91_21:
  2475   00037E  EFF8  F001         	goto	i1l223
  2476   000382                     i1u91_20:
  2477   000382                     
  2478                           ;main.c: 172:             if(dir == -1){
  2479   000382  2817               	incf	_dir^0,w,c
  2480   000384  E106               	bnz	i1u92_21
  2481   000386  2818               	incf	(_dir+1)^0,w,c
  2482   000388  A4D8               	btfss	status,2,c
  2483   00038A  EFC9  F001         	goto	i1u92_21
  2484   00038E  EFCB  F001         	goto	i1u92_20
  2485   000392                     i1u92_21:
  2486   000392  EFDE  F001         	goto	i1l1486
  2487   000396                     i1u92_20:
  2488   000396                     
  2489                           ;main.c: 173:                 LATAbits.LATA5 = !LATAbits.LATA5;;
  2490   000396  AA89               	btfss	137,5,c	;volatile
  2491   000398  EFD0  F001         	goto	i1u93_21
  2492   00039C  EFD4  F001         	goto	i1u93_20
  2493   0003A0                     i1u93_21:
  2494   0003A0  6A39               	clrf	??_Lo_ISR^0,c
  2495   0003A2  2A39               	incf	??_Lo_ISR^0,f,c
  2496   0003A4  EFD5  F001         	goto	i1u94_28
  2497   0003A8                     i1u93_20:
  2498   0003A8  6A39               	clrf	??_Lo_ISR^0,c
  2499   0003AA                     i1u94_28:
  2500   0003AA  3A39               	swapf	??_Lo_ISR^0,f,c
  2501   0003AC  4639               	rlncf	??_Lo_ISR^0,f,c
  2502   0003AE  5089               	movf	137,w,c	;volatile
  2503   0003B0  1839               	xorwf	??_Lo_ISR^0,w,c
  2504   0003B2  0BDF               	andlw	-33
  2505   0003B4  1839               	xorwf	??_Lo_ISR^0,w,c
  2506   0003B6  6E89               	movwf	137,c	;volatile
  2507                           
  2508                           ;main.c: 174:             }else if(dir == 1){
  2509   0003B8  EFF8  F001         	goto	i1l223
  2510   0003BC                     i1l1486:
  2511   0003BC  0417               	decf	_dir^0,w,c
  2512   0003BE  1018               	iorwf	(_dir+1)^0,w,c
  2513   0003C0  A4D8               	btfss	status,2,c
  2514   0003C2  EFE5  F001         	goto	i1u95_21
  2515   0003C6  EFE7  F001         	goto	i1u95_20
  2516   0003CA                     i1u95_21:
  2517   0003CA  EFA4  F001         	goto	i1l228
  2518   0003CE                     i1u95_20:
  2519   0003CE                     
  2520                           ;main.c: 175:                 LATAbits.LATA7 = !LATAbits.LATA7;;
  2521   0003CE  AE89               	btfss	137,7,c	;volatile
  2522   0003D0  EFEC  F001         	goto	i1u96_21
  2523   0003D4  EFF0  F001         	goto	i1u96_20
  2524   0003D8                     i1u96_21:
  2525   0003D8  6A39               	clrf	??_Lo_ISR^0,c
  2526   0003DA  2A39               	incf	??_Lo_ISR^0,f,c
  2527   0003DC  EFF1  F001         	goto	i1u97_28
  2528   0003E0                     i1u96_20:
  2529   0003E0  6A39               	clrf	??_Lo_ISR^0,c
  2530   0003E2                     i1u97_28:
  2531   0003E2  3239               	rrcf	??_Lo_ISR^0,f,c
  2532   0003E4  3239               	rrcf	??_Lo_ISR^0,f,c
  2533   0003E6  5089               	movf	137,w,c	;volatile
  2534   0003E8  1839               	xorwf	??_Lo_ISR^0,w,c
  2535   0003EA  0B7F               	andlw	-129
  2536   0003EC  1839               	xorwf	??_Lo_ISR^0,w,c
  2537   0003EE  6E89               	movwf	137,c	;volatile
  2538   0003F0                     i1l223:
  2539   0003F0  C045  FFF5         	movff	??_Lo_ISR+12,tablat
  2540   0003F4  C044  FFF8         	movff	??_Lo_ISR+11,tblptru
  2541   0003F8  C043  FFF7         	movff	??_Lo_ISR+10,tblptrh
  2542   0003FC  C042  FFF6         	movff	??_Lo_ISR+9,tblptrl
  2543   000400  C041  FFDA         	movff	??_Lo_ISR+8,fsr2h
  2544   000404  C040  FFD9         	movff	??_Lo_ISR+7,fsr2l
  2545   000408  C03F  FFE2         	movff	??_Lo_ISR+6,fsr1h
  2546   00040C  C03E  FFE1         	movff	??_Lo_ISR+5,fsr1l
  2547   000410  C03D  FFE0         	movff	??_Lo_ISR+4,bsr
  2548   000414  C03C  FFE8         	movff	??_Lo_ISR+3,wreg
  2549   000418  C03B  FFD8         	movff	??_Lo_ISR+2,status
  2550   00041C  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2551   00041E  0010               	retfie	
  2552   000420                     __end_of_Lo_ISR:
  2553                           	callstack 0
  2554                           
  2555 ;; *************** function _strlen *****************
  2556 ;; Defined at:
  2557 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2560 ;;		 -> Lo_ISR@command(20), 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2563 ;;		 -> Lo_ISR@command(20), 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  2    0[COMRAM] unsigned int 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2573 ;;      Params:         2       0       0       0       0       0       0
  2574 ;;      Locals:         1       0       0       0       0       0       0
  2575 ;;      Temps:          0       0       0       0       0       0       0
  2576 ;;      Totals:         3       0       0       0       0       0       0
  2577 ;;Total ram usage:        3 bytes
  2578 ;; Hardware stack levels used: 1
  2579 ;; Hardware stack levels required when called: 1
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_Lo_ISR
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text13
  2588   000880                     __ptext13:
  2589                           	callstack 0
  2590   000880                     _strlen:
  2591                           	callstack 26
  2592   000880  C031  F033         	movff	strlen@s,strlen@a
  2593   000884  EF45  F004         	goto	i1l1316
  2594   000888                     i1l1314:
  2595   000888  2A31               	incf	strlen@s^0,f,c
  2596   00088A                     i1l1316:
  2597   00088A  5031               	movf	strlen@s^0,w,c
  2598   00088C  6ED9               	movwf	fsr2l,c
  2599   00088E  6ADA               	clrf	fsr2h,c
  2600   000890  50DF               	movf	indf2,w,c
  2601   000892  A4D8               	btfss	status,2,c
  2602   000894  EF4E  F004         	goto	i1u63_21
  2603   000898  EF50  F004         	goto	i1u63_20
  2604   00089C                     i1u63_21:
  2605   00089C  EF44  F004         	goto	i1l1314
  2606   0008A0                     i1u63_20:
  2607   0008A0  5033               	movf	strlen@a^0,w,c
  2608   0008A2  5C31               	subwf	strlen@s^0,w,c
  2609   0008A4  6E31               	movwf	?_strlen^0,c
  2610   0008A6  6A32               	clrf	(?_strlen+1)^0,c
  2611   0008A8  BE31               	btfsc	?_strlen^0,7,c
  2612   0008AA  0632               	decf	(?_strlen+1)^0,f,c
  2613   0008AC  0012               	return		;funcret
  2614   0008AE                     __end_of_strlen:
  2615                           	callstack 0
  2616                           
  2617 ;; *************** function _strcpy *****************
  2618 ;; Defined at:
  2619 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  dest            1    2[COMRAM] PTR unsigned char 
  2622 ;;		 -> Lo_ISR@command(20), 
  2623 ;;  src             2    3[COMRAM] PTR const unsigned char 
  2624 ;;		 -> STR_7(1), STR_6(1), STR_5(1), STR_4(1), 
  2625 ;;		 -> STR_3(1), STR_2(1), mystring(20), 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  d               1    7[COMRAM] PTR unsigned char 
  2628 ;;		 -> Lo_ISR@command(20), 
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    2[COMRAM] PTR unsigned char 
  2631 ;; Registers used:
  2632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2638 ;;      Params:         3       0       0       0       0       0       0
  2639 ;;      Locals:         1       0       0       0       0       0       0
  2640 ;;      Temps:          2       0       0       0       0       0       0
  2641 ;;      Totals:         6       0       0       0       0       0       0
  2642 ;;Total ram usage:        6 bytes
  2643 ;; Hardware stack levels used: 1
  2644 ;; Hardware stack levels required when called: 1
  2645 ;; This function calls:
  2646 ;;		Nothing
  2647 ;; This function is called by:
  2648 ;;		_Lo_ISR
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           	psect	text14
  2653   000774                     __ptext14:
  2654                           	callstack 0
  2655   000774                     _strcpy:
  2656                           	callstack 26
  2657   000774  C033  F038         	movff	strcpy@dest,strcpy@d
  2658   000778                     i1l1310:
  2659   000778  5034               	movf	strcpy@src^0,w,c
  2660   00077A  6E36               	movwf	??_strcpy^0,c
  2661   00077C  5035               	movf	(strcpy@src+1)^0,w,c
  2662   00077E  6E37               	movwf	(??_strcpy+1)^0,c
  2663   000780  4A34               	infsnz	strcpy@src^0,f,c
  2664   000782  2A35               	incf	(strcpy@src+1)^0,f,c
  2665   000784  C036  FFF6         	movff	??_strcpy,tblptrl
  2666   000788  C037  FFF7         	movff	??_strcpy+1,tblptrh
  2667   00078C  6AF8               	clrf	tblptru,c
  2668   00078E  2A38               	incf	strcpy@d^0,f,c
  2669   000790  0438               	decf	strcpy@d^0,w,c
  2670   000792  6ED9               	movwf	fsr2l,c
  2671   000794  6ADA               	clrf	fsr2h,c
  2672   000796  0E05               	movlw	(high __ramtop+-1)
  2673   000798  64F7               	cpfsgt	tblptrh,c
  2674   00079A  D003               	bra	i1u61_27
  2675   00079C  0008               	tblrd		*
  2676   00079E  50F5               	movf	tablat,w,c
  2677   0007A0  D005               	bra	i1u61_20
  2678   0007A2                     i1u61_27:
  2679   0007A2  CFF6 FFE1          	movff	tblptrl,fsr1l
  2680   0007A6  CFF7 FFE2          	movff	tblptrh,fsr1h
  2681   0007AA  50E7               	movf	indf1,w,c
  2682   0007AC                     i1u61_20:
  2683   0007AC  6EDF               	movwf	indf2,c
  2684   0007AE  50DF               	movf	indf2,w,c
  2685   0007B0  A4D8               	btfss	status,2,c
  2686   0007B2  EFDD  F003         	goto	i1u62_21
  2687   0007B6  EFDF  F003         	goto	i1u62_20
  2688   0007BA                     i1u62_21:
  2689   0007BA  EFBC  F003         	goto	i1l1310
  2690   0007BE                     i1u62_20:
  2691   0007BE  0012               	return		;funcret
  2692   0007C0                     __end_of_strcpy:
  2693                           	callstack 0
  2694                           
  2695 ;; *************** function _MyusartRead *****************
  2696 ;; Defined at:
  2697 ;;		line 62 in file "setting_hardaware/uart.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;  receivedData    1    5[COMRAM] unsigned char 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2711 ;;      Params:         0       0       0       0       0       0       0
  2712 ;;      Locals:         1       0       0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0
  2714 ;;      Totals:         1       0       0       0       0       0       0
  2715 ;;Total ram usage:        1 bytes
  2716 ;; Hardware stack levels used: 1
  2717 ;; Hardware stack levels required when called: 3
  2718 ;; This function calls:
  2719 ;;		_UART_Write
  2720 ;;		_UART_Write_Text
  2721 ;; This function is called by:
  2722 ;;		_Lo_ISR
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text15
  2727   000846                     __ptext15:
  2728                           	callstack 0
  2729   000846                     _MyusartRead:
  2730                           	callstack 24
  2731   000846                     
  2732                           ;setting_hardaware/uart.c: 66:     unsigned char receivedData = RCREG;
  2733   000846  CFAE F036          	movff	4014,MyusartRead@receivedData	;volatile
  2734   00084A                     
  2735                           ;setting_hardaware/uart.c: 67:     if(receivedData == '\r'){
  2736   00084A  0E0D               	movlw	13
  2737   00084C  1836               	xorwf	MyusartRead@receivedData^0,w,c
  2738   00084E  A4D8               	btfss	status,2,c
  2739   000850  EF2C  F004         	goto	i1u60_21
  2740   000854  EF2E  F004         	goto	i1u60_20
  2741   000858                     i1u60_21:
  2742   000858  EF34  F004         	goto	i1l1276
  2743   00085C                     i1u60_20:
  2744   00085C                     
  2745                           ;setting_hardaware/uart.c: 68:         UART_Write_Text("\r\n");
  2746   00085C  0E01               	movlw	low STR_1
  2747   00085E  6E32               	movwf	UART_Write_Text@text^0,c
  2748   000860  ECE0  F003         	call	_UART_Write_Text	;wreg free
  2749   000864  EF3F  F004         	goto	i1l128
  2750   000868                     i1l1276:
  2751                           
  2752                           ;setting_hardaware/uart.c: 71:     mystring[lenStr] = receivedData;
  2753   000868  501B               	movf	_lenStr^0,w,c
  2754   00086A  0F1D               	addlw	low _mystring
  2755   00086C  6ED9               	movwf	fsr2l,c
  2756   00086E  6ADA               	clrf	fsr2h,c
  2757   000870  C036  FFDF         	movff	MyusartRead@receivedData,indf2
  2758   000874                     
  2759                           ;setting_hardaware/uart.c: 72:     lenStr++;
  2760   000874  4A1B               	infsnz	_lenStr^0,f,c
  2761   000876  2A1C               	incf	(_lenStr+1)^0,f,c
  2762   000878                     
  2763                           ;setting_hardaware/uart.c: 73:     UART_Write(receivedData);
  2764   000878  5036               	movf	MyusartRead@receivedData^0,w,c
  2765   00087A  EC9A  F004         	call	_UART_Write
  2766   00087E                     i1l128:
  2767   00087E  0012               	return		;funcret
  2768   000880                     __end_of_MyusartRead:
  2769                           	callstack 0
  2770                           
  2771 ;; *************** function _UART_Write_Text *****************
  2772 ;; Defined at:
  2773 ;;		line 51 in file "setting_hardaware/uart.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  text            1    1[COMRAM] PTR unsigned char 
  2776 ;;		 -> STR_1(3), 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  i               2    3[COMRAM] int 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2788 ;;      Params:         1       0       0       0       0       0       0
  2789 ;;      Locals:         2       0       0       0       0       0       0
  2790 ;;      Temps:          1       0       0       0       0       0       0
  2791 ;;      Totals:         4       0       0       0       0       0       0
  2792 ;;Total ram usage:        4 bytes
  2793 ;; Hardware stack levels used: 1
  2794 ;; Hardware stack levels required when called: 2
  2795 ;; This function calls:
  2796 ;;		_UART_Write
  2797 ;; This function is called by:
  2798 ;;		_MyusartRead
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text16
  2803   0007C0                     __ptext16:
  2804                           	callstack 0
  2805   0007C0                     _UART_Write_Text:
  2806                           	callstack 24
  2807   0007C0                     
  2808                           ;setting_hardaware/uart.c: 52:     for(int i=0;text[i]!='\0';i++)
  2809   0007C0  0E00               	movlw	0
  2810   0007C2  6E35               	movwf	(UART_Write_Text@i+1)^0,c
  2811   0007C4  0E00               	movlw	0
  2812   0007C6  6E34               	movwf	UART_Write_Text@i^0,c
  2813   0007C8  EFF3  F003         	goto	i1l1264
  2814   0007CC                     i1l1260:
  2815                           
  2816                           ;setting_hardaware/uart.c: 53:         UART_Write(text[i]);
  2817   0007CC  5032               	movf	UART_Write_Text@text^0,w,c
  2818   0007CE  2434               	addwf	UART_Write_Text@i^0,w,c
  2819   0007D0  6E33               	movwf	??_UART_Write_Text^0,c
  2820   0007D2  C033  FFF6         	movff	??_UART_Write_Text,tblptrl
  2821   0007D6                     	if	1	;There is more than 1 active tblptr byte
  2822   0007D6  0E06               	movlw	high __smallconst
  2823   0007D8  6EF7               	movwf	tblptrh,c
  2824   0007DA                     	endif
  2825   0007DA                     	if	0	;tblptru may be non-zero
  2826   0007DA                     	endif
  2827   0007DA                     	if	0	;tblptru may be non-zero
  2828   0007DA                     	endif
  2829   0007DA  0008               	tblrd		*
  2830   0007DC  50F5               	movf	tablat,w,c
  2831   0007DE  EC9A  F004         	call	_UART_Write
  2832   0007E2  4A34               	infsnz	UART_Write_Text@i^0,f,c
  2833   0007E4  2A35               	incf	(UART_Write_Text@i+1)^0,f,c
  2834   0007E6                     i1l1264:
  2835   0007E6  5032               	movf	UART_Write_Text@text^0,w,c
  2836   0007E8  2434               	addwf	UART_Write_Text@i^0,w,c
  2837   0007EA  6E33               	movwf	??_UART_Write_Text^0,c
  2838   0007EC  C033  FFF6         	movff	??_UART_Write_Text,tblptrl
  2839   0007F0                     	if	1	;There is more than 1 active tblptr byte
  2840   0007F0  0E06               	movlw	high __smallconst
  2841   0007F2  6EF7               	movwf	tblptrh,c
  2842   0007F4                     	endif
  2843   0007F4                     	if	0	;tblptru may be non-zero
  2844   0007F4                     	endif
  2845   0007F4                     	if	0	;tblptru may be non-zero
  2846   0007F4                     	endif
  2847   0007F4  0008               	tblrd		*
  2848   0007F6  50F5               	movf	tablat,w,c
  2849   0007F8  0900               	iorlw	0
  2850   0007FA  A4D8               	btfss	status,2,c
  2851   0007FC  EF02  F004         	goto	i1u51_21
  2852   000800  EF04  F004         	goto	i1u51_20
  2853   000804                     i1u51_21:
  2854   000804  EFE6  F003         	goto	i1l1260
  2855   000808                     i1u51_20:
  2856   000808  0012               	return		;funcret
  2857   00080A                     __end_of_UART_Write_Text:
  2858                           	callstack 0
  2859                           
  2860 ;; *************** function _UART_Write *****************
  2861 ;; Defined at:
  2862 ;;		line 44 in file "setting_hardaware/uart.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  data            1    wreg     unsigned char 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  data            1    0[COMRAM] unsigned char 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2876 ;;      Params:         0       0       0       0       0       0       0
  2877 ;;      Locals:         1       0       0       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0
  2879 ;;      Totals:         1       0       0       0       0       0       0
  2880 ;;Total ram usage:        1 bytes
  2881 ;; Hardware stack levels used: 1
  2882 ;; Hardware stack levels required when called: 1
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_UART_Write_Text
  2887 ;;		_MyusartRead
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text17
  2892   000934                     __ptext17:
  2893                           	callstack 0
  2894   000934                     _UART_Write:
  2895                           	callstack 24
  2896                           
  2897                           ;incstack = 0
  2898                           ;UART_Write@data stored from wreg
  2899   000934  6E31               	movwf	UART_Write@data^0,c
  2900   000936                     i1l110:
  2901   000936  A2AC               	btfss	172,1,c	;volatile
  2902   000938  EFA0  F004         	goto	i1u1_21
  2903   00093C  EFA2  F004         	goto	i1u1_20
  2904   000940                     i1u1_21:
  2905   000940  EF9B  F004         	goto	i1l110
  2906   000944                     i1u1_20:
  2907   000944                     
  2908                           ;setting_hardaware/uart.c: 47:     TXREG = data;
  2909   000944  C031  FFAD         	movff	UART_Write@data,4013	;volatile
  2910   000948  0012               	return		;funcret
  2911   00094A                     __end_of_UART_Write:
  2912                           	callstack 0
  2913                           
  2914 ;; *************** function _GetString *****************
  2915 ;; Defined at:
  2916 ;;		line 77 in file "setting_hardaware/uart.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    0[COMRAM] PTR unsigned char 
  2923 ;; Registers used:
  2924 ;;		wreg
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2930 ;;      Params:         2       0       0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0
  2933 ;;      Totals:         2       0       0       0       0       0       0
  2934 ;;Total ram usage:        2 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; Hardware stack levels required when called: 1
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_Lo_ISR
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text18
  2945   00098E                     __ptext18:
  2946                           	callstack 0
  2947   00098E                     _GetString:
  2948                           	callstack 26
  2949   00098E                     
  2950                           ;setting_hardaware/uart.c: 78:     return mystring;
  2951   00098E  0E1D               	movlw	_mystring& (0+255)
  2952   000990  0012               	return		;funcret
  2953   000992                     __end_of_GetString:
  2954                           	callstack 0
  2955                           
  2956 ;; *************** function _ClearBuffer *****************
  2957 ;; Defined at:
  2958 ;;		line 56 in file "setting_hardaware/uart.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;		None
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  i               2    0[COMRAM] int 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2972 ;;      Params:         0       0       0       0       0       0       0
  2973 ;;      Locals:         2       0       0       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0       0       0
  2975 ;;      Totals:         2       0       0       0       0       0       0
  2976 ;;Total ram usage:        2 bytes
  2977 ;; Hardware stack levels used: 1
  2978 ;; Hardware stack levels required when called: 1
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_Lo_ISR
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text19
  2987   00080A                     __ptext19:
  2988                           	callstack 0
  2989   00080A                     _ClearBuffer:
  2990                           	callstack 26
  2991   00080A                     
  2992                           ;setting_hardaware/uart.c: 57:     for(int i = 0; i < 10 ; i++)
  2993   00080A  0E00               	movlw	0
  2994   00080C  6E32               	movwf	(ClearBuffer@i+1)^0,c
  2995   00080E  0E00               	movlw	0
  2996   000810  6E31               	movwf	ClearBuffer@i^0,c
  2997   000812                     i1l996:
  2998                           
  2999                           ;setting_hardaware/uart.c: 58:         mystring[i] = '\0';
  3000   000812  5031               	movf	ClearBuffer@i^0,w,c
  3001   000814  0F1D               	addlw	low _mystring
  3002   000816  6ED9               	movwf	fsr2l,c
  3003   000818  6ADA               	clrf	fsr2h,c
  3004   00081A  6ADF               	clrf	indf2,c
  3005   00081C  4A31               	infsnz	ClearBuffer@i^0,f,c
  3006   00081E  2A32               	incf	(ClearBuffer@i+1)^0,f,c
  3007   000820  BE32               	btfsc	(ClearBuffer@i+1)^0,7,c
  3008   000822  EF1C  F004         	goto	i1u11_21
  3009   000826  5032               	movf	(ClearBuffer@i+1)^0,w,c
  3010   000828  E109               	bnz	i1u11_20
  3011   00082A  0E0A               	movlw	10
  3012   00082C  5C31               	subwf	ClearBuffer@i^0,w,c
  3013   00082E  A0D8               	btfss	status,0,c
  3014   000830  EF1C  F004         	goto	i1u11_21
  3015   000834  EF1E  F004         	goto	i1u11_20
  3016   000838                     i1u11_21:
  3017   000838  EF09  F004         	goto	i1l996
  3018   00083C                     i1u11_20:
  3019   00083C                     
  3020                           ;setting_hardaware/uart.c: 59:     lenStr = 0;
  3021   00083C  0E00               	movlw	0
  3022   00083E  6E1C               	movwf	(_lenStr+1)^0,c
  3023   000840  0E00               	movlw	0
  3024   000842  6E1B               	movwf	_lenStr^0,c
  3025   000844  0012               	return		;funcret
  3026   000846                     __end_of_ClearBuffer:
  3027                           	callstack 0
  3028                           
  3029 ;; *************** function _Hi_ISR *****************
  3030 ;; Defined at:
  3031 ;;		line 104 in file "main.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		None
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3045 ;;      Params:         0       0       0       0       0       0       0
  3046 ;;      Locals:         0       0       0       0       0       0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0
  3048 ;;      Totals:         0       0       0       0       0       0       0
  3049 ;;Total ram usage:        0 bytes
  3050 ;; Hardware stack levels used: 1
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		Interrupt level 2
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           	psect	intcode
  3059   000008                     __pintcode:
  3060                           	callstack 0
  3061   000008                     _Hi_ISR:
  3062                           	callstack 24
  3063                           
  3064                           ;incstack = 0
  3065   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3066   00000A  EDC2  F004         	call	int_func,f	;refresh shadow registers
  3067                           
  3068                           	psect	intcode_body
  3069   000984                     __pintcode_body:
  3070                           	callstack 24
  3071   000984                     int_func:
  3072                           	callstack 24
  3073   000984  0006               	pop		; remove dummy address from shadow register refresh
  3074   000986  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3075   000988  0011               	retfie		f
  3076   00098A                     __end_of_Hi_ISR:
  3077                           	callstack 0
  3078                           
  3079                           	psect	rparam
  3080   000001                     ___rparam_used  equ	1
  3081   000000                     ___param_bank   equ	0
  3082   000000                     __Lparam        equ	__Lrparam
  3083   000000                     __Hparam        equ	__Hrparam
  3084                           
  3085                           	psect	temp
  3086   00005A                     btemp:
  3087                           	callstack 0
  3088   00005A                     	ds	1
  3089   00005A                     int$flags       set	btemp
  3090   00005B                     wtemp8          set	btemp+1
  3091   00005B                     ttemp5          set	btemp+1
  3092   00005E                     ttemp6          set	btemp+4
  3093   000062                     ttemp7          set	btemp+8
  3094                           
  3095                           	psect	idloc
  3096                           
  3097                           ;Config register IDLOC0 @ 0x200000
  3098                           ;	unspecified, using default values
  3099   200000                     	org	2097152
  3100   200000  FF                 	db	255
  3101                           
  3102                           ;Config register IDLOC1 @ 0x200001
  3103                           ;	unspecified, using default values
  3104   200001                     	org	2097153
  3105   200001  FF                 	db	255
  3106                           
  3107                           ;Config register IDLOC2 @ 0x200002
  3108                           ;	unspecified, using default values
  3109   200002                     	org	2097154
  3110   200002  FF                 	db	255
  3111                           
  3112                           ;Config register IDLOC3 @ 0x200003
  3113                           ;	unspecified, using default values
  3114   200003                     	org	2097155
  3115   200003  FF                 	db	255
  3116                           
  3117                           ;Config register IDLOC4 @ 0x200004
  3118                           ;	unspecified, using default values
  3119   200004                     	org	2097156
  3120   200004  FF                 	db	255
  3121                           
  3122                           ;Config register IDLOC5 @ 0x200005
  3123                           ;	unspecified, using default values
  3124   200005                     	org	2097157
  3125   200005  FF                 	db	255
  3126                           
  3127                           ;Config register IDLOC6 @ 0x200006
  3128                           ;	unspecified, using default values
  3129   200006                     	org	2097158
  3130   200006  FF                 	db	255
  3131                           
  3132                           ;Config register IDLOC7 @ 0x200007
  3133                           ;	unspecified, using default values
  3134   200007                     	org	2097159
  3135   200007  FF                 	db	255
  3136                           
  3137                           	psect	config
  3138                           
  3139                           ; Padding undefined space
  3140   300000                     	org	3145728
  3141   300000  FF                 	db	255
  3142                           
  3143                           ;Config register CONFIG1H @ 0x300001
  3144                           ;	Oscillator Selection bits
  3145                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  3146                           ;	Fail-Safe Clock Monitor Enable bit
  3147                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3148                           ;	Internal/External Oscillator Switchover bit
  3149                           ;	IESO = ON, Oscillator Switchover mode enabled
  3150   300001                     	org	3145729
  3151   300001  88                 	db	136
  3152                           
  3153                           ;Config register CONFIG2L @ 0x300002
  3154                           ;	Power-up Timer Enable bit
  3155                           ;	PWRT = OFF, PWRT disabled
  3156                           ;	Brown-out Reset Enable bits
  3157                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3158                           ;	Brown Out Reset Voltage bits
  3159                           ;	BORV = 3, Minimum setting
  3160   300002                     	org	3145730
  3161   300002  1F                 	db	31
  3162                           
  3163                           ;Config register CONFIG2H @ 0x300003
  3164                           ;	Watchdog Timer Enable bit
  3165                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3166                           ;	Watchdog Timer Postscale Select bits
  3167                           ;	WDTPS = 1, 1:1
  3168   300003                     	org	3145731
  3169   300003  00                 	db	0
  3170                           
  3171                           ; Padding undefined space
  3172   300004                     	org	3145732
  3173   300004  FF                 	db	255
  3174                           
  3175                           ;Config register CONFIG3H @ 0x300005
  3176                           ;	CCP2 MUX bit
  3177                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3178                           ;	PORTB A/D Enable bit
  3179                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3180                           ;	Low-Power Timer1 Oscillator Enable bit
  3181                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3182                           ;	MCLR Pin Enable bit
  3183                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3184   300005                     	org	3145733
  3185   300005  83                 	db	131
  3186                           
  3187                           ;Config register CONFIG4L @ 0x300006
  3188                           ;	Stack Full/Underflow Reset Enable bit
  3189                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3190                           ;	Single-Supply ICSP Enable bit
  3191                           ;	LVP = OFF, Single-Supply ICSP disabled
  3192                           ;	Extended Instruction Set Enable bit
  3193                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3194                           ;	Background Debugger Enable bit
  3195                           ;	DEBUG = 0x1, unprogrammed default
  3196   300006                     	org	3145734
  3197   300006  81                 	db	129
  3198                           
  3199                           ; Padding undefined space
  3200   300007                     	org	3145735
  3201   300007  FF                 	db	255
  3202                           
  3203                           ;Config register CONFIG5L @ 0x300008
  3204                           ;	Code Protection bit
  3205                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3206                           ;	Code Protection bit
  3207                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3208                           ;	Code Protection bit
  3209                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3210                           ;	Code Protection bit
  3211                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3212   300008                     	org	3145736
  3213   300008  0F                 	db	15
  3214                           
  3215                           ;Config register CONFIG5H @ 0x300009
  3216                           ;	Boot Block Code Protection bit
  3217                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3218                           ;	Data EEPROM Code Protection bit
  3219                           ;	CPD = OFF, Data EEPROM not code-protected
  3220   300009                     	org	3145737
  3221   300009  C0                 	db	192
  3222                           
  3223                           ;Config register CONFIG6L @ 0x30000A
  3224                           ;	Write Protection bit
  3225                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3226                           ;	Write Protection bit
  3227                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3228                           ;	Write Protection bit
  3229                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3230                           ;	Write Protection bit
  3231                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3232   30000A                     	org	3145738
  3233   30000A  0F                 	db	15
  3234                           
  3235                           ;Config register CONFIG6H @ 0x30000B
  3236                           ;	Configuration Register Write Protection bit
  3237                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3238                           ;	Boot Block Write Protection bit
  3239                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3240                           ;	Data EEPROM Write Protection bit
  3241                           ;	WRTD = OFF, Data EEPROM not write-protected
  3242   30000B                     	org	3145739
  3243   30000B  E0                 	db	224
  3244                           
  3245                           ;Config register CONFIG7L @ 0x30000C
  3246                           ;	Table Read Protection bit
  3247                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3248                           ;	Table Read Protection bit
  3249                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3250                           ;	Table Read Protection bit
  3251                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3252                           ;	Table Read Protection bit
  3253                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3254   30000C                     	org	3145740
  3255   30000C  0F                 	db	15
  3256                           
  3257                           ;Config register CONFIG7H @ 0x30000D
  3258                           ;	Boot Block Table Read Protection bit
  3259                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3260   30000D                     	org	3145741
  3261   30000D  40                 	db	64
  3262                           tosu	equ	0xFFF
  3263                           tosh	equ	0xFFE
  3264                           tosl	equ	0xFFD
  3265                           stkptr	equ	0xFFC
  3266                           pclatu	equ	0xFFB
  3267                           pclath	equ	0xFFA
  3268                           pcl	equ	0xFF9
  3269                           tblptru	equ	0xFF8
  3270                           tblptrh	equ	0xFF7
  3271                           tblptrl	equ	0xFF6
  3272                           tablat	equ	0xFF5
  3273                           prodh	equ	0xFF4
  3274                           prodl	equ	0xFF3
  3275                           indf0	equ	0xFEF
  3276                           postinc0	equ	0xFEE
  3277                           postdec0	equ	0xFED
  3278                           preinc0	equ	0xFEC
  3279                           plusw0	equ	0xFEB
  3280                           fsr0h	equ	0xFEA
  3281                           fsr0l	equ	0xFE9
  3282                           wreg	equ	0xFE8
  3283                           indf1	equ	0xFE7
  3284                           postinc1	equ	0xFE6
  3285                           postdec1	equ	0xFE5
  3286                           preinc1	equ	0xFE4
  3287                           plusw1	equ	0xFE3
  3288                           fsr1h	equ	0xFE2
  3289                           fsr1l	equ	0xFE1
  3290                           bsr	equ	0xFE0
  3291                           indf2	equ	0xFDF
  3292                           postinc2	equ	0xFDE
  3293                           postdec2	equ	0xFDD
  3294                           preinc2	equ	0xFDC
  3295                           plusw2	equ	0xFDB
  3296                           fsr2h	equ	0xFDA
  3297                           fsr2l	equ	0xFD9
  3298                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     41      89
    BANK0           128      7       7
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sp__GetString	PTR unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), STR_2(CODE[1]), STR_3(CODE[1]), STR_4(CODE[1]), 
		 -> STR_5(CODE[1]), STR_6(CODE[1]), STR_7(CODE[1]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_strcpy
    _strcpy->_GetString
    _MyusartRead->_UART_Write_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ledLeftOn
    _main->_ledRightOff
    _main->_ledRightOn
    _ledRightOn->_displayBinary
    _ledRightOff->_displayBinary
    _ledLeftOn->_displayBinary

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     697
                                              5 BANK0      2     2      0
                  _SYSTEM_Initialize
                      _displayBinary
                       _initialState
                         _ledLeftOff
                          _ledLeftOn
                        _ledRightOff
                         _ledRightOn
 ---------------------------------------------------------------------------------
 (1) _ledRightOn                                           2     0      2     182
                                              3 BANK0      2     0      2
                      _displayBinary
 ---------------------------------------------------------------------------------
 (1) _ledRightOff                                          2     0      2     182
                                              3 BANK0      2     0      2
                      _displayBinary
 ---------------------------------------------------------------------------------
 (1) _ledLeftOn                                            2     0      2     182
                                              3 BANK0      2     0      2
                      _displayBinary
 ---------------------------------------------------------------------------------
 (2) _displayBinary                                        3     1      2     148
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _ledLeftOff                                           2     0      2       3
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initialState                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _TMR2_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                              33    33      0    1067
                                              8 COMRAM    33    33      0
                        _ClearBuffer
                          _GetString
                        _MyusartRead
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               3     1      2      96
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     3      3      87
                                              2 COMRAM     6     3      3
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          1     1      0     188
                                              5 COMRAM     1     1      0
                         _UART_Write
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (5) _UART_Write_Text                                      4     3      1     106
                                              1 COMRAM     4     3      1
                         _UART_Write
 ---------------------------------------------------------------------------------
 (6) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _GetString                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ClearBuffer                                          2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Hi_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _TMR2_Initialize
     _UART_Initialize
   _displayBinary
   _initialState
   _ledLeftOff
   _ledLeftOn
     _displayBinary
   _ledRightOff
     _displayBinary
   _ledRightOn
     _displayBinary

 _Lo_ISR (ROOT)
   _ClearBuffer
   _GetString
   _MyusartRead
     _UART_Write
     _UART_Write_Text
       _UART_Write
   _strcpy
     _GetString (ARG)
   _strlen

 _Hi_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      7       7      5.5%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     41      89     70.6%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRllh        20      0       0      0.0%
BITBIGSFRlh         14      0       0      0.0%
BITBIGSFRlll         9      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      96      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Jan 15 21:27:06 2025

                           l47 0932                             l80 097A                             l74 096E  
                           l77 0982                             bsr 0FE0                            l107 08CE  
                          l171 0992                            l180 095C                            l174 0902  
                          l183 098C                            l168 0772                            l177 091A  
                          l195 0688                            _PR2 0FCB                            u980 06F6  
                          u981 06EE                            u998 06FA                            _dir 0017  
                          _str 0001                _TMR2_Initialize 0970                 ?_displayBinary 0080  
                          wreg 0FE8                           l1500 0928                           l1502 092A  
                         l1510 097C                           l1504 092C                           l1512 0970  
                         l1520 08BE                           l1506 092E                           l1530 08C8  
                         l1522 08C0                           l1514 08AE                           l1508 0930  
                         l1532 08CA                           l1524 08C2                           l1516 08B8  
                         l1540 0966                           l1534 08CC                           l1526 08C4  
                         l1518 08BC                           l1542 096A                           l1550 08FA  
                         l1528 08C6                           l1536 06E2                           l1560 0950  
                         l1552 0904                           l1544 08EA                           l1538 095E  
                         l1562 098A                           l1554 090C                           l1546 08F6  
                         l1634 06A0                           l1556 0918                           l1548 08F8  
                         l1580 0636                           l1572 0606                           l1494 091C  
                         l1558 094A                           l1590 0676                           l1582 0646  
                         l1574 060E                           l1496 0922                           l1592 0682  
                         l1584 0652                           l1576 0616                           l1498 0926  
                         l1586 0664                           l1578 0626                           l1588 0670  
                         l1596 0688                           _ADFM 7E07                           STR_1 0601  
                         STR_2 0603                           STR_3 0603                           STR_4 0603  
                         STR_5 0603                           STR_6 0603                           STR_7 0603  
                         u1000 0718                           _CREN 7D5C                           u1001 0710  
                         u1020 073C                           u1021 0734                           u1040 0762  
                         u1041 075A                           u1018 071C                           u1038 0740  
                         u1058 0766                           _LATA 0F89                           _RCIF 7CF5  
                         _main 0606                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf1 0FE7                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005A                           start 0420  
                 ___param_bank 0000        __end_of_UART_Write_Text 080A               ?_UART_Initialize 0031  
__end_of_OSCILLATOR_Initialize 0984                          ?_main 0031                          _T2CON 0FCA  
                        _IRCF0 7E9C                          _IRCF1 7E9D                          _IRCF2 7E9E  
                        i1l110 0936                          i1l113 0948                          i1l131 0990  
                        i1l124 0844                          i1l119 0808                          i1l223 03F0  
                        i1l128 087E                          i1l217 034C                          i1l228 0348  
                        i2l212 0986                          i1l920 07BE                          i1l930 0944  
                        i1l926 08AC                          i1l928 0936                          i1l990 080A  
                        i1l996 0812                          i1l998 081C                          _RCREG 0FAE  
                        _SPBRG 0FAF                          _TRISA 0F92                          _TXREG 0FAD  
                  ?_UART_Write 0031                          _state 0019                    _ClearBuffer 080A  
                        tablat 0FF5                          ttemp5 005B                          ttemp6 005E  
                        ttemp7 0062                          status 0FD8                          wtemp8 005B  
              __initialization 08D0                   __end_of_main 06E2        __end_of_TMR2_Initialize 097C  
                       ??_main 0085                ??_displayBinary 0082                  __activetblptr 0002  
               _postpostscaler 0015                         _ADCON1 0FC1                         _ADRESH 0FC4  
                       _ADRESL 0FC3                         i1l1000 0820                         i1l1002 083C  
                       i1l1310 0778                         i1l1312 0880                         i1l1400 0154  
                       i1l1314 0888                         i1l1402 0170                         i1l1260 07CC  
                       i1l1308 0774                         i1l1316 088A                         i1l1420 01E6  
                       i1l1404 0178                         i1l1412 0194                         i1l1262 07E2  
                       i1l1270 084A                         i1l1318 08A0                         i1l1422 01EE  
                       i1l1414 01A6                         i1l1430 020A                         i1l1406 017C  
                       i1l1264 07E6                         i1l1280 0878                         i1l1272 085C  
                       i1l1440 0264                         i1l1432 021C                         i1l1424 01F2  
                       i1l1416 01B8                         i1l1360 0046                         i1l1258 07C0  
                       i1l1450 0292                         i1l1442 0268                         i1l1434 022E  
                       i1l1418 01CA                         i1l1370 007E                         i1l1362 0054  
                       i1l1284 098E                         i1l1276 0868                         i1l1268 0846  
                       i1l1452 02A4                         i1l1436 0240                         i1l1380 00CC  
                       i1l1372 0090                         i1l1364 0062                         i1l1278 0874  
                       i1l1470 0324                         i1l1454 02C0                         i1l1438 025C  
                       i1l1382 00DE                         i1l1374 00A4                         i1l1366 0068  
                       i1l1480 035C                         i1l1472 032C                         i1l1456 02C8  
                       i1l1464 02E4                         i1l1448 0280                         i1l1384 00FA  
                       i1l1376 00A8                         i1l1368 006C                         i1l1482 0382  
                       i1l1474 0330                         i1l1466 02F6                         i1l1458 02CC  
                       i1l1386 0102                         i1l1378 00BA                         i1l1394 011E  
                       i1l1484 0396                         i1l1468 0308                         i1l1396 0130  
                       i1l1388 0106                         i1l1486 03BC                         i1l1478 035A  
                       i1l1398 0142                         i1l1488 03CE                         _TMR2IF 7CF1  
                       i1u1_20 0944                         i1u1_21 0940                         _Hi_ISR 0008  
                ?_initialState 0031                         _Lo_ISR 0018               ?_UART_Write_Text 0032  
                       _lenStr 001B                         clear_0 08D6                         isa$std 0001  
                       _strcpy 0774                         _strlen 0880                   __mediumconst 0000  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
            _SYSTEM_Initialize 095E                     __accesstop 0080        __end_of__initialization 08DC  
               ??_initialState 0080             ?_SYSTEM_Initialize 0031                  ___rparam_used 0001  
            __end_of_GetString 0992                 __pcstackCOMRAM 0031            ??_SYSTEM_Initialize 0080  
             ?_TMR2_Initialize 0031                  ??_MyusartRead 0036      __end_of_SYSTEM_Initialize 0970  
                      ?_Hi_ISR 0031                        ?_Lo_ISR 0031                        _CCP1CON 0FBD  
                   _ledLeftOff 098A                        ?_strcpy 0033                        ?_strlen 0031  
                   _ledRightOn 08EA                        i1u11_20 083C                        i1u11_21 0838  
                 ??_UART_Write 0031                        i1u51_20 0808                        i1u51_21 0804  
                      i1u60_20 085C                        i1u60_21 0858                        i1u61_20 07AC  
                      i1u61_27 07A2                        i1u62_20 07BE                        i1u70_20 00DE  
                      i1u62_21 07BA                        i1u70_21 00DA                        i1u63_20 08A0  
                      i1u71_20 00FA                        i1u63_21 089C                        i1u71_21 00F6  
                      i1u80_20 021C                        i1u72_20 0130                        i1u64_20 0054  
                      i1u80_21 0218                        i1u72_21 012C                        i1u64_21 0050  
                      i1u81_20 022E                        i1u73_20 0142                        i1u65_20 0062  
                      i1u81_21 022A                        i1u73_21 013E                        i1u65_21 005E  
                      i1u90_20 035A                        i1u82_20 0240                        i1u74_20 0154  
                      i1u66_20 007E                        i1u90_21 0356                        i1u82_21 023C  
                      i1u74_21 0150                        i1u66_21 007A                        i1u91_20 0382  
                      i1u83_20 025C                        i1u75_20 0170                        i1u67_20 0090  
                      i1u91_21 037E                        i1u83_21 0258                        i1u75_21 016C  
                      i1u67_21 008C                        i1u92_20 0396                        i1u84_20 0292  
                      i1u76_20 01A6                        i1u68_20 00BA                        i1u92_21 0392  
                      i1u84_21 028E                        i1u76_21 01A2                        i1u68_21 00B6  
                      i1u93_20 03A8                        i1u85_20 02A4                        i1u77_20 01B8  
                      i1u69_20 00CC                        i1u93_21 03A0                        i1u85_21 02A0  
                      i1u77_21 01B4                        i1u69_21 00C8                        i1u86_20 02C0  
                      i1u78_20 01CA                        i1u86_21 02BC                        i1u78_21 01C6  
                      i1u95_20 03CE                        i1u94_28 03AA                        i1u87_20 02F6  
                      i1u79_20 01E6                        i1u95_21 03CA                        i1u87_21 02F2  
                      i1u79_21 01E2                        i1u96_20 03E0                        i1u88_20 0308  
                      i1u96_21 03D8                        i1u88_21 0304                        i1u89_20 0324  
                      i1u89_21 0320                        i1u97_28 03E2                   ?_ClearBuffer 0031  
          __end_of_MyusartRead 0880              __end_of_ledLeftOn 095E                        __Hparam 0000  
                      __Lparam 0000             __end_of_UART_Write 094A                   __psmallconst 0600  
                      __pcinit 08D0                        __ramtop 0600                        __ptext0 0606  
                      __ptext1 08EA                        __ptext2 0904                        __ptext3 094A  
                      __ptext4 06E2                        __ptext5 098A                        __ptext6 0992  
                      __ptext7 095E                        __ptext8 08AE                        __ptext9 0970  
        _OSCILLATOR_Initialize 097C           __end_of_initialState 0994                 __pintcode_body 0984  
         end_of_initialization 08DC                  __Lmediumconst 0000                        int_func 0984  
                    _RCSTAbits 0FAB                        postinc0 0FEE                        strcpy@d 0038  
                      strlen@a 0033                        strlen@s 0031                    ?_ledLeftOff 0080  
               UART_Write@data 0031                    ?_ledRightOn 0083          __end_of_displayBinary 0774  
                    _TRISAbits 0F92                      _TRISCbits 0F94                    _MyusartRead 0846  
                ??_ledRightOff 0085                      _TXSTAbits 0FAC                 __end_of_Hi_ISR 098A  
               __end_of_Lo_ISR 0420   __end_of_INTERRUPT_Initialize 0934                      _GetString 098E  
                  _BAUDCONbits 0FB8         ?_OSCILLATOR_Initialize 0031                 __end_of_strcpy 07C0  
               __end_of_strlen 08AE            start_initialization 08D0                   ClearBuffer@i 0031  
            ??_UART_Initialize 0080                       ??_Hi_ISR 0031                       ??_Lo_ISR 0039  
          __end_of_ledRightOff 091C                     ?_GetString 0031                       ??_strcpy 0036  
                     ??_strlen 0033               displayBinary@num 0080                    __pbssCOMRAM 0001  
                __pcstackBANK0 0080                   _initialState 0992                  Lo_ISR@command 0046  
                    __pintcode 0008                      _ledLeftOn 094A                    __pintcodelo 0018  
                  __smallconst 0600              ??_UART_Write_Text 0033           _INTERRUPT_Initialize 091C  
                  _ledRightOff 0904                       _LATAbits 0F89                       _IPR1bits 0F9F  
                     _PIE1bits 0F9D                       _PIR1bits 0F9E                       _RCONbits 0FD0  
                   ?_ledLeftOn 0083                    ??_GetString 0033                   ??_ledLeftOff 0082  
                   _ADCON0bits 0FC2                     _ADCON2bits 0FC0                   ??_ledRightOn 0085  
      MyusartRead@receivedData 0036                   ?_MyusartRead 0031          ?_INTERRUPT_Initialize 0031  
            ??_TMR2_Initialize 0080             __end_of_ledLeftOff 098E                       __Hrparam 0000  
           __end_of_ledRightOn 0904                       __Lrparam 0000        ??_OSCILLATOR_Initialize 0080  
              _UART_Initialize 08AE                       __ptext10 097C                       __ptext11 091C  
                     __ptext13 0880                       __ptext14 0774                       __ptext15 0846  
                     __ptext16 07C0                       __ptext17 0934                       __ptext18 098E  
                     __ptext19 080A                     strcpy@dest 0033            UART_Write_Text@text 0032  
                ledLeftOff@num 0080                       isa$xinst 0000                       int$flags 005A  
                  ??_ledLeftOn 0085                       _mystring 001D                     _INTCONbits 0FF2  
       ??_INTERRUPT_Initialize 0080                  ??_ClearBuffer 0031                       intlevel1 0000  
                     intlevel2 0000                      strcpy@src 0034                   ledLeftOn@num 0083  
      __end_of_UART_Initialize 08D0                _UART_Write_Text 07C0                  _displayBinary 06E2  
                   _UART_Write 0934               UART_Write_Text@i 0034                   ?_ledRightOff 0083  
          __end_of_ClearBuffer 0846                 ledRightOff@num 0083                  ledRightOn@num 0083  
