

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Jan 14 22:07:59 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Generated 25/07/2024 GMT
    40                           ; 
    41                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4520 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   000FE0                     bsr             equ	4064
    74   000FE9                     fsr0            equ	4073
    75   000FEA                     fsr0h           equ	4074
    76   000FE9                     fsr0l           equ	4073
    77   000FE1                     fsr1            equ	4065
    78   000FE2                     fsr1h           equ	4066
    79   000FE1                     fsr1l           equ	4065
    80   000FD9                     fsr2            equ	4057
    81   000FDA                     fsr2h           equ	4058
    82   000FD9                     fsr2l           equ	4057
    83   000FEF                     indf0           equ	4079
    84   000FE7                     indf1           equ	4071
    85   000FDF                     indf2           equ	4063
    86   000FF2                     intcon          equ	4082
    87   000000                     nvmcon          equ	0
    88   000FF9                     pcl             equ	4089
    89   000FFA                     pclath          equ	4090
    90   000FFB                     pclatu          equ	4091
    91   000FEB                     plusw0          equ	4075
    92   000FE3                     plusw1          equ	4067
    93   000FDB                     plusw2          equ	4059
    94   000FED                     postdec0        equ	4077
    95   000FE5                     postdec1        equ	4069
    96   000FDD                     postdec2        equ	4061
    97   000FEE                     postinc0        equ	4078
    98   000FE6                     postinc1        equ	4070
    99   000FDE                     postinc2        equ	4062
   100   000FEC                     preinc0         equ	4076
   101   000FE4                     preinc1         equ	4068
   102   000FDC                     preinc2         equ	4060
   103   000FF3                     prod            equ	4083
   104   000FF4                     prodh           equ	4084
   105   000FF3                     prodl           equ	4083
   106   000FD8                     status          equ	4056
   107   000FF5                     tablat          equ	4085
   108   000FF6                     tblptr          equ	4086
   109   000FF7                     tblptrh         equ	4087
   110   000FF6                     tblptrl         equ	4086
   111   000FF8                     tblptru         equ	4088
   112   000FFD                     tosl            equ	4093
   113   000FE8                     wreg            equ	4072
   114   000F80                     PORTA           equ	3968	;# 
   115   000F81                     PORTB           equ	3969	;# 
   116   000F82                     PORTC           equ	3970	;# 
   117   000F83                     PORTD           equ	3971	;# 
   118   000F84                     PORTE           equ	3972	;# 
   119   000F89                     LATA            equ	3977	;# 
   120   000F8A                     LATB            equ	3978	;# 
   121   000F8B                     LATC            equ	3979	;# 
   122   000F8C                     LATD            equ	3980	;# 
   123   000F8D                     LATE            equ	3981	;# 
   124   000F92                     TRISA           equ	3986	;# 
   125   000F92                     DDRA            equ	3986	;# 
   126   000F93                     TRISB           equ	3987	;# 
   127   000F93                     DDRB            equ	3987	;# 
   128   000F94                     TRISC           equ	3988	;# 
   129   000F94                     DDRC            equ	3988	;# 
   130   000F95                     TRISD           equ	3989	;# 
   131   000F95                     DDRD            equ	3989	;# 
   132   000F96                     TRISE           equ	3990	;# 
   133   000F96                     DDRE            equ	3990	;# 
   134   000F9B                     OSCTUNE         equ	3995	;# 
   135   000F9D                     PIE1            equ	3997	;# 
   136   000F9E                     PIR1            equ	3998	;# 
   137   000F9F                     IPR1            equ	3999	;# 
   138   000FA0                     PIE2            equ	4000	;# 
   139   000FA1                     PIR2            equ	4001	;# 
   140   000FA2                     IPR2            equ	4002	;# 
   141   000FA6                     EECON1          equ	4006	;# 
   142   000FA7                     EECON2          equ	4007	;# 
   143   000FA8                     EEDATA          equ	4008	;# 
   144   000FA9                     EEADR           equ	4009	;# 
   145   000FAB                     RCSTA           equ	4011	;# 
   146   000FAB                     RCSTA1          equ	4011	;# 
   147   000FAC                     TXSTA           equ	4012	;# 
   148   000FAC                     TXSTA1          equ	4012	;# 
   149   000FAD                     TXREG           equ	4013	;# 
   150   000FAD                     TXREG1          equ	4013	;# 
   151   000FAE                     RCREG           equ	4014	;# 
   152   000FAE                     RCREG1          equ	4014	;# 
   153   000FAF                     SPBRG           equ	4015	;# 
   154   000FAF                     SPBRG1          equ	4015	;# 
   155   000FB0                     SPBRGH          equ	4016	;# 
   156   000FB1                     T3CON           equ	4017	;# 
   157   000FB2                     TMR3            equ	4018	;# 
   158   000FB2                     TMR3L           equ	4018	;# 
   159   000FB3                     TMR3H           equ	4019	;# 
   160   000FB4                     CMCON           equ	4020	;# 
   161   000FB5                     CVRCON          equ	4021	;# 
   162   000FB6                     ECCP1AS         equ	4022	;# 
   163   000FB6                     ECCPAS          equ	4022	;# 
   164   000FB7                     PWM1CON         equ	4023	;# 
   165   000FB7                     ECCP1DEL        equ	4023	;# 
   166   000FB8                     BAUDCON         equ	4024	;# 
   167   000FB8                     BAUDCTL         equ	4024	;# 
   168   000FBA                     CCP2CON         equ	4026	;# 
   169   000FBB                     CCPR2           equ	4027	;# 
   170   000FBB                     CCPR2L          equ	4027	;# 
   171   000FBC                     CCPR2H          equ	4028	;# 
   172   000FBD                     CCP1CON         equ	4029	;# 
   173   000FBE                     CCPR1           equ	4030	;# 
   174   000FBE                     CCPR1L          equ	4030	;# 
   175   000FBF                     CCPR1H          equ	4031	;# 
   176   000FC0                     ADCON2          equ	4032	;# 
   177   000FC1                     ADCON1          equ	4033	;# 
   178   000FC2                     ADCON0          equ	4034	;# 
   179   000FC3                     ADRES           equ	4035	;# 
   180   000FC3                     ADRESL          equ	4035	;# 
   181   000FC4                     ADRESH          equ	4036	;# 
   182   000FC5                     SSPCON2         equ	4037	;# 
   183   000FC6                     SSPCON1         equ	4038	;# 
   184   000FC7                     SSPSTAT         equ	4039	;# 
   185   000FC8                     SSPADD          equ	4040	;# 
   186   000FC9                     SSPBUF          equ	4041	;# 
   187   000FCA                     T2CON           equ	4042	;# 
   188   000FCB                     PR2             equ	4043	;# 
   189   000FCB                     MEMCON          equ	4043	;# 
   190   000FCC                     TMR2            equ	4044	;# 
   191   000FCD                     T1CON           equ	4045	;# 
   192   000FCE                     TMR1            equ	4046	;# 
   193   000FCE                     TMR1L           equ	4046	;# 
   194   000FCF                     TMR1H           equ	4047	;# 
   195   000FD0                     RCON            equ	4048	;# 
   196   000FD1                     WDTCON          equ	4049	;# 
   197   000FD2                     HLVDCON         equ	4050	;# 
   198   000FD2                     LVDCON          equ	4050	;# 
   199   000FD3                     OSCCON          equ	4051	;# 
   200   000FD5                     T0CON           equ	4053	;# 
   201   000FD6                     TMR0            equ	4054	;# 
   202   000FD6                     TMR0L           equ	4054	;# 
   203   000FD7                     TMR0H           equ	4055	;# 
   204   000FD8                     STATUS          equ	4056	;# 
   205   000FD9                     FSR2            equ	4057	;# 
   206   000FD9                     FSR2L           equ	4057	;# 
   207   000FDA                     FSR2H           equ	4058	;# 
   208   000FDB                     PLUSW2          equ	4059	;# 
   209   000FDC                     PREINC2         equ	4060	;# 
   210   000FDD                     POSTDEC2        equ	4061	;# 
   211   000FDE                     POSTINC2        equ	4062	;# 
   212   000FDF                     INDF2           equ	4063	;# 
   213   000FE0                     BSR             equ	4064	;# 
   214   000FE1                     FSR1            equ	4065	;# 
   215   000FE1                     FSR1L           equ	4065	;# 
   216   000FE2                     FSR1H           equ	4066	;# 
   217   000FE3                     PLUSW1          equ	4067	;# 
   218   000FE4                     PREINC1         equ	4068	;# 
   219   000FE5                     POSTDEC1        equ	4069	;# 
   220   000FE6                     POSTINC1        equ	4070	;# 
   221   000FE7                     INDF1           equ	4071	;# 
   222   000FE8                     WREG            equ	4072	;# 
   223   000FE9                     FSR0            equ	4073	;# 
   224   000FE9                     FSR0L           equ	4073	;# 
   225   000FEA                     FSR0H           equ	4074	;# 
   226   000FEB                     PLUSW0          equ	4075	;# 
   227   000FEC                     PREINC0         equ	4076	;# 
   228   000FED                     POSTDEC0        equ	4077	;# 
   229   000FEE                     POSTINC0        equ	4078	;# 
   230   000FEF                     INDF0           equ	4079	;# 
   231   000FF0                     INTCON3         equ	4080	;# 
   232   000FF1                     INTCON2         equ	4081	;# 
   233   000FF2                     INTCON          equ	4082	;# 
   234   000FF3                     PROD            equ	4083	;# 
   235   000FF3                     PRODL           equ	4083	;# 
   236   000FF4                     PRODH           equ	4084	;# 
   237   000FF5                     TABLAT          equ	4085	;# 
   238   000FF6                     TBLPTR          equ	4086	;# 
   239   000FF6                     TBLPTRL         equ	4086	;# 
   240   000FF7                     TBLPTRH         equ	4087	;# 
   241   000FF8                     TBLPTRU         equ	4088	;# 
   242   000FF9                     PCLAT           equ	4089	;# 
   243   000FF9                     PC              equ	4089	;# 
   244   000FF9                     PCL             equ	4089	;# 
   245   000FFA                     PCLATH          equ	4090	;# 
   246   000FFB                     PCLATU          equ	4091	;# 
   247   000FFC                     STKPTR          equ	4092	;# 
   248   000FFD                     TOS             equ	4093	;# 
   249   000FFD                     TOSL            equ	4093	;# 
   250   000FFE                     TOSH            equ	4094	;# 
   251   000FFF                     TOSU            equ	4095	;# 
   252   000F80                     PORTA           equ	3968	;# 
   253   000F81                     PORTB           equ	3969	;# 
   254   000F82                     PORTC           equ	3970	;# 
   255   000F83                     PORTD           equ	3971	;# 
   256   000F84                     PORTE           equ	3972	;# 
   257   000F89                     LATA            equ	3977	;# 
   258   000F8A                     LATB            equ	3978	;# 
   259   000F8B                     LATC            equ	3979	;# 
   260   000F8C                     LATD            equ	3980	;# 
   261   000F8D                     LATE            equ	3981	;# 
   262   000F92                     TRISA           equ	3986	;# 
   263   000F92                     DDRA            equ	3986	;# 
   264   000F93                     TRISB           equ	3987	;# 
   265   000F93                     DDRB            equ	3987	;# 
   266   000F94                     TRISC           equ	3988	;# 
   267   000F94                     DDRC            equ	3988	;# 
   268   000F95                     TRISD           equ	3989	;# 
   269   000F95                     DDRD            equ	3989	;# 
   270   000F96                     TRISE           equ	3990	;# 
   271   000F96                     DDRE            equ	3990	;# 
   272   000F9B                     OSCTUNE         equ	3995	;# 
   273   000F9D                     PIE1            equ	3997	;# 
   274   000F9E                     PIR1            equ	3998	;# 
   275   000F9F                     IPR1            equ	3999	;# 
   276   000FA0                     PIE2            equ	4000	;# 
   277   000FA1                     PIR2            equ	4001	;# 
   278   000FA2                     IPR2            equ	4002	;# 
   279   000FA6                     EECON1          equ	4006	;# 
   280   000FA7                     EECON2          equ	4007	;# 
   281   000FA8                     EEDATA          equ	4008	;# 
   282   000FA9                     EEADR           equ	4009	;# 
   283   000FAB                     RCSTA           equ	4011	;# 
   284   000FAB                     RCSTA1          equ	4011	;# 
   285   000FAC                     TXSTA           equ	4012	;# 
   286   000FAC                     TXSTA1          equ	4012	;# 
   287   000FAD                     TXREG           equ	4013	;# 
   288   000FAD                     TXREG1          equ	4013	;# 
   289   000FAE                     RCREG           equ	4014	;# 
   290   000FAE                     RCREG1          equ	4014	;# 
   291   000FAF                     SPBRG           equ	4015	;# 
   292   000FAF                     SPBRG1          equ	4015	;# 
   293   000FB0                     SPBRGH          equ	4016	;# 
   294   000FB1                     T3CON           equ	4017	;# 
   295   000FB2                     TMR3            equ	4018	;# 
   296   000FB2                     TMR3L           equ	4018	;# 
   297   000FB3                     TMR3H           equ	4019	;# 
   298   000FB4                     CMCON           equ	4020	;# 
   299   000FB5                     CVRCON          equ	4021	;# 
   300   000FB6                     ECCP1AS         equ	4022	;# 
   301   000FB6                     ECCPAS          equ	4022	;# 
   302   000FB7                     PWM1CON         equ	4023	;# 
   303   000FB7                     ECCP1DEL        equ	4023	;# 
   304   000FB8                     BAUDCON         equ	4024	;# 
   305   000FB8                     BAUDCTL         equ	4024	;# 
   306   000FBA                     CCP2CON         equ	4026	;# 
   307   000FBB                     CCPR2           equ	4027	;# 
   308   000FBB                     CCPR2L          equ	4027	;# 
   309   000FBC                     CCPR2H          equ	4028	;# 
   310   000FBD                     CCP1CON         equ	4029	;# 
   311   000FBE                     CCPR1           equ	4030	;# 
   312   000FBE                     CCPR1L          equ	4030	;# 
   313   000FBF                     CCPR1H          equ	4031	;# 
   314   000FC0                     ADCON2          equ	4032	;# 
   315   000FC1                     ADCON1          equ	4033	;# 
   316   000FC2                     ADCON0          equ	4034	;# 
   317   000FC3                     ADRES           equ	4035	;# 
   318   000FC3                     ADRESL          equ	4035	;# 
   319   000FC4                     ADRESH          equ	4036	;# 
   320   000FC5                     SSPCON2         equ	4037	;# 
   321   000FC6                     SSPCON1         equ	4038	;# 
   322   000FC7                     SSPSTAT         equ	4039	;# 
   323   000FC8                     SSPADD          equ	4040	;# 
   324   000FC9                     SSPBUF          equ	4041	;# 
   325   000FCA                     T2CON           equ	4042	;# 
   326   000FCB                     PR2             equ	4043	;# 
   327   000FCB                     MEMCON          equ	4043	;# 
   328   000FCC                     TMR2            equ	4044	;# 
   329   000FCD                     T1CON           equ	4045	;# 
   330   000FCE                     TMR1            equ	4046	;# 
   331   000FCE                     TMR1L           equ	4046	;# 
   332   000FCF                     TMR1H           equ	4047	;# 
   333   000FD0                     RCON            equ	4048	;# 
   334   000FD1                     WDTCON          equ	4049	;# 
   335   000FD2                     HLVDCON         equ	4050	;# 
   336   000FD2                     LVDCON          equ	4050	;# 
   337   000FD3                     OSCCON          equ	4051	;# 
   338   000FD5                     T0CON           equ	4053	;# 
   339   000FD6                     TMR0            equ	4054	;# 
   340   000FD6                     TMR0L           equ	4054	;# 
   341   000FD7                     TMR0H           equ	4055	;# 
   342   000FD8                     STATUS          equ	4056	;# 
   343   000FD9                     FSR2            equ	4057	;# 
   344   000FD9                     FSR2L           equ	4057	;# 
   345   000FDA                     FSR2H           equ	4058	;# 
   346   000FDB                     PLUSW2          equ	4059	;# 
   347   000FDC                     PREINC2         equ	4060	;# 
   348   000FDD                     POSTDEC2        equ	4061	;# 
   349   000FDE                     POSTINC2        equ	4062	;# 
   350   000FDF                     INDF2           equ	4063	;# 
   351   000FE0                     BSR             equ	4064	;# 
   352   000FE1                     FSR1            equ	4065	;# 
   353   000FE1                     FSR1L           equ	4065	;# 
   354   000FE2                     FSR1H           equ	4066	;# 
   355   000FE3                     PLUSW1          equ	4067	;# 
   356   000FE4                     PREINC1         equ	4068	;# 
   357   000FE5                     POSTDEC1        equ	4069	;# 
   358   000FE6                     POSTINC1        equ	4070	;# 
   359   000FE7                     INDF1           equ	4071	;# 
   360   000FE8                     WREG            equ	4072	;# 
   361   000FE9                     FSR0            equ	4073	;# 
   362   000FE9                     FSR0L           equ	4073	;# 
   363   000FEA                     FSR0H           equ	4074	;# 
   364   000FEB                     PLUSW0          equ	4075	;# 
   365   000FEC                     PREINC0         equ	4076	;# 
   366   000FED                     POSTDEC0        equ	4077	;# 
   367   000FEE                     POSTINC0        equ	4078	;# 
   368   000FEF                     INDF0           equ	4079	;# 
   369   000FF0                     INTCON3         equ	4080	;# 
   370   000FF1                     INTCON2         equ	4081	;# 
   371   000FF2                     INTCON          equ	4082	;# 
   372   000FF3                     PROD            equ	4083	;# 
   373   000FF3                     PRODL           equ	4083	;# 
   374   000FF4                     PRODH           equ	4084	;# 
   375   000FF5                     TABLAT          equ	4085	;# 
   376   000FF6                     TBLPTR          equ	4086	;# 
   377   000FF6                     TBLPTRL         equ	4086	;# 
   378   000FF7                     TBLPTRH         equ	4087	;# 
   379   000FF8                     TBLPTRU         equ	4088	;# 
   380   000FF9                     PCLAT           equ	4089	;# 
   381   000FF9                     PC              equ	4089	;# 
   382   000FF9                     PCL             equ	4089	;# 
   383   000FFA                     PCLATH          equ	4090	;# 
   384   000FFB                     PCLATU          equ	4091	;# 
   385   000FFC                     STKPTR          equ	4092	;# 
   386   000FFD                     TOS             equ	4093	;# 
   387   000FFD                     TOSL            equ	4093	;# 
   388   000FFE                     TOSH            equ	4094	;# 
   389   000FFF                     TOSU            equ	4095	;# 
   390   000F80                     PORTA           equ	3968	;# 
   391   000F81                     PORTB           equ	3969	;# 
   392   000F82                     PORTC           equ	3970	;# 
   393   000F83                     PORTD           equ	3971	;# 
   394   000F84                     PORTE           equ	3972	;# 
   395   000F89                     LATA            equ	3977	;# 
   396   000F8A                     LATB            equ	3978	;# 
   397   000F8B                     LATC            equ	3979	;# 
   398   000F8C                     LATD            equ	3980	;# 
   399   000F8D                     LATE            equ	3981	;# 
   400   000F92                     TRISA           equ	3986	;# 
   401   000F92                     DDRA            equ	3986	;# 
   402   000F93                     TRISB           equ	3987	;# 
   403   000F93                     DDRB            equ	3987	;# 
   404   000F94                     TRISC           equ	3988	;# 
   405   000F94                     DDRC            equ	3988	;# 
   406   000F95                     TRISD           equ	3989	;# 
   407   000F95                     DDRD            equ	3989	;# 
   408   000F96                     TRISE           equ	3990	;# 
   409   000F96                     DDRE            equ	3990	;# 
   410   000F9B                     OSCTUNE         equ	3995	;# 
   411   000F9D                     PIE1            equ	3997	;# 
   412   000F9E                     PIR1            equ	3998	;# 
   413   000F9F                     IPR1            equ	3999	;# 
   414   000FA0                     PIE2            equ	4000	;# 
   415   000FA1                     PIR2            equ	4001	;# 
   416   000FA2                     IPR2            equ	4002	;# 
   417   000FA6                     EECON1          equ	4006	;# 
   418   000FA7                     EECON2          equ	4007	;# 
   419   000FA8                     EEDATA          equ	4008	;# 
   420   000FA9                     EEADR           equ	4009	;# 
   421   000FAB                     RCSTA           equ	4011	;# 
   422   000FAB                     RCSTA1          equ	4011	;# 
   423   000FAC                     TXSTA           equ	4012	;# 
   424   000FAC                     TXSTA1          equ	4012	;# 
   425   000FAD                     TXREG           equ	4013	;# 
   426   000FAD                     TXREG1          equ	4013	;# 
   427   000FAE                     RCREG           equ	4014	;# 
   428   000FAE                     RCREG1          equ	4014	;# 
   429   000FAF                     SPBRG           equ	4015	;# 
   430   000FAF                     SPBRG1          equ	4015	;# 
   431   000FB0                     SPBRGH          equ	4016	;# 
   432   000FB1                     T3CON           equ	4017	;# 
   433   000FB2                     TMR3            equ	4018	;# 
   434   000FB2                     TMR3L           equ	4018	;# 
   435   000FB3                     TMR3H           equ	4019	;# 
   436   000FB4                     CMCON           equ	4020	;# 
   437   000FB5                     CVRCON          equ	4021	;# 
   438   000FB6                     ECCP1AS         equ	4022	;# 
   439   000FB6                     ECCPAS          equ	4022	;# 
   440   000FB7                     PWM1CON         equ	4023	;# 
   441   000FB7                     ECCP1DEL        equ	4023	;# 
   442   000FB8                     BAUDCON         equ	4024	;# 
   443   000FB8                     BAUDCTL         equ	4024	;# 
   444   000FBA                     CCP2CON         equ	4026	;# 
   445   000FBB                     CCPR2           equ	4027	;# 
   446   000FBB                     CCPR2L          equ	4027	;# 
   447   000FBC                     CCPR2H          equ	4028	;# 
   448   000FBD                     CCP1CON         equ	4029	;# 
   449   000FBE                     CCPR1           equ	4030	;# 
   450   000FBE                     CCPR1L          equ	4030	;# 
   451   000FBF                     CCPR1H          equ	4031	;# 
   452   000FC0                     ADCON2          equ	4032	;# 
   453   000FC1                     ADCON1          equ	4033	;# 
   454   000FC2                     ADCON0          equ	4034	;# 
   455   000FC3                     ADRES           equ	4035	;# 
   456   000FC3                     ADRESL          equ	4035	;# 
   457   000FC4                     ADRESH          equ	4036	;# 
   458   000FC5                     SSPCON2         equ	4037	;# 
   459   000FC6                     SSPCON1         equ	4038	;# 
   460   000FC7                     SSPSTAT         equ	4039	;# 
   461   000FC8                     SSPADD          equ	4040	;# 
   462   000FC9                     SSPBUF          equ	4041	;# 
   463   000FCA                     T2CON           equ	4042	;# 
   464   000FCB                     PR2             equ	4043	;# 
   465   000FCB                     MEMCON          equ	4043	;# 
   466   000FCC                     TMR2            equ	4044	;# 
   467   000FCD                     T1CON           equ	4045	;# 
   468   000FCE                     TMR1            equ	4046	;# 
   469   000FCE                     TMR1L           equ	4046	;# 
   470   000FCF                     TMR1H           equ	4047	;# 
   471   000FD0                     RCON            equ	4048	;# 
   472   000FD1                     WDTCON          equ	4049	;# 
   473   000FD2                     HLVDCON         equ	4050	;# 
   474   000FD2                     LVDCON          equ	4050	;# 
   475   000FD3                     OSCCON          equ	4051	;# 
   476   000FD5                     T0CON           equ	4053	;# 
   477   000FD6                     TMR0            equ	4054	;# 
   478   000FD6                     TMR0L           equ	4054	;# 
   479   000FD7                     TMR0H           equ	4055	;# 
   480   000FD8                     STATUS          equ	4056	;# 
   481   000FD9                     FSR2            equ	4057	;# 
   482   000FD9                     FSR2L           equ	4057	;# 
   483   000FDA                     FSR2H           equ	4058	;# 
   484   000FDB                     PLUSW2          equ	4059	;# 
   485   000FDC                     PREINC2         equ	4060	;# 
   486   000FDD                     POSTDEC2        equ	4061	;# 
   487   000FDE                     POSTINC2        equ	4062	;# 
   488   000FDF                     INDF2           equ	4063	;# 
   489   000FE0                     BSR             equ	4064	;# 
   490   000FE1                     FSR1            equ	4065	;# 
   491   000FE1                     FSR1L           equ	4065	;# 
   492   000FE2                     FSR1H           equ	4066	;# 
   493   000FE3                     PLUSW1          equ	4067	;# 
   494   000FE4                     PREINC1         equ	4068	;# 
   495   000FE5                     POSTDEC1        equ	4069	;# 
   496   000FE6                     POSTINC1        equ	4070	;# 
   497   000FE7                     INDF1           equ	4071	;# 
   498   000FE8                     WREG            equ	4072	;# 
   499   000FE9                     FSR0            equ	4073	;# 
   500   000FE9                     FSR0L           equ	4073	;# 
   501   000FEA                     FSR0H           equ	4074	;# 
   502   000FEB                     PLUSW0          equ	4075	;# 
   503   000FEC                     PREINC0         equ	4076	;# 
   504   000FED                     POSTDEC0        equ	4077	;# 
   505   000FEE                     POSTINC0        equ	4078	;# 
   506   000FEF                     INDF0           equ	4079	;# 
   507   000FF0                     INTCON3         equ	4080	;# 
   508   000FF1                     INTCON2         equ	4081	;# 
   509   000FF2                     INTCON          equ	4082	;# 
   510   000FF3                     PROD            equ	4083	;# 
   511   000FF3                     PRODL           equ	4083	;# 
   512   000FF4                     PRODH           equ	4084	;# 
   513   000FF5                     TABLAT          equ	4085	;# 
   514   000FF6                     TBLPTR          equ	4086	;# 
   515   000FF6                     TBLPTRL         equ	4086	;# 
   516   000FF7                     TBLPTRH         equ	4087	;# 
   517   000FF8                     TBLPTRU         equ	4088	;# 
   518   000FF9                     PCLAT           equ	4089	;# 
   519   000FF9                     PC              equ	4089	;# 
   520   000FF9                     PCL             equ	4089	;# 
   521   000FFA                     PCLATH          equ	4090	;# 
   522   000FFB                     PCLATU          equ	4091	;# 
   523   000FFC                     STKPTR          equ	4092	;# 
   524   000FFD                     TOS             equ	4093	;# 
   525   000FFD                     TOSL            equ	4093	;# 
   526   000FFE                     TOSH            equ	4094	;# 
   527   000FFF                     TOSU            equ	4095	;# 
   528   000F80                     PORTA           equ	3968	;# 
   529   000F81                     PORTB           equ	3969	;# 
   530   000F82                     PORTC           equ	3970	;# 
   531   000F83                     PORTD           equ	3971	;# 
   532   000F84                     PORTE           equ	3972	;# 
   533   000F89                     LATA            equ	3977	;# 
   534   000F8A                     LATB            equ	3978	;# 
   535   000F8B                     LATC            equ	3979	;# 
   536   000F8C                     LATD            equ	3980	;# 
   537   000F8D                     LATE            equ	3981	;# 
   538   000F92                     TRISA           equ	3986	;# 
   539   000F92                     DDRA            equ	3986	;# 
   540   000F93                     TRISB           equ	3987	;# 
   541   000F93                     DDRB            equ	3987	;# 
   542   000F94                     TRISC           equ	3988	;# 
   543   000F94                     DDRC            equ	3988	;# 
   544   000F95                     TRISD           equ	3989	;# 
   545   000F95                     DDRD            equ	3989	;# 
   546   000F96                     TRISE           equ	3990	;# 
   547   000F96                     DDRE            equ	3990	;# 
   548   000F9B                     OSCTUNE         equ	3995	;# 
   549   000F9D                     PIE1            equ	3997	;# 
   550   000F9E                     PIR1            equ	3998	;# 
   551   000F9F                     IPR1            equ	3999	;# 
   552   000FA0                     PIE2            equ	4000	;# 
   553   000FA1                     PIR2            equ	4001	;# 
   554   000FA2                     IPR2            equ	4002	;# 
   555   000FA6                     EECON1          equ	4006	;# 
   556   000FA7                     EECON2          equ	4007	;# 
   557   000FA8                     EEDATA          equ	4008	;# 
   558   000FA9                     EEADR           equ	4009	;# 
   559   000FAB                     RCSTA           equ	4011	;# 
   560   000FAB                     RCSTA1          equ	4011	;# 
   561   000FAC                     TXSTA           equ	4012	;# 
   562   000FAC                     TXSTA1          equ	4012	;# 
   563   000FAD                     TXREG           equ	4013	;# 
   564   000FAD                     TXREG1          equ	4013	;# 
   565   000FAE                     RCREG           equ	4014	;# 
   566   000FAE                     RCREG1          equ	4014	;# 
   567   000FAF                     SPBRG           equ	4015	;# 
   568   000FAF                     SPBRG1          equ	4015	;# 
   569   000FB0                     SPBRGH          equ	4016	;# 
   570   000FB1                     T3CON           equ	4017	;# 
   571   000FB2                     TMR3            equ	4018	;# 
   572   000FB2                     TMR3L           equ	4018	;# 
   573   000FB3                     TMR3H           equ	4019	;# 
   574   000FB4                     CMCON           equ	4020	;# 
   575   000FB5                     CVRCON          equ	4021	;# 
   576   000FB6                     ECCP1AS         equ	4022	;# 
   577   000FB6                     ECCPAS          equ	4022	;# 
   578   000FB7                     PWM1CON         equ	4023	;# 
   579   000FB7                     ECCP1DEL        equ	4023	;# 
   580   000FB8                     BAUDCON         equ	4024	;# 
   581   000FB8                     BAUDCTL         equ	4024	;# 
   582   000FBA                     CCP2CON         equ	4026	;# 
   583   000FBB                     CCPR2           equ	4027	;# 
   584   000FBB                     CCPR2L          equ	4027	;# 
   585   000FBC                     CCPR2H          equ	4028	;# 
   586   000FBD                     CCP1CON         equ	4029	;# 
   587   000FBE                     CCPR1           equ	4030	;# 
   588   000FBE                     CCPR1L          equ	4030	;# 
   589   000FBF                     CCPR1H          equ	4031	;# 
   590   000FC0                     ADCON2          equ	4032	;# 
   591   000FC1                     ADCON1          equ	4033	;# 
   592   000FC2                     ADCON0          equ	4034	;# 
   593   000FC3                     ADRES           equ	4035	;# 
   594   000FC3                     ADRESL          equ	4035	;# 
   595   000FC4                     ADRESH          equ	4036	;# 
   596   000FC5                     SSPCON2         equ	4037	;# 
   597   000FC6                     SSPCON1         equ	4038	;# 
   598   000FC7                     SSPSTAT         equ	4039	;# 
   599   000FC8                     SSPADD          equ	4040	;# 
   600   000FC9                     SSPBUF          equ	4041	;# 
   601   000FCA                     T2CON           equ	4042	;# 
   602   000FCB                     PR2             equ	4043	;# 
   603   000FCB                     MEMCON          equ	4043	;# 
   604   000FCC                     TMR2            equ	4044	;# 
   605   000FCD                     T1CON           equ	4045	;# 
   606   000FCE                     TMR1            equ	4046	;# 
   607   000FCE                     TMR1L           equ	4046	;# 
   608   000FCF                     TMR1H           equ	4047	;# 
   609   000FD0                     RCON            equ	4048	;# 
   610   000FD1                     WDTCON          equ	4049	;# 
   611   000FD2                     HLVDCON         equ	4050	;# 
   612   000FD2                     LVDCON          equ	4050	;# 
   613   000FD3                     OSCCON          equ	4051	;# 
   614   000FD5                     T0CON           equ	4053	;# 
   615   000FD6                     TMR0            equ	4054	;# 
   616   000FD6                     TMR0L           equ	4054	;# 
   617   000FD7                     TMR0H           equ	4055	;# 
   618   000FD8                     STATUS          equ	4056	;# 
   619   000FD9                     FSR2            equ	4057	;# 
   620   000FD9                     FSR2L           equ	4057	;# 
   621   000FDA                     FSR2H           equ	4058	;# 
   622   000FDB                     PLUSW2          equ	4059	;# 
   623   000FDC                     PREINC2         equ	4060	;# 
   624   000FDD                     POSTDEC2        equ	4061	;# 
   625   000FDE                     POSTINC2        equ	4062	;# 
   626   000FDF                     INDF2           equ	4063	;# 
   627   000FE0                     BSR             equ	4064	;# 
   628   000FE1                     FSR1            equ	4065	;# 
   629   000FE1                     FSR1L           equ	4065	;# 
   630   000FE2                     FSR1H           equ	4066	;# 
   631   000FE3                     PLUSW1          equ	4067	;# 
   632   000FE4                     PREINC1         equ	4068	;# 
   633   000FE5                     POSTDEC1        equ	4069	;# 
   634   000FE6                     POSTINC1        equ	4070	;# 
   635   000FE7                     INDF1           equ	4071	;# 
   636   000FE8                     WREG            equ	4072	;# 
   637   000FE9                     FSR0            equ	4073	;# 
   638   000FE9                     FSR0L           equ	4073	;# 
   639   000FEA                     FSR0H           equ	4074	;# 
   640   000FEB                     PLUSW0          equ	4075	;# 
   641   000FEC                     PREINC0         equ	4076	;# 
   642   000FED                     POSTDEC0        equ	4077	;# 
   643   000FEE                     POSTINC0        equ	4078	;# 
   644   000FEF                     INDF0           equ	4079	;# 
   645   000FF0                     INTCON3         equ	4080	;# 
   646   000FF1                     INTCON2         equ	4081	;# 
   647   000FF2                     INTCON          equ	4082	;# 
   648   000FF3                     PROD            equ	4083	;# 
   649   000FF3                     PRODL           equ	4083	;# 
   650   000FF4                     PRODH           equ	4084	;# 
   651   000FF5                     TABLAT          equ	4085	;# 
   652   000FF6                     TBLPTR          equ	4086	;# 
   653   000FF6                     TBLPTRL         equ	4086	;# 
   654   000FF7                     TBLPTRH         equ	4087	;# 
   655   000FF8                     TBLPTRU         equ	4088	;# 
   656   000FF9                     PCLAT           equ	4089	;# 
   657   000FF9                     PC              equ	4089	;# 
   658   000FF9                     PCL             equ	4089	;# 
   659   000FFA                     PCLATH          equ	4090	;# 
   660   000FFB                     PCLATU          equ	4091	;# 
   661   000FFC                     STKPTR          equ	4092	;# 
   662   000FFD                     TOS             equ	4093	;# 
   663   000FFD                     TOSL            equ	4093	;# 
   664   000FFE                     TOSH            equ	4094	;# 
   665   000FFF                     TOSU            equ	4095	;# 
   666   000F80                     PORTA           equ	3968	;# 
   667   000F81                     PORTB           equ	3969	;# 
   668   000F82                     PORTC           equ	3970	;# 
   669   000F83                     PORTD           equ	3971	;# 
   670   000F84                     PORTE           equ	3972	;# 
   671   000F89                     LATA            equ	3977	;# 
   672   000F8A                     LATB            equ	3978	;# 
   673   000F8B                     LATC            equ	3979	;# 
   674   000F8C                     LATD            equ	3980	;# 
   675   000F8D                     LATE            equ	3981	;# 
   676   000F92                     TRISA           equ	3986	;# 
   677   000F92                     DDRA            equ	3986	;# 
   678   000F93                     TRISB           equ	3987	;# 
   679   000F93                     DDRB            equ	3987	;# 
   680   000F94                     TRISC           equ	3988	;# 
   681   000F94                     DDRC            equ	3988	;# 
   682   000F95                     TRISD           equ	3989	;# 
   683   000F95                     DDRD            equ	3989	;# 
   684   000F96                     TRISE           equ	3990	;# 
   685   000F96                     DDRE            equ	3990	;# 
   686   000F9B                     OSCTUNE         equ	3995	;# 
   687   000F9D                     PIE1            equ	3997	;# 
   688   000F9E                     PIR1            equ	3998	;# 
   689   000F9F                     IPR1            equ	3999	;# 
   690   000FA0                     PIE2            equ	4000	;# 
   691   000FA1                     PIR2            equ	4001	;# 
   692   000FA2                     IPR2            equ	4002	;# 
   693   000FA6                     EECON1          equ	4006	;# 
   694   000FA7                     EECON2          equ	4007	;# 
   695   000FA8                     EEDATA          equ	4008	;# 
   696   000FA9                     EEADR           equ	4009	;# 
   697   000FAB                     RCSTA           equ	4011	;# 
   698   000FAB                     RCSTA1          equ	4011	;# 
   699   000FAC                     TXSTA           equ	4012	;# 
   700   000FAC                     TXSTA1          equ	4012	;# 
   701   000FAD                     TXREG           equ	4013	;# 
   702   000FAD                     TXREG1          equ	4013	;# 
   703   000FAE                     RCREG           equ	4014	;# 
   704   000FAE                     RCREG1          equ	4014	;# 
   705   000FAF                     SPBRG           equ	4015	;# 
   706   000FAF                     SPBRG1          equ	4015	;# 
   707   000FB0                     SPBRGH          equ	4016	;# 
   708   000FB1                     T3CON           equ	4017	;# 
   709   000FB2                     TMR3            equ	4018	;# 
   710   000FB2                     TMR3L           equ	4018	;# 
   711   000FB3                     TMR3H           equ	4019	;# 
   712   000FB4                     CMCON           equ	4020	;# 
   713   000FB5                     CVRCON          equ	4021	;# 
   714   000FB6                     ECCP1AS         equ	4022	;# 
   715   000FB6                     ECCPAS          equ	4022	;# 
   716   000FB7                     PWM1CON         equ	4023	;# 
   717   000FB7                     ECCP1DEL        equ	4023	;# 
   718   000FB8                     BAUDCON         equ	4024	;# 
   719   000FB8                     BAUDCTL         equ	4024	;# 
   720   000FBA                     CCP2CON         equ	4026	;# 
   721   000FBB                     CCPR2           equ	4027	;# 
   722   000FBB                     CCPR2L          equ	4027	;# 
   723   000FBC                     CCPR2H          equ	4028	;# 
   724   000FBD                     CCP1CON         equ	4029	;# 
   725   000FBE                     CCPR1           equ	4030	;# 
   726   000FBE                     CCPR1L          equ	4030	;# 
   727   000FBF                     CCPR1H          equ	4031	;# 
   728   000FC0                     ADCON2          equ	4032	;# 
   729   000FC1                     ADCON1          equ	4033	;# 
   730   000FC2                     ADCON0          equ	4034	;# 
   731   000FC3                     ADRES           equ	4035	;# 
   732   000FC3                     ADRESL          equ	4035	;# 
   733   000FC4                     ADRESH          equ	4036	;# 
   734   000FC5                     SSPCON2         equ	4037	;# 
   735   000FC6                     SSPCON1         equ	4038	;# 
   736   000FC7                     SSPSTAT         equ	4039	;# 
   737   000FC8                     SSPADD          equ	4040	;# 
   738   000FC9                     SSPBUF          equ	4041	;# 
   739   000FCA                     T2CON           equ	4042	;# 
   740   000FCB                     PR2             equ	4043	;# 
   741   000FCB                     MEMCON          equ	4043	;# 
   742   000FCC                     TMR2            equ	4044	;# 
   743   000FCD                     T1CON           equ	4045	;# 
   744   000FCE                     TMR1            equ	4046	;# 
   745   000FCE                     TMR1L           equ	4046	;# 
   746   000FCF                     TMR1H           equ	4047	;# 
   747   000FD0                     RCON            equ	4048	;# 
   748   000FD1                     WDTCON          equ	4049	;# 
   749   000FD2                     HLVDCON         equ	4050	;# 
   750   000FD2                     LVDCON          equ	4050	;# 
   751   000FD3                     OSCCON          equ	4051	;# 
   752   000FD5                     T0CON           equ	4053	;# 
   753   000FD6                     TMR0            equ	4054	;# 
   754   000FD6                     TMR0L           equ	4054	;# 
   755   000FD7                     TMR0H           equ	4055	;# 
   756   000FD8                     STATUS          equ	4056	;# 
   757   000FD9                     FSR2            equ	4057	;# 
   758   000FD9                     FSR2L           equ	4057	;# 
   759   000FDA                     FSR2H           equ	4058	;# 
   760   000FDB                     PLUSW2          equ	4059	;# 
   761   000FDC                     PREINC2         equ	4060	;# 
   762   000FDD                     POSTDEC2        equ	4061	;# 
   763   000FDE                     POSTINC2        equ	4062	;# 
   764   000FDF                     INDF2           equ	4063	;# 
   765   000FE0                     BSR             equ	4064	;# 
   766   000FE1                     FSR1            equ	4065	;# 
   767   000FE1                     FSR1L           equ	4065	;# 
   768   000FE2                     FSR1H           equ	4066	;# 
   769   000FE3                     PLUSW1          equ	4067	;# 
   770   000FE4                     PREINC1         equ	4068	;# 
   771   000FE5                     POSTDEC1        equ	4069	;# 
   772   000FE6                     POSTINC1        equ	4070	;# 
   773   000FE7                     INDF1           equ	4071	;# 
   774   000FE8                     WREG            equ	4072	;# 
   775   000FE9                     FSR0            equ	4073	;# 
   776   000FE9                     FSR0L           equ	4073	;# 
   777   000FEA                     FSR0H           equ	4074	;# 
   778   000FEB                     PLUSW0          equ	4075	;# 
   779   000FEC                     PREINC0         equ	4076	;# 
   780   000FED                     POSTDEC0        equ	4077	;# 
   781   000FEE                     POSTINC0        equ	4078	;# 
   782   000FEF                     INDF0           equ	4079	;# 
   783   000FF0                     INTCON3         equ	4080	;# 
   784   000FF1                     INTCON2         equ	4081	;# 
   785   000FF2                     INTCON          equ	4082	;# 
   786   000FF3                     PROD            equ	4083	;# 
   787   000FF3                     PRODL           equ	4083	;# 
   788   000FF4                     PRODH           equ	4084	;# 
   789   000FF5                     TABLAT          equ	4085	;# 
   790   000FF6                     TBLPTR          equ	4086	;# 
   791   000FF6                     TBLPTRL         equ	4086	;# 
   792   000FF7                     TBLPTRH         equ	4087	;# 
   793   000FF8                     TBLPTRU         equ	4088	;# 
   794   000FF9                     PCLAT           equ	4089	;# 
   795   000FF9                     PC              equ	4089	;# 
   796   000FF9                     PCL             equ	4089	;# 
   797   000FFA                     PCLATH          equ	4090	;# 
   798   000FFB                     PCLATU          equ	4091	;# 
   799   000FFC                     STKPTR          equ	4092	;# 
   800   000FFD                     TOS             equ	4093	;# 
   801   000FFD                     TOSL            equ	4093	;# 
   802   000FFE                     TOSH            equ	4094	;# 
   803   000FFF                     TOSU            equ	4095	;# 
   804   000F80                     PORTA           equ	3968	;# 
   805   000F81                     PORTB           equ	3969	;# 
   806   000F82                     PORTC           equ	3970	;# 
   807   000F83                     PORTD           equ	3971	;# 
   808   000F84                     PORTE           equ	3972	;# 
   809   000F89                     LATA            equ	3977	;# 
   810   000F8A                     LATB            equ	3978	;# 
   811   000F8B                     LATC            equ	3979	;# 
   812   000F8C                     LATD            equ	3980	;# 
   813   000F8D                     LATE            equ	3981	;# 
   814   000F92                     TRISA           equ	3986	;# 
   815   000F92                     DDRA            equ	3986	;# 
   816   000F93                     TRISB           equ	3987	;# 
   817   000F93                     DDRB            equ	3987	;# 
   818   000F94                     TRISC           equ	3988	;# 
   819   000F94                     DDRC            equ	3988	;# 
   820   000F95                     TRISD           equ	3989	;# 
   821   000F95                     DDRD            equ	3989	;# 
   822   000F96                     TRISE           equ	3990	;# 
   823   000F96                     DDRE            equ	3990	;# 
   824   000F9B                     OSCTUNE         equ	3995	;# 
   825   000F9D                     PIE1            equ	3997	;# 
   826   000F9E                     PIR1            equ	3998	;# 
   827   000F9F                     IPR1            equ	3999	;# 
   828   000FA0                     PIE2            equ	4000	;# 
   829   000FA1                     PIR2            equ	4001	;# 
   830   000FA2                     IPR2            equ	4002	;# 
   831   000FA6                     EECON1          equ	4006	;# 
   832   000FA7                     EECON2          equ	4007	;# 
   833   000FA8                     EEDATA          equ	4008	;# 
   834   000FA9                     EEADR           equ	4009	;# 
   835   000FAB                     RCSTA           equ	4011	;# 
   836   000FAB                     RCSTA1          equ	4011	;# 
   837   000FAC                     TXSTA           equ	4012	;# 
   838   000FAC                     TXSTA1          equ	4012	;# 
   839   000FAD                     TXREG           equ	4013	;# 
   840   000FAD                     TXREG1          equ	4013	;# 
   841   000FAE                     RCREG           equ	4014	;# 
   842   000FAE                     RCREG1          equ	4014	;# 
   843   000FAF                     SPBRG           equ	4015	;# 
   844   000FAF                     SPBRG1          equ	4015	;# 
   845   000FB0                     SPBRGH          equ	4016	;# 
   846   000FB1                     T3CON           equ	4017	;# 
   847   000FB2                     TMR3            equ	4018	;# 
   848   000FB2                     TMR3L           equ	4018	;# 
   849   000FB3                     TMR3H           equ	4019	;# 
   850   000FB4                     CMCON           equ	4020	;# 
   851   000FB5                     CVRCON          equ	4021	;# 
   852   000FB6                     ECCP1AS         equ	4022	;# 
   853   000FB6                     ECCPAS          equ	4022	;# 
   854   000FB7                     PWM1CON         equ	4023	;# 
   855   000FB7                     ECCP1DEL        equ	4023	;# 
   856   000FB8                     BAUDCON         equ	4024	;# 
   857   000FB8                     BAUDCTL         equ	4024	;# 
   858   000FBA                     CCP2CON         equ	4026	;# 
   859   000FBB                     CCPR2           equ	4027	;# 
   860   000FBB                     CCPR2L          equ	4027	;# 
   861   000FBC                     CCPR2H          equ	4028	;# 
   862   000FBD                     CCP1CON         equ	4029	;# 
   863   000FBE                     CCPR1           equ	4030	;# 
   864   000FBE                     CCPR1L          equ	4030	;# 
   865   000FBF                     CCPR1H          equ	4031	;# 
   866   000FC0                     ADCON2          equ	4032	;# 
   867   000FC1                     ADCON1          equ	4033	;# 
   868   000FC2                     ADCON0          equ	4034	;# 
   869   000FC3                     ADRES           equ	4035	;# 
   870   000FC3                     ADRESL          equ	4035	;# 
   871   000FC4                     ADRESH          equ	4036	;# 
   872   000FC5                     SSPCON2         equ	4037	;# 
   873   000FC6                     SSPCON1         equ	4038	;# 
   874   000FC7                     SSPSTAT         equ	4039	;# 
   875   000FC8                     SSPADD          equ	4040	;# 
   876   000FC9                     SSPBUF          equ	4041	;# 
   877   000FCA                     T2CON           equ	4042	;# 
   878   000FCB                     PR2             equ	4043	;# 
   879   000FCB                     MEMCON          equ	4043	;# 
   880   000FCC                     TMR2            equ	4044	;# 
   881   000FCD                     T1CON           equ	4045	;# 
   882   000FCE                     TMR1            equ	4046	;# 
   883   000FCE                     TMR1L           equ	4046	;# 
   884   000FCF                     TMR1H           equ	4047	;# 
   885   000FD0                     RCON            equ	4048	;# 
   886   000FD1                     WDTCON          equ	4049	;# 
   887   000FD2                     HLVDCON         equ	4050	;# 
   888   000FD2                     LVDCON          equ	4050	;# 
   889   000FD3                     OSCCON          equ	4051	;# 
   890   000FD5                     T0CON           equ	4053	;# 
   891   000FD6                     TMR0            equ	4054	;# 
   892   000FD6                     TMR0L           equ	4054	;# 
   893   000FD7                     TMR0H           equ	4055	;# 
   894   000FD8                     STATUS          equ	4056	;# 
   895   000FD9                     FSR2            equ	4057	;# 
   896   000FD9                     FSR2L           equ	4057	;# 
   897   000FDA                     FSR2H           equ	4058	;# 
   898   000FDB                     PLUSW2          equ	4059	;# 
   899   000FDC                     PREINC2         equ	4060	;# 
   900   000FDD                     POSTDEC2        equ	4061	;# 
   901   000FDE                     POSTINC2        equ	4062	;# 
   902   000FDF                     INDF2           equ	4063	;# 
   903   000FE0                     BSR             equ	4064	;# 
   904   000FE1                     FSR1            equ	4065	;# 
   905   000FE1                     FSR1L           equ	4065	;# 
   906   000FE2                     FSR1H           equ	4066	;# 
   907   000FE3                     PLUSW1          equ	4067	;# 
   908   000FE4                     PREINC1         equ	4068	;# 
   909   000FE5                     POSTDEC1        equ	4069	;# 
   910   000FE6                     POSTINC1        equ	4070	;# 
   911   000FE7                     INDF1           equ	4071	;# 
   912   000FE8                     WREG            equ	4072	;# 
   913   000FE9                     FSR0            equ	4073	;# 
   914   000FE9                     FSR0L           equ	4073	;# 
   915   000FEA                     FSR0H           equ	4074	;# 
   916   000FEB                     PLUSW0          equ	4075	;# 
   917   000FEC                     PREINC0         equ	4076	;# 
   918   000FED                     POSTDEC0        equ	4077	;# 
   919   000FEE                     POSTINC0        equ	4078	;# 
   920   000FEF                     INDF0           equ	4079	;# 
   921   000FF0                     INTCON3         equ	4080	;# 
   922   000FF1                     INTCON2         equ	4081	;# 
   923   000FF2                     INTCON          equ	4082	;# 
   924   000FF3                     PROD            equ	4083	;# 
   925   000FF3                     PRODL           equ	4083	;# 
   926   000FF4                     PRODH           equ	4084	;# 
   927   000FF5                     TABLAT          equ	4085	;# 
   928   000FF6                     TBLPTR          equ	4086	;# 
   929   000FF6                     TBLPTRL         equ	4086	;# 
   930   000FF7                     TBLPTRH         equ	4087	;# 
   931   000FF8                     TBLPTRU         equ	4088	;# 
   932   000FF9                     PCLAT           equ	4089	;# 
   933   000FF9                     PC              equ	4089	;# 
   934   000FF9                     PCL             equ	4089	;# 
   935   000FFA                     PCLATH          equ	4090	;# 
   936   000FFB                     PCLATU          equ	4091	;# 
   937   000FFC                     STKPTR          equ	4092	;# 
   938   000FFD                     TOS             equ	4093	;# 
   939   000FFD                     TOSL            equ	4093	;# 
   940   000FFE                     TOSH            equ	4094	;# 
   941   000FFF                     TOSU            equ	4095	;# 
   942   007D5C                     _CREN           set	32092
   943   007CF5                     _RCIF           set	31989
   944   007E9C                     _IRCF0          set	32412
   945   007E9D                     _IRCF1          set	32413
   946   007E9E                     _IRCF2          set	32414
   947   007E07                     _ADFM           set	32263
   948   000F89                     _LATAbits       set	3977
   949   000F92                     _TRISAbits      set	3986
   950   000F89                     _LATA           set	3977
   951   000F94                     _TRISCbits      set	3988
   952   000F92                     _TRISA          set	3986
   953   000FAE                     _RCREG          set	4014
   954   000FAD                     _TXREG          set	4013
   955   000F9D                     _PIE1bits       set	3997
   956   000FAB                     _RCSTAbits      set	4011
   957   000FAF                     _SPBRG          set	4015
   958   000FB8                     _BAUDCONbits    set	4024
   959   000FAC                     _TXSTAbits      set	4012
   960   000FD0                     _RCONbits       set	4048
   961   000F9F                     _IPR1bits       set	3999
   962   000F9E                     _PIR1bits       set	3998
   963   000FBD                     _CCP1CON        set	4029
   964   000FC2                     _ADCON0bits     set	4034
   965   000FC3                     _ADRESL         set	4035
   966   000FC4                     _ADRESH         set	4036
   967   000FC0                     _ADCON2bits     set	4032
   968   000FC1                     _ADCON1         set	4033
   969   000FF2                     _INTCONbits     set	4082
   970                           
   971                           	psect	smallconst
   972   000600                     __psmallconst:
   973                           	callstack 0
   974   000600  00                 	db	0
   975   000601                     STR_1:
   976   000601  0D                 	db	13
   977   000602  0A                 	db	10
   978   000603  00                 	db	0
   979   000603                     STR_2           equ	STR_1+2
   980   000603                     STR_3           equ	STR_1+2
   981   000603                     STR_4           equ	STR_1+2
   982   000603                     STR_5           equ	STR_1+2
   983   000603                     STR_6           equ	STR_1+2
   984   000603                     STR_7           equ	STR_1+2
   985   000604  00                 	db	0	; dummy byte at the end
   986   000002                     __activetblptr  equ	2
   987                           
   988                           ; #config settings
   989                           
   990                           	psect	cinit
   991   0008E0                     __pcinit:
   992                           	callstack 0
   993   0008E0                     start_initialization:
   994                           	callstack 0
   995   0008E0                     __initialization:
   996                           	callstack 0
   997                           
   998                           ; Clear objects allocated to COMRAM (44 bytes)
   999   0008E0  EE00  F001         	lfsr	0,__pbssCOMRAM
  1000   0008E4  0E2C               	movlw	44
  1001   0008E6                     clear_0:
  1002   0008E6  6AEE               	clrf	postinc0,c
  1003   0008E8  06E8               	decf	wreg,f,c
  1004   0008EA  E1FD               	bnz	clear_0
  1005   0008EC                     end_of_initialization:
  1006                           	callstack 0
  1007   0008EC                     __end_of__initialization:
  1008                           	callstack 0
  1009   0008EC  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1010   0008EE  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1011   0008F0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1012   0008F2  6EF8               	movwf	tblptru,c
  1013   0008F4  0100               	movlb	0
  1014   0008F6  EF03  F003         	goto	_main	;jump to C main() function
  1015                           
  1016                           	psect	bssCOMRAM
  1017   000001                     __pbssCOMRAM:
  1018                           	callstack 0
  1019   000001                     _str:
  1020                           	callstack 0
  1021   000001                     	ds	20
  1022   000015                     _state:
  1023                           	callstack 0
  1024   000015                     	ds	2
  1025   000017                     _lenStr:
  1026                           	callstack 0
  1027   000017                     	ds	2
  1028   000019                     _mystring:
  1029                           	callstack 0
  1030   000019                     	ds	20
  1031                           
  1032                           	psect	cstackBANK0
  1033   000080                     __pcstackBANK0:
  1034                           	callstack 0
  1035   000080                     ??_displayBinary:
  1036                           
  1037                           ; 1 bytes @ 0x0
  1038   000080                     	ds	1
  1039   000081                     ledRightOn@num:
  1040                           	callstack 0
  1041   000081                     ledRightOff@num:
  1042                           	callstack 0
  1043   000081                     ledLeftOn@num:
  1044                           	callstack 0
  1045   000081                     ledLeftOff@num:
  1046                           	callstack 0
  1047   000081                     BreakOn@num:
  1048                           	callstack 0
  1049   000081                     BreakOff@num:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x1
  1053   000081                     	ds	2
  1054   000083                     ??_main:
  1055                           
  1056                           ; 1 bytes @ 0x3
  1057   000083                     	ds	2
  1058                           
  1059                           	psect	cstackCOMRAM
  1060   00002D                     __pcstackCOMRAM:
  1061                           	callstack 0
  1062   00002D                     ?_strlen:
  1063                           	callstack 0
  1064   00002D                     UART_Write@data:
  1065                           	callstack 0
  1066   00002D                     strlen@s:
  1067                           	callstack 0
  1068   00002D                     ClearBuffer@i:
  1069                           	callstack 0
  1070   00002D                     
  1071                           ; 1 bytes @ 0x0
  1072   00002D                     	ds	1
  1073   00002E                     UART_Write_Text@text:
  1074                           	callstack 0
  1075                           
  1076                           ; 1 bytes @ 0x1
  1077   00002E                     	ds	1
  1078   00002F                     strcpy@dest:
  1079                           	callstack 0
  1080   00002F                     strlen@a:
  1081                           	callstack 0
  1082   00002F                     ??_UART_Write_Text:
  1083                           
  1084                           ; 1 bytes @ 0x2
  1085   00002F                     	ds	1
  1086   000030                     UART_Write_Text@i:
  1087                           	callstack 0
  1088   000030                     strcpy@src:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x3
  1092   000030                     	ds	2
  1093   000032                     MyusartRead@receivedData:
  1094                           	callstack 0
  1095   000032                     ??_strcpy:
  1096   000032                     
  1097                           ; 1 bytes @ 0x5
  1098   000032                     	ds	2
  1099   000034                     strcpy@d:
  1100                           	callstack 0
  1101                           
  1102                           ; 1 bytes @ 0x7
  1103   000034                     	ds	1
  1104   000035                     ??_Lo_ISR:
  1105                           
  1106                           ; 1 bytes @ 0x8
  1107   000035                     	ds	12
  1108   000041                     Lo_ISR@command:
  1109                           	callstack 0
  1110                           
  1111                           ; 20 bytes @ 0x14
  1112   000041                     	ds	20
  1113   000055                     displayBinary@num:
  1114                           	callstack 0
  1115   000055                     
  1116                           ; 1 bytes @ 0x28
  1117   000055                     	ds	2
  1118   000057                     
  1119                           ; 1 bytes @ 0x2A
  1120 ;;
  1121 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1122 ;;
  1123 ;; *************** function _main *****************
  1124 ;; Defined at:
  1125 ;;		line 48 in file "main.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1139 ;;      Params:         0       0       0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0       0       0
  1141 ;;      Temps:          0       2       0       0       0       0       0
  1142 ;;      Totals:         0       2       0       0       0       0       0
  1143 ;;Total ram usage:        2 bytes
  1144 ;; Hardware stack levels required when called: 7
  1145 ;; This function calls:
  1146 ;;		_BreakOff
  1147 ;;		_BreakOn
  1148 ;;		_SYSTEM_Initialize
  1149 ;;		_initialState
  1150 ;;		_ledLeftOff
  1151 ;;		_ledLeftOn
  1152 ;;		_ledRightOff
  1153 ;;		_ledRightOn
  1154 ;; This function is called by:
  1155 ;;		Startup code after reset
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text0
  1160   000606                     __ptext0:
  1161                           	callstack 0
  1162   000606                     _main:
  1163                           	callstack 24
  1164   000606                     
  1165                           ;main.c: 50:     SYSTEM_Initialize() ;
  1166   000606  ECAB  F004         	call	_SYSTEM_Initialize	;wreg free
  1167   00060A  EF3B  F003         	goto	l1446
  1168   00060E                     l1430:
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;main.c: 55:                 initialState();
  1172   00060E  ECA4  F004         	call	_initialState	;wreg free
  1173                           
  1174                           ;main.c: 56:                 break;
  1175   000612  EF3B  F003         	goto	l1446
  1176   000616                     l1432:
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;main.c: 58:                 ledRightOn(1);
  1180   000616  0E00               	movlw	0
  1181   000618  6F82               	movwf	(ledRightOn@num+1)& (0+255),b
  1182   00061A  0E01               	movlw	1
  1183   00061C  6F81               	movwf	ledRightOn@num& (0+255),b
  1184   00061E  EC88  F004         	call	_ledRightOn	;wreg free
  1185                           
  1186                           ;main.c: 59:                 break;
  1187   000622  EF3B  F003         	goto	l1446
  1188   000626                     l1434:
  1189                           
  1190                           ; BSR set to: 0
  1191                           ;main.c: 61:                 ledRightOff(2);
  1192   000626  0E00               	movlw	0
  1193   000628  6F82               	movwf	(ledRightOff@num+1)& (0+255),b
  1194   00062A  0E02               	movlw	2
  1195   00062C  6F81               	movwf	ledRightOff@num& (0+255),b
  1196   00062E  EC8F  F004         	call	_ledRightOff	;wreg free
  1197                           
  1198                           ;main.c: 62:                 break;
  1199   000632  EF3B  F003         	goto	l1446
  1200   000636                     l1436:
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;main.c: 64:                 ledLeftOn(3);
  1204   000636  0E00               	movlw	0
  1205   000638  6F82               	movwf	(ledLeftOn@num+1)& (0+255),b
  1206   00063A  0E03               	movlw	3
  1207   00063C  6F81               	movwf	ledLeftOn@num& (0+255),b
  1208   00063E  EC96  F004         	call	_ledLeftOn	;wreg free
  1209                           
  1210                           ;main.c: 65:                 break;
  1211   000642  EF3B  F003         	goto	l1446
  1212   000646                     l1438:
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;main.c: 67:                 ledLeftOff(4);
  1216   000646  0E00               	movlw	0
  1217   000648  6F82               	movwf	(ledLeftOff@num+1)& (0+255),b
  1218   00064A  0E04               	movlw	4
  1219   00064C  6F81               	movwf	ledLeftOff@num& (0+255),b
  1220   00064E  EC9D  F004         	call	_ledLeftOff	;wreg free
  1221                           
  1222                           ;main.c: 68:                 break;
  1223   000652  EF3B  F003         	goto	l1446
  1224   000656                     l1440:
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;main.c: 70:                 BreakOn(5);
  1228   000656  0E00               	movlw	0
  1229   000658  6F82               	movwf	(BreakOn@num+1)& (0+255),b
  1230   00065A  0E05               	movlw	5
  1231   00065C  6F81               	movwf	BreakOn@num& (0+255),b
  1232   00065E  ECB2  F004         	call	_BreakOn	;wreg free
  1233                           
  1234                           ;main.c: 71:                 break;
  1235   000662  EF3B  F003         	goto	l1446
  1236   000666                     l1442:
  1237                           
  1238                           ; BSR set to: 0
  1239                           ;main.c: 73:                 BreakOff(6);
  1240   000666  0E00               	movlw	0
  1241   000668  6F82               	movwf	(BreakOff@num+1)& (0+255),b
  1242   00066A  0E06               	movlw	6
  1243   00066C  6F81               	movwf	BreakOff@num& (0+255),b
  1244   00066E  ECB9  F004         	call	_BreakOff	;wreg free
  1245                           
  1246                           ;main.c: 74:                 break;
  1247   000672  EF3B  F003         	goto	l1446
  1248   000676                     l176:
  1249   000676                     l1446:
  1250   000676  C015  F083         	movff	_state,??_main
  1251   00067A  C016  F084         	movff	_state+1,??_main+1
  1252                           
  1253                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1254                           ; Switch size 1, requested type "simple"
  1255                           ; Number of cases is 1, Range of values is 0 to 0
  1256                           ; switch strategies available:
  1257                           ; Name         Instructions Cycles
  1258                           ; simple_byte            4     3 (average)
  1259                           ;	Chosen strategy is simple_byte
  1260   00067E  0100               	movlb	0	; () banked
  1261   000680  5184               	movf	(??_main+1)& (0+255),w,b
  1262   000682  0A00               	xorlw	0	; case 0
  1263   000684  B4D8               	btfsc	status,2,c
  1264   000686  EF47  F003         	goto	l1484
  1265   00068A  EF3B  F003         	goto	l176
  1266   00068E                     l1484:
  1267                           
  1268                           ; BSR set to: 0
  1269                           ; Switch size 1, requested type "simple"
  1270                           ; Number of cases is 7, Range of values is 0 to 6
  1271                           ; switch strategies available:
  1272                           ; Name         Instructions Cycles
  1273                           ; simple_byte           22    12 (average)
  1274                           ;	Chosen strategy is simple_byte
  1275   00068E  5183               	movf	??_main& (0+255),w,b
  1276   000690  0A00               	xorlw	0	; case 0
  1277   000692  B4D8               	btfsc	status,2,c
  1278   000694  EF07  F003         	goto	l1430
  1279   000698  0A01               	xorlw	1	; case 1
  1280   00069A  B4D8               	btfsc	status,2,c
  1281   00069C  EF0B  F003         	goto	l1432
  1282   0006A0  0A03               	xorlw	3	; case 2
  1283   0006A2  B4D8               	btfsc	status,2,c
  1284   0006A4  EF13  F003         	goto	l1434
  1285   0006A8  0A01               	xorlw	1	; case 3
  1286   0006AA  B4D8               	btfsc	status,2,c
  1287   0006AC  EF1B  F003         	goto	l1436
  1288   0006B0  0A07               	xorlw	7	; case 4
  1289   0006B2  B4D8               	btfsc	status,2,c
  1290   0006B4  EF23  F003         	goto	l1438
  1291   0006B8  0A01               	xorlw	1	; case 5
  1292   0006BA  B4D8               	btfsc	status,2,c
  1293   0006BC  EF2B  F003         	goto	l1440
  1294   0006C0  0A03               	xorlw	3	; case 6
  1295   0006C2  B4D8               	btfsc	status,2,c
  1296   0006C4  EF33  F003         	goto	l1442
  1297   0006C8  EF3B  F003         	goto	l176
  1298   0006CC  EFBC  F001         	goto	start
  1299   0006D0                     __end_of_main:
  1300                           	callstack 0
  1301                           
  1302 ;; *************** function _ledRightOn *****************
  1303 ;; Defined at:
  1304 ;;		line 24 in file "main.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;  num             2    1[BANK0 ] int 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, status,2, status,0, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1318 ;;      Params:         0       2       0       0       0       0       0
  1319 ;;      Locals:         0       0       0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0
  1321 ;;      Totals:         0       2       0       0       0       0       0
  1322 ;;Total ram usage:        2 bytes
  1323 ;; Hardware stack levels used: 1
  1324 ;; Hardware stack levels required when called: 6
  1325 ;; This function calls:
  1326 ;;		_displayBinary
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text1
  1333   000910                     __ptext1:
  1334                           	callstack 0
  1335   000910                     _ledRightOn:
  1336                           	callstack 24
  1337   000910                     
  1338                           ;main.c: 25:     displayBinary(num);
  1339   000910  C081  F055         	movff	ledRightOn@num,displayBinary@num
  1340   000914  C082  F056         	movff	ledRightOn@num+1,displayBinary@num+1
  1341   000918  EC68  F003         	call	_displayBinary	;wreg free
  1342   00091C  0012               	return		;funcret
  1343   00091E                     __end_of_ledRightOn:
  1344                           	callstack 0
  1345                           
  1346 ;; *************** function _ledRightOff *****************
  1347 ;; Defined at:
  1348 ;;		line 28 in file "main.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;  num             2    1[BANK0 ] int 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, status,2, status,0, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1362 ;;      Params:         0       2       0       0       0       0       0
  1363 ;;      Locals:         0       0       0       0       0       0       0
  1364 ;;      Temps:          0       0       0       0       0       0       0
  1365 ;;      Totals:         0       2       0       0       0       0       0
  1366 ;;Total ram usage:        2 bytes
  1367 ;; Hardware stack levels used: 1
  1368 ;; Hardware stack levels required when called: 6
  1369 ;; This function calls:
  1370 ;;		_displayBinary
  1371 ;; This function is called by:
  1372 ;;		_main
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text2
  1377   00091E                     __ptext2:
  1378                           	callstack 0
  1379   00091E                     _ledRightOff:
  1380                           	callstack 24
  1381   00091E                     
  1382                           ;main.c: 29:     displayBinary(num);
  1383   00091E  C081  F055         	movff	ledRightOff@num,displayBinary@num
  1384   000922  C082  F056         	movff	ledRightOff@num+1,displayBinary@num+1
  1385   000926  EC68  F003         	call	_displayBinary	;wreg free
  1386   00092A  0012               	return		;funcret
  1387   00092C                     __end_of_ledRightOff:
  1388                           	callstack 0
  1389                           
  1390 ;; *************** function _ledLeftOn *****************
  1391 ;; Defined at:
  1392 ;;		line 32 in file "main.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;  num             2    1[BANK0 ] int 
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;		None
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, status,2, status,0, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1406 ;;      Params:         0       2       0       0       0       0       0
  1407 ;;      Locals:         0       0       0       0       0       0       0
  1408 ;;      Temps:          0       0       0       0       0       0       0
  1409 ;;      Totals:         0       2       0       0       0       0       0
  1410 ;;Total ram usage:        2 bytes
  1411 ;; Hardware stack levels used: 1
  1412 ;; Hardware stack levels required when called: 6
  1413 ;; This function calls:
  1414 ;;		_displayBinary
  1415 ;; This function is called by:
  1416 ;;		_main
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text3
  1421   00092C                     __ptext3:
  1422                           	callstack 0
  1423   00092C                     _ledLeftOn:
  1424                           	callstack 24
  1425   00092C                     
  1426                           ;main.c: 33:     displayBinary(num);
  1427   00092C  C081  F055         	movff	ledLeftOn@num,displayBinary@num
  1428   000930  C082  F056         	movff	ledLeftOn@num+1,displayBinary@num+1
  1429   000934  EC68  F003         	call	_displayBinary	;wreg free
  1430   000938  0012               	return		;funcret
  1431   00093A                     __end_of_ledLeftOn:
  1432                           	callstack 0
  1433                           
  1434 ;; *************** function _ledLeftOff *****************
  1435 ;; Defined at:
  1436 ;;		line 36 in file "main.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;  num             2    1[BANK0 ] int 
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, status,2, status,0, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1450 ;;      Params:         0       2       0       0       0       0       0
  1451 ;;      Locals:         0       0       0       0       0       0       0
  1452 ;;      Temps:          0       0       0       0       0       0       0
  1453 ;;      Totals:         0       2       0       0       0       0       0
  1454 ;;Total ram usage:        2 bytes
  1455 ;; Hardware stack levels used: 1
  1456 ;; Hardware stack levels required when called: 6
  1457 ;; This function calls:
  1458 ;;		_displayBinary
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text4
  1465   00093A                     __ptext4:
  1466                           	callstack 0
  1467   00093A                     _ledLeftOff:
  1468                           	callstack 24
  1469   00093A                     
  1470                           ;main.c: 37:     displayBinary(num);
  1471   00093A  C081  F055         	movff	ledLeftOff@num,displayBinary@num
  1472   00093E  C082  F056         	movff	ledLeftOff@num+1,displayBinary@num+1
  1473   000942  EC68  F003         	call	_displayBinary	;wreg free
  1474   000946  0012               	return		;funcret
  1475   000948                     __end_of_ledLeftOff:
  1476                           	callstack 0
  1477                           
  1478 ;; *************** function _initialState *****************
  1479 ;; Defined at:
  1480 ;;		line 20 in file "main.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;		None
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;		None
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  1    wreg      void 
  1487 ;; Registers used:
  1488 ;;		wreg, status,2, status,0, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1494 ;;      Params:         0       0       0       0       0       0       0
  1495 ;;      Locals:         0       0       0       0       0       0       0
  1496 ;;      Temps:          0       0       0       0       0       0       0
  1497 ;;      Totals:         0       0       0       0       0       0       0
  1498 ;;Total ram usage:        0 bytes
  1499 ;; Hardware stack levels used: 1
  1500 ;; Hardware stack levels required when called: 6
  1501 ;; This function calls:
  1502 ;;		_displayBinary
  1503 ;; This function is called by:
  1504 ;;		_main
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text5
  1509   000948                     __ptext5:
  1510                           	callstack 0
  1511   000948                     _initialState:
  1512                           	callstack 24
  1513   000948                     
  1514                           ;main.c: 21:     displayBinary(0);
  1515   000948  0E00               	movlw	0
  1516   00094A  6E56               	movwf	(displayBinary@num+1)^0,c
  1517   00094C  0E00               	movlw	0
  1518   00094E  6E55               	movwf	displayBinary@num^0,c
  1519   000950  EC68  F003         	call	_displayBinary	;wreg free
  1520   000954  0012               	return		;funcret
  1521   000956                     __end_of_initialState:
  1522                           	callstack 0
  1523                           
  1524 ;; *************** function _SYSTEM_Initialize *****************
  1525 ;; Defined at:
  1526 ;;		line 60 in file "setting_hardaware/setting.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, status,2, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1540 ;;      Params:         0       0       0       0       0       0       0
  1541 ;;      Locals:         0       0       0       0       0       0       0
  1542 ;;      Temps:          0       0       0       0       0       0       0
  1543 ;;      Totals:         0       0       0       0       0       0       0
  1544 ;;Total ram usage:        0 bytes
  1545 ;; Hardware stack levels used: 1
  1546 ;; Hardware stack levels required when called: 6
  1547 ;; This function calls:
  1548 ;;		_INTERRUPT_Initialize
  1549 ;;		_OSCILLATOR_Initialize
  1550 ;;		_UART_Initialize
  1551 ;; This function is called by:
  1552 ;;		_main
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           	psect	text6
  1557   000956                     __ptext6:
  1558                           	callstack 0
  1559   000956                     _SYSTEM_Initialize:
  1560                           	callstack 24
  1561   000956                     
  1562                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
  1563   000956  ECC0  F004         	call	_OSCILLATOR_Initialize	;wreg free
  1564   00095A                     
  1565                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  1566   00095A  EC5F  F004         	call	_INTERRUPT_Initialize	;wreg free
  1567   00095E                     
  1568                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
  1569   00095E  EC4E  F004         	call	_UART_Initialize	;wreg free
  1570   000962  0012               	return		;funcret
  1571   000964                     __end_of_SYSTEM_Initialize:
  1572                           	callstack 0
  1573                           
  1574 ;; *************** function _UART_Initialize *****************
  1575 ;; Defined at:
  1576 ;;		line 10 in file "setting_hardaware/uart.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;		None
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;		None
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, status,2
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1590 ;;      Params:         0       0       0       0       0       0       0
  1591 ;;      Locals:         0       0       0       0       0       0       0
  1592 ;;      Temps:          0       0       0       0       0       0       0
  1593 ;;      Totals:         0       0       0       0       0       0       0
  1594 ;;Total ram usage:        0 bytes
  1595 ;; Hardware stack levels used: 1
  1596 ;; Hardware stack levels required when called: 5
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		_SYSTEM_Initialize
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text7
  1605   00089C                     __ptext7:
  1606                           	callstack 0
  1607   00089C                     _UART_Initialize:
  1608                           	callstack 24
  1609   00089C                     
  1610                           ;setting_hardaware/uart.c: 21:     TRISCbits.TRISC6 = 1;
  1611   00089C  8C94               	bsf	148,6,c	;volatile
  1612                           
  1613                           ;setting_hardaware/uart.c: 22:     TRISCbits.TRISC7 = 1;
  1614   00089E  8E94               	bsf	148,7,c	;volatile
  1615                           
  1616                           ;setting_hardaware/uart.c: 25:     TXSTAbits.SYNC = 0;
  1617   0008A0  98AC               	bcf	172,4,c	;volatile
  1618                           
  1619                           ;setting_hardaware/uart.c: 26:     BAUDCONbits.BRG16 = 0;
  1620   0008A2  96B8               	bcf	184,3,c	;volatile
  1621                           
  1622                           ;setting_hardaware/uart.c: 27:     TXSTAbits.BRGH = 1;
  1623   0008A4  84AC               	bsf	172,2,c	;volatile
  1624   0008A6                     
  1625                           ;setting_hardaware/uart.c: 28:     SPBRG = 25;
  1626   0008A6  0E19               	movlw	25
  1627   0008A8  6EAF               	movwf	175,c	;volatile
  1628   0008AA                     
  1629                           ;setting_hardaware/uart.c: 31:     RCSTAbits.SPEN = 1;
  1630   0008AA  8EAB               	bsf	171,7,c	;volatile
  1631   0008AC                     
  1632                           ;setting_hardaware/uart.c: 32:     PIR1bits.TXIF = 0;
  1633   0008AC  989E               	bcf	158,4,c	;volatile
  1634   0008AE                     
  1635                           ;setting_hardaware/uart.c: 33:     PIR1bits.RCIF = 1;
  1636   0008AE  8A9E               	bsf	158,5,c	;volatile
  1637   0008B0                     
  1638                           ;setting_hardaware/uart.c: 34:     TXSTAbits.TXEN = 1;
  1639   0008B0  8AAC               	bsf	172,5,c	;volatile
  1640   0008B2                     
  1641                           ;setting_hardaware/uart.c: 35:     RCSTAbits.CREN = 1;
  1642   0008B2  88AB               	bsf	171,4,c	;volatile
  1643   0008B4                     
  1644                           ;setting_hardaware/uart.c: 36:     PIE1bits.TXIE = 0;
  1645   0008B4  989D               	bcf	157,4,c	;volatile
  1646   0008B6                     
  1647                           ;setting_hardaware/uart.c: 37:     IPR1bits.TXIP = 0;
  1648   0008B6  989F               	bcf	159,4,c	;volatile
  1649   0008B8                     
  1650                           ;setting_hardaware/uart.c: 38:     PIE1bits.RCIE = 1;
  1651   0008B8  8A9D               	bsf	157,5,c	;volatile
  1652   0008BA                     
  1653                           ;setting_hardaware/uart.c: 39:     IPR1bits.RCIP = 0;
  1654   0008BA  9A9F               	bcf	159,5,c	;volatile
  1655   0008BC  0012               	return		;funcret
  1656   0008BE                     __end_of_UART_Initialize:
  1657                           	callstack 0
  1658                           
  1659 ;; *************** function _OSCILLATOR_Initialize *****************
  1660 ;; Defined at:
  1661 ;;		line 73 in file "setting_hardaware/setting.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		None
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1675 ;;      Params:         0       0       0       0       0       0       0
  1676 ;;      Locals:         0       0       0       0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0       0       0
  1678 ;;      Totals:         0       0       0       0       0       0       0
  1679 ;;Total ram usage:        0 bytes
  1680 ;; Hardware stack levels used: 1
  1681 ;; Hardware stack levels required when called: 5
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_SYSTEM_Initialize
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text8
  1690   000980                     __ptext8:
  1691                           	callstack 0
  1692   000980                     _OSCILLATOR_Initialize:
  1693                           	callstack 24
  1694   000980                     
  1695                           ;setting_hardaware/setting.c: 75:     IRCF2 = 1;
  1696   000980  8CD3               	bsf	4051,6,c	;volatile
  1697                           
  1698                           ;setting_hardaware/setting.c: 76:     IRCF1 = 1;
  1699   000982  8AD3               	bsf	4051,5,c	;volatile
  1700                           
  1701                           ;setting_hardaware/setting.c: 77:     IRCF0 = 0;
  1702   000984  98D3               	bcf	4051,4,c	;volatile
  1703   000986  0012               	return		;funcret
  1704   000988                     __end_of_OSCILLATOR_Initialize:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function _INTERRUPT_Initialize *****************
  1708 ;; Defined at:
  1709 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1723 ;;      Params:         0       0       0       0       0       0       0
  1724 ;;      Locals:         0       0       0       0       0       0       0
  1725 ;;      Temps:          0       0       0       0       0       0       0
  1726 ;;      Totals:         0       0       0       0       0       0       0
  1727 ;;Total ram usage:        0 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; Hardware stack levels required when called: 5
  1730 ;; This function calls:
  1731 ;;		Nothing
  1732 ;; This function is called by:
  1733 ;;		_SYSTEM_Initialize
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text9
  1738   0008BE                     __ptext9:
  1739                           	callstack 0
  1740   0008BE                     _INTERRUPT_Initialize:
  1741                           	callstack 24
  1742   0008BE                     
  1743                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
  1744   0008BE  8ED0               	bsf	208,7,c	;volatile
  1745                           
  1746                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
  1747   0008C0  8EF2               	bsf	242,7,c	;volatile
  1748                           
  1749                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
  1750   0008C2  8CF2               	bsf	242,6,c	;volatile
  1751   0008C4                     
  1752                           ;setting_hardaware/interrupt_manager.c: 10:     ADCON1 = 0x0f;
  1753   0008C4  0E0F               	movlw	15
  1754   0008C6  6EC1               	movwf	193,c	;volatile
  1755   0008C8                     
  1756                           ;setting_hardaware/interrupt_manager.c: 11:     LATA = 0x00;
  1757   0008C8  6A89               	clrf	137,c	;volatile
  1758   0008CA                     
  1759                           ;setting_hardaware/interrupt_manager.c: 12:     TRISAbits.TRISA1 = 0;
  1760   0008CA  9292               	bcf	146,1,c	;volatile
  1761   0008CC                     
  1762                           ;setting_hardaware/interrupt_manager.c: 13:     TRISAbits.TRISA2 = 0;
  1763   0008CC  9492               	bcf	146,2,c	;volatile
  1764   0008CE                     
  1765                           ;setting_hardaware/interrupt_manager.c: 14:     TRISAbits.TRISA3 = 0;
  1766   0008CE  9692               	bcf	146,3,c	;volatile
  1767   0008D0                     
  1768                           ;setting_hardaware/interrupt_manager.c: 15:     TRISAbits.TRISA4 = 0;
  1769   0008D0  9892               	bcf	146,4,c	;volatile
  1770   0008D2                     
  1771                           ;setting_hardaware/interrupt_manager.c: 16:     LATAbits.LATA1 = 0;
  1772   0008D2  9289               	bcf	137,1,c	;volatile
  1773   0008D4                     
  1774                           ;setting_hardaware/interrupt_manager.c: 17:     LATAbits.LATA2 = 0;
  1775   0008D4  9489               	bcf	137,2,c	;volatile
  1776   0008D6                     
  1777                           ;setting_hardaware/interrupt_manager.c: 18:     LATAbits.LATA3 = 0;
  1778   0008D6  9689               	bcf	137,3,c	;volatile
  1779   0008D8                     
  1780                           ;setting_hardaware/interrupt_manager.c: 19:     LATAbits.LATA4 = 0;
  1781   0008D8  9889               	bcf	137,4,c	;volatile
  1782   0008DA                     
  1783                           ;setting_hardaware/interrupt_manager.c: 21:     INTCONbits.INT0IE = 1;
  1784   0008DA  88F2               	bsf	242,4,c	;volatile
  1785   0008DC                     
  1786                           ;setting_hardaware/interrupt_manager.c: 22:     INTCONbits.INT0IF = 0;
  1787   0008DC  92F2               	bcf	242,1,c	;volatile
  1788   0008DE  0012               	return		;funcret
  1789   0008E0                     __end_of_INTERRUPT_Initialize:
  1790                           	callstack 0
  1791                           
  1792 ;; *************** function _BreakOn *****************
  1793 ;; Defined at:
  1794 ;;		line 40 in file "main.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  num             2    1[BANK0 ] int 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;		None
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2, status,0, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1808 ;;      Params:         0       2       0       0       0       0       0
  1809 ;;      Locals:         0       0       0       0       0       0       0
  1810 ;;      Temps:          0       0       0       0       0       0       0
  1811 ;;      Totals:         0       2       0       0       0       0       0
  1812 ;;Total ram usage:        2 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; Hardware stack levels required when called: 6
  1815 ;; This function calls:
  1816 ;;		_displayBinary
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text10
  1823   000964                     __ptext10:
  1824                           	callstack 0
  1825   000964                     _BreakOn:
  1826                           	callstack 24
  1827   000964                     
  1828                           ;main.c: 41:     displayBinary(num);
  1829   000964  C081  F055         	movff	BreakOn@num,displayBinary@num
  1830   000968  C082  F056         	movff	BreakOn@num+1,displayBinary@num+1
  1831   00096C  EC68  F003         	call	_displayBinary	;wreg free
  1832   000970  0012               	return		;funcret
  1833   000972                     __end_of_BreakOn:
  1834                           	callstack 0
  1835                           
  1836 ;; *************** function _BreakOff *****************
  1837 ;; Defined at:
  1838 ;;		line 44 in file "main.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  num             2    1[BANK0 ] int 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, status,2, status,0, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1852 ;;      Params:         0       2       0       0       0       0       0
  1853 ;;      Locals:         0       0       0       0       0       0       0
  1854 ;;      Temps:          0       0       0       0       0       0       0
  1855 ;;      Totals:         0       2       0       0       0       0       0
  1856 ;;Total ram usage:        2 bytes
  1857 ;; Hardware stack levels used: 1
  1858 ;; Hardware stack levels required when called: 6
  1859 ;; This function calls:
  1860 ;;		_displayBinary
  1861 ;; This function is called by:
  1862 ;;		_main
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           	psect	text11
  1867   000972                     __ptext11:
  1868                           	callstack 0
  1869   000972                     _BreakOff:
  1870                           	callstack 24
  1871   000972                     
  1872                           ;main.c: 45:     displayBinary(num);
  1873   000972  C081  F055         	movff	BreakOff@num,displayBinary@num
  1874   000976  C082  F056         	movff	BreakOff@num+1,displayBinary@num+1
  1875   00097A  EC68  F003         	call	_displayBinary	;wreg free
  1876   00097E  0012               	return		;funcret
  1877   000980                     __end_of_BreakOff:
  1878                           	callstack 0
  1879                           
  1880 ;; *************** function _displayBinary *****************
  1881 ;; Defined at:
  1882 ;;		line 12 in file "main.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  num             2   40[COMRAM] int 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1896 ;;      Params:         2       0       0       0       0       0       0
  1897 ;;      Locals:         0       0       0       0       0       0       0
  1898 ;;      Temps:          0       1       0       0       0       0       0
  1899 ;;      Totals:         2       1       0       0       0       0       0
  1900 ;;Total ram usage:        3 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 5
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_initialState
  1907 ;;		_ledRightOn
  1908 ;;		_ledRightOff
  1909 ;;		_ledLeftOn
  1910 ;;		_ledLeftOff
  1911 ;;		_BreakOn
  1912 ;;		_BreakOff
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text12
  1917   0006D0                     __ptext12:
  1918                           	callstack 0
  1919   0006D0                     _displayBinary:
  1920                           	callstack 24
  1921   0006D0                     
  1922                           ;main.c: 14:     LATAbits.LATA1 = (num & 0x01) ? 1 : 0;
  1923   0006D0  B055               	btfsc	displayBinary@num^0,0,c
  1924   0006D2  EF6D  F003         	goto	u821
  1925   0006D6  EF72  F003         	goto	u820
  1926   0006DA                     u821:
  1927   0006DA  0100               	movlb	0	; () banked
  1928   0006DC  6B80               	clrf	??_displayBinary& (0+255),b
  1929   0006DE  2B80               	incf	??_displayBinary& (0+255),f,b
  1930   0006E0  EF74  F003         	goto	u838
  1931   0006E4                     u820:
  1932   0006E4  0100               	movlb	0	; () banked
  1933   0006E6  6B80               	clrf	??_displayBinary& (0+255),b
  1934   0006E8                     u838:
  1935   0006E8  4780               	rlncf	??_displayBinary& (0+255),f,b
  1936   0006EA  5089               	movf	137,w,c	;volatile
  1937   0006EC  1980               	xorwf	??_displayBinary& (0+255),w,b
  1938   0006EE  0BFD               	andlw	-3
  1939   0006F0  1980               	xorwf	??_displayBinary& (0+255),w,b
  1940   0006F2  6E89               	movwf	137,c	;volatile
  1941                           
  1942                           ;main.c: 15:     LATAbits.LATA2 = (num & 0x02) ? 1 : 0;
  1943   0006F4  B255               	btfsc	displayBinary@num^0,1,c
  1944   0006F6  EF7F  F003         	goto	u841
  1945   0006FA  EF83  F003         	goto	u840
  1946   0006FE                     u841:
  1947   0006FE  6B80               	clrf	??_displayBinary& (0+255),b
  1948   000700  2B80               	incf	??_displayBinary& (0+255),f,b
  1949   000702  EF85  F003         	goto	u858
  1950   000706                     u840:
  1951   000706  0100               	movlb	0	; () banked
  1952   000708  6B80               	clrf	??_displayBinary& (0+255),b
  1953   00070A                     u858:
  1954   00070A  4780               	rlncf	??_displayBinary& (0+255),f,b
  1955   00070C  4780               	rlncf	??_displayBinary& (0+255),f,b
  1956   00070E  5089               	movf	137,w,c	;volatile
  1957   000710  1980               	xorwf	??_displayBinary& (0+255),w,b
  1958   000712  0BFB               	andlw	-5
  1959   000714  1980               	xorwf	??_displayBinary& (0+255),w,b
  1960   000716  6E89               	movwf	137,c	;volatile
  1961                           
  1962                           ;main.c: 16:     LATAbits.LATA3 = (num & 0x04) ? 1 : 0;
  1963   000718  B455               	btfsc	displayBinary@num^0,2,c
  1964   00071A  EF91  F003         	goto	u861
  1965   00071E  EF95  F003         	goto	u860
  1966   000722                     u861:
  1967   000722  6B80               	clrf	??_displayBinary& (0+255),b
  1968   000724  2B80               	incf	??_displayBinary& (0+255),f,b
  1969   000726  EF97  F003         	goto	u878
  1970   00072A                     u860:
  1971   00072A  0100               	movlb	0	; () banked
  1972   00072C  6B80               	clrf	??_displayBinary& (0+255),b
  1973   00072E                     u878:
  1974   00072E  4780               	rlncf	??_displayBinary& (0+255),f,b
  1975   000730  4780               	rlncf	??_displayBinary& (0+255),f,b
  1976   000732  4780               	rlncf	??_displayBinary& (0+255),f,b
  1977   000734  5089               	movf	137,w,c	;volatile
  1978   000736  1980               	xorwf	??_displayBinary& (0+255),w,b
  1979   000738  0BF7               	andlw	-9
  1980   00073A  1980               	xorwf	??_displayBinary& (0+255),w,b
  1981   00073C  6E89               	movwf	137,c	;volatile
  1982                           
  1983                           ;main.c: 17:     LATAbits.LATA4 = (num & 0x08) ? 1 : 0;
  1984   00073E  B655               	btfsc	displayBinary@num^0,3,c
  1985   000740  EFA4  F003         	goto	u881
  1986   000744  EFA8  F003         	goto	u880
  1987   000748                     u881:
  1988   000748  6B80               	clrf	??_displayBinary& (0+255),b
  1989   00074A  2B80               	incf	??_displayBinary& (0+255),f,b
  1990   00074C  EFAA  F003         	goto	u898
  1991   000750                     u880:
  1992   000750  0100               	movlb	0	; () banked
  1993   000752  6B80               	clrf	??_displayBinary& (0+255),b
  1994   000754                     u898:
  1995   000754  3B80               	swapf	??_displayBinary& (0+255),f,b
  1996   000756  5089               	movf	137,w,c	;volatile
  1997   000758  1980               	xorwf	??_displayBinary& (0+255),w,b
  1998   00075A  0BEF               	andlw	-17
  1999   00075C  1980               	xorwf	??_displayBinary& (0+255),w,b
  2000   00075E  6E89               	movwf	137,c	;volatile
  2001   000760                     
  2002                           ; BSR set to: 0
  2003   000760  0012               	return		;funcret
  2004   000762                     __end_of_displayBinary:
  2005                           	callstack 0
  2006                           
  2007 ;; *************** function _Lo_ISR *****************
  2008 ;; Defined at:
  2009 ;;		line 88 in file "main.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  command        20   20[COMRAM] unsigned char [20]
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2023 ;;      Params:         0       0       0       0       0       0       0
  2024 ;;      Locals:        20       0       0       0       0       0       0
  2025 ;;      Temps:         12       0       0       0       0       0       0
  2026 ;;      Totals:        32       0       0       0       0       0       0
  2027 ;;Total ram usage:       32 bytes
  2028 ;; Hardware stack levels used: 1
  2029 ;; Hardware stack levels required when called: 4
  2030 ;; This function calls:
  2031 ;;		_ClearBuffer
  2032 ;;		_GetString
  2033 ;;		_MyusartRead
  2034 ;;		_strcpy
  2035 ;;		_strlen
  2036 ;; This function is called by:
  2037 ;;		Interrupt level 1
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	intcodelo
  2042   000018                     __pintcodelo:
  2043                           	callstack 0
  2044   000018                     _Lo_ISR:
  2045                           	callstack 24
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;incstack = 0
  2049   000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2050   00001A  CFD8 F036          	movff	status,??_Lo_ISR+1
  2051   00001E  CFE8 F037          	movff	wreg,??_Lo_ISR+2
  2052   000022  CFE0 F038          	movff	bsr,??_Lo_ISR+3
  2053   000026  CFE1 F039          	movff	fsr1l,??_Lo_ISR+4
  2054   00002A  CFE2 F03A          	movff	fsr1h,??_Lo_ISR+5
  2055   00002E  CFD9 F03B          	movff	fsr2l,??_Lo_ISR+6
  2056   000032  CFDA F03C          	movff	fsr2h,??_Lo_ISR+7
  2057   000036  CFF6 F03D          	movff	tblptrl,??_Lo_ISR+8
  2058   00003A  CFF7 F03E          	movff	tblptrh,??_Lo_ISR+9
  2059   00003E  CFF8 F03F          	movff	tblptru,??_Lo_ISR+10
  2060   000042  CFF5 F040          	movff	tablat,??_Lo_ISR+11
  2061   000046                     
  2062                           ;main.c: 90:     if(RCIF)
  2063   000046  AA9E               	btfss	3998,5,c	;volatile
  2064   000048  EF28  F000         	goto	i1u56_21
  2065   00004C  EF2A  F000         	goto	i1u56_20
  2066   000050                     i1u56_21:
  2067   000050  EFA4  F001         	goto	i1l204
  2068   000054                     i1u56_20:
  2069   000054                     
  2070                           ;main.c: 91:     {;main.c: 92:         if(RCSTAbits.OERR)
  2071   000054  A2AB               	btfss	171,1,c	;volatile
  2072   000056  EF2F  F000         	goto	i1u57_21
  2073   00005A  EF31  F000         	goto	i1u57_20
  2074   00005E                     i1u57_21:
  2075   00005E  EF34  F000         	goto	i1l1296
  2076   000062                     i1u57_20:
  2077   000062                     
  2078                           ;main.c: 93:         {;main.c: 94:             CREN = 0;
  2079   000062  98AB               	bcf	4011,4,c	;volatile
  2080                           
  2081                           ;main.c: 95:             __nop();
  2082   000064  0000               	nop	
  2083                           
  2084                           ;main.c: 96:             CREN = 1;
  2085   000066  88AB               	bsf	4011,4,c	;volatile
  2086   000068                     i1l1296:
  2087                           
  2088                           ;main.c: 99:         MyusartRead();
  2089   000068  EC1A  F004         	call	_MyusartRead	;wreg free
  2090   00006C                     
  2091                           ;main.c: 100:         char command[20];;main.c: 101:         if(RCREG == '\r' || RCREG =
      +                          = '\n'){
  2092   00006C  0E0D               	movlw	13
  2093   00006E  18AE               	xorwf	174,w,c	;volatile
  2094   000070  B4D8               	btfsc	status,2,c
  2095   000072  EF3D  F000         	goto	i1u58_21
  2096   000076  EF3F  F000         	goto	i1u58_20
  2097   00007A                     i1u58_21:
  2098   00007A  EF48  F000         	goto	i1l1302
  2099   00007E                     i1u58_20:
  2100   00007E  0E0A               	movlw	10
  2101   000080  18AE               	xorwf	174,w,c	;volatile
  2102   000082  A4D8               	btfss	status,2,c
  2103   000084  EF46  F000         	goto	i1u59_21
  2104   000088  EF48  F000         	goto	i1u59_20
  2105   00008C                     i1u59_21:
  2106   00008C  EF54  F000         	goto	i1l1306
  2107   000090                     i1u59_20:
  2108   000090                     i1l1302:
  2109                           
  2110                           ;main.c: 102:             strcpy(command, GetString());
  2111   000090  0E41               	movlw	low Lo_ISR@command
  2112   000092  6E2F               	movwf	strcpy@dest^0,c
  2113   000094  ECC7  F004         	call	_GetString	;wreg free
  2114   000098  6E35               	movwf	??_Lo_ISR^0,c
  2115   00009A  C035  F030         	movff	??_Lo_ISR,strcpy@src
  2116   00009E  6A31               	clrf	(strcpy@src+1)^0,c
  2117   0000A0  ECB1  F003         	call	_strcpy	;wreg free
  2118   0000A4                     
  2119                           ;main.c: 103:             ClearBuffer();
  2120   0000A4  ECFC  F003         	call	_ClearBuffer	;wreg free
  2121   0000A8                     i1l1306:
  2122                           
  2123                           ;main.c: 105:         if(command[0] == 'L' && command[1] == 'R' && command[2] == 'N' && 
      +                          strlen(command) == 3){
  2124   0000A8  0E4C               	movlw	76
  2125   0000AA  1841               	xorwf	Lo_ISR@command^0,w,c
  2126   0000AC  A4D8               	btfss	status,2,c
  2127   0000AE  EF5B  F000         	goto	i1u60_21
  2128   0000B2  EF5D  F000         	goto	i1u60_20
  2129   0000B6                     i1u60_21:
  2130   0000B6  EF8F  F000         	goto	i1l1324
  2131   0000BA                     i1u60_20:
  2132   0000BA  0E52               	movlw	82
  2133   0000BC  1842               	xorwf	(Lo_ISR@command+1)^0,w,c
  2134   0000BE  A4D8               	btfss	status,2,c
  2135   0000C0  EF64  F000         	goto	i1u61_21
  2136   0000C4  EF66  F000         	goto	i1u61_20
  2137   0000C8                     i1u61_21:
  2138   0000C8  EF8F  F000         	goto	i1l1324
  2139   0000CC                     i1u61_20:
  2140   0000CC  0E4E               	movlw	78
  2141   0000CE  1843               	xorwf	(Lo_ISR@command+2)^0,w,c
  2142   0000D0  A4D8               	btfss	status,2,c
  2143   0000D2  EF6D  F000         	goto	i1u62_21
  2144   0000D6  EF6F  F000         	goto	i1u62_20
  2145   0000DA                     i1u62_21:
  2146   0000DA  EF8F  F000         	goto	i1l1324
  2147   0000DE                     i1u62_20:
  2148   0000DE  0E41               	movlw	low Lo_ISR@command
  2149   0000E0  6E2D               	movwf	strlen@s^0,c
  2150   0000E2  EC37  F004         	call	_strlen	;wreg free
  2151   0000E6  0E03               	movlw	3
  2152   0000E8  182D               	xorwf	?_strlen^0,w,c
  2153   0000EA  102E               	iorwf	(?_strlen+1)^0,w,c
  2154   0000EC  A4D8               	btfss	status,2,c
  2155   0000EE  EF7B  F000         	goto	i1u63_21
  2156   0000F2  EF7D  F000         	goto	i1u63_20
  2157   0000F6                     i1u63_21:
  2158   0000F6  EF8F  F000         	goto	i1l1324
  2159   0000FA                     i1u63_20:
  2160   0000FA                     
  2161                           ;main.c: 106:             state = 1;
  2162   0000FA  0E00               	movlw	0
  2163   0000FC  6E16               	movwf	(_state+1)^0,c
  2164   0000FE  0E01               	movlw	1
  2165   000100  6E15               	movwf	_state^0,c
  2166   000102                     
  2167                           ;main.c: 107:             ClearBuffer();
  2168   000102  ECFC  F003         	call	_ClearBuffer	;wreg free
  2169   000106                     
  2170                           ;main.c: 108:             strcpy(command, "");
  2171   000106  0E41               	movlw	low Lo_ISR@command
  2172   000108  6E2F               	movwf	strcpy@dest^0,c
  2173   00010A  0E03               	movlw	low (STR_1+2)
  2174   00010C  6E30               	movwf	strcpy@src^0,c
  2175   00010E  5030               	movf	strcpy@src^0,w,c
  2176   000110  A4D8               	btfss	status,2,c
  2177   000112  0E06               	movlw	high __smallconst
  2178   000114  6E31               	movwf	(strcpy@src+1)^0,c
  2179   000116  ECB1  F003         	call	_strcpy	;wreg free
  2180   00011A  EFA4  F001         	goto	i1l204
  2181   00011E                     i1l1324:
  2182   00011E  0E4C               	movlw	76
  2183   000120  1841               	xorwf	Lo_ISR@command^0,w,c
  2184   000122  A4D8               	btfss	status,2,c
  2185   000124  EF96  F000         	goto	i1u64_21
  2186   000128  EF98  F000         	goto	i1u64_20
  2187   00012C                     i1u64_21:
  2188   00012C  EFCA  F000         	goto	i1l1342
  2189   000130                     i1u64_20:
  2190   000130  0E52               	movlw	82
  2191   000132  1842               	xorwf	(Lo_ISR@command+1)^0,w,c
  2192   000134  A4D8               	btfss	status,2,c
  2193   000136  EF9F  F000         	goto	i1u65_21
  2194   00013A  EFA1  F000         	goto	i1u65_20
  2195   00013E                     i1u65_21:
  2196   00013E  EFCA  F000         	goto	i1l1342
  2197   000142                     i1u65_20:
  2198   000142  0E46               	movlw	70
  2199   000144  1843               	xorwf	(Lo_ISR@command+2)^0,w,c
  2200   000146  A4D8               	btfss	status,2,c
  2201   000148  EFA8  F000         	goto	i1u66_21
  2202   00014C  EFAA  F000         	goto	i1u66_20
  2203   000150                     i1u66_21:
  2204   000150  EFCA  F000         	goto	i1l1342
  2205   000154                     i1u66_20:
  2206   000154  0E41               	movlw	low Lo_ISR@command
  2207   000156  6E2D               	movwf	strlen@s^0,c
  2208   000158  EC37  F004         	call	_strlen	;wreg free
  2209   00015C  0E03               	movlw	3
  2210   00015E  182D               	xorwf	?_strlen^0,w,c
  2211   000160  102E               	iorwf	(?_strlen+1)^0,w,c
  2212   000162  A4D8               	btfss	status,2,c
  2213   000164  EFB6  F000         	goto	i1u67_21
  2214   000168  EFB8  F000         	goto	i1u67_20
  2215   00016C                     i1u67_21:
  2216   00016C  EFCA  F000         	goto	i1l1342
  2217   000170                     i1u67_20:
  2218   000170                     
  2219                           ;main.c: 112:             state = 2;
  2220   000170  0E00               	movlw	0
  2221   000172  6E16               	movwf	(_state+1)^0,c
  2222   000174  0E02               	movlw	2
  2223   000176  6E15               	movwf	_state^0,c
  2224   000178                     
  2225                           ;main.c: 113:             ClearBuffer();
  2226   000178  ECFC  F003         	call	_ClearBuffer	;wreg free
  2227   00017C                     
  2228                           ;main.c: 114:             strcpy(command, "");
  2229   00017C  0E41               	movlw	low Lo_ISR@command
  2230   00017E  6E2F               	movwf	strcpy@dest^0,c
  2231   000180  0E03               	movlw	low (STR_1+2)
  2232   000182  6E30               	movwf	strcpy@src^0,c
  2233   000184  5030               	movf	strcpy@src^0,w,c
  2234   000186  A4D8               	btfss	status,2,c
  2235   000188  0E06               	movlw	high __smallconst
  2236   00018A  6E31               	movwf	(strcpy@src+1)^0,c
  2237   00018C  ECB1  F003         	call	_strcpy	;wreg free
  2238   000190  EFA4  F001         	goto	i1l204
  2239   000194                     i1l1342:
  2240   000194  0E4C               	movlw	76
  2241   000196  1841               	xorwf	Lo_ISR@command^0,w,c
  2242   000198  A4D8               	btfss	status,2,c
  2243   00019A  EFD1  F000         	goto	i1u68_21
  2244   00019E  EFD3  F000         	goto	i1u68_20
  2245   0001A2                     i1u68_21:
  2246   0001A2  EF05  F001         	goto	i1l1360
  2247   0001A6                     i1u68_20:
  2248   0001A6  0E4C               	movlw	76
  2249   0001A8  1842               	xorwf	(Lo_ISR@command+1)^0,w,c
  2250   0001AA  A4D8               	btfss	status,2,c
  2251   0001AC  EFDA  F000         	goto	i1u69_21
  2252   0001B0  EFDC  F000         	goto	i1u69_20
  2253   0001B4                     i1u69_21:
  2254   0001B4  EF05  F001         	goto	i1l1360
  2255   0001B8                     i1u69_20:
  2256   0001B8  0E4E               	movlw	78
  2257   0001BA  1843               	xorwf	(Lo_ISR@command+2)^0,w,c
  2258   0001BC  A4D8               	btfss	status,2,c
  2259   0001BE  EFE3  F000         	goto	i1u70_21
  2260   0001C2  EFE5  F000         	goto	i1u70_20
  2261   0001C6                     i1u70_21:
  2262   0001C6  EF05  F001         	goto	i1l1360
  2263   0001CA                     i1u70_20:
  2264   0001CA  0E41               	movlw	low Lo_ISR@command
  2265   0001CC  6E2D               	movwf	strlen@s^0,c
  2266   0001CE  EC37  F004         	call	_strlen	;wreg free
  2267   0001D2  0E03               	movlw	3
  2268   0001D4  182D               	xorwf	?_strlen^0,w,c
  2269   0001D6  102E               	iorwf	(?_strlen+1)^0,w,c
  2270   0001D8  A4D8               	btfss	status,2,c
  2271   0001DA  EFF1  F000         	goto	i1u71_21
  2272   0001DE  EFF3  F000         	goto	i1u71_20
  2273   0001E2                     i1u71_21:
  2274   0001E2  EF05  F001         	goto	i1l1360
  2275   0001E6                     i1u71_20:
  2276   0001E6                     
  2277                           ;main.c: 118:             state = 3;
  2278   0001E6  0E00               	movlw	0
  2279   0001E8  6E16               	movwf	(_state+1)^0,c
  2280   0001EA  0E03               	movlw	3
  2281   0001EC  6E15               	movwf	_state^0,c
  2282   0001EE                     
  2283                           ;main.c: 119:             ClearBuffer();
  2284   0001EE  ECFC  F003         	call	_ClearBuffer	;wreg free
  2285   0001F2                     
  2286                           ;main.c: 120:             strcpy(command, "");
  2287   0001F2  0E41               	movlw	low Lo_ISR@command
  2288   0001F4  6E2F               	movwf	strcpy@dest^0,c
  2289   0001F6  0E03               	movlw	low (STR_1+2)
  2290   0001F8  6E30               	movwf	strcpy@src^0,c
  2291   0001FA  5030               	movf	strcpy@src^0,w,c
  2292   0001FC  A4D8               	btfss	status,2,c
  2293   0001FE  0E06               	movlw	high __smallconst
  2294   000200  6E31               	movwf	(strcpy@src+1)^0,c
  2295   000202  ECB1  F003         	call	_strcpy	;wreg free
  2296   000206  EFA4  F001         	goto	i1l204
  2297   00020A                     i1l1360:
  2298   00020A  0E4C               	movlw	76
  2299   00020C  1841               	xorwf	Lo_ISR@command^0,w,c
  2300   00020E  A4D8               	btfss	status,2,c
  2301   000210  EF0C  F001         	goto	i1u72_21
  2302   000214  EF0E  F001         	goto	i1u72_20
  2303   000218                     i1u72_21:
  2304   000218  EF40  F001         	goto	i1l1378
  2305   00021C                     i1u72_20:
  2306   00021C  0E4C               	movlw	76
  2307   00021E  1842               	xorwf	(Lo_ISR@command+1)^0,w,c
  2308   000220  A4D8               	btfss	status,2,c
  2309   000222  EF15  F001         	goto	i1u73_21
  2310   000226  EF17  F001         	goto	i1u73_20
  2311   00022A                     i1u73_21:
  2312   00022A  EF40  F001         	goto	i1l1378
  2313   00022E                     i1u73_20:
  2314   00022E  0E46               	movlw	70
  2315   000230  1843               	xorwf	(Lo_ISR@command+2)^0,w,c
  2316   000232  A4D8               	btfss	status,2,c
  2317   000234  EF1E  F001         	goto	i1u74_21
  2318   000238  EF20  F001         	goto	i1u74_20
  2319   00023C                     i1u74_21:
  2320   00023C  EF40  F001         	goto	i1l1378
  2321   000240                     i1u74_20:
  2322   000240  0E41               	movlw	low Lo_ISR@command
  2323   000242  6E2D               	movwf	strlen@s^0,c
  2324   000244  EC37  F004         	call	_strlen	;wreg free
  2325   000248  0E03               	movlw	3
  2326   00024A  182D               	xorwf	?_strlen^0,w,c
  2327   00024C  102E               	iorwf	(?_strlen+1)^0,w,c
  2328   00024E  A4D8               	btfss	status,2,c
  2329   000250  EF2C  F001         	goto	i1u75_21
  2330   000254  EF2E  F001         	goto	i1u75_20
  2331   000258                     i1u75_21:
  2332   000258  EF40  F001         	goto	i1l1378
  2333   00025C                     i1u75_20:
  2334   00025C                     
  2335                           ;main.c: 124:             state = 4;
  2336   00025C  0E00               	movlw	0
  2337   00025E  6E16               	movwf	(_state+1)^0,c
  2338   000260  0E04               	movlw	4
  2339   000262  6E15               	movwf	_state^0,c
  2340   000264                     
  2341                           ;main.c: 125:             ClearBuffer();
  2342   000264  ECFC  F003         	call	_ClearBuffer	;wreg free
  2343   000268                     
  2344                           ;main.c: 126:             strcpy(command, "");
  2345   000268  0E41               	movlw	low Lo_ISR@command
  2346   00026A  6E2F               	movwf	strcpy@dest^0,c
  2347   00026C  0E03               	movlw	low (STR_1+2)
  2348   00026E  6E30               	movwf	strcpy@src^0,c
  2349   000270  5030               	movf	strcpy@src^0,w,c
  2350   000272  A4D8               	btfss	status,2,c
  2351   000274  0E06               	movlw	high __smallconst
  2352   000276  6E31               	movwf	(strcpy@src+1)^0,c
  2353   000278  ECB1  F003         	call	_strcpy	;wreg free
  2354   00027C  EFA4  F001         	goto	i1l204
  2355   000280                     i1l1378:
  2356   000280  0E42               	movlw	66
  2357   000282  1841               	xorwf	Lo_ISR@command^0,w,c
  2358   000284  A4D8               	btfss	status,2,c
  2359   000286  EF47  F001         	goto	i1u76_21
  2360   00028A  EF49  F001         	goto	i1u76_20
  2361   00028E                     i1u76_21:
  2362   00028E  EF72  F001         	goto	i1l1394
  2363   000292                     i1u76_20:
  2364   000292  0E4E               	movlw	78
  2365   000294  1842               	xorwf	(Lo_ISR@command+1)^0,w,c
  2366   000296  A4D8               	btfss	status,2,c
  2367   000298  EF50  F001         	goto	i1u77_21
  2368   00029C  EF52  F001         	goto	i1u77_20
  2369   0002A0                     i1u77_21:
  2370   0002A0  EF72  F001         	goto	i1l1394
  2371   0002A4                     i1u77_20:
  2372   0002A4  0E41               	movlw	low Lo_ISR@command
  2373   0002A6  6E2D               	movwf	strlen@s^0,c
  2374   0002A8  EC37  F004         	call	_strlen	;wreg free
  2375   0002AC  0E02               	movlw	2
  2376   0002AE  182D               	xorwf	?_strlen^0,w,c
  2377   0002B0  102E               	iorwf	(?_strlen+1)^0,w,c
  2378   0002B2  A4D8               	btfss	status,2,c
  2379   0002B4  EF5E  F001         	goto	i1u78_21
  2380   0002B8  EF60  F001         	goto	i1u78_20
  2381   0002BC                     i1u78_21:
  2382   0002BC  EF72  F001         	goto	i1l1394
  2383   0002C0                     i1u78_20:
  2384   0002C0                     
  2385                           ;main.c: 130:             state = 5;
  2386   0002C0  0E00               	movlw	0
  2387   0002C2  6E16               	movwf	(_state+1)^0,c
  2388   0002C4  0E05               	movlw	5
  2389   0002C6  6E15               	movwf	_state^0,c
  2390   0002C8                     
  2391                           ;main.c: 131:             ClearBuffer();
  2392   0002C8  ECFC  F003         	call	_ClearBuffer	;wreg free
  2393   0002CC                     
  2394                           ;main.c: 132:             strcpy(command, "");
  2395   0002CC  0E41               	movlw	low Lo_ISR@command
  2396   0002CE  6E2F               	movwf	strcpy@dest^0,c
  2397   0002D0  0E03               	movlw	low (STR_1+2)
  2398   0002D2  6E30               	movwf	strcpy@src^0,c
  2399   0002D4  5030               	movf	strcpy@src^0,w,c
  2400   0002D6  A4D8               	btfss	status,2,c
  2401   0002D8  0E06               	movlw	high __smallconst
  2402   0002DA  6E31               	movwf	(strcpy@src+1)^0,c
  2403   0002DC  ECB1  F003         	call	_strcpy	;wreg free
  2404   0002E0  EFA4  F001         	goto	i1l204
  2405   0002E4                     i1l1394:
  2406   0002E4  0E42               	movlw	66
  2407   0002E6  1841               	xorwf	Lo_ISR@command^0,w,c
  2408   0002E8  A4D8               	btfss	status,2,c
  2409   0002EA  EF79  F001         	goto	i1u79_21
  2410   0002EE  EF7B  F001         	goto	i1u79_20
  2411   0002F2                     i1u79_21:
  2412   0002F2  EFA4  F001         	goto	i1l209
  2413   0002F6                     i1u79_20:
  2414   0002F6  0E46               	movlw	70
  2415   0002F8  1842               	xorwf	(Lo_ISR@command+1)^0,w,c
  2416   0002FA  A4D8               	btfss	status,2,c
  2417   0002FC  EF82  F001         	goto	i1u80_21
  2418   000300  EF84  F001         	goto	i1u80_20
  2419   000304                     i1u80_21:
  2420   000304  EFA4  F001         	goto	i1l209
  2421   000308                     i1u80_20:
  2422   000308  0E41               	movlw	low Lo_ISR@command
  2423   00030A  6E2D               	movwf	strlen@s^0,c
  2424   00030C  EC37  F004         	call	_strlen	;wreg free
  2425   000310  0E02               	movlw	2
  2426   000312  182D               	xorwf	?_strlen^0,w,c
  2427   000314  102E               	iorwf	(?_strlen+1)^0,w,c
  2428   000316  A4D8               	btfss	status,2,c
  2429   000318  EF90  F001         	goto	i1u81_21
  2430   00031C  EF92  F001         	goto	i1u81_20
  2431   000320                     i1u81_21:
  2432   000320  EFA4  F001         	goto	i1l209
  2433   000324                     i1u81_20:
  2434   000324                     
  2435                           ;main.c: 136:             state = 6;
  2436   000324  0E00               	movlw	0
  2437   000326  6E16               	movwf	(_state+1)^0,c
  2438   000328  0E06               	movlw	6
  2439   00032A  6E15               	movwf	_state^0,c
  2440   00032C                     
  2441                           ;main.c: 137:             ClearBuffer();
  2442   00032C  ECFC  F003         	call	_ClearBuffer	;wreg free
  2443   000330                     
  2444                           ;main.c: 138:             strcpy(command, "");
  2445   000330  0E41               	movlw	low Lo_ISR@command
  2446   000332  6E2F               	movwf	strcpy@dest^0,c
  2447   000334  0E03               	movlw	low (STR_1+2)
  2448   000336  6E30               	movwf	strcpy@src^0,c
  2449   000338  5030               	movf	strcpy@src^0,w,c
  2450   00033A  A4D8               	btfss	status,2,c
  2451   00033C  0E06               	movlw	high __smallconst
  2452   00033E  6E31               	movwf	(strcpy@src+1)^0,c
  2453   000340  ECB1  F003         	call	_strcpy	;wreg free
  2454   000344  EFA4  F001         	goto	i1l204
  2455   000348                     i1l209:
  2456   000348                     i1l204:
  2457   000348  C040  FFF5         	movff	??_Lo_ISR+11,tablat
  2458   00034C  C03F  FFF8         	movff	??_Lo_ISR+10,tblptru
  2459   000350  C03E  FFF7         	movff	??_Lo_ISR+9,tblptrh
  2460   000354  C03D  FFF6         	movff	??_Lo_ISR+8,tblptrl
  2461   000358  C03C  FFDA         	movff	??_Lo_ISR+7,fsr2h
  2462   00035C  C03B  FFD9         	movff	??_Lo_ISR+6,fsr2l
  2463   000360  C03A  FFE2         	movff	??_Lo_ISR+5,fsr1h
  2464   000364  C039  FFE1         	movff	??_Lo_ISR+4,fsr1l
  2465   000368  C038  FFE0         	movff	??_Lo_ISR+3,bsr
  2466   00036C  C037  FFE8         	movff	??_Lo_ISR+2,wreg
  2467   000370  C036  FFD8         	movff	??_Lo_ISR+1,status
  2468   000374  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2469   000376  0010               	retfie	
  2470   000378                     __end_of_Lo_ISR:
  2471                           	callstack 0
  2472                           
  2473 ;; *************** function _strlen *****************
  2474 ;; Defined at:
  2475 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2478 ;;		 -> Lo_ISR@command(20), 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2481 ;;		 -> Lo_ISR@command(20), 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  2    0[COMRAM] unsigned int 
  2484 ;; Registers used:
  2485 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2491 ;;      Params:         2       0       0       0       0       0       0
  2492 ;;      Locals:         1       0       0       0       0       0       0
  2493 ;;      Temps:          0       0       0       0       0       0       0
  2494 ;;      Totals:         3       0       0       0       0       0       0
  2495 ;;Total ram usage:        3 bytes
  2496 ;; Hardware stack levels used: 1
  2497 ;; Hardware stack levels required when called: 1
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_Lo_ISR
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text14
  2506   00086E                     __ptext14:
  2507                           	callstack 0
  2508   00086E                     _strlen:
  2509                           	callstack 26
  2510   00086E  C02D  F02F         	movff	strlen@s,strlen@a
  2511   000872  EF3C  F004         	goto	i1l1260
  2512   000876                     i1l1258:
  2513   000876  2A2D               	incf	strlen@s^0,f,c
  2514   000878                     i1l1260:
  2515   000878  502D               	movf	strlen@s^0,w,c
  2516   00087A  6ED9               	movwf	fsr2l,c
  2517   00087C  6ADA               	clrf	fsr2h,c
  2518   00087E  50DF               	movf	indf2,w,c
  2519   000880  A4D8               	btfss	status,2,c
  2520   000882  EF45  F004         	goto	i1u55_21
  2521   000886  EF47  F004         	goto	i1u55_20
  2522   00088A                     i1u55_21:
  2523   00088A  EF3B  F004         	goto	i1l1258
  2524   00088E                     i1u55_20:
  2525   00088E  502F               	movf	strlen@a^0,w,c
  2526   000890  5C2D               	subwf	strlen@s^0,w,c
  2527   000892  6E2D               	movwf	?_strlen^0,c
  2528   000894  6A2E               	clrf	(?_strlen+1)^0,c
  2529   000896  BE2D               	btfsc	?_strlen^0,7,c
  2530   000898  062E               	decf	(?_strlen+1)^0,f,c
  2531   00089A  0012               	return		;funcret
  2532   00089C                     __end_of_strlen:
  2533                           	callstack 0
  2534                           
  2535 ;; *************** function _strcpy *****************
  2536 ;; Defined at:
  2537 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  dest            1    2[COMRAM] PTR unsigned char 
  2540 ;;		 -> Lo_ISR@command(20), 
  2541 ;;  src             2    3[COMRAM] PTR const unsigned char 
  2542 ;;		 -> STR_7(1), STR_6(1), STR_5(1), STR_4(1), 
  2543 ;;		 -> STR_3(1), STR_2(1), mystring(20), 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  d               1    7[COMRAM] PTR unsigned char 
  2546 ;;		 -> Lo_ISR@command(20), 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    2[COMRAM] PTR unsigned char 
  2549 ;; Registers used:
  2550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2556 ;;      Params:         3       0       0       0       0       0       0
  2557 ;;      Locals:         1       0       0       0       0       0       0
  2558 ;;      Temps:          2       0       0       0       0       0       0
  2559 ;;      Totals:         6       0       0       0       0       0       0
  2560 ;;Total ram usage:        6 bytes
  2561 ;; Hardware stack levels used: 1
  2562 ;; Hardware stack levels required when called: 1
  2563 ;; This function calls:
  2564 ;;		Nothing
  2565 ;; This function is called by:
  2566 ;;		_Lo_ISR
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text15
  2571   000762                     __ptext15:
  2572                           	callstack 0
  2573   000762                     _strcpy:
  2574                           	callstack 26
  2575   000762  C02F  F034         	movff	strcpy@dest,strcpy@d
  2576   000766                     i1l1254:
  2577   000766  5030               	movf	strcpy@src^0,w,c
  2578   000768  6E32               	movwf	??_strcpy^0,c
  2579   00076A  5031               	movf	(strcpy@src+1)^0,w,c
  2580   00076C  6E33               	movwf	(??_strcpy+1)^0,c
  2581   00076E  4A30               	infsnz	strcpy@src^0,f,c
  2582   000770  2A31               	incf	(strcpy@src+1)^0,f,c
  2583   000772  C032  FFF6         	movff	??_strcpy,tblptrl
  2584   000776  C033  FFF7         	movff	??_strcpy+1,tblptrh
  2585   00077A  6AF8               	clrf	tblptru,c
  2586   00077C  2A34               	incf	strcpy@d^0,f,c
  2587   00077E  0434               	decf	strcpy@d^0,w,c
  2588   000780  6ED9               	movwf	fsr2l,c
  2589   000782  6ADA               	clrf	fsr2h,c
  2590   000784  0E05               	movlw	(high __ramtop+-1)
  2591   000786  64F7               	cpfsgt	tblptrh,c
  2592   000788  D003               	bra	i1u53_27
  2593   00078A  0008               	tblrd		*
  2594   00078C  50F5               	movf	tablat,w,c
  2595   00078E  D005               	bra	i1u53_20
  2596   000790                     i1u53_27:
  2597   000790  CFF6 FFE1          	movff	tblptrl,fsr1l
  2598   000794  CFF7 FFE2          	movff	tblptrh,fsr1h
  2599   000798  50E7               	movf	indf1,w,c
  2600   00079A                     i1u53_20:
  2601   00079A  6EDF               	movwf	indf2,c
  2602   00079C  50DF               	movf	indf2,w,c
  2603   00079E  A4D8               	btfss	status,2,c
  2604   0007A0  EFD4  F003         	goto	i1u54_21
  2605   0007A4  EFD6  F003         	goto	i1u54_20
  2606   0007A8                     i1u54_21:
  2607   0007A8  EFB3  F003         	goto	i1l1254
  2608   0007AC                     i1u54_20:
  2609   0007AC  0012               	return		;funcret
  2610   0007AE                     __end_of_strcpy:
  2611                           	callstack 0
  2612                           
  2613 ;; *************** function _MyusartRead *****************
  2614 ;; Defined at:
  2615 ;;		line 62 in file "setting_hardaware/uart.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;		None
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  receivedData    1    5[COMRAM] unsigned char 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2629 ;;      Params:         0       0       0       0       0       0       0
  2630 ;;      Locals:         1       0       0       0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0       0       0
  2632 ;;      Totals:         1       0       0       0       0       0       0
  2633 ;;Total ram usage:        1 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 3
  2636 ;; This function calls:
  2637 ;;		_UART_Write
  2638 ;;		_UART_Write_Text
  2639 ;; This function is called by:
  2640 ;;		_Lo_ISR
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text16
  2645   000834                     __ptext16:
  2646                           	callstack 0
  2647   000834                     _MyusartRead:
  2648                           	callstack 24
  2649   000834                     
  2650                           ;setting_hardaware/uart.c: 66:     unsigned char receivedData = RCREG;
  2651   000834  CFAE F032          	movff	4014,MyusartRead@receivedData	;volatile
  2652   000838                     
  2653                           ;setting_hardaware/uart.c: 67:     if(receivedData == '\r'){
  2654   000838  0E0D               	movlw	13
  2655   00083A  1832               	xorwf	MyusartRead@receivedData^0,w,c
  2656   00083C  A4D8               	btfss	status,2,c
  2657   00083E  EF23  F004         	goto	i1u52_21
  2658   000842  EF25  F004         	goto	i1u52_20
  2659   000846                     i1u52_21:
  2660   000846  EF2B  F004         	goto	i1l1226
  2661   00084A                     i1u52_20:
  2662   00084A                     
  2663                           ;setting_hardaware/uart.c: 68:         UART_Write_Text("\r\n");
  2664   00084A  0E01               	movlw	low STR_1
  2665   00084C  6E2E               	movwf	UART_Write_Text@text^0,c
  2666   00084E  ECD7  F003         	call	_UART_Write_Text	;wreg free
  2667   000852  EF36  F004         	goto	i1l115
  2668   000856                     i1l1226:
  2669                           
  2670                           ;setting_hardaware/uart.c: 71:     mystring[lenStr] = receivedData;
  2671   000856  5017               	movf	_lenStr^0,w,c
  2672   000858  0F19               	addlw	low _mystring
  2673   00085A  6ED9               	movwf	fsr2l,c
  2674   00085C  6ADA               	clrf	fsr2h,c
  2675   00085E  C032  FFDF         	movff	MyusartRead@receivedData,indf2
  2676   000862                     
  2677                           ;setting_hardaware/uart.c: 72:     lenStr++;
  2678   000862  4A17               	infsnz	_lenStr^0,f,c
  2679   000864  2A18               	incf	(_lenStr+1)^0,f,c
  2680   000866                     
  2681                           ;setting_hardaware/uart.c: 73:     UART_Write(receivedData);
  2682   000866  5032               	movf	MyusartRead@receivedData^0,w,c
  2683   000868  EC7D  F004         	call	_UART_Write
  2684   00086C                     i1l115:
  2685   00086C  0012               	return		;funcret
  2686   00086E                     __end_of_MyusartRead:
  2687                           	callstack 0
  2688                           
  2689 ;; *************** function _UART_Write_Text *****************
  2690 ;; Defined at:
  2691 ;;		line 51 in file "setting_hardaware/uart.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  text            1    1[COMRAM] PTR unsigned char 
  2694 ;;		 -> STR_1(3), 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  i               2    3[COMRAM] int 
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      void 
  2699 ;; Registers used:
  2700 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2706 ;;      Params:         1       0       0       0       0       0       0
  2707 ;;      Locals:         2       0       0       0       0       0       0
  2708 ;;      Temps:          1       0       0       0       0       0       0
  2709 ;;      Totals:         4       0       0       0       0       0       0
  2710 ;;Total ram usage:        4 bytes
  2711 ;; Hardware stack levels used: 1
  2712 ;; Hardware stack levels required when called: 2
  2713 ;; This function calls:
  2714 ;;		_UART_Write
  2715 ;; This function is called by:
  2716 ;;		_MyusartRead
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text17
  2721   0007AE                     __ptext17:
  2722                           	callstack 0
  2723   0007AE                     _UART_Write_Text:
  2724                           	callstack 24
  2725   0007AE                     
  2726                           ;setting_hardaware/uart.c: 52:     for(int i=0;text[i]!='\0';i++)
  2727   0007AE  0E00               	movlw	0
  2728   0007B0  6E31               	movwf	(UART_Write_Text@i+1)^0,c
  2729   0007B2  0E00               	movlw	0
  2730   0007B4  6E30               	movwf	UART_Write_Text@i^0,c
  2731   0007B6  EFEA  F003         	goto	i1l1214
  2732   0007BA                     i1l1210:
  2733                           
  2734                           ;setting_hardaware/uart.c: 53:         UART_Write(text[i]);
  2735   0007BA  502E               	movf	UART_Write_Text@text^0,w,c
  2736   0007BC  2430               	addwf	UART_Write_Text@i^0,w,c
  2737   0007BE  6E2F               	movwf	??_UART_Write_Text^0,c
  2738   0007C0  C02F  FFF6         	movff	??_UART_Write_Text,tblptrl
  2739   0007C4                     	if	1	;There is more than 1 active tblptr byte
  2740   0007C4  0E06               	movlw	high __smallconst
  2741   0007C6  6EF7               	movwf	tblptrh,c
  2742   0007C8                     	endif
  2743   0007C8                     	if	0	;tblptru may be non-zero
  2744   0007C8                     	endif
  2745   0007C8                     	if	0	;tblptru may be non-zero
  2746   0007C8                     	endif
  2747   0007C8  0008               	tblrd		*
  2748   0007CA  50F5               	movf	tablat,w,c
  2749   0007CC  EC7D  F004         	call	_UART_Write
  2750   0007D0  4A30               	infsnz	UART_Write_Text@i^0,f,c
  2751   0007D2  2A31               	incf	(UART_Write_Text@i+1)^0,f,c
  2752   0007D4                     i1l1214:
  2753   0007D4  502E               	movf	UART_Write_Text@text^0,w,c
  2754   0007D6  2430               	addwf	UART_Write_Text@i^0,w,c
  2755   0007D8  6E2F               	movwf	??_UART_Write_Text^0,c
  2756   0007DA  C02F  FFF6         	movff	??_UART_Write_Text,tblptrl
  2757   0007DE                     	if	1	;There is more than 1 active tblptr byte
  2758   0007DE  0E06               	movlw	high __smallconst
  2759   0007E0  6EF7               	movwf	tblptrh,c
  2760   0007E2                     	endif
  2761   0007E2                     	if	0	;tblptru may be non-zero
  2762   0007E2                     	endif
  2763   0007E2                     	if	0	;tblptru may be non-zero
  2764   0007E2                     	endif
  2765   0007E2  0008               	tblrd		*
  2766   0007E4  50F5               	movf	tablat,w,c
  2767   0007E6  0900               	iorlw	0
  2768   0007E8  A4D8               	btfss	status,2,c
  2769   0007EA  EFF9  F003         	goto	i1u43_21
  2770   0007EE  EFFB  F003         	goto	i1u43_20
  2771   0007F2                     i1u43_21:
  2772   0007F2  EFDD  F003         	goto	i1l1210
  2773   0007F6                     i1u43_20:
  2774   0007F6  0012               	return		;funcret
  2775   0007F8                     __end_of_UART_Write_Text:
  2776                           	callstack 0
  2777                           
  2778 ;; *************** function _UART_Write *****************
  2779 ;; Defined at:
  2780 ;;		line 44 in file "setting_hardaware/uart.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  data            1    wreg     unsigned char 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  data            1    0[COMRAM] unsigned char 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2794 ;;      Params:         0       0       0       0       0       0       0
  2795 ;;      Locals:         1       0       0       0       0       0       0
  2796 ;;      Temps:          0       0       0       0       0       0       0
  2797 ;;      Totals:         1       0       0       0       0       0       0
  2798 ;;Total ram usage:        1 bytes
  2799 ;; Hardware stack levels used: 1
  2800 ;; Hardware stack levels required when called: 1
  2801 ;; This function calls:
  2802 ;;		Nothing
  2803 ;; This function is called by:
  2804 ;;		_UART_Write_Text
  2805 ;;		_MyusartRead
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text18
  2810   0008FA                     __ptext18:
  2811                           	callstack 0
  2812   0008FA                     _UART_Write:
  2813                           	callstack 24
  2814                           
  2815                           ;incstack = 0
  2816                           ;UART_Write@data stored from wreg
  2817   0008FA  6E2D               	movwf	UART_Write@data^0,c
  2818   0008FC                     i1l97:
  2819   0008FC  A2AC               	btfss	172,1,c	;volatile
  2820   0008FE  EF83  F004         	goto	i1u1_21
  2821   000902  EF85  F004         	goto	i1u1_20
  2822   000906                     i1u1_21:
  2823   000906  EF7E  F004         	goto	i1l97
  2824   00090A                     i1u1_20:
  2825   00090A                     
  2826                           ;setting_hardaware/uart.c: 47:     TXREG = data;
  2827   00090A  C02D  FFAD         	movff	UART_Write@data,4013	;volatile
  2828   00090E  0012               	return		;funcret
  2829   000910                     __end_of_UART_Write:
  2830                           	callstack 0
  2831                           
  2832 ;; *************** function _GetString *****************
  2833 ;; Defined at:
  2834 ;;		line 77 in file "setting_hardaware/uart.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;		None
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    0[COMRAM] PTR unsigned char 
  2841 ;; Registers used:
  2842 ;;		wreg
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2848 ;;      Params:         2       0       0       0       0       0       0
  2849 ;;      Locals:         0       0       0       0       0       0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0
  2851 ;;      Totals:         2       0       0       0       0       0       0
  2852 ;;Total ram usage:        2 bytes
  2853 ;; Hardware stack levels used: 1
  2854 ;; Hardware stack levels required when called: 1
  2855 ;; This function calls:
  2856 ;;		Nothing
  2857 ;; This function is called by:
  2858 ;;		_Lo_ISR
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text19
  2863   00098E                     __ptext19:
  2864                           	callstack 0
  2865   00098E                     _GetString:
  2866                           	callstack 26
  2867   00098E                     
  2868                           ;setting_hardaware/uart.c: 78:     return mystring;
  2869   00098E  0E19               	movlw	_mystring& (0+255)
  2870   000990  0012               	return		;funcret
  2871   000992                     __end_of_GetString:
  2872                           	callstack 0
  2873                           
  2874 ;; *************** function _ClearBuffer *****************
  2875 ;; Defined at:
  2876 ;;		line 56 in file "setting_hardaware/uart.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;		None
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  i               2    0[COMRAM] int 
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      void 
  2883 ;; Registers used:
  2884 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2890 ;;      Params:         0       0       0       0       0       0       0
  2891 ;;      Locals:         2       0       0       0       0       0       0
  2892 ;;      Temps:          0       0       0       0       0       0       0
  2893 ;;      Totals:         2       0       0       0       0       0       0
  2894 ;;Total ram usage:        2 bytes
  2895 ;; Hardware stack levels used: 1
  2896 ;; Hardware stack levels required when called: 1
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		_Lo_ISR
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text20
  2905   0007F8                     __ptext20:
  2906                           	callstack 0
  2907   0007F8                     _ClearBuffer:
  2908                           	callstack 26
  2909   0007F8                     
  2910                           ;setting_hardaware/uart.c: 57:     for(int i = 0; i < 10 ; i++)
  2911   0007F8  0E00               	movlw	0
  2912   0007FA  6E2E               	movwf	(ClearBuffer@i+1)^0,c
  2913   0007FC  0E00               	movlw	0
  2914   0007FE  6E2D               	movwf	ClearBuffer@i^0,c
  2915   000800                     i1l978:
  2916                           
  2917                           ;setting_hardaware/uart.c: 58:         mystring[i] = '\0';
  2918   000800  502D               	movf	ClearBuffer@i^0,w,c
  2919   000802  0F19               	addlw	low _mystring
  2920   000804  6ED9               	movwf	fsr2l,c
  2921   000806  6ADA               	clrf	fsr2h,c
  2922   000808  6ADF               	clrf	indf2,c
  2923   00080A  4A2D               	infsnz	ClearBuffer@i^0,f,c
  2924   00080C  2A2E               	incf	(ClearBuffer@i+1)^0,f,c
  2925   00080E  BE2E               	btfsc	(ClearBuffer@i+1)^0,7,c
  2926   000810  EF13  F004         	goto	i1u11_21
  2927   000814  502E               	movf	(ClearBuffer@i+1)^0,w,c
  2928   000816  E109               	bnz	i1u11_20
  2929   000818  0E0A               	movlw	10
  2930   00081A  5C2D               	subwf	ClearBuffer@i^0,w,c
  2931   00081C  A0D8               	btfss	status,0,c
  2932   00081E  EF13  F004         	goto	i1u11_21
  2933   000822  EF15  F004         	goto	i1u11_20
  2934   000826                     i1u11_21:
  2935   000826  EF00  F004         	goto	i1l978
  2936   00082A                     i1u11_20:
  2937   00082A                     
  2938                           ;setting_hardaware/uart.c: 59:     lenStr = 0;
  2939   00082A  0E00               	movlw	0
  2940   00082C  6E18               	movwf	(_lenStr+1)^0,c
  2941   00082E  0E00               	movlw	0
  2942   000830  6E17               	movwf	_lenStr^0,c
  2943   000832  0012               	return		;funcret
  2944   000834                     __end_of_ClearBuffer:
  2945                           	callstack 0
  2946                           
  2947 ;; *************** function _Hi_ISR *****************
  2948 ;; Defined at:
  2949 ;;		line 82 in file "main.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;		None
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		None
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2963 ;;      Params:         0       0       0       0       0       0       0
  2964 ;;      Locals:         0       0       0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0
  2966 ;;      Totals:         0       0       0       0       0       0       0
  2967 ;;Total ram usage:        0 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		Interrupt level 2
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           	psect	intcode
  2977   000008                     __pintcode:
  2978                           	callstack 0
  2979   000008                     _Hi_ISR:
  2980                           	callstack 24
  2981                           
  2982                           ;incstack = 0
  2983   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2984   00000A  EDC4  F004         	call	int_func,f	;refresh shadow registers
  2985                           
  2986                           	psect	intcode_body
  2987   000988                     __pintcode_body:
  2988                           	callstack 24
  2989   000988                     int_func:
  2990                           	callstack 24
  2991   000988  0006               	pop		; remove dummy address from shadow register refresh
  2992   00098A  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2993   00098C  0011               	retfie		f
  2994   00098E                     __end_of_Hi_ISR:
  2995                           	callstack 0
  2996                           
  2997                           	psect	rparam
  2998   000001                     ___rparam_used  equ	1
  2999   000000                     ___param_bank   equ	0
  3000   000000                     __Lparam        equ	__Lrparam
  3001   000000                     __Hparam        equ	__Hrparam
  3002                           
  3003                           	psect	temp
  3004   000057                     btemp:
  3005                           	callstack 0
  3006   000057                     	ds	1
  3007   000057                     int$flags       set	btemp
  3008   000058                     wtemp8          set	btemp+1
  3009   000058                     ttemp5          set	btemp+1
  3010   00005B                     ttemp6          set	btemp+4
  3011   00005F                     ttemp7          set	btemp+8
  3012                           
  3013                           	psect	idloc
  3014                           
  3015                           ;Config register IDLOC0 @ 0x200000
  3016                           ;	unspecified, using default values
  3017   200000                     	org	2097152
  3018   200000  FF                 	db	255
  3019                           
  3020                           ;Config register IDLOC1 @ 0x200001
  3021                           ;	unspecified, using default values
  3022   200001                     	org	2097153
  3023   200001  FF                 	db	255
  3024                           
  3025                           ;Config register IDLOC2 @ 0x200002
  3026                           ;	unspecified, using default values
  3027   200002                     	org	2097154
  3028   200002  FF                 	db	255
  3029                           
  3030                           ;Config register IDLOC3 @ 0x200003
  3031                           ;	unspecified, using default values
  3032   200003                     	org	2097155
  3033   200003  FF                 	db	255
  3034                           
  3035                           ;Config register IDLOC4 @ 0x200004
  3036                           ;	unspecified, using default values
  3037   200004                     	org	2097156
  3038   200004  FF                 	db	255
  3039                           
  3040                           ;Config register IDLOC5 @ 0x200005
  3041                           ;	unspecified, using default values
  3042   200005                     	org	2097157
  3043   200005  FF                 	db	255
  3044                           
  3045                           ;Config register IDLOC6 @ 0x200006
  3046                           ;	unspecified, using default values
  3047   200006                     	org	2097158
  3048   200006  FF                 	db	255
  3049                           
  3050                           ;Config register IDLOC7 @ 0x200007
  3051                           ;	unspecified, using default values
  3052   200007                     	org	2097159
  3053   200007  FF                 	db	255
  3054                           
  3055                           	psect	config
  3056                           
  3057                           ; Padding undefined space
  3058   300000                     	org	3145728
  3059   300000  FF                 	db	255
  3060                           
  3061                           ;Config register CONFIG1H @ 0x300001
  3062                           ;	Oscillator Selection bits
  3063                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  3064                           ;	Fail-Safe Clock Monitor Enable bit
  3065                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3066                           ;	Internal/External Oscillator Switchover bit
  3067                           ;	IESO = ON, Oscillator Switchover mode enabled
  3068   300001                     	org	3145729
  3069   300001  88                 	db	136
  3070                           
  3071                           ;Config register CONFIG2L @ 0x300002
  3072                           ;	Power-up Timer Enable bit
  3073                           ;	PWRT = OFF, PWRT disabled
  3074                           ;	Brown-out Reset Enable bits
  3075                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3076                           ;	Brown Out Reset Voltage bits
  3077                           ;	BORV = 3, Minimum setting
  3078   300002                     	org	3145730
  3079   300002  1F                 	db	31
  3080                           
  3081                           ;Config register CONFIG2H @ 0x300003
  3082                           ;	Watchdog Timer Enable bit
  3083                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3084                           ;	Watchdog Timer Postscale Select bits
  3085                           ;	WDTPS = 1, 1:1
  3086   300003                     	org	3145731
  3087   300003  00                 	db	0
  3088                           
  3089                           ; Padding undefined space
  3090   300004                     	org	3145732
  3091   300004  FF                 	db	255
  3092                           
  3093                           ;Config register CONFIG3H @ 0x300005
  3094                           ;	CCP2 MUX bit
  3095                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3096                           ;	PORTB A/D Enable bit
  3097                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3098                           ;	Low-Power Timer1 Oscillator Enable bit
  3099                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3100                           ;	MCLR Pin Enable bit
  3101                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3102   300005                     	org	3145733
  3103   300005  83                 	db	131
  3104                           
  3105                           ;Config register CONFIG4L @ 0x300006
  3106                           ;	Stack Full/Underflow Reset Enable bit
  3107                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3108                           ;	Single-Supply ICSP Enable bit
  3109                           ;	LVP = OFF, Single-Supply ICSP disabled
  3110                           ;	Extended Instruction Set Enable bit
  3111                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3112                           ;	Background Debugger Enable bit
  3113                           ;	DEBUG = 0x1, unprogrammed default
  3114   300006                     	org	3145734
  3115   300006  81                 	db	129
  3116                           
  3117                           ; Padding undefined space
  3118   300007                     	org	3145735
  3119   300007  FF                 	db	255
  3120                           
  3121                           ;Config register CONFIG5L @ 0x300008
  3122                           ;	Code Protection bit
  3123                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3124                           ;	Code Protection bit
  3125                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3126                           ;	Code Protection bit
  3127                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3128                           ;	Code Protection bit
  3129                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3130   300008                     	org	3145736
  3131   300008  0F                 	db	15
  3132                           
  3133                           ;Config register CONFIG5H @ 0x300009
  3134                           ;	Boot Block Code Protection bit
  3135                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3136                           ;	Data EEPROM Code Protection bit
  3137                           ;	CPD = OFF, Data EEPROM not code-protected
  3138   300009                     	org	3145737
  3139   300009  C0                 	db	192
  3140                           
  3141                           ;Config register CONFIG6L @ 0x30000A
  3142                           ;	Write Protection bit
  3143                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3144                           ;	Write Protection bit
  3145                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3146                           ;	Write Protection bit
  3147                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3148                           ;	Write Protection bit
  3149                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3150   30000A                     	org	3145738
  3151   30000A  0F                 	db	15
  3152                           
  3153                           ;Config register CONFIG6H @ 0x30000B
  3154                           ;	Configuration Register Write Protection bit
  3155                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3156                           ;	Boot Block Write Protection bit
  3157                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3158                           ;	Data EEPROM Write Protection bit
  3159                           ;	WRTD = OFF, Data EEPROM not write-protected
  3160   30000B                     	org	3145739
  3161   30000B  E0                 	db	224
  3162                           
  3163                           ;Config register CONFIG7L @ 0x30000C
  3164                           ;	Table Read Protection bit
  3165                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3166                           ;	Table Read Protection bit
  3167                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3168                           ;	Table Read Protection bit
  3169                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3170                           ;	Table Read Protection bit
  3171                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3172   30000C                     	org	3145740
  3173   30000C  0F                 	db	15
  3174                           
  3175                           ;Config register CONFIG7H @ 0x30000D
  3176                           ;	Boot Block Table Read Protection bit
  3177                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3178   30000D                     	org	3145741
  3179   30000D  40                 	db	64
  3180                           tosu	equ	0xFFF
  3181                           tosh	equ	0xFFE
  3182                           tosl	equ	0xFFD
  3183                           stkptr	equ	0xFFC
  3184                           pclatu	equ	0xFFB
  3185                           pclath	equ	0xFFA
  3186                           pcl	equ	0xFF9
  3187                           tblptru	equ	0xFF8
  3188                           tblptrh	equ	0xFF7
  3189                           tblptrl	equ	0xFF6
  3190                           tablat	equ	0xFF5
  3191                           prodh	equ	0xFF4
  3192                           prodl	equ	0xFF3
  3193                           indf0	equ	0xFEF
  3194                           postinc0	equ	0xFEE
  3195                           postdec0	equ	0xFED
  3196                           preinc0	equ	0xFEC
  3197                           plusw0	equ	0xFEB
  3198                           fsr0h	equ	0xFEA
  3199                           fsr0l	equ	0xFE9
  3200                           wreg	equ	0xFE8
  3201                           indf1	equ	0xFE7
  3202                           postinc1	equ	0xFE6
  3203                           postdec1	equ	0xFE5
  3204                           preinc1	equ	0xFE4
  3205                           plusw1	equ	0xFE3
  3206                           fsr1h	equ	0xFE2
  3207                           fsr1l	equ	0xFE1
  3208                           bsr	equ	0xFE0
  3209                           indf2	equ	0xFDF
  3210                           postinc2	equ	0xFDE
  3211                           postdec2	equ	0xFDD
  3212                           preinc2	equ	0xFDC
  3213                           plusw2	equ	0xFDB
  3214                           fsr2h	equ	0xFDA
  3215                           fsr2l	equ	0xFD9
  3216                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     42      86
    BANK0           128      5       5
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    sp__GetString	PTR unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), STR_2(CODE[1]), STR_3(CODE[1]), STR_4(CODE[1]), 
		 -> STR_5(CODE[1]), STR_6(CODE[1]), STR_7(CODE[1]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _ledRightOn->_displayBinary
    _ledRightOff->_displayBinary
    _ledLeftOn->_displayBinary
    _ledLeftOff->_displayBinary
    _initialState->_displayBinary
    _BreakOn->_displayBinary
    _BreakOff->_displayBinary

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_strcpy
    _strcpy->_GetString
    _MyusartRead->_UART_Write_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_BreakOff
    _main->_BreakOn
    _main->_ledLeftOff
    _main->_ledLeftOn
    _main->_ledRightOff
    _main->_ledRightOn
    _ledRightOn->_displayBinary
    _ledRightOff->_displayBinary
    _ledLeftOn->_displayBinary
    _ledLeftOff->_displayBinary
    _initialState->_displayBinary
    _BreakOn->_displayBinary
    _BreakOff->_displayBinary

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1219
                                              3 BANK0      2     2      0
                           _BreakOff
                            _BreakOn
                  _SYSTEM_Initialize
                       _initialState
                         _ledLeftOff
                          _ledLeftOn
                        _ledRightOff
                         _ledRightOn
 ---------------------------------------------------------------------------------
 (1) _ledRightOn                                           2     0      2     179
                                              1 BANK0      2     0      2
                      _displayBinary
 ---------------------------------------------------------------------------------
 (1) _ledRightOff                                          2     0      2     179
                                              1 BANK0      2     0      2
                      _displayBinary
 ---------------------------------------------------------------------------------
 (1) _ledLeftOn                                            2     0      2     179
                                              1 BANK0      2     0      2
                      _displayBinary
 ---------------------------------------------------------------------------------
 (1) _ledLeftOff                                           2     0      2     179
                                              1 BANK0      2     0      2
                      _displayBinary
 ---------------------------------------------------------------------------------
 (1) _initialState                                         0     0      0     145
                      _displayBinary
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BreakOn                                              2     0      2     179
                                              1 BANK0      2     0      2
                      _displayBinary
 ---------------------------------------------------------------------------------
 (1) _BreakOff                                             2     0      2     179
                                              1 BANK0      2     0      2
                      _displayBinary
 ---------------------------------------------------------------------------------
 (2) _displayBinary                                        3     1      2     145
                                             40 COMRAM     2     0      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                              32    32      0    1067
                                              8 COMRAM    32    32      0
                        _ClearBuffer
                          _GetString
                        _MyusartRead
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               3     1      2      96
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     3      3      87
                                              2 COMRAM     6     3      3
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          1     1      0     188
                                              5 COMRAM     1     1      0
                         _UART_Write
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (5) _UART_Write_Text                                      4     3      1     106
                                              1 COMRAM     4     3      1
                         _UART_Write
 ---------------------------------------------------------------------------------
 (6) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _GetString                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ClearBuffer                                          2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Hi_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BreakOff
     _displayBinary
   _BreakOn
     _displayBinary
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _initialState
     _displayBinary
   _ledLeftOff
     _displayBinary
   _ledLeftOn
     _displayBinary
   _ledRightOff
     _displayBinary
   _ledRightOn
     _displayBinary

 _Lo_ISR (ROOT)
   _ClearBuffer
   _GetString
   _MyusartRead
     _UART_Write
     _UART_Write_Text
       _UART_Write
   _strcpy
     _GetString (ARG)
   _strlen

 _Hi_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1523      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK5           244      0       0      0.0%
BANK5              244      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      5       5      3.9%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     42      86     68.3%
BITBIGSFR_1h        38      0       0      0.0%
BITBIGSFRh          18      0       0      0.0%
BITBIGSFR_1llh      12      0       0      0.0%
BITBIGSFR_5h        10      0       0      0.0%
BITBIGSFRl           9      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_5l         2      0       0      0.0%
BITBIGSFR_1lh        1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      91      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Jan 14 22:07:59 2025

                           l64 0962                             l49 08DE                             l67 0986  
                           l94 08BC                             bsr 0FE0                            l152 0954  
                          l161 0938                            l170 097E                            l155 091C  
                          l164 0946                            l149 0760                            l158 092A  
                          l167 0970                            l176 0676                            l910 08C8  
                          l920 08D2                            l912 08CA                            l930 08DC  
                          l922 08D4                            l914 08CC                            l906 08BE  
                          l924 08D6                            l916 08CE                            l908 08C4  
                          l932 0980                            l940 08AC                            l926 08D8  
                          l918 08D0                            l950 08B6                            l942 08AE  
                          l934 089C                            l928 08DA                            l952 08B8  
                          l944 08B0                            l936 08A6                            l954 08BA  
                          l946 08B2                            l938 08AA                            l970 095E  
                          l948 08B4                            l966 0956                            l968 095A  
                          u820 06E4                            u821 06DA                            u840 0706  
                          u841 06FE                            u860 072A                            u861 0722  
                          u838 06E8                            u880 0750                            u881 0748  
                          u858 070A                            u878 072E                            u898 0754  
                          _str 0001                 ?_displayBinary 0055                            wreg 0FE8  
                         l1412 06D0                           l1420 092C                           l1414 0948  
                         l1422 093A                           l1430 060E                           l1424 0964  
                         l1416 0910                           l1440 0656                           l1432 0616  
                         l1426 0972                           l1418 091E                           l1442 0666  
                         l1434 0626                           l1436 0636                           l1428 0606  
                         l1438 0646                           l1446 0676                           l1484 068E  
                         _ADFM 7E07                           STR_1 0601                           STR_2 0603  
                         STR_3 0603                           STR_4 0603                           STR_5 0603  
                         STR_6 0603                           STR_7 0603                           _CREN 7D5C  
                         _LATA 0F89                           _RCIF 7CF5                           i1l97 08FC  
                         _main 0606                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf1 0FE7                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 0057                           start 0378  
              __end_of_BreakOn 0972                   ___param_bank 0000        __end_of_UART_Write_Text 07F8  
             ?_UART_Initialize 002D  __end_of_OSCILLATOR_Initialize 0988                          ?_main 002D  
                        _IRCF0 7E9C                          _IRCF1 7E9D                          _IRCF2 7E9E  
                        i1l100 090E                          i1l111 0832                          i1l106 07F6  
                        i1l115 086C                          i1l204 0348                          i1l118 0990  
                        i1l209 0348                          i1l900 089A                          i1l902 08FC  
                        i1l904 090A                          i2l193 098A                          i1l980 080A  
                        i1l972 07F8                          i1l982 080E                          i1l894 07AC  
                        i1l984 082A                          i1l978 0800                          _RCREG 0FAE  
                        _SPBRG 0FAF                          _TRISA 0F92                          _TXREG 0FAD  
                  ?_UART_Write 002D                          _state 0015                    _ClearBuffer 07F8  
                        tablat 0FF5                          ttemp5 0058                          ttemp6 005B  
                        ttemp7 005F                          status 0FD8                          wtemp8 0058  
             __end_of_BreakOff 0980                __initialization 08E0                   __end_of_main 06D0  
                       ??_main 0083                ??_displayBinary 0080                  __activetblptr 0002  
                       _ADCON1 0FC1                         _ADRESH 0FC4                         _ADRESL 0FC3  
                       i1l1210 07BA                         i1l1212 07D0                         i1l1220 0838  
                       i1l1300 007E                         i1l1214 07D4                         i1l1230 0866  
                       i1l1222 084A                         i1l1310 00CC                         i1l1302 0090  
                       i1l1208 07AE                         i1l1400 0324                         i1l1312 00DE  
                       i1l1304 00A4                         i1l1234 098E                         i1l1226 0856  
                       i1l1218 0834                         i1l1402 032C                         i1l1330 0154  
                       i1l1314 00FA                         i1l1306 00A8                         i1l1228 0862  
                       i1l1252 0762                         i1l1260 0878                         i1l1404 0330  
                       i1l1332 0170                         i1l1316 0102                         i1l1308 00BA  
                       i1l1324 011E                         i1l1254 0766                         i1l1262 088E  
                       i1l1350 01E6                         i1l1334 0178                         i1l1326 0130  
                       i1l1342 0194                         i1l1318 0106                         i1l1256 086E  
                       i1l1352 01EE                         i1l1344 01A6                         i1l1360 020A  
                       i1l1336 017C                         i1l1328 0142                         i1l1258 0876  
                       i1l1370 0264                         i1l1362 021C                         i1l1354 01F2  
                       i1l1346 01B8                         i1l1290 0046                         i1l1380 0292  
                       i1l1372 0268                         i1l1364 022E                         i1l1348 01CA  
                       i1l1292 0054                         i1l1382 02A4                         i1l1366 0240  
                       i1l1294 0062                         i1l1384 02C0                         i1l1368 025C  
                       i1l1296 0068                         i1l1386 02C8                         i1l1394 02E4  
                       i1l1378 0280                         i1l1298 006C                         i1l1396 02F6  
                       i1l1388 02CC                         i1l1398 0308                      ??_BreakOn 0057  
                       i1u1_20 090A                         i1u1_21 0906                         _Hi_ISR 0008  
                ?_initialState 002D                         _Lo_ISR 0018               ?_UART_Write_Text 002E  
                       _lenStr 0017                         clear_0 08E6                         isa$std 0001  
                       _strcpy 0762                         _strlen 086E                   __mediumconst 0000  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
            _SYSTEM_Initialize 0956                     __accesstop 0080        __end_of__initialization 08EC  
               ??_initialState 0057             ?_SYSTEM_Initialize 002D                  ___rparam_used 0001  
            __end_of_GetString 0992                 __pcstackCOMRAM 002D            ??_SYSTEM_Initialize 0055  
                ??_MyusartRead 0032                      ?_BreakOff 0081      __end_of_SYSTEM_Initialize 0964  
                      ?_Hi_ISR 002D                        ?_Lo_ISR 002D                        _CCP1CON 0FBD  
                   _ledLeftOff 093A                        ?_strcpy 002F                        ?_strlen 002D  
                   _ledRightOn 0910                        i1u11_20 082A                        i1u11_21 0826  
                 ??_UART_Write 002D                        i1u43_20 07F6                        i1u43_21 07F2  
                      i1u52_20 084A                        i1u60_20 00BA                        i1u52_21 0846  
                      i1u60_21 00B6                        i1u53_20 079A                        i1u61_20 00CC  
                      i1u61_21 00C8                     ??_BreakOff 0057                        i1u53_27 0790  
                      i1u54_20 07AC                        i1u70_20 01CA                        i1u62_20 00DE  
                      i1u54_21 07A8                        i1u70_21 01C6                        i1u62_21 00DA  
                      i1u55_20 088E                        i1u71_20 01E6                        i1u63_20 00FA  
                      i1u55_21 088A                        i1u71_21 01E2                        i1u63_21 00F6  
                      i1u80_20 0308                        i1u72_20 021C                        i1u64_20 0130  
                      i1u56_20 0054                        i1u80_21 0304                        i1u72_21 0218  
                      i1u64_21 012C                        i1u56_21 0050                        i1u81_20 0324  
                      i1u73_20 022E                        i1u65_20 0142                        i1u57_20 0062  
                      i1u81_21 0320                        i1u73_21 022A                        i1u65_21 013E  
                      i1u57_21 005E                        i1u74_20 0240                        i1u66_20 0154  
                      i1u58_20 007E                        i1u74_21 023C                        i1u66_21 0150  
                      i1u58_21 007A                        i1u75_20 025C                        i1u67_20 0170  
                      i1u59_20 0090                        i1u75_21 0258                        i1u67_21 016C  
                      i1u59_21 008C                        i1u76_20 0292                        i1u68_20 01A6  
                      i1u76_21 028E                        i1u68_21 01A2                        i1u77_20 02A4  
                      i1u69_20 01B8                        i1u77_21 02A0                        i1u69_21 01B4  
                      i1u78_20 02C0                        i1u78_21 02BC                        i1u79_20 02F6  
                      i1u79_21 02F2                   ?_ClearBuffer 002D            __end_of_MyusartRead 086E  
                      _BreakOn 0964              __end_of_ledLeftOn 093A                        __Hparam 0000  
                      __Lparam 0000             __end_of_UART_Write 0910                   __psmallconst 0600  
                      __pcinit 08E0                        __ramtop 0600                        __ptext0 0606  
                      __ptext1 0910                        __ptext2 091E                        __ptext3 092C  
                      __ptext4 093A                        __ptext5 0948                        __ptext6 0956  
                      __ptext7 089C                        __ptext8 0980                        __ptext9 08BE  
        _OSCILLATOR_Initialize 0980           __end_of_initialState 0956                 __pintcode_body 0988  
         end_of_initialization 08EC                  __Lmediumconst 0000                        int_func 0988  
                    _RCSTAbits 0FAB                        postinc0 0FEE                        strcpy@d 0034  
                      strlen@a 002F                        strlen@s 002D                    ?_ledLeftOff 0081  
               UART_Write@data 002D                    ?_ledRightOn 0081          __end_of_displayBinary 0762  
                    _TRISAbits 0F92                      _TRISCbits 0F94                    _MyusartRead 0834  
                ??_ledRightOff 0057                      _TXSTAbits 0FAC                 __end_of_Hi_ISR 098E  
               __end_of_Lo_ISR 0378   __end_of_INTERRUPT_Initialize 08E0                      _GetString 098E  
                  _BAUDCONbits 0FB8         ?_OSCILLATOR_Initialize 002D                 __end_of_strcpy 07AE  
               __end_of_strlen 089C            start_initialization 08E0                   ClearBuffer@i 002D  
            ??_UART_Initialize 0055                       ??_Hi_ISR 002D                       ??_Lo_ISR 0035  
          __end_of_ledRightOff 092C                     ?_GetString 002D                       ??_strcpy 0032  
                     ??_strlen 002F               displayBinary@num 0055                    __pbssCOMRAM 0001  
                __pcstackBANK0 0080                       ?_BreakOn 0081                   _initialState 0948  
                Lo_ISR@command 0041                      __pintcode 0008                      _ledLeftOn 092C  
                  __pintcodelo 0018                    __smallconst 0600              ??_UART_Write_Text 002F  
         _INTERRUPT_Initialize 08BE                    _ledRightOff 091E                       _LATAbits 0F89  
                     _IPR1bits 0F9F                       _PIE1bits 0F9D                       _PIR1bits 0F9E  
                     _RCONbits 0FD0                     ?_ledLeftOn 0081                    ??_GetString 002F  
                 ??_ledLeftOff 0057                     _ADCON0bits 0FC2                     _ADCON2bits 0FC0  
                 ??_ledRightOn 0057        MyusartRead@receivedData 0032                   ?_MyusartRead 002D  
                     _BreakOff 0972          ?_INTERRUPT_Initialize 002D             __end_of_ledLeftOff 0948  
                     __Hrparam 0000             __end_of_ledRightOn 091E                       __Lrparam 0000  
      ??_OSCILLATOR_Initialize 0055                _UART_Initialize 089C                       __ptext10 0964  
                     __ptext11 0972                       __ptext20 07F8                       __ptext12 06D0  
                     __ptext14 086E                       __ptext15 0762                       __ptext16 0834  
                     __ptext17 07AE                       __ptext18 08FA                       __ptext19 098E  
                  BreakOff@num 0081                     strcpy@dest 002F            UART_Write_Text@text 002E  
                ledLeftOff@num 0081                       isa$xinst 0000                       int$flags 0057  
                  ??_ledLeftOn 0057                       _mystring 0019                     _INTCONbits 0FF2  
       ??_INTERRUPT_Initialize 0055                  ??_ClearBuffer 002D                       intlevel1 0000  
                     intlevel2 0000                     BreakOn@num 0081                      strcpy@src 0030  
                 ledLeftOn@num 0081        __end_of_UART_Initialize 08BE                _UART_Write_Text 07AE  
                _displayBinary 06D0                     _UART_Write 08FA               UART_Write_Text@i 0030  
                 ?_ledRightOff 0081            __end_of_ClearBuffer 0834                 ledRightOff@num 0081  
                ledRightOn@num 0081  
