

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Jan 15 20:27:22 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36   000000                     
    37                           ; Generated 25/07/2024 GMT
    38                           ; 
    39                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4520 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71   000FE0                     bsr             equ	4064
    72   000FE9                     fsr0            equ	4073
    73   000FEA                     fsr0h           equ	4074
    74   000FE9                     fsr0l           equ	4073
    75   000FE1                     fsr1            equ	4065
    76   000FE2                     fsr1h           equ	4066
    77   000FE1                     fsr1l           equ	4065
    78   000FD9                     fsr2            equ	4057
    79   000FDA                     fsr2h           equ	4058
    80   000FD9                     fsr2l           equ	4057
    81   000FEF                     indf0           equ	4079
    82   000FE7                     indf1           equ	4071
    83   000FDF                     indf2           equ	4063
    84   000FF2                     intcon          equ	4082
    85   000000                     nvmcon          equ	0
    86   000FF9                     pcl             equ	4089
    87   000FFA                     pclath          equ	4090
    88   000FFB                     pclatu          equ	4091
    89   000FEB                     plusw0          equ	4075
    90   000FE3                     plusw1          equ	4067
    91   000FDB                     plusw2          equ	4059
    92   000FED                     postdec0        equ	4077
    93   000FE5                     postdec1        equ	4069
    94   000FDD                     postdec2        equ	4061
    95   000FEE                     postinc0        equ	4078
    96   000FE6                     postinc1        equ	4070
    97   000FDE                     postinc2        equ	4062
    98   000FEC                     preinc0         equ	4076
    99   000FE4                     preinc1         equ	4068
   100   000FDC                     preinc2         equ	4060
   101   000FF3                     prod            equ	4083
   102   000FF4                     prodh           equ	4084
   103   000FF3                     prodl           equ	4083
   104   000FD8                     status          equ	4056
   105   000FF5                     tablat          equ	4085
   106   000FF6                     tblptr          equ	4086
   107   000FF7                     tblptrh         equ	4087
   108   000FF6                     tblptrl         equ	4086
   109   000FF8                     tblptru         equ	4088
   110   000FFD                     tosl            equ	4093
   111   000FE8                     wreg            equ	4072
   112   000F80                     PORTA           equ	3968	;# 
   113   000F81                     PORTB           equ	3969	;# 
   114   000F82                     PORTC           equ	3970	;# 
   115   000F83                     PORTD           equ	3971	;# 
   116   000F84                     PORTE           equ	3972	;# 
   117   000F89                     LATA            equ	3977	;# 
   118   000F8A                     LATB            equ	3978	;# 
   119   000F8B                     LATC            equ	3979	;# 
   120   000F8C                     LATD            equ	3980	;# 
   121   000F8D                     LATE            equ	3981	;# 
   122   000F92                     TRISA           equ	3986	;# 
   123   000F92                     DDRA            equ	3986	;# 
   124   000F93                     TRISB           equ	3987	;# 
   125   000F93                     DDRB            equ	3987	;# 
   126   000F94                     TRISC           equ	3988	;# 
   127   000F94                     DDRC            equ	3988	;# 
   128   000F95                     TRISD           equ	3989	;# 
   129   000F95                     DDRD            equ	3989	;# 
   130   000F96                     TRISE           equ	3990	;# 
   131   000F96                     DDRE            equ	3990	;# 
   132   000F9B                     OSCTUNE         equ	3995	;# 
   133   000F9D                     PIE1            equ	3997	;# 
   134   000F9E                     PIR1            equ	3998	;# 
   135   000F9F                     IPR1            equ	3999	;# 
   136   000FA0                     PIE2            equ	4000	;# 
   137   000FA1                     PIR2            equ	4001	;# 
   138   000FA2                     IPR2            equ	4002	;# 
   139   000FA6                     EECON1          equ	4006	;# 
   140   000FA7                     EECON2          equ	4007	;# 
   141   000FA8                     EEDATA          equ	4008	;# 
   142   000FA9                     EEADR           equ	4009	;# 
   143   000FAB                     RCSTA           equ	4011	;# 
   144   000FAB                     RCSTA1          equ	4011	;# 
   145   000FAC                     TXSTA           equ	4012	;# 
   146   000FAC                     TXSTA1          equ	4012	;# 
   147   000FAD                     TXREG           equ	4013	;# 
   148   000FAD                     TXREG1          equ	4013	;# 
   149   000FAE                     RCREG           equ	4014	;# 
   150   000FAE                     RCREG1          equ	4014	;# 
   151   000FAF                     SPBRG           equ	4015	;# 
   152   000FAF                     SPBRG1          equ	4015	;# 
   153   000FB0                     SPBRGH          equ	4016	;# 
   154   000FB1                     T3CON           equ	4017	;# 
   155   000FB2                     TMR3            equ	4018	;# 
   156   000FB2                     TMR3L           equ	4018	;# 
   157   000FB3                     TMR3H           equ	4019	;# 
   158   000FB4                     CMCON           equ	4020	;# 
   159   000FB5                     CVRCON          equ	4021	;# 
   160   000FB6                     ECCP1AS         equ	4022	;# 
   161   000FB6                     ECCPAS          equ	4022	;# 
   162   000FB7                     PWM1CON         equ	4023	;# 
   163   000FB7                     ECCP1DEL        equ	4023	;# 
   164   000FB8                     BAUDCON         equ	4024	;# 
   165   000FB8                     BAUDCTL         equ	4024	;# 
   166   000FBA                     CCP2CON         equ	4026	;# 
   167   000FBB                     CCPR2           equ	4027	;# 
   168   000FBB                     CCPR2L          equ	4027	;# 
   169   000FBC                     CCPR2H          equ	4028	;# 
   170   000FBD                     CCP1CON         equ	4029	;# 
   171   000FBE                     CCPR1           equ	4030	;# 
   172   000FBE                     CCPR1L          equ	4030	;# 
   173   000FBF                     CCPR1H          equ	4031	;# 
   174   000FC0                     ADCON2          equ	4032	;# 
   175   000FC1                     ADCON1          equ	4033	;# 
   176   000FC2                     ADCON0          equ	4034	;# 
   177   000FC3                     ADRES           equ	4035	;# 
   178   000FC3                     ADRESL          equ	4035	;# 
   179   000FC4                     ADRESH          equ	4036	;# 
   180   000FC5                     SSPCON2         equ	4037	;# 
   181   000FC6                     SSPCON1         equ	4038	;# 
   182   000FC7                     SSPSTAT         equ	4039	;# 
   183   000FC8                     SSPADD          equ	4040	;# 
   184   000FC9                     SSPBUF          equ	4041	;# 
   185   000FCA                     T2CON           equ	4042	;# 
   186   000FCB                     PR2             equ	4043	;# 
   187   000FCB                     MEMCON          equ	4043	;# 
   188   000FCC                     TMR2            equ	4044	;# 
   189   000FCD                     T1CON           equ	4045	;# 
   190   000FCE                     TMR1            equ	4046	;# 
   191   000FCE                     TMR1L           equ	4046	;# 
   192   000FCF                     TMR1H           equ	4047	;# 
   193   000FD0                     RCON            equ	4048	;# 
   194   000FD1                     WDTCON          equ	4049	;# 
   195   000FD2                     HLVDCON         equ	4050	;# 
   196   000FD2                     LVDCON          equ	4050	;# 
   197   000FD3                     OSCCON          equ	4051	;# 
   198   000FD5                     T0CON           equ	4053	;# 
   199   000FD6                     TMR0            equ	4054	;# 
   200   000FD6                     TMR0L           equ	4054	;# 
   201   000FD7                     TMR0H           equ	4055	;# 
   202   000FD8                     STATUS          equ	4056	;# 
   203   000FD9                     FSR2            equ	4057	;# 
   204   000FD9                     FSR2L           equ	4057	;# 
   205   000FDA                     FSR2H           equ	4058	;# 
   206   000FDB                     PLUSW2          equ	4059	;# 
   207   000FDC                     PREINC2         equ	4060	;# 
   208   000FDD                     POSTDEC2        equ	4061	;# 
   209   000FDE                     POSTINC2        equ	4062	;# 
   210   000FDF                     INDF2           equ	4063	;# 
   211   000FE0                     BSR             equ	4064	;# 
   212   000FE1                     FSR1            equ	4065	;# 
   213   000FE1                     FSR1L           equ	4065	;# 
   214   000FE2                     FSR1H           equ	4066	;# 
   215   000FE3                     PLUSW1          equ	4067	;# 
   216   000FE4                     PREINC1         equ	4068	;# 
   217   000FE5                     POSTDEC1        equ	4069	;# 
   218   000FE6                     POSTINC1        equ	4070	;# 
   219   000FE7                     INDF1           equ	4071	;# 
   220   000FE8                     WREG            equ	4072	;# 
   221   000FE9                     FSR0            equ	4073	;# 
   222   000FE9                     FSR0L           equ	4073	;# 
   223   000FEA                     FSR0H           equ	4074	;# 
   224   000FEB                     PLUSW0          equ	4075	;# 
   225   000FEC                     PREINC0         equ	4076	;# 
   226   000FED                     POSTDEC0        equ	4077	;# 
   227   000FEE                     POSTINC0        equ	4078	;# 
   228   000FEF                     INDF0           equ	4079	;# 
   229   000FF0                     INTCON3         equ	4080	;# 
   230   000FF1                     INTCON2         equ	4081	;# 
   231   000FF2                     INTCON          equ	4082	;# 
   232   000FF3                     PROD            equ	4083	;# 
   233   000FF3                     PRODL           equ	4083	;# 
   234   000FF4                     PRODH           equ	4084	;# 
   235   000FF5                     TABLAT          equ	4085	;# 
   236   000FF6                     TBLPTR          equ	4086	;# 
   237   000FF6                     TBLPTRL         equ	4086	;# 
   238   000FF7                     TBLPTRH         equ	4087	;# 
   239   000FF8                     TBLPTRU         equ	4088	;# 
   240   000FF9                     PCLAT           equ	4089	;# 
   241   000FF9                     PC              equ	4089	;# 
   242   000FF9                     PCL             equ	4089	;# 
   243   000FFA                     PCLATH          equ	4090	;# 
   244   000FFB                     PCLATU          equ	4091	;# 
   245   000FFC                     STKPTR          equ	4092	;# 
   246   000FFD                     TOS             equ	4093	;# 
   247   000FFD                     TOSL            equ	4093	;# 
   248   000FFE                     TOSH            equ	4094	;# 
   249   000FFF                     TOSU            equ	4095	;# 
   250   000F80                     PORTA           equ	3968	;# 
   251   000F81                     PORTB           equ	3969	;# 
   252   000F82                     PORTC           equ	3970	;# 
   253   000F83                     PORTD           equ	3971	;# 
   254   000F84                     PORTE           equ	3972	;# 
   255   000F89                     LATA            equ	3977	;# 
   256   000F8A                     LATB            equ	3978	;# 
   257   000F8B                     LATC            equ	3979	;# 
   258   000F8C                     LATD            equ	3980	;# 
   259   000F8D                     LATE            equ	3981	;# 
   260   000F92                     TRISA           equ	3986	;# 
   261   000F92                     DDRA            equ	3986	;# 
   262   000F93                     TRISB           equ	3987	;# 
   263   000F93                     DDRB            equ	3987	;# 
   264   000F94                     TRISC           equ	3988	;# 
   265   000F94                     DDRC            equ	3988	;# 
   266   000F95                     TRISD           equ	3989	;# 
   267   000F95                     DDRD            equ	3989	;# 
   268   000F96                     TRISE           equ	3990	;# 
   269   000F96                     DDRE            equ	3990	;# 
   270   000F9B                     OSCTUNE         equ	3995	;# 
   271   000F9D                     PIE1            equ	3997	;# 
   272   000F9E                     PIR1            equ	3998	;# 
   273   000F9F                     IPR1            equ	3999	;# 
   274   000FA0                     PIE2            equ	4000	;# 
   275   000FA1                     PIR2            equ	4001	;# 
   276   000FA2                     IPR2            equ	4002	;# 
   277   000FA6                     EECON1          equ	4006	;# 
   278   000FA7                     EECON2          equ	4007	;# 
   279   000FA8                     EEDATA          equ	4008	;# 
   280   000FA9                     EEADR           equ	4009	;# 
   281   000FAB                     RCSTA           equ	4011	;# 
   282   000FAB                     RCSTA1          equ	4011	;# 
   283   000FAC                     TXSTA           equ	4012	;# 
   284   000FAC                     TXSTA1          equ	4012	;# 
   285   000FAD                     TXREG           equ	4013	;# 
   286   000FAD                     TXREG1          equ	4013	;# 
   287   000FAE                     RCREG           equ	4014	;# 
   288   000FAE                     RCREG1          equ	4014	;# 
   289   000FAF                     SPBRG           equ	4015	;# 
   290   000FAF                     SPBRG1          equ	4015	;# 
   291   000FB0                     SPBRGH          equ	4016	;# 
   292   000FB1                     T3CON           equ	4017	;# 
   293   000FB2                     TMR3            equ	4018	;# 
   294   000FB2                     TMR3L           equ	4018	;# 
   295   000FB3                     TMR3H           equ	4019	;# 
   296   000FB4                     CMCON           equ	4020	;# 
   297   000FB5                     CVRCON          equ	4021	;# 
   298   000FB6                     ECCP1AS         equ	4022	;# 
   299   000FB6                     ECCPAS          equ	4022	;# 
   300   000FB7                     PWM1CON         equ	4023	;# 
   301   000FB7                     ECCP1DEL        equ	4023	;# 
   302   000FB8                     BAUDCON         equ	4024	;# 
   303   000FB8                     BAUDCTL         equ	4024	;# 
   304   000FBA                     CCP2CON         equ	4026	;# 
   305   000FBB                     CCPR2           equ	4027	;# 
   306   000FBB                     CCPR2L          equ	4027	;# 
   307   000FBC                     CCPR2H          equ	4028	;# 
   308   000FBD                     CCP1CON         equ	4029	;# 
   309   000FBE                     CCPR1           equ	4030	;# 
   310   000FBE                     CCPR1L          equ	4030	;# 
   311   000FBF                     CCPR1H          equ	4031	;# 
   312   000FC0                     ADCON2          equ	4032	;# 
   313   000FC1                     ADCON1          equ	4033	;# 
   314   000FC2                     ADCON0          equ	4034	;# 
   315   000FC3                     ADRES           equ	4035	;# 
   316   000FC3                     ADRESL          equ	4035	;# 
   317   000FC4                     ADRESH          equ	4036	;# 
   318   000FC5                     SSPCON2         equ	4037	;# 
   319   000FC6                     SSPCON1         equ	4038	;# 
   320   000FC7                     SSPSTAT         equ	4039	;# 
   321   000FC8                     SSPADD          equ	4040	;# 
   322   000FC9                     SSPBUF          equ	4041	;# 
   323   000FCA                     T2CON           equ	4042	;# 
   324   000FCB                     PR2             equ	4043	;# 
   325   000FCB                     MEMCON          equ	4043	;# 
   326   000FCC                     TMR2            equ	4044	;# 
   327   000FCD                     T1CON           equ	4045	;# 
   328   000FCE                     TMR1            equ	4046	;# 
   329   000FCE                     TMR1L           equ	4046	;# 
   330   000FCF                     TMR1H           equ	4047	;# 
   331   000FD0                     RCON            equ	4048	;# 
   332   000FD1                     WDTCON          equ	4049	;# 
   333   000FD2                     HLVDCON         equ	4050	;# 
   334   000FD2                     LVDCON          equ	4050	;# 
   335   000FD3                     OSCCON          equ	4051	;# 
   336   000FD5                     T0CON           equ	4053	;# 
   337   000FD6                     TMR0            equ	4054	;# 
   338   000FD6                     TMR0L           equ	4054	;# 
   339   000FD7                     TMR0H           equ	4055	;# 
   340   000FD8                     STATUS          equ	4056	;# 
   341   000FD9                     FSR2            equ	4057	;# 
   342   000FD9                     FSR2L           equ	4057	;# 
   343   000FDA                     FSR2H           equ	4058	;# 
   344   000FDB                     PLUSW2          equ	4059	;# 
   345   000FDC                     PREINC2         equ	4060	;# 
   346   000FDD                     POSTDEC2        equ	4061	;# 
   347   000FDE                     POSTINC2        equ	4062	;# 
   348   000FDF                     INDF2           equ	4063	;# 
   349   000FE0                     BSR             equ	4064	;# 
   350   000FE1                     FSR1            equ	4065	;# 
   351   000FE1                     FSR1L           equ	4065	;# 
   352   000FE2                     FSR1H           equ	4066	;# 
   353   000FE3                     PLUSW1          equ	4067	;# 
   354   000FE4                     PREINC1         equ	4068	;# 
   355   000FE5                     POSTDEC1        equ	4069	;# 
   356   000FE6                     POSTINC1        equ	4070	;# 
   357   000FE7                     INDF1           equ	4071	;# 
   358   000FE8                     WREG            equ	4072	;# 
   359   000FE9                     FSR0            equ	4073	;# 
   360   000FE9                     FSR0L           equ	4073	;# 
   361   000FEA                     FSR0H           equ	4074	;# 
   362   000FEB                     PLUSW0          equ	4075	;# 
   363   000FEC                     PREINC0         equ	4076	;# 
   364   000FED                     POSTDEC0        equ	4077	;# 
   365   000FEE                     POSTINC0        equ	4078	;# 
   366   000FEF                     INDF0           equ	4079	;# 
   367   000FF0                     INTCON3         equ	4080	;# 
   368   000FF1                     INTCON2         equ	4081	;# 
   369   000FF2                     INTCON          equ	4082	;# 
   370   000FF3                     PROD            equ	4083	;# 
   371   000FF3                     PRODL           equ	4083	;# 
   372   000FF4                     PRODH           equ	4084	;# 
   373   000FF5                     TABLAT          equ	4085	;# 
   374   000FF6                     TBLPTR          equ	4086	;# 
   375   000FF6                     TBLPTRL         equ	4086	;# 
   376   000FF7                     TBLPTRH         equ	4087	;# 
   377   000FF8                     TBLPTRU         equ	4088	;# 
   378   000FF9                     PCLAT           equ	4089	;# 
   379   000FF9                     PC              equ	4089	;# 
   380   000FF9                     PCL             equ	4089	;# 
   381   000FFA                     PCLATH          equ	4090	;# 
   382   000FFB                     PCLATU          equ	4091	;# 
   383   000FFC                     STKPTR          equ	4092	;# 
   384   000FFD                     TOS             equ	4093	;# 
   385   000FFD                     TOSL            equ	4093	;# 
   386   000FFE                     TOSH            equ	4094	;# 
   387   000FFF                     TOSU            equ	4095	;# 
   388   000F80                     PORTA           equ	3968	;# 
   389   000F81                     PORTB           equ	3969	;# 
   390   000F82                     PORTC           equ	3970	;# 
   391   000F83                     PORTD           equ	3971	;# 
   392   000F84                     PORTE           equ	3972	;# 
   393   000F89                     LATA            equ	3977	;# 
   394   000F8A                     LATB            equ	3978	;# 
   395   000F8B                     LATC            equ	3979	;# 
   396   000F8C                     LATD            equ	3980	;# 
   397   000F8D                     LATE            equ	3981	;# 
   398   000F92                     TRISA           equ	3986	;# 
   399   000F92                     DDRA            equ	3986	;# 
   400   000F93                     TRISB           equ	3987	;# 
   401   000F93                     DDRB            equ	3987	;# 
   402   000F94                     TRISC           equ	3988	;# 
   403   000F94                     DDRC            equ	3988	;# 
   404   000F95                     TRISD           equ	3989	;# 
   405   000F95                     DDRD            equ	3989	;# 
   406   000F96                     TRISE           equ	3990	;# 
   407   000F96                     DDRE            equ	3990	;# 
   408   000F9B                     OSCTUNE         equ	3995	;# 
   409   000F9D                     PIE1            equ	3997	;# 
   410   000F9E                     PIR1            equ	3998	;# 
   411   000F9F                     IPR1            equ	3999	;# 
   412   000FA0                     PIE2            equ	4000	;# 
   413   000FA1                     PIR2            equ	4001	;# 
   414   000FA2                     IPR2            equ	4002	;# 
   415   000FA6                     EECON1          equ	4006	;# 
   416   000FA7                     EECON2          equ	4007	;# 
   417   000FA8                     EEDATA          equ	4008	;# 
   418   000FA9                     EEADR           equ	4009	;# 
   419   000FAB                     RCSTA           equ	4011	;# 
   420   000FAB                     RCSTA1          equ	4011	;# 
   421   000FAC                     TXSTA           equ	4012	;# 
   422   000FAC                     TXSTA1          equ	4012	;# 
   423   000FAD                     TXREG           equ	4013	;# 
   424   000FAD                     TXREG1          equ	4013	;# 
   425   000FAE                     RCREG           equ	4014	;# 
   426   000FAE                     RCREG1          equ	4014	;# 
   427   000FAF                     SPBRG           equ	4015	;# 
   428   000FAF                     SPBRG1          equ	4015	;# 
   429   000FB0                     SPBRGH          equ	4016	;# 
   430   000FB1                     T3CON           equ	4017	;# 
   431   000FB2                     TMR3            equ	4018	;# 
   432   000FB2                     TMR3L           equ	4018	;# 
   433   000FB3                     TMR3H           equ	4019	;# 
   434   000FB4                     CMCON           equ	4020	;# 
   435   000FB5                     CVRCON          equ	4021	;# 
   436   000FB6                     ECCP1AS         equ	4022	;# 
   437   000FB6                     ECCPAS          equ	4022	;# 
   438   000FB7                     PWM1CON         equ	4023	;# 
   439   000FB7                     ECCP1DEL        equ	4023	;# 
   440   000FB8                     BAUDCON         equ	4024	;# 
   441   000FB8                     BAUDCTL         equ	4024	;# 
   442   000FBA                     CCP2CON         equ	4026	;# 
   443   000FBB                     CCPR2           equ	4027	;# 
   444   000FBB                     CCPR2L          equ	4027	;# 
   445   000FBC                     CCPR2H          equ	4028	;# 
   446   000FBD                     CCP1CON         equ	4029	;# 
   447   000FBE                     CCPR1           equ	4030	;# 
   448   000FBE                     CCPR1L          equ	4030	;# 
   449   000FBF                     CCPR1H          equ	4031	;# 
   450   000FC0                     ADCON2          equ	4032	;# 
   451   000FC1                     ADCON1          equ	4033	;# 
   452   000FC2                     ADCON0          equ	4034	;# 
   453   000FC3                     ADRES           equ	4035	;# 
   454   000FC3                     ADRESL          equ	4035	;# 
   455   000FC4                     ADRESH          equ	4036	;# 
   456   000FC5                     SSPCON2         equ	4037	;# 
   457   000FC6                     SSPCON1         equ	4038	;# 
   458   000FC7                     SSPSTAT         equ	4039	;# 
   459   000FC8                     SSPADD          equ	4040	;# 
   460   000FC9                     SSPBUF          equ	4041	;# 
   461   000FCA                     T2CON           equ	4042	;# 
   462   000FCB                     PR2             equ	4043	;# 
   463   000FCB                     MEMCON          equ	4043	;# 
   464   000FCC                     TMR2            equ	4044	;# 
   465   000FCD                     T1CON           equ	4045	;# 
   466   000FCE                     TMR1            equ	4046	;# 
   467   000FCE                     TMR1L           equ	4046	;# 
   468   000FCF                     TMR1H           equ	4047	;# 
   469   000FD0                     RCON            equ	4048	;# 
   470   000FD1                     WDTCON          equ	4049	;# 
   471   000FD2                     HLVDCON         equ	4050	;# 
   472   000FD2                     LVDCON          equ	4050	;# 
   473   000FD3                     OSCCON          equ	4051	;# 
   474   000FD5                     T0CON           equ	4053	;# 
   475   000FD6                     TMR0            equ	4054	;# 
   476   000FD6                     TMR0L           equ	4054	;# 
   477   000FD7                     TMR0H           equ	4055	;# 
   478   000FD8                     STATUS          equ	4056	;# 
   479   000FD9                     FSR2            equ	4057	;# 
   480   000FD9                     FSR2L           equ	4057	;# 
   481   000FDA                     FSR2H           equ	4058	;# 
   482   000FDB                     PLUSW2          equ	4059	;# 
   483   000FDC                     PREINC2         equ	4060	;# 
   484   000FDD                     POSTDEC2        equ	4061	;# 
   485   000FDE                     POSTINC2        equ	4062	;# 
   486   000FDF                     INDF2           equ	4063	;# 
   487   000FE0                     BSR             equ	4064	;# 
   488   000FE1                     FSR1            equ	4065	;# 
   489   000FE1                     FSR1L           equ	4065	;# 
   490   000FE2                     FSR1H           equ	4066	;# 
   491   000FE3                     PLUSW1          equ	4067	;# 
   492   000FE4                     PREINC1         equ	4068	;# 
   493   000FE5                     POSTDEC1        equ	4069	;# 
   494   000FE6                     POSTINC1        equ	4070	;# 
   495   000FE7                     INDF1           equ	4071	;# 
   496   000FE8                     WREG            equ	4072	;# 
   497   000FE9                     FSR0            equ	4073	;# 
   498   000FE9                     FSR0L           equ	4073	;# 
   499   000FEA                     FSR0H           equ	4074	;# 
   500   000FEB                     PLUSW0          equ	4075	;# 
   501   000FEC                     PREINC0         equ	4076	;# 
   502   000FED                     POSTDEC0        equ	4077	;# 
   503   000FEE                     POSTINC0        equ	4078	;# 
   504   000FEF                     INDF0           equ	4079	;# 
   505   000FF0                     INTCON3         equ	4080	;# 
   506   000FF1                     INTCON2         equ	4081	;# 
   507   000FF2                     INTCON          equ	4082	;# 
   508   000FF3                     PROD            equ	4083	;# 
   509   000FF3                     PRODL           equ	4083	;# 
   510   000FF4                     PRODH           equ	4084	;# 
   511   000FF5                     TABLAT          equ	4085	;# 
   512   000FF6                     TBLPTR          equ	4086	;# 
   513   000FF6                     TBLPTRL         equ	4086	;# 
   514   000FF7                     TBLPTRH         equ	4087	;# 
   515   000FF8                     TBLPTRU         equ	4088	;# 
   516   000FF9                     PCLAT           equ	4089	;# 
   517   000FF9                     PC              equ	4089	;# 
   518   000FF9                     PCL             equ	4089	;# 
   519   000FFA                     PCLATH          equ	4090	;# 
   520   000FFB                     PCLATU          equ	4091	;# 
   521   000FFC                     STKPTR          equ	4092	;# 
   522   000FFD                     TOS             equ	4093	;# 
   523   000FFD                     TOSL            equ	4093	;# 
   524   000FFE                     TOSH            equ	4094	;# 
   525   000FFF                     TOSU            equ	4095	;# 
   526   000F80                     PORTA           equ	3968	;# 
   527   000F81                     PORTB           equ	3969	;# 
   528   000F82                     PORTC           equ	3970	;# 
   529   000F83                     PORTD           equ	3971	;# 
   530   000F84                     PORTE           equ	3972	;# 
   531   000F89                     LATA            equ	3977	;# 
   532   000F8A                     LATB            equ	3978	;# 
   533   000F8B                     LATC            equ	3979	;# 
   534   000F8C                     LATD            equ	3980	;# 
   535   000F8D                     LATE            equ	3981	;# 
   536   000F92                     TRISA           equ	3986	;# 
   537   000F92                     DDRA            equ	3986	;# 
   538   000F93                     TRISB           equ	3987	;# 
   539   000F93                     DDRB            equ	3987	;# 
   540   000F94                     TRISC           equ	3988	;# 
   541   000F94                     DDRC            equ	3988	;# 
   542   000F95                     TRISD           equ	3989	;# 
   543   000F95                     DDRD            equ	3989	;# 
   544   000F96                     TRISE           equ	3990	;# 
   545   000F96                     DDRE            equ	3990	;# 
   546   000F9B                     OSCTUNE         equ	3995	;# 
   547   000F9D                     PIE1            equ	3997	;# 
   548   000F9E                     PIR1            equ	3998	;# 
   549   000F9F                     IPR1            equ	3999	;# 
   550   000FA0                     PIE2            equ	4000	;# 
   551   000FA1                     PIR2            equ	4001	;# 
   552   000FA2                     IPR2            equ	4002	;# 
   553   000FA6                     EECON1          equ	4006	;# 
   554   000FA7                     EECON2          equ	4007	;# 
   555   000FA8                     EEDATA          equ	4008	;# 
   556   000FA9                     EEADR           equ	4009	;# 
   557   000FAB                     RCSTA           equ	4011	;# 
   558   000FAB                     RCSTA1          equ	4011	;# 
   559   000FAC                     TXSTA           equ	4012	;# 
   560   000FAC                     TXSTA1          equ	4012	;# 
   561   000FAD                     TXREG           equ	4013	;# 
   562   000FAD                     TXREG1          equ	4013	;# 
   563   000FAE                     RCREG           equ	4014	;# 
   564   000FAE                     RCREG1          equ	4014	;# 
   565   000FAF                     SPBRG           equ	4015	;# 
   566   000FAF                     SPBRG1          equ	4015	;# 
   567   000FB0                     SPBRGH          equ	4016	;# 
   568   000FB1                     T3CON           equ	4017	;# 
   569   000FB2                     TMR3            equ	4018	;# 
   570   000FB2                     TMR3L           equ	4018	;# 
   571   000FB3                     TMR3H           equ	4019	;# 
   572   000FB4                     CMCON           equ	4020	;# 
   573   000FB5                     CVRCON          equ	4021	;# 
   574   000FB6                     ECCP1AS         equ	4022	;# 
   575   000FB6                     ECCPAS          equ	4022	;# 
   576   000FB7                     PWM1CON         equ	4023	;# 
   577   000FB7                     ECCP1DEL        equ	4023	;# 
   578   000FB8                     BAUDCON         equ	4024	;# 
   579   000FB8                     BAUDCTL         equ	4024	;# 
   580   000FBA                     CCP2CON         equ	4026	;# 
   581   000FBB                     CCPR2           equ	4027	;# 
   582   000FBB                     CCPR2L          equ	4027	;# 
   583   000FBC                     CCPR2H          equ	4028	;# 
   584   000FBD                     CCP1CON         equ	4029	;# 
   585   000FBE                     CCPR1           equ	4030	;# 
   586   000FBE                     CCPR1L          equ	4030	;# 
   587   000FBF                     CCPR1H          equ	4031	;# 
   588   000FC0                     ADCON2          equ	4032	;# 
   589   000FC1                     ADCON1          equ	4033	;# 
   590   000FC2                     ADCON0          equ	4034	;# 
   591   000FC3                     ADRES           equ	4035	;# 
   592   000FC3                     ADRESL          equ	4035	;# 
   593   000FC4                     ADRESH          equ	4036	;# 
   594   000FC5                     SSPCON2         equ	4037	;# 
   595   000FC6                     SSPCON1         equ	4038	;# 
   596   000FC7                     SSPSTAT         equ	4039	;# 
   597   000FC8                     SSPADD          equ	4040	;# 
   598   000FC9                     SSPBUF          equ	4041	;# 
   599   000FCA                     T2CON           equ	4042	;# 
   600   000FCB                     PR2             equ	4043	;# 
   601   000FCB                     MEMCON          equ	4043	;# 
   602   000FCC                     TMR2            equ	4044	;# 
   603   000FCD                     T1CON           equ	4045	;# 
   604   000FCE                     TMR1            equ	4046	;# 
   605   000FCE                     TMR1L           equ	4046	;# 
   606   000FCF                     TMR1H           equ	4047	;# 
   607   000FD0                     RCON            equ	4048	;# 
   608   000FD1                     WDTCON          equ	4049	;# 
   609   000FD2                     HLVDCON         equ	4050	;# 
   610   000FD2                     LVDCON          equ	4050	;# 
   611   000FD3                     OSCCON          equ	4051	;# 
   612   000FD5                     T0CON           equ	4053	;# 
   613   000FD6                     TMR0            equ	4054	;# 
   614   000FD6                     TMR0L           equ	4054	;# 
   615   000FD7                     TMR0H           equ	4055	;# 
   616   000FD8                     STATUS          equ	4056	;# 
   617   000FD9                     FSR2            equ	4057	;# 
   618   000FD9                     FSR2L           equ	4057	;# 
   619   000FDA                     FSR2H           equ	4058	;# 
   620   000FDB                     PLUSW2          equ	4059	;# 
   621   000FDC                     PREINC2         equ	4060	;# 
   622   000FDD                     POSTDEC2        equ	4061	;# 
   623   000FDE                     POSTINC2        equ	4062	;# 
   624   000FDF                     INDF2           equ	4063	;# 
   625   000FE0                     BSR             equ	4064	;# 
   626   000FE1                     FSR1            equ	4065	;# 
   627   000FE1                     FSR1L           equ	4065	;# 
   628   000FE2                     FSR1H           equ	4066	;# 
   629   000FE3                     PLUSW1          equ	4067	;# 
   630   000FE4                     PREINC1         equ	4068	;# 
   631   000FE5                     POSTDEC1        equ	4069	;# 
   632   000FE6                     POSTINC1        equ	4070	;# 
   633   000FE7                     INDF1           equ	4071	;# 
   634   000FE8                     WREG            equ	4072	;# 
   635   000FE9                     FSR0            equ	4073	;# 
   636   000FE9                     FSR0L           equ	4073	;# 
   637   000FEA                     FSR0H           equ	4074	;# 
   638   000FEB                     PLUSW0          equ	4075	;# 
   639   000FEC                     PREINC0         equ	4076	;# 
   640   000FED                     POSTDEC0        equ	4077	;# 
   641   000FEE                     POSTINC0        equ	4078	;# 
   642   000FEF                     INDF0           equ	4079	;# 
   643   000FF0                     INTCON3         equ	4080	;# 
   644   000FF1                     INTCON2         equ	4081	;# 
   645   000FF2                     INTCON          equ	4082	;# 
   646   000FF3                     PROD            equ	4083	;# 
   647   000FF3                     PRODL           equ	4083	;# 
   648   000FF4                     PRODH           equ	4084	;# 
   649   000FF5                     TABLAT          equ	4085	;# 
   650   000FF6                     TBLPTR          equ	4086	;# 
   651   000FF6                     TBLPTRL         equ	4086	;# 
   652   000FF7                     TBLPTRH         equ	4087	;# 
   653   000FF8                     TBLPTRU         equ	4088	;# 
   654   000FF9                     PCLAT           equ	4089	;# 
   655   000FF9                     PC              equ	4089	;# 
   656   000FF9                     PCL             equ	4089	;# 
   657   000FFA                     PCLATH          equ	4090	;# 
   658   000FFB                     PCLATU          equ	4091	;# 
   659   000FFC                     STKPTR          equ	4092	;# 
   660   000FFD                     TOS             equ	4093	;# 
   661   000FFD                     TOSL            equ	4093	;# 
   662   000FFE                     TOSH            equ	4094	;# 
   663   000FFF                     TOSU            equ	4095	;# 
   664   000F80                     PORTA           equ	3968	;# 
   665   000F81                     PORTB           equ	3969	;# 
   666   000F82                     PORTC           equ	3970	;# 
   667   000F83                     PORTD           equ	3971	;# 
   668   000F84                     PORTE           equ	3972	;# 
   669   000F89                     LATA            equ	3977	;# 
   670   000F8A                     LATB            equ	3978	;# 
   671   000F8B                     LATC            equ	3979	;# 
   672   000F8C                     LATD            equ	3980	;# 
   673   000F8D                     LATE            equ	3981	;# 
   674   000F92                     TRISA           equ	3986	;# 
   675   000F92                     DDRA            equ	3986	;# 
   676   000F93                     TRISB           equ	3987	;# 
   677   000F93                     DDRB            equ	3987	;# 
   678   000F94                     TRISC           equ	3988	;# 
   679   000F94                     DDRC            equ	3988	;# 
   680   000F95                     TRISD           equ	3989	;# 
   681   000F95                     DDRD            equ	3989	;# 
   682   000F96                     TRISE           equ	3990	;# 
   683   000F96                     DDRE            equ	3990	;# 
   684   000F9B                     OSCTUNE         equ	3995	;# 
   685   000F9D                     PIE1            equ	3997	;# 
   686   000F9E                     PIR1            equ	3998	;# 
   687   000F9F                     IPR1            equ	3999	;# 
   688   000FA0                     PIE2            equ	4000	;# 
   689   000FA1                     PIR2            equ	4001	;# 
   690   000FA2                     IPR2            equ	4002	;# 
   691   000FA6                     EECON1          equ	4006	;# 
   692   000FA7                     EECON2          equ	4007	;# 
   693   000FA8                     EEDATA          equ	4008	;# 
   694   000FA9                     EEADR           equ	4009	;# 
   695   000FAB                     RCSTA           equ	4011	;# 
   696   000FAB                     RCSTA1          equ	4011	;# 
   697   000FAC                     TXSTA           equ	4012	;# 
   698   000FAC                     TXSTA1          equ	4012	;# 
   699   000FAD                     TXREG           equ	4013	;# 
   700   000FAD                     TXREG1          equ	4013	;# 
   701   000FAE                     RCREG           equ	4014	;# 
   702   000FAE                     RCREG1          equ	4014	;# 
   703   000FAF                     SPBRG           equ	4015	;# 
   704   000FAF                     SPBRG1          equ	4015	;# 
   705   000FB0                     SPBRGH          equ	4016	;# 
   706   000FB1                     T3CON           equ	4017	;# 
   707   000FB2                     TMR3            equ	4018	;# 
   708   000FB2                     TMR3L           equ	4018	;# 
   709   000FB3                     TMR3H           equ	4019	;# 
   710   000FB4                     CMCON           equ	4020	;# 
   711   000FB5                     CVRCON          equ	4021	;# 
   712   000FB6                     ECCP1AS         equ	4022	;# 
   713   000FB6                     ECCPAS          equ	4022	;# 
   714   000FB7                     PWM1CON         equ	4023	;# 
   715   000FB7                     ECCP1DEL        equ	4023	;# 
   716   000FB8                     BAUDCON         equ	4024	;# 
   717   000FB8                     BAUDCTL         equ	4024	;# 
   718   000FBA                     CCP2CON         equ	4026	;# 
   719   000FBB                     CCPR2           equ	4027	;# 
   720   000FBB                     CCPR2L          equ	4027	;# 
   721   000FBC                     CCPR2H          equ	4028	;# 
   722   000FBD                     CCP1CON         equ	4029	;# 
   723   000FBE                     CCPR1           equ	4030	;# 
   724   000FBE                     CCPR1L          equ	4030	;# 
   725   000FBF                     CCPR1H          equ	4031	;# 
   726   000FC0                     ADCON2          equ	4032	;# 
   727   000FC1                     ADCON1          equ	4033	;# 
   728   000FC2                     ADCON0          equ	4034	;# 
   729   000FC3                     ADRES           equ	4035	;# 
   730   000FC3                     ADRESL          equ	4035	;# 
   731   000FC4                     ADRESH          equ	4036	;# 
   732   000FC5                     SSPCON2         equ	4037	;# 
   733   000FC6                     SSPCON1         equ	4038	;# 
   734   000FC7                     SSPSTAT         equ	4039	;# 
   735   000FC8                     SSPADD          equ	4040	;# 
   736   000FC9                     SSPBUF          equ	4041	;# 
   737   000FCA                     T2CON           equ	4042	;# 
   738   000FCB                     PR2             equ	4043	;# 
   739   000FCB                     MEMCON          equ	4043	;# 
   740   000FCC                     TMR2            equ	4044	;# 
   741   000FCD                     T1CON           equ	4045	;# 
   742   000FCE                     TMR1            equ	4046	;# 
   743   000FCE                     TMR1L           equ	4046	;# 
   744   000FCF                     TMR1H           equ	4047	;# 
   745   000FD0                     RCON            equ	4048	;# 
   746   000FD1                     WDTCON          equ	4049	;# 
   747   000FD2                     HLVDCON         equ	4050	;# 
   748   000FD2                     LVDCON          equ	4050	;# 
   749   000FD3                     OSCCON          equ	4051	;# 
   750   000FD5                     T0CON           equ	4053	;# 
   751   000FD6                     TMR0            equ	4054	;# 
   752   000FD6                     TMR0L           equ	4054	;# 
   753   000FD7                     TMR0H           equ	4055	;# 
   754   000FD8                     STATUS          equ	4056	;# 
   755   000FD9                     FSR2            equ	4057	;# 
   756   000FD9                     FSR2L           equ	4057	;# 
   757   000FDA                     FSR2H           equ	4058	;# 
   758   000FDB                     PLUSW2          equ	4059	;# 
   759   000FDC                     PREINC2         equ	4060	;# 
   760   000FDD                     POSTDEC2        equ	4061	;# 
   761   000FDE                     POSTINC2        equ	4062	;# 
   762   000FDF                     INDF2           equ	4063	;# 
   763   000FE0                     BSR             equ	4064	;# 
   764   000FE1                     FSR1            equ	4065	;# 
   765   000FE1                     FSR1L           equ	4065	;# 
   766   000FE2                     FSR1H           equ	4066	;# 
   767   000FE3                     PLUSW1          equ	4067	;# 
   768   000FE4                     PREINC1         equ	4068	;# 
   769   000FE5                     POSTDEC1        equ	4069	;# 
   770   000FE6                     POSTINC1        equ	4070	;# 
   771   000FE7                     INDF1           equ	4071	;# 
   772   000FE8                     WREG            equ	4072	;# 
   773   000FE9                     FSR0            equ	4073	;# 
   774   000FE9                     FSR0L           equ	4073	;# 
   775   000FEA                     FSR0H           equ	4074	;# 
   776   000FEB                     PLUSW0          equ	4075	;# 
   777   000FEC                     PREINC0         equ	4076	;# 
   778   000FED                     POSTDEC0        equ	4077	;# 
   779   000FEE                     POSTINC0        equ	4078	;# 
   780   000FEF                     INDF0           equ	4079	;# 
   781   000FF0                     INTCON3         equ	4080	;# 
   782   000FF1                     INTCON2         equ	4081	;# 
   783   000FF2                     INTCON          equ	4082	;# 
   784   000FF3                     PROD            equ	4083	;# 
   785   000FF3                     PRODL           equ	4083	;# 
   786   000FF4                     PRODH           equ	4084	;# 
   787   000FF5                     TABLAT          equ	4085	;# 
   788   000FF6                     TBLPTR          equ	4086	;# 
   789   000FF6                     TBLPTRL         equ	4086	;# 
   790   000FF7                     TBLPTRH         equ	4087	;# 
   791   000FF8                     TBLPTRU         equ	4088	;# 
   792   000FF9                     PCLAT           equ	4089	;# 
   793   000FF9                     PC              equ	4089	;# 
   794   000FF9                     PCL             equ	4089	;# 
   795   000FFA                     PCLATH          equ	4090	;# 
   796   000FFB                     PCLATU          equ	4091	;# 
   797   000FFC                     STKPTR          equ	4092	;# 
   798   000FFD                     TOS             equ	4093	;# 
   799   000FFD                     TOSL            equ	4093	;# 
   800   000FFE                     TOSH            equ	4094	;# 
   801   000FFF                     TOSU            equ	4095	;# 
   802   000F80                     PORTA           equ	3968	;# 
   803   000F81                     PORTB           equ	3969	;# 
   804   000F82                     PORTC           equ	3970	;# 
   805   000F83                     PORTD           equ	3971	;# 
   806   000F84                     PORTE           equ	3972	;# 
   807   000F89                     LATA            equ	3977	;# 
   808   000F8A                     LATB            equ	3978	;# 
   809   000F8B                     LATC            equ	3979	;# 
   810   000F8C                     LATD            equ	3980	;# 
   811   000F8D                     LATE            equ	3981	;# 
   812   000F92                     TRISA           equ	3986	;# 
   813   000F92                     DDRA            equ	3986	;# 
   814   000F93                     TRISB           equ	3987	;# 
   815   000F93                     DDRB            equ	3987	;# 
   816   000F94                     TRISC           equ	3988	;# 
   817   000F94                     DDRC            equ	3988	;# 
   818   000F95                     TRISD           equ	3989	;# 
   819   000F95                     DDRD            equ	3989	;# 
   820   000F96                     TRISE           equ	3990	;# 
   821   000F96                     DDRE            equ	3990	;# 
   822   000F9B                     OSCTUNE         equ	3995	;# 
   823   000F9D                     PIE1            equ	3997	;# 
   824   000F9E                     PIR1            equ	3998	;# 
   825   000F9F                     IPR1            equ	3999	;# 
   826   000FA0                     PIE2            equ	4000	;# 
   827   000FA1                     PIR2            equ	4001	;# 
   828   000FA2                     IPR2            equ	4002	;# 
   829   000FA6                     EECON1          equ	4006	;# 
   830   000FA7                     EECON2          equ	4007	;# 
   831   000FA8                     EEDATA          equ	4008	;# 
   832   000FA9                     EEADR           equ	4009	;# 
   833   000FAB                     RCSTA           equ	4011	;# 
   834   000FAB                     RCSTA1          equ	4011	;# 
   835   000FAC                     TXSTA           equ	4012	;# 
   836   000FAC                     TXSTA1          equ	4012	;# 
   837   000FAD                     TXREG           equ	4013	;# 
   838   000FAD                     TXREG1          equ	4013	;# 
   839   000FAE                     RCREG           equ	4014	;# 
   840   000FAE                     RCREG1          equ	4014	;# 
   841   000FAF                     SPBRG           equ	4015	;# 
   842   000FAF                     SPBRG1          equ	4015	;# 
   843   000FB0                     SPBRGH          equ	4016	;# 
   844   000FB1                     T3CON           equ	4017	;# 
   845   000FB2                     TMR3            equ	4018	;# 
   846   000FB2                     TMR3L           equ	4018	;# 
   847   000FB3                     TMR3H           equ	4019	;# 
   848   000FB4                     CMCON           equ	4020	;# 
   849   000FB5                     CVRCON          equ	4021	;# 
   850   000FB6                     ECCP1AS         equ	4022	;# 
   851   000FB6                     ECCPAS          equ	4022	;# 
   852   000FB7                     PWM1CON         equ	4023	;# 
   853   000FB7                     ECCP1DEL        equ	4023	;# 
   854   000FB8                     BAUDCON         equ	4024	;# 
   855   000FB8                     BAUDCTL         equ	4024	;# 
   856   000FBA                     CCP2CON         equ	4026	;# 
   857   000FBB                     CCPR2           equ	4027	;# 
   858   000FBB                     CCPR2L          equ	4027	;# 
   859   000FBC                     CCPR2H          equ	4028	;# 
   860   000FBD                     CCP1CON         equ	4029	;# 
   861   000FBE                     CCPR1           equ	4030	;# 
   862   000FBE                     CCPR1L          equ	4030	;# 
   863   000FBF                     CCPR1H          equ	4031	;# 
   864   000FC0                     ADCON2          equ	4032	;# 
   865   000FC1                     ADCON1          equ	4033	;# 
   866   000FC2                     ADCON0          equ	4034	;# 
   867   000FC3                     ADRES           equ	4035	;# 
   868   000FC3                     ADRESL          equ	4035	;# 
   869   000FC4                     ADRESH          equ	4036	;# 
   870   000FC5                     SSPCON2         equ	4037	;# 
   871   000FC6                     SSPCON1         equ	4038	;# 
   872   000FC7                     SSPSTAT         equ	4039	;# 
   873   000FC8                     SSPADD          equ	4040	;# 
   874   000FC9                     SSPBUF          equ	4041	;# 
   875   000FCA                     T2CON           equ	4042	;# 
   876   000FCB                     PR2             equ	4043	;# 
   877   000FCB                     MEMCON          equ	4043	;# 
   878   000FCC                     TMR2            equ	4044	;# 
   879   000FCD                     T1CON           equ	4045	;# 
   880   000FCE                     TMR1            equ	4046	;# 
   881   000FCE                     TMR1L           equ	4046	;# 
   882   000FCF                     TMR1H           equ	4047	;# 
   883   000FD0                     RCON            equ	4048	;# 
   884   000FD1                     WDTCON          equ	4049	;# 
   885   000FD2                     HLVDCON         equ	4050	;# 
   886   000FD2                     LVDCON          equ	4050	;# 
   887   000FD3                     OSCCON          equ	4051	;# 
   888   000FD5                     T0CON           equ	4053	;# 
   889   000FD6                     TMR0            equ	4054	;# 
   890   000FD6                     TMR0L           equ	4054	;# 
   891   000FD7                     TMR0H           equ	4055	;# 
   892   000FD8                     STATUS          equ	4056	;# 
   893   000FD9                     FSR2            equ	4057	;# 
   894   000FD9                     FSR2L           equ	4057	;# 
   895   000FDA                     FSR2H           equ	4058	;# 
   896   000FDB                     PLUSW2          equ	4059	;# 
   897   000FDC                     PREINC2         equ	4060	;# 
   898   000FDD                     POSTDEC2        equ	4061	;# 
   899   000FDE                     POSTINC2        equ	4062	;# 
   900   000FDF                     INDF2           equ	4063	;# 
   901   000FE0                     BSR             equ	4064	;# 
   902   000FE1                     FSR1            equ	4065	;# 
   903   000FE1                     FSR1L           equ	4065	;# 
   904   000FE2                     FSR1H           equ	4066	;# 
   905   000FE3                     PLUSW1          equ	4067	;# 
   906   000FE4                     PREINC1         equ	4068	;# 
   907   000FE5                     POSTDEC1        equ	4069	;# 
   908   000FE6                     POSTINC1        equ	4070	;# 
   909   000FE7                     INDF1           equ	4071	;# 
   910   000FE8                     WREG            equ	4072	;# 
   911   000FE9                     FSR0            equ	4073	;# 
   912   000FE9                     FSR0L           equ	4073	;# 
   913   000FEA                     FSR0H           equ	4074	;# 
   914   000FEB                     PLUSW0          equ	4075	;# 
   915   000FEC                     PREINC0         equ	4076	;# 
   916   000FED                     POSTDEC0        equ	4077	;# 
   917   000FEE                     POSTINC0        equ	4078	;# 
   918   000FEF                     INDF0           equ	4079	;# 
   919   000FF0                     INTCON3         equ	4080	;# 
   920   000FF1                     INTCON2         equ	4081	;# 
   921   000FF2                     INTCON          equ	4082	;# 
   922   000FF3                     PROD            equ	4083	;# 
   923   000FF3                     PRODL           equ	4083	;# 
   924   000FF4                     PRODH           equ	4084	;# 
   925   000FF5                     TABLAT          equ	4085	;# 
   926   000FF6                     TBLPTR          equ	4086	;# 
   927   000FF6                     TBLPTRL         equ	4086	;# 
   928   000FF7                     TBLPTRH         equ	4087	;# 
   929   000FF8                     TBLPTRU         equ	4088	;# 
   930   000FF9                     PCLAT           equ	4089	;# 
   931   000FF9                     PC              equ	4089	;# 
   932   000FF9                     PCL             equ	4089	;# 
   933   000FFA                     PCLATH          equ	4090	;# 
   934   000FFB                     PCLATU          equ	4091	;# 
   935   000FFC                     STKPTR          equ	4092	;# 
   936   000FFD                     TOS             equ	4093	;# 
   937   000FFD                     TOSL            equ	4093	;# 
   938   000FFE                     TOSH            equ	4094	;# 
   939   000FFF                     TOSU            equ	4095	;# 
   940   007D5C                     _CREN           set	32092
   941   007CF5                     _RCIF           set	31989
   942   007E9C                     _IRCF0          set	32412
   943   007E9D                     _IRCF1          set	32413
   944   007E9E                     _IRCF2          set	32414
   945   007E07                     _ADFM           set	32263
   946   000F89                     _LATAbits       set	3977
   947   000F92                     _TRISAbits      set	3986
   948   000F89                     _LATA           set	3977
   949   000F94                     _TRISCbits      set	3988
   950   000F92                     _TRISA          set	3986
   951   000FAE                     _RCREG          set	4014
   952   000FAD                     _TXREG          set	4013
   953   000FAB                     _RCSTAbits      set	4011
   954   000FAF                     _SPBRG          set	4015
   955   000FB8                     _BAUDCONbits    set	4024
   956   000FAC                     _TXSTAbits      set	4012
   957   000FCB                     _PR2            set	4043
   958   000FCA                     _T2CON          set	4042
   959   000F9D                     _PIE1bits       set	3997
   960   000FD0                     _RCONbits       set	4048
   961   000F9F                     _IPR1bits       set	3999
   962   000F9E                     _PIR1bits       set	3998
   963   000FBD                     _CCP1CON        set	4029
   964   000FC2                     _ADCON0bits     set	4034
   965   000FC3                     _ADRESL         set	4035
   966   000FC4                     _ADRESH         set	4036
   967   000FC0                     _ADCON2bits     set	4032
   968   000FC1                     _ADCON1         set	4033
   969   000FF2                     _INTCONbits     set	4082
   970                           
   971                           	psect	smallconst
   972   000600                     __psmallconst:
   973                           	callstack 0
   974   000600  00                 	db	0
   975   000601                     STR_1:
   976   000601  0D                 	db	13
   977   000602  0A                 	db	10
   978   000603  00                 	db	0
   979   000603                     STR_2           equ	STR_1+2
   980   000603                     STR_3           equ	STR_1+2
   981   000603                     STR_4           equ	STR_1+2
   982   000603                     STR_5           equ	STR_1+2
   983   000603                     STR_6           equ	STR_1+2
   984   000603                     STR_7           equ	STR_1+2
   985   000604  00                 	db	0	; dummy byte at the end
   986   000002                     __activetblptr  equ	2
   987                           
   988                           ; #config settings
   989                           
   990                           	psect	cinit
   991   0008D0                     __pcinit:
   992                           	callstack 0
   993   0008D0                     start_initialization:
   994                           	callstack 0
   995   0008D0                     __initialization:
   996                           	callstack 0
   997                           
   998                           ; Clear objects allocated to COMRAM (48 bytes)
   999   0008D0  EE00  F001         	lfsr	0,__pbssCOMRAM
  1000   0008D4  0E30               	movlw	48
  1001   0008D6                     clear_0:
  1002   0008D6  6AEE               	clrf	postinc0,c
  1003   0008D8  06E8               	decf	wreg,f,c
  1004   0008DA  E1FD               	bnz	clear_0
  1005   0008DC                     end_of_initialization:
  1006                           	callstack 0
  1007   0008DC                     __end_of__initialization:
  1008                           	callstack 0
  1009   0008DC  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1010   0008DE  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1011   0008E0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1012   0008E2  6EF8               	movwf	tblptru,c
  1013   0008E4  0100               	movlb	0
  1014   0008E6  EF03  F003         	goto	_main	;jump to C main() function
  1015                           
  1016                           	psect	bssCOMRAM
  1017   000001                     __pbssCOMRAM:
  1018                           	callstack 0
  1019   000001                     _str:
  1020                           	callstack 0
  1021   000001                     	ds	20
  1022   000015                     _postpostscaler:
  1023                           	callstack 0
  1024   000015                     	ds	2
  1025   000017                     _dir:
  1026                           	callstack 0
  1027   000017                     	ds	2
  1028   000019                     _state:
  1029                           	callstack 0
  1030   000019                     	ds	2
  1031   00001B                     _lenStr:
  1032                           	callstack 0
  1033   00001B                     	ds	2
  1034   00001D                     _mystring:
  1035                           	callstack 0
  1036   00001D                     	ds	20
  1037                           
  1038                           	psect	cstackBANK0
  1039   000080                     __pcstackBANK0:
  1040                           	callstack 0
  1041   000080                     displayBinary@num:
  1042                           	callstack 0
  1043   000080                     ledLeftOff@num:
  1044                           	callstack 0
  1045   000080                     
  1046                           ; 1 bytes @ 0x0
  1047   000080                     	ds	2
  1048   000082                     ??_displayBinary:
  1049   000082                     
  1050                           ; 1 bytes @ 0x2
  1051   000082                     	ds	1
  1052   000083                     ledRightOn@num:
  1053                           	callstack 0
  1054   000083                     ledRightOff@num:
  1055                           	callstack 0
  1056   000083                     ledLeftOn@num:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x3
  1060   000083                     	ds	2
  1061   000085                     ??_main:
  1062                           
  1063                           ; 1 bytes @ 0x5
  1064   000085                     	ds	2
  1065                           
  1066                           	psect	cstackCOMRAM
  1067   000031                     __pcstackCOMRAM:
  1068                           	callstack 0
  1069   000031                     ?_strlen:
  1070                           	callstack 0
  1071   000031                     UART_Write@data:
  1072                           	callstack 0
  1073   000031                     strlen@s:
  1074                           	callstack 0
  1075   000031                     ClearBuffer@i:
  1076                           	callstack 0
  1077   000031                     
  1078                           ; 1 bytes @ 0x0
  1079   000031                     	ds	1
  1080   000032                     UART_Write_Text@text:
  1081                           	callstack 0
  1082                           
  1083                           ; 1 bytes @ 0x1
  1084   000032                     	ds	1
  1085   000033                     strcpy@dest:
  1086                           	callstack 0
  1087   000033                     strlen@a:
  1088                           	callstack 0
  1089   000033                     ??_UART_Write_Text:
  1090                           
  1091                           ; 1 bytes @ 0x2
  1092   000033                     	ds	1
  1093   000034                     UART_Write_Text@i:
  1094                           	callstack 0
  1095   000034                     strcpy@src:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x3
  1099   000034                     	ds	2
  1100   000036                     MyusartRead@receivedData:
  1101                           	callstack 0
  1102   000036                     ??_strcpy:
  1103   000036                     
  1104                           ; 1 bytes @ 0x5
  1105   000036                     	ds	2
  1106   000038                     strcpy@d:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x7
  1110   000038                     	ds	1
  1111   000039                     ??_Lo_ISR:
  1112                           
  1113                           ; 1 bytes @ 0x8
  1114   000039                     	ds	12
  1115   000045                     Lo_ISR@command:
  1116                           	callstack 0
  1117                           
  1118                           ; 20 bytes @ 0x14
  1119   000045                     	ds	20
  1120                           
  1121 ;;
  1122 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1123 ;;
  1124 ;; *************** function _main *****************
  1125 ;; Defined at:
  1126 ;;		line 67 in file "main.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1140 ;;      Params:         0       0       0       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0       0       0
  1142 ;;      Temps:          0       2       0       0       0       0       0
  1143 ;;      Totals:         0       2       0       0       0       0       0
  1144 ;;Total ram usage:        2 bytes
  1145 ;; Hardware stack levels required when called: 7
  1146 ;; This function calls:
  1147 ;;		_SYSTEM_Initialize
  1148 ;;		_displayBinary
  1149 ;;		_initialState
  1150 ;;		_ledLeftOff
  1151 ;;		_ledLeftOn
  1152 ;;		_ledRightOff
  1153 ;;		_ledRightOn
  1154 ;; This function is called by:
  1155 ;;		Startup code after reset
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text0
  1160   000606                     __ptext0:
  1161                           	callstack 0
  1162   000606                     _main:
  1163                           	callstack 24
  1164   000606                     
  1165                           ;main.c: 69:     SYSTEM_Initialize() ;
  1166   000606  ECAF  F004         	call	_SYSTEM_Initialize	;wreg free
  1167   00060A  EF44  F003         	goto	l1559
  1168   00060E                     l1537:
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;main.c: 74:                 initialState();
  1172   00060E  ECC1  F004         	call	_initialState	;wreg free
  1173                           
  1174                           ;main.c: 75:                 break;
  1175   000612  EF44  F003         	goto	l1559
  1176   000616                     l1539:
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;main.c: 77:                 ledRightOn(1);
  1180   000616  0E00               	movlw	0
  1181   000618  6F84               	movwf	(ledRightOn@num+1)& (0+255),b
  1182   00061A  0E01               	movlw	1
  1183   00061C  6F83               	movwf	ledRightOn@num& (0+255),b
  1184   00061E  EC75  F004         	call	_ledRightOn	;wreg free
  1185                           
  1186                           ;main.c: 78:                 break;
  1187   000622  EF44  F003         	goto	l1559
  1188   000626                     l1541:
  1189                           
  1190                           ; BSR set to: 0
  1191                           ;main.c: 80:                 ledRightOff(2);
  1192   000626  0E00               	movlw	0
  1193   000628  6F84               	movwf	(ledRightOff@num+1)& (0+255),b
  1194   00062A  0E02               	movlw	2
  1195   00062C  6F83               	movwf	ledRightOff@num& (0+255),b
  1196   00062E  EC82  F004         	call	_ledRightOff	;wreg free
  1197                           
  1198                           ;main.c: 81:                 break;
  1199   000632  EF44  F003         	goto	l1559
  1200   000636                     l1543:
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;main.c: 83:                 ledLeftOn(3);
  1204   000636  0E00               	movlw	0
  1205   000638  6F84               	movwf	(ledLeftOn@num+1)& (0+255),b
  1206   00063A  0E03               	movlw	3
  1207   00063C  6F83               	movwf	ledLeftOn@num& (0+255),b
  1208   00063E  ECA5  F004         	call	_ledLeftOn	;wreg free
  1209                           
  1210                           ;main.c: 84:                 break;
  1211   000642  EF44  F003         	goto	l1559
  1212   000646                     l1545:
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;main.c: 86:                 displayBinary(4);
  1216   000646  0E00               	movlw	0
  1217   000648  6F81               	movwf	(displayBinary@num+1)& (0+255),b
  1218   00064A  0E04               	movlw	4
  1219   00064C  6F80               	movwf	displayBinary@num& (0+255),b
  1220   00064E  EC71  F003         	call	_displayBinary	;wreg free
  1221   000652                     
  1222                           ;main.c: 87:                 ledLeftOff(4);
  1223   000652  0E00               	movlw	0
  1224   000654  0100               	movlb	0	; () banked
  1225   000656  6F81               	movwf	(ledLeftOff@num+1)& (0+255),b
  1226   000658  0E04               	movlw	4
  1227   00065A  6F80               	movwf	ledLeftOff@num& (0+255),b
  1228   00065C  ECBD  F004         	call	_ledLeftOff	;wreg free
  1229                           
  1230                           ;main.c: 88:                 break;
  1231   000660  EF44  F003         	goto	l1559
  1232   000664                     l1549:
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;main.c: 90:                 displayBinary(5);
  1236   000664  0E00               	movlw	0
  1237   000666  6F81               	movwf	(displayBinary@num+1)& (0+255),b
  1238   000668  0E05               	movlw	5
  1239   00066A  6F80               	movwf	displayBinary@num& (0+255),b
  1240   00066C  EC71  F003         	call	_displayBinary	;wreg free
  1241   000670                     
  1242                           ;main.c: 91:                 LATAbits.LATA6 = 1;;
  1243   000670  8C89               	bsf	137,6,c	;volatile
  1244                           
  1245                           ;main.c: 92:                 break;
  1246   000672  EF44  F003         	goto	l1559
  1247   000676                     l1553:
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;main.c: 94:                 displayBinary(6);
  1251   000676  0E00               	movlw	0
  1252   000678  6F81               	movwf	(displayBinary@num+1)& (0+255),b
  1253   00067A  0E06               	movlw	6
  1254   00067C  6F80               	movwf	displayBinary@num& (0+255),b
  1255   00067E  EC71  F003         	call	_displayBinary	;wreg free
  1256   000682                     
  1257                           ;main.c: 95:                 LATAbits.LATA6 = 0;;
  1258   000682  9C89               	bcf	137,6,c	;volatile
  1259                           
  1260                           ;main.c: 96:                 break;
  1261   000684  EF44  F003         	goto	l1559
  1262   000688                     l191:
  1263   000688                     l1559:
  1264   000688  C019  F085         	movff	_state,??_main
  1265   00068C  C01A  F086         	movff	_state+1,??_main+1
  1266                           
  1267                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1268                           ; Switch size 1, requested type "simple"
  1269                           ; Number of cases is 1, Range of values is 0 to 0
  1270                           ; switch strategies available:
  1271                           ; Name         Instructions Cycles
  1272                           ; simple_byte            4     3 (average)
  1273                           ;	Chosen strategy is simple_byte
  1274   000690  0100               	movlb	0	; () banked
  1275   000692  5186               	movf	(??_main+1)& (0+255),w,b
  1276   000694  0A00               	xorlw	0	; case 0
  1277   000696  B4D8               	btfsc	status,2,c
  1278   000698  EF50  F003         	goto	l1597
  1279   00069C  EF44  F003         	goto	l191
  1280   0006A0                     l1597:
  1281                           
  1282                           ; BSR set to: 0
  1283                           ; Switch size 1, requested type "simple"
  1284                           ; Number of cases is 7, Range of values is 0 to 6
  1285                           ; switch strategies available:
  1286                           ; Name         Instructions Cycles
  1287                           ; simple_byte           22    12 (average)
  1288                           ;	Chosen strategy is simple_byte
  1289   0006A0  5185               	movf	??_main& (0+255),w,b
  1290   0006A2  0A00               	xorlw	0	; case 0
  1291   0006A4  B4D8               	btfsc	status,2,c
  1292   0006A6  EF07  F003         	goto	l1537
  1293   0006AA  0A01               	xorlw	1	; case 1
  1294   0006AC  B4D8               	btfsc	status,2,c
  1295   0006AE  EF0B  F003         	goto	l1539
  1296   0006B2  0A03               	xorlw	3	; case 2
  1297   0006B4  B4D8               	btfsc	status,2,c
  1298   0006B6  EF13  F003         	goto	l1541
  1299   0006BA  0A01               	xorlw	1	; case 3
  1300   0006BC  B4D8               	btfsc	status,2,c
  1301   0006BE  EF1B  F003         	goto	l1543
  1302   0006C2  0A07               	xorlw	7	; case 4
  1303   0006C4  B4D8               	btfsc	status,2,c
  1304   0006C6  EF23  F003         	goto	l1545
  1305   0006CA  0A01               	xorlw	1	; case 5
  1306   0006CC  B4D8               	btfsc	status,2,c
  1307   0006CE  EF32  F003         	goto	l1549
  1308   0006D2  0A03               	xorlw	3	; case 6
  1309   0006D4  B4D8               	btfsc	status,2,c
  1310   0006D6  EF3B  F003         	goto	l1553
  1311   0006DA  EF44  F003         	goto	l191
  1312   0006DE  EFBC  F001         	goto	start
  1313   0006E2                     __end_of_main:
  1314                           	callstack 0
  1315                           
  1316 ;; *************** function _ledRightOn *****************
  1317 ;; Defined at:
  1318 ;;		line 31 in file "main.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  num             2    3[BANK0 ] int 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;		None
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1    wreg      void 
  1325 ;; Registers used:
  1326 ;;		wreg, status,2, status,0, cstack
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1332 ;;      Params:         0       2       0       0       0       0       0
  1333 ;;      Locals:         0       0       0       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0       0       0
  1335 ;;      Totals:         0       2       0       0       0       0       0
  1336 ;;Total ram usage:        2 bytes
  1337 ;; Hardware stack levels used: 1
  1338 ;; Hardware stack levels required when called: 6
  1339 ;; This function calls:
  1340 ;;		_displayBinary
  1341 ;; This function is called by:
  1342 ;;		_main
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text1
  1347   0008EA                     __ptext1:
  1348                           	callstack 0
  1349   0008EA                     _ledRightOn:
  1350                           	callstack 24
  1351   0008EA                     
  1352                           ;main.c: 32:     displayBinary(num);
  1353   0008EA  C083  F080         	movff	ledRightOn@num,displayBinary@num
  1354   0008EE  C084  F081         	movff	ledRightOn@num+1,displayBinary@num+1
  1355   0008F2  EC71  F003         	call	_displayBinary	;wreg free
  1356   0008F6                     
  1357                           ;main.c: 33:     LATAbits.LATA7 = 1;
  1358   0008F6  8E89               	bsf	137,7,c	;volatile
  1359   0008F8                     
  1360                           ;main.c: 34:     LATAbits.LATA5 = 0;;
  1361   0008F8  9A89               	bcf	137,5,c	;volatile
  1362   0008FA                     
  1363                           ;main.c: 35:     dir = 1;
  1364   0008FA  0E00               	movlw	0
  1365   0008FC  6E18               	movwf	(_dir+1)^0,c
  1366   0008FE  0E01               	movlw	1
  1367   000900  6E17               	movwf	_dir^0,c
  1368   000902  0012               	return		;funcret
  1369   000904                     __end_of_ledRightOn:
  1370                           	callstack 0
  1371                           
  1372 ;; *************** function _ledRightOff *****************
  1373 ;; Defined at:
  1374 ;;		line 38 in file "main.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  num             2    3[BANK0 ] int 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, status,0, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1388 ;;      Params:         0       2       0       0       0       0       0
  1389 ;;      Locals:         0       0       0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0       0       0
  1391 ;;      Totals:         0       2       0       0       0       0       0
  1392 ;;Total ram usage:        2 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 6
  1395 ;; This function calls:
  1396 ;;		_displayBinary
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text2
  1403   000904                     __ptext2:
  1404                           	callstack 0
  1405   000904                     _ledRightOff:
  1406                           	callstack 24
  1407   000904                     
  1408                           ;main.c: 39:     dir = 0;
  1409   000904  0E00               	movlw	0
  1410   000906  6E18               	movwf	(_dir+1)^0,c
  1411   000908  0E00               	movlw	0
  1412   00090A  6E17               	movwf	_dir^0,c
  1413   00090C                     
  1414                           ;main.c: 40:     displayBinary(num);
  1415   00090C  C083  F080         	movff	ledRightOff@num,displayBinary@num
  1416   000910  C084  F081         	movff	ledRightOff@num+1,displayBinary@num+1
  1417   000914  EC71  F003         	call	_displayBinary	;wreg free
  1418   000918                     
  1419                           ;main.c: 43:     LATAbits.LATA7 = 0;
  1420   000918  9E89               	bcf	137,7,c	;volatile
  1421   00091A  0012               	return		;funcret
  1422   00091C                     __end_of_ledRightOff:
  1423                           	callstack 0
  1424                           
  1425 ;; *************** function _ledLeftOn *****************
  1426 ;; Defined at:
  1427 ;;		line 46 in file "main.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  num             2    3[BANK0 ] int 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;		None
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, status,2, status,0, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1441 ;;      Params:         0       2       0       0       0       0       0
  1442 ;;      Locals:         0       0       0       0       0       0       0
  1443 ;;      Temps:          0       0       0       0       0       0       0
  1444 ;;      Totals:         0       2       0       0       0       0       0
  1445 ;;Total ram usage:        2 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; Hardware stack levels required when called: 6
  1448 ;; This function calls:
  1449 ;;		_displayBinary
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           	psect	text3
  1456   00094A                     __ptext3:
  1457                           	callstack 0
  1458   00094A                     _ledLeftOn:
  1459                           	callstack 24
  1460   00094A                     
  1461                           ;main.c: 47:     dir = -1;
  1462   00094A  6817               	setf	_dir^0,c
  1463   00094C  6818               	setf	(_dir+1)^0,c
  1464                           
  1465                           ;main.c: 49:     LATAbits.LATA5 = 1;
  1466   00094E  8A89               	bsf	137,5,c	;volatile
  1467   000950                     
  1468                           ;main.c: 50:     displayBinary(num);
  1469   000950  C083  F080         	movff	ledLeftOn@num,displayBinary@num
  1470   000954  C084  F081         	movff	ledLeftOn@num+1,displayBinary@num+1
  1471   000958  EC71  F003         	call	_displayBinary	;wreg free
  1472   00095C  0012               	return		;funcret
  1473   00095E                     __end_of_ledLeftOn:
  1474                           	callstack 0
  1475                           
  1476 ;; *************** function _displayBinary *****************
  1477 ;; Defined at:
  1478 ;;		line 20 in file "main.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  num             2    0[BANK0 ] int 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg, status,2, status,0
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1492 ;;      Params:         0       2       0       0       0       0       0
  1493 ;;      Locals:         0       0       0       0       0       0       0
  1494 ;;      Temps:          0       1       0       0       0       0       0
  1495 ;;      Totals:         0       3       0       0       0       0       0
  1496 ;;Total ram usage:        3 bytes
  1497 ;; Hardware stack levels used: 1
  1498 ;; Hardware stack levels required when called: 5
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_ledRightOn
  1503 ;;		_ledRightOff
  1504 ;;		_ledLeftOn
  1505 ;;		_main
  1506 ;;		_BrakeOn
  1507 ;;		_BrakeOff
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text4
  1512   0006E2                     __ptext4:
  1513                           	callstack 0
  1514   0006E2                     _displayBinary:
  1515                           	callstack 24
  1516   0006E2                     
  1517                           ;main.c: 22:      LATAbits.LATA1 = (num & 0x01) ? 1 : 0;
  1518   0006E2  0100               	movlb	0	; () banked
  1519   0006E4  B180               	btfsc	displayBinary@num& (0+255),0,b
  1520   0006E6  EF77  F003         	goto	u821
  1521   0006EA  EF7B  F003         	goto	u820
  1522   0006EE                     u821:
  1523   0006EE  6B82               	clrf	??_displayBinary& (0+255),b
  1524   0006F0  2B82               	incf	??_displayBinary& (0+255),f,b
  1525   0006F2  EF7D  F003         	goto	u838
  1526   0006F6                     u820:
  1527   0006F6  0100               	movlb	0	; () banked
  1528   0006F8  6B82               	clrf	??_displayBinary& (0+255),b
  1529   0006FA                     u838:
  1530   0006FA  4782               	rlncf	??_displayBinary& (0+255),f,b
  1531   0006FC  5089               	movf	137,w,c	;volatile
  1532   0006FE  1982               	xorwf	??_displayBinary& (0+255),w,b
  1533   000700  0BFD               	andlw	-3
  1534   000702  1982               	xorwf	??_displayBinary& (0+255),w,b
  1535   000704  6E89               	movwf	137,c	;volatile
  1536                           
  1537                           ;main.c: 23:      LATAbits.LATA2 = (num & 0x02) ? 1 : 0;
  1538   000706  B380               	btfsc	displayBinary@num& (0+255),1,b
  1539   000708  EF88  F003         	goto	u841
  1540   00070C  EF8C  F003         	goto	u840
  1541   000710                     u841:
  1542   000710  6B82               	clrf	??_displayBinary& (0+255),b
  1543   000712  2B82               	incf	??_displayBinary& (0+255),f,b
  1544   000714  EF8E  F003         	goto	u858
  1545   000718                     u840:
  1546   000718  0100               	movlb	0	; () banked
  1547   00071A  6B82               	clrf	??_displayBinary& (0+255),b
  1548   00071C                     u858:
  1549   00071C  4782               	rlncf	??_displayBinary& (0+255),f,b
  1550   00071E  4782               	rlncf	??_displayBinary& (0+255),f,b
  1551   000720  5089               	movf	137,w,c	;volatile
  1552   000722  1982               	xorwf	??_displayBinary& (0+255),w,b
  1553   000724  0BFB               	andlw	-5
  1554   000726  1982               	xorwf	??_displayBinary& (0+255),w,b
  1555   000728  6E89               	movwf	137,c	;volatile
  1556                           
  1557                           ;main.c: 24:      LATAbits.LATA3 = (num & 0x04) ? 1 : 0;
  1558   00072A  B580               	btfsc	displayBinary@num& (0+255),2,b
  1559   00072C  EF9A  F003         	goto	u861
  1560   000730  EF9E  F003         	goto	u860
  1561   000734                     u861:
  1562   000734  6B82               	clrf	??_displayBinary& (0+255),b
  1563   000736  2B82               	incf	??_displayBinary& (0+255),f,b
  1564   000738  EFA0  F003         	goto	u878
  1565   00073C                     u860:
  1566   00073C  0100               	movlb	0	; () banked
  1567   00073E  6B82               	clrf	??_displayBinary& (0+255),b
  1568   000740                     u878:
  1569   000740  4782               	rlncf	??_displayBinary& (0+255),f,b
  1570   000742  4782               	rlncf	??_displayBinary& (0+255),f,b
  1571   000744  4782               	rlncf	??_displayBinary& (0+255),f,b
  1572   000746  5089               	movf	137,w,c	;volatile
  1573   000748  1982               	xorwf	??_displayBinary& (0+255),w,b
  1574   00074A  0BF7               	andlw	-9
  1575   00074C  1982               	xorwf	??_displayBinary& (0+255),w,b
  1576   00074E  6E89               	movwf	137,c	;volatile
  1577                           
  1578                           ;main.c: 25:      LATAbits.LATA4 = (num & 0x08) ? 1 : 0;
  1579   000750  B780               	btfsc	displayBinary@num& (0+255),3,b
  1580   000752  EFAD  F003         	goto	u881
  1581   000756  EFB1  F003         	goto	u880
  1582   00075A                     u881:
  1583   00075A  6B82               	clrf	??_displayBinary& (0+255),b
  1584   00075C  2B82               	incf	??_displayBinary& (0+255),f,b
  1585   00075E  EFB3  F003         	goto	u898
  1586   000762                     u880:
  1587   000762  0100               	movlb	0	; () banked
  1588   000764  6B82               	clrf	??_displayBinary& (0+255),b
  1589   000766                     u898:
  1590   000766  3B82               	swapf	??_displayBinary& (0+255),f,b
  1591   000768  5089               	movf	137,w,c	;volatile
  1592   00076A  1982               	xorwf	??_displayBinary& (0+255),w,b
  1593   00076C  0BEF               	andlw	-17
  1594   00076E  1982               	xorwf	??_displayBinary& (0+255),w,b
  1595   000770  6E89               	movwf	137,c	;volatile
  1596   000772                     
  1597                           ; BSR set to: 0
  1598   000772  0012               	return		;funcret
  1599   000774                     __end_of_displayBinary:
  1600                           	callstack 0
  1601                           
  1602 ;; *************** function _ledLeftOff *****************
  1603 ;; Defined at:
  1604 ;;		line 53 in file "main.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  num             2    0[BANK0 ] int 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;		None
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      void 
  1611 ;; Registers used:
  1612 ;;		None
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1618 ;;      Params:         0       2       0       0       0       0       0
  1619 ;;      Locals:         0       0       0       0       0       0       0
  1620 ;;      Temps:          0       0       0       0       0       0       0
  1621 ;;      Totals:         0       2       0       0       0       0       0
  1622 ;;Total ram usage:        2 bytes
  1623 ;; Hardware stack levels used: 1
  1624 ;; Hardware stack levels required when called: 5
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text5
  1633   00097A                     __ptext5:
  1634                           	callstack 0
  1635   00097A                     _ledLeftOff:
  1636                           	callstack 25
  1637   00097A                     
  1638                           ;main.c: 54:     LATAbits.LATA5 = 0;
  1639   00097A  9A89               	bcf	137,5,c	;volatile
  1640   00097C  0012               	return		;funcret
  1641   00097E                     __end_of_ledLeftOff:
  1642                           	callstack 0
  1643                           
  1644 ;; *************** function _initialState *****************
  1645 ;; Defined at:
  1646 ;;		line 28 in file "main.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;		None
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;		None
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		None
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1660 ;;      Params:         0       0       0       0       0       0       0
  1661 ;;      Locals:         0       0       0       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0       0
  1663 ;;      Totals:         0       0       0       0       0       0       0
  1664 ;;Total ram usage:        0 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; Hardware stack levels required when called: 5
  1667 ;; This function calls:
  1668 ;;		Nothing
  1669 ;; This function is called by:
  1670 ;;		_main
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text6
  1675   000982                     __ptext6:
  1676                           	callstack 0
  1677   000982                     _initialState:
  1678                           	callstack 25
  1679   000982  0012               	return		;funcret
  1680   000984                     __end_of_initialState:
  1681                           	callstack 0
  1682                           
  1683 ;; *************** function _SYSTEM_Initialize *****************
  1684 ;; Defined at:
  1685 ;;		line 60 in file "setting_hardaware/setting.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, status,2, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1699 ;;      Params:         0       0       0       0       0       0       0
  1700 ;;      Locals:         0       0       0       0       0       0       0
  1701 ;;      Temps:          0       0       0       0       0       0       0
  1702 ;;      Totals:         0       0       0       0       0       0       0
  1703 ;;Total ram usage:        0 bytes
  1704 ;; Hardware stack levels used: 1
  1705 ;; Hardware stack levels required when called: 6
  1706 ;; This function calls:
  1707 ;;		_INTERRUPT_Initialize
  1708 ;;		_OSCILLATOR_Initialize
  1709 ;;		_UART_Initialize
  1710 ;; This function is called by:
  1711 ;;		_main
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text7
  1716   00095E                     __ptext7:
  1717                           	callstack 0
  1718   00095E                     _SYSTEM_Initialize:
  1719                           	callstack 24
  1720   00095E                     
  1721                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
  1722   00095E  ECB6  F004         	call	_OSCILLATOR_Initialize	;wreg free
  1723   000962                     
  1724                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  1725   000962  EC8E  F004         	call	_INTERRUPT_Initialize	;wreg free
  1726   000966                     
  1727                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
  1728   000966  EC57  F004         	call	_UART_Initialize	;wreg free
  1729   00096A  0012               	return		;funcret
  1730   00096C                     __end_of_SYSTEM_Initialize:
  1731                           	callstack 0
  1732                           
  1733 ;; *************** function _UART_Initialize *****************
  1734 ;; Defined at:
  1735 ;;		line 10 in file "setting_hardaware/uart.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;		None
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;		None
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1749 ;;      Params:         0       0       0       0       0       0       0
  1750 ;;      Locals:         0       0       0       0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0
  1752 ;;      Totals:         0       0       0       0       0       0       0
  1753 ;;Total ram usage:        0 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; Hardware stack levels required when called: 5
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_SYSTEM_Initialize
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text8
  1764   0008AE                     __ptext8:
  1765                           	callstack 0
  1766   0008AE                     _UART_Initialize:
  1767                           	callstack 24
  1768   0008AE                     
  1769                           ;setting_hardaware/uart.c: 21:     TRISCbits.TRISC6 = 1;
  1770   0008AE  8C94               	bsf	148,6,c	;volatile
  1771                           
  1772                           ;setting_hardaware/uart.c: 22:     TRISCbits.TRISC7 = 1;
  1773   0008B0  8E94               	bsf	148,7,c	;volatile
  1774                           
  1775                           ;setting_hardaware/uart.c: 25:     TXSTAbits.SYNC = 0;
  1776   0008B2  98AC               	bcf	172,4,c	;volatile
  1777                           
  1778                           ;setting_hardaware/uart.c: 26:     BAUDCONbits.BRG16 = 0;
  1779   0008B4  96B8               	bcf	184,3,c	;volatile
  1780                           
  1781                           ;setting_hardaware/uart.c: 27:     TXSTAbits.BRGH = 1;
  1782   0008B6  84AC               	bsf	172,2,c	;volatile
  1783   0008B8                     
  1784                           ;setting_hardaware/uart.c: 28:     SPBRG = 25;
  1785   0008B8  0E19               	movlw	25
  1786   0008BA  6EAF               	movwf	175,c	;volatile
  1787   0008BC                     
  1788                           ;setting_hardaware/uart.c: 31:     RCSTAbits.SPEN = 1;
  1789   0008BC  8EAB               	bsf	171,7,c	;volatile
  1790   0008BE                     
  1791                           ;setting_hardaware/uart.c: 32:     PIR1bits.TXIF = 0;
  1792   0008BE  989E               	bcf	158,4,c	;volatile
  1793   0008C0                     
  1794                           ;setting_hardaware/uart.c: 33:     PIR1bits.RCIF = 1;
  1795   0008C0  8A9E               	bsf	158,5,c	;volatile
  1796   0008C2                     
  1797                           ;setting_hardaware/uart.c: 34:     TXSTAbits.TXEN = 1;
  1798   0008C2  8AAC               	bsf	172,5,c	;volatile
  1799   0008C4                     
  1800                           ;setting_hardaware/uart.c: 35:     RCSTAbits.CREN = 1;
  1801   0008C4  88AB               	bsf	171,4,c	;volatile
  1802   0008C6                     
  1803                           ;setting_hardaware/uart.c: 36:     PIE1bits.TXIE = 0;
  1804   0008C6  989D               	bcf	157,4,c	;volatile
  1805   0008C8                     
  1806                           ;setting_hardaware/uart.c: 37:     IPR1bits.TXIP = 0;
  1807   0008C8  989F               	bcf	159,4,c	;volatile
  1808   0008CA                     
  1809                           ;setting_hardaware/uart.c: 38:     PIE1bits.RCIE = 1;
  1810   0008CA  8A9D               	bsf	157,5,c	;volatile
  1811   0008CC                     
  1812                           ;setting_hardaware/uart.c: 39:     IPR1bits.RCIP = 0;
  1813   0008CC  9A9F               	bcf	159,5,c	;volatile
  1814   0008CE  0012               	return		;funcret
  1815   0008D0                     __end_of_UART_Initialize:
  1816                           	callstack 0
  1817                           
  1818 ;; *************** function _OSCILLATOR_Initialize *****************
  1819 ;; Defined at:
  1820 ;;		line 73 in file "setting_hardaware/setting.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		None
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1834 ;;      Params:         0       0       0       0       0       0       0
  1835 ;;      Locals:         0       0       0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0
  1837 ;;      Totals:         0       0       0       0       0       0       0
  1838 ;;Total ram usage:        0 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; Hardware stack levels required when called: 5
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_SYSTEM_Initialize
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text9
  1849   00096C                     __ptext9:
  1850                           	callstack 0
  1851   00096C                     _OSCILLATOR_Initialize:
  1852                           	callstack 24
  1853   00096C                     
  1854                           ;setting_hardaware/setting.c: 75:     IRCF2 = 1;
  1855   00096C  8CD3               	bsf	4051,6,c	;volatile
  1856                           
  1857                           ;setting_hardaware/setting.c: 76:     IRCF1 = 1;
  1858   00096E  8AD3               	bsf	4051,5,c	;volatile
  1859                           
  1860                           ;setting_hardaware/setting.c: 77:     IRCF0 = 0;
  1861   000970  98D3               	bcf	4051,4,c	;volatile
  1862   000972  0012               	return		;funcret
  1863   000974                     __end_of_OSCILLATOR_Initialize:
  1864                           	callstack 0
  1865                           
  1866 ;; *************** function _INTERRUPT_Initialize *****************
  1867 ;; Defined at:
  1868 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      void 
  1875 ;; Registers used:
  1876 ;;		wreg, status,2
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1882 ;;      Params:         0       0       0       0       0       0       0
  1883 ;;      Locals:         0       0       0       0       0       0       0
  1884 ;;      Temps:          0       0       0       0       0       0       0
  1885 ;;      Totals:         0       0       0       0       0       0       0
  1886 ;;Total ram usage:        0 bytes
  1887 ;; Hardware stack levels used: 1
  1888 ;; Hardware stack levels required when called: 5
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_SYSTEM_Initialize
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text10
  1897   00091C                     __ptext10:
  1898                           	callstack 0
  1899   00091C                     _INTERRUPT_Initialize:
  1900                           	callstack 24
  1901   00091C                     
  1902                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
  1903   00091C  8ED0               	bsf	208,7,c	;volatile
  1904                           
  1905                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
  1906   00091E  8EF2               	bsf	242,7,c	;volatile
  1907                           
  1908                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
  1909   000920  8CF2               	bsf	242,6,c	;volatile
  1910   000922                     
  1911                           ;setting_hardaware/interrupt_manager.c: 10:     ADCON1 = 0x0f;
  1912   000922  0E0F               	movlw	15
  1913   000924  6EC1               	movwf	193,c	;volatile
  1914   000926                     
  1915                           ;setting_hardaware/interrupt_manager.c: 11:     LATA = 0x00;
  1916   000926  6A89               	clrf	137,c	;volatile
  1917   000928                     
  1918                           ;setting_hardaware/interrupt_manager.c: 12:     TRISAbits.TRISA5 = 0;
  1919   000928  9A92               	bcf	146,5,c	;volatile
  1920   00092A                     
  1921                           ;setting_hardaware/interrupt_manager.c: 13:     TRISAbits.TRISA6 = 0;
  1922   00092A  9C92               	bcf	146,6,c	;volatile
  1923   00092C                     
  1924                           ;setting_hardaware/interrupt_manager.c: 14:     TRISAbits.TRISA7 = 0;
  1925   00092C  9E92               	bcf	146,7,c	;volatile
  1926   00092E                     
  1927                           ;setting_hardaware/interrupt_manager.c: 16:     INTCONbits.INT0IE = 1;
  1928   00092E  88F2               	bsf	242,4,c	;volatile
  1929   000930                     
  1930                           ;setting_hardaware/interrupt_manager.c: 17:     INTCONbits.INT0IF = 0;
  1931   000930  92F2               	bcf	242,1,c	;volatile
  1932   000932  0012               	return		;funcret
  1933   000934                     __end_of_INTERRUPT_Initialize:
  1934                           	callstack 0
  1935                           
  1936 ;; *************** function _Lo_ISR *****************
  1937 ;; Defined at:
  1938 ;;		line 110 in file "main.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  command        20   20[COMRAM] unsigned char [20]
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1952 ;;      Params:         0       0       0       0       0       0       0
  1953 ;;      Locals:        20       0       0       0       0       0       0
  1954 ;;      Temps:         12       0       0       0       0       0       0
  1955 ;;      Totals:        32       0       0       0       0       0       0
  1956 ;;Total ram usage:       32 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; Hardware stack levels required when called: 4
  1959 ;; This function calls:
  1960 ;;		_ClearBuffer
  1961 ;;		_GetString
  1962 ;;		_MyusartRead
  1963 ;;		_strcpy
  1964 ;;		_strlen
  1965 ;; This function is called by:
  1966 ;;		Interrupt level 1
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	intcodelo
  1971   000018                     __pintcodelo:
  1972                           	callstack 0
  1973   000018                     _Lo_ISR:
  1974                           	callstack 24
  1975                           
  1976                           ;incstack = 0
  1977   000018  8059               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1978   00001A  CFD8 F03A          	movff	status,??_Lo_ISR+1
  1979   00001E  CFE8 F03B          	movff	wreg,??_Lo_ISR+2
  1980   000022  CFE0 F03C          	movff	bsr,??_Lo_ISR+3
  1981   000026  CFE1 F03D          	movff	fsr1l,??_Lo_ISR+4
  1982   00002A  CFE2 F03E          	movff	fsr1h,??_Lo_ISR+5
  1983   00002E  CFD9 F03F          	movff	fsr2l,??_Lo_ISR+6
  1984   000032  CFDA F040          	movff	fsr2h,??_Lo_ISR+7
  1985   000036  CFF6 F041          	movff	tblptrl,??_Lo_ISR+8
  1986   00003A  CFF7 F042          	movff	tblptrh,??_Lo_ISR+9
  1987   00003E  CFF8 F043          	movff	tblptru,??_Lo_ISR+10
  1988   000042  CFF5 F044          	movff	tablat,??_Lo_ISR+11
  1989   000046                     
  1990                           ;main.c: 112:     if(RCIF)
  1991   000046  AA9E               	btfss	3998,5,c	;volatile
  1992   000048  EF28  F000         	goto	i1u56_21
  1993   00004C  EF2A  F000         	goto	i1u56_20
  1994   000050                     i1u56_21:
  1995   000050  EFA4  F001         	goto	i1l219
  1996   000054                     i1u56_20:
  1997   000054                     
  1998                           ;main.c: 113:     {;main.c: 114:         if(RCSTAbits.OERR)
  1999   000054  A2AB               	btfss	171,1,c	;volatile
  2000   000056  EF2F  F000         	goto	i1u57_21
  2001   00005A  EF31  F000         	goto	i1u57_20
  2002   00005E                     i1u57_21:
  2003   00005E  EF34  F000         	goto	i1l1343
  2004   000062                     i1u57_20:
  2005   000062                     
  2006                           ;main.c: 115:         {;main.c: 116:             CREN = 0;
  2007   000062  98AB               	bcf	4011,4,c	;volatile
  2008                           
  2009                           ;main.c: 117:             __nop();
  2010   000064  0000               	nop	
  2011                           
  2012                           ;main.c: 118:             CREN = 1;
  2013   000066  88AB               	bsf	4011,4,c	;volatile
  2014   000068                     i1l1343:
  2015                           
  2016                           ;main.c: 121:         MyusartRead();
  2017   000068  EC23  F004         	call	_MyusartRead	;wreg free
  2018   00006C                     
  2019                           ;main.c: 122:         char command[20];;main.c: 123:         if(RCREG == '\r' || RCREG =
      +                          = '\n'){
  2020   00006C  0E0D               	movlw	13
  2021   00006E  18AE               	xorwf	174,w,c	;volatile
  2022   000070  B4D8               	btfsc	status,2,c
  2023   000072  EF3D  F000         	goto	i1u58_21
  2024   000076  EF3F  F000         	goto	i1u58_20
  2025   00007A                     i1u58_21:
  2026   00007A  EF48  F000         	goto	i1l1349
  2027   00007E                     i1u58_20:
  2028   00007E  0E0A               	movlw	10
  2029   000080  18AE               	xorwf	174,w,c	;volatile
  2030   000082  A4D8               	btfss	status,2,c
  2031   000084  EF46  F000         	goto	i1u59_21
  2032   000088  EF48  F000         	goto	i1u59_20
  2033   00008C                     i1u59_21:
  2034   00008C  EF54  F000         	goto	i1l1353
  2035   000090                     i1u59_20:
  2036   000090                     i1l1349:
  2037                           
  2038                           ;main.c: 124:             strcpy(command, GetString());
  2039   000090  0E45               	movlw	low Lo_ISR@command
  2040   000092  6E33               	movwf	strcpy@dest^0,c
  2041   000094  ECBF  F004         	call	_GetString	;wreg free
  2042   000098  6E39               	movwf	??_Lo_ISR^0,c
  2043   00009A  C039  F034         	movff	??_Lo_ISR,strcpy@src
  2044   00009E  6A35               	clrf	(strcpy@src+1)^0,c
  2045   0000A0  ECBA  F003         	call	_strcpy	;wreg free
  2046   0000A4                     
  2047                           ;main.c: 125:             ClearBuffer();
  2048   0000A4  EC05  F004         	call	_ClearBuffer	;wreg free
  2049   0000A8                     i1l1353:
  2050                           
  2051                           ;main.c: 127:         if(command[0] == 'L' && command[1] == 'R' && command[2] == 'N' && 
      +                          strlen(command) == 3){
  2052   0000A8  0E4C               	movlw	76
  2053   0000AA  1845               	xorwf	Lo_ISR@command^0,w,c
  2054   0000AC  A4D8               	btfss	status,2,c
  2055   0000AE  EF5B  F000         	goto	i1u60_21
  2056   0000B2  EF5D  F000         	goto	i1u60_20
  2057   0000B6                     i1u60_21:
  2058   0000B6  EF8F  F000         	goto	i1l1371
  2059   0000BA                     i1u60_20:
  2060   0000BA  0E52               	movlw	82
  2061   0000BC  1846               	xorwf	(Lo_ISR@command+1)^0,w,c
  2062   0000BE  A4D8               	btfss	status,2,c
  2063   0000C0  EF64  F000         	goto	i1u61_21
  2064   0000C4  EF66  F000         	goto	i1u61_20
  2065   0000C8                     i1u61_21:
  2066   0000C8  EF8F  F000         	goto	i1l1371
  2067   0000CC                     i1u61_20:
  2068   0000CC  0E4E               	movlw	78
  2069   0000CE  1847               	xorwf	(Lo_ISR@command+2)^0,w,c
  2070   0000D0  A4D8               	btfss	status,2,c
  2071   0000D2  EF6D  F000         	goto	i1u62_21
  2072   0000D6  EF6F  F000         	goto	i1u62_20
  2073   0000DA                     i1u62_21:
  2074   0000DA  EF8F  F000         	goto	i1l1371
  2075   0000DE                     i1u62_20:
  2076   0000DE  0E45               	movlw	low Lo_ISR@command
  2077   0000E0  6E31               	movwf	strlen@s^0,c
  2078   0000E2  EC40  F004         	call	_strlen	;wreg free
  2079   0000E6  0E03               	movlw	3
  2080   0000E8  1831               	xorwf	?_strlen^0,w,c
  2081   0000EA  1032               	iorwf	(?_strlen+1)^0,w,c
  2082   0000EC  A4D8               	btfss	status,2,c
  2083   0000EE  EF7B  F000         	goto	i1u63_21
  2084   0000F2  EF7D  F000         	goto	i1u63_20
  2085   0000F6                     i1u63_21:
  2086   0000F6  EF8F  F000         	goto	i1l1371
  2087   0000FA                     i1u63_20:
  2088   0000FA                     
  2089                           ;main.c: 128:             state = 1;
  2090   0000FA  0E00               	movlw	0
  2091   0000FC  6E1A               	movwf	(_state+1)^0,c
  2092   0000FE  0E01               	movlw	1
  2093   000100  6E19               	movwf	_state^0,c
  2094   000102                     
  2095                           ;main.c: 129:             ClearBuffer();
  2096   000102  EC05  F004         	call	_ClearBuffer	;wreg free
  2097   000106                     
  2098                           ;main.c: 130:             strcpy(command, "");
  2099   000106  0E45               	movlw	low Lo_ISR@command
  2100   000108  6E33               	movwf	strcpy@dest^0,c
  2101   00010A  0E03               	movlw	low (STR_1+2)
  2102   00010C  6E34               	movwf	strcpy@src^0,c
  2103   00010E  5034               	movf	strcpy@src^0,w,c
  2104   000110  A4D8               	btfss	status,2,c
  2105   000112  0E06               	movlw	high __smallconst
  2106   000114  6E35               	movwf	(strcpy@src+1)^0,c
  2107   000116  ECBA  F003         	call	_strcpy	;wreg free
  2108   00011A  EFA4  F001         	goto	i1l219
  2109   00011E                     i1l1371:
  2110   00011E  0E4C               	movlw	76
  2111   000120  1845               	xorwf	Lo_ISR@command^0,w,c
  2112   000122  A4D8               	btfss	status,2,c
  2113   000124  EF96  F000         	goto	i1u64_21
  2114   000128  EF98  F000         	goto	i1u64_20
  2115   00012C                     i1u64_21:
  2116   00012C  EFCA  F000         	goto	i1l1389
  2117   000130                     i1u64_20:
  2118   000130  0E52               	movlw	82
  2119   000132  1846               	xorwf	(Lo_ISR@command+1)^0,w,c
  2120   000134  A4D8               	btfss	status,2,c
  2121   000136  EF9F  F000         	goto	i1u65_21
  2122   00013A  EFA1  F000         	goto	i1u65_20
  2123   00013E                     i1u65_21:
  2124   00013E  EFCA  F000         	goto	i1l1389
  2125   000142                     i1u65_20:
  2126   000142  0E46               	movlw	70
  2127   000144  1847               	xorwf	(Lo_ISR@command+2)^0,w,c
  2128   000146  A4D8               	btfss	status,2,c
  2129   000148  EFA8  F000         	goto	i1u66_21
  2130   00014C  EFAA  F000         	goto	i1u66_20
  2131   000150                     i1u66_21:
  2132   000150  EFCA  F000         	goto	i1l1389
  2133   000154                     i1u66_20:
  2134   000154  0E45               	movlw	low Lo_ISR@command
  2135   000156  6E31               	movwf	strlen@s^0,c
  2136   000158  EC40  F004         	call	_strlen	;wreg free
  2137   00015C  0E03               	movlw	3
  2138   00015E  1831               	xorwf	?_strlen^0,w,c
  2139   000160  1032               	iorwf	(?_strlen+1)^0,w,c
  2140   000162  A4D8               	btfss	status,2,c
  2141   000164  EFB6  F000         	goto	i1u67_21
  2142   000168  EFB8  F000         	goto	i1u67_20
  2143   00016C                     i1u67_21:
  2144   00016C  EFCA  F000         	goto	i1l1389
  2145   000170                     i1u67_20:
  2146   000170                     
  2147                           ;main.c: 134:             state = 2;
  2148   000170  0E00               	movlw	0
  2149   000172  6E1A               	movwf	(_state+1)^0,c
  2150   000174  0E02               	movlw	2
  2151   000176  6E19               	movwf	_state^0,c
  2152   000178                     
  2153                           ;main.c: 135:             ClearBuffer();
  2154   000178  EC05  F004         	call	_ClearBuffer	;wreg free
  2155   00017C                     
  2156                           ;main.c: 136:             strcpy(command, "");
  2157   00017C  0E45               	movlw	low Lo_ISR@command
  2158   00017E  6E33               	movwf	strcpy@dest^0,c
  2159   000180  0E03               	movlw	low (STR_1+2)
  2160   000182  6E34               	movwf	strcpy@src^0,c
  2161   000184  5034               	movf	strcpy@src^0,w,c
  2162   000186  A4D8               	btfss	status,2,c
  2163   000188  0E06               	movlw	high __smallconst
  2164   00018A  6E35               	movwf	(strcpy@src+1)^0,c
  2165   00018C  ECBA  F003         	call	_strcpy	;wreg free
  2166   000190  EFA4  F001         	goto	i1l219
  2167   000194                     i1l1389:
  2168   000194  0E4C               	movlw	76
  2169   000196  1845               	xorwf	Lo_ISR@command^0,w,c
  2170   000198  A4D8               	btfss	status,2,c
  2171   00019A  EFD1  F000         	goto	i1u68_21
  2172   00019E  EFD3  F000         	goto	i1u68_20
  2173   0001A2                     i1u68_21:
  2174   0001A2  EF05  F001         	goto	i1l1407
  2175   0001A6                     i1u68_20:
  2176   0001A6  0E4C               	movlw	76
  2177   0001A8  1846               	xorwf	(Lo_ISR@command+1)^0,w,c
  2178   0001AA  A4D8               	btfss	status,2,c
  2179   0001AC  EFDA  F000         	goto	i1u69_21
  2180   0001B0  EFDC  F000         	goto	i1u69_20
  2181   0001B4                     i1u69_21:
  2182   0001B4  EF05  F001         	goto	i1l1407
  2183   0001B8                     i1u69_20:
  2184   0001B8  0E4E               	movlw	78
  2185   0001BA  1847               	xorwf	(Lo_ISR@command+2)^0,w,c
  2186   0001BC  A4D8               	btfss	status,2,c
  2187   0001BE  EFE3  F000         	goto	i1u70_21
  2188   0001C2  EFE5  F000         	goto	i1u70_20
  2189   0001C6                     i1u70_21:
  2190   0001C6  EF05  F001         	goto	i1l1407
  2191   0001CA                     i1u70_20:
  2192   0001CA  0E45               	movlw	low Lo_ISR@command
  2193   0001CC  6E31               	movwf	strlen@s^0,c
  2194   0001CE  EC40  F004         	call	_strlen	;wreg free
  2195   0001D2  0E03               	movlw	3
  2196   0001D4  1831               	xorwf	?_strlen^0,w,c
  2197   0001D6  1032               	iorwf	(?_strlen+1)^0,w,c
  2198   0001D8  A4D8               	btfss	status,2,c
  2199   0001DA  EFF1  F000         	goto	i1u71_21
  2200   0001DE  EFF3  F000         	goto	i1u71_20
  2201   0001E2                     i1u71_21:
  2202   0001E2  EF05  F001         	goto	i1l1407
  2203   0001E6                     i1u71_20:
  2204   0001E6                     
  2205                           ;main.c: 140:             state = 3;
  2206   0001E6  0E00               	movlw	0
  2207   0001E8  6E1A               	movwf	(_state+1)^0,c
  2208   0001EA  0E03               	movlw	3
  2209   0001EC  6E19               	movwf	_state^0,c
  2210   0001EE                     
  2211                           ;main.c: 141:             ClearBuffer();
  2212   0001EE  EC05  F004         	call	_ClearBuffer	;wreg free
  2213   0001F2                     
  2214                           ;main.c: 142:             strcpy(command, "");
  2215   0001F2  0E45               	movlw	low Lo_ISR@command
  2216   0001F4  6E33               	movwf	strcpy@dest^0,c
  2217   0001F6  0E03               	movlw	low (STR_1+2)
  2218   0001F8  6E34               	movwf	strcpy@src^0,c
  2219   0001FA  5034               	movf	strcpy@src^0,w,c
  2220   0001FC  A4D8               	btfss	status,2,c
  2221   0001FE  0E06               	movlw	high __smallconst
  2222   000200  6E35               	movwf	(strcpy@src+1)^0,c
  2223   000202  ECBA  F003         	call	_strcpy	;wreg free
  2224   000206  EFA4  F001         	goto	i1l219
  2225   00020A                     i1l1407:
  2226   00020A  0E4C               	movlw	76
  2227   00020C  1845               	xorwf	Lo_ISR@command^0,w,c
  2228   00020E  A4D8               	btfss	status,2,c
  2229   000210  EF0C  F001         	goto	i1u72_21
  2230   000214  EF0E  F001         	goto	i1u72_20
  2231   000218                     i1u72_21:
  2232   000218  EF40  F001         	goto	i1l1425
  2233   00021C                     i1u72_20:
  2234   00021C  0E4C               	movlw	76
  2235   00021E  1846               	xorwf	(Lo_ISR@command+1)^0,w,c
  2236   000220  A4D8               	btfss	status,2,c
  2237   000222  EF15  F001         	goto	i1u73_21
  2238   000226  EF17  F001         	goto	i1u73_20
  2239   00022A                     i1u73_21:
  2240   00022A  EF40  F001         	goto	i1l1425
  2241   00022E                     i1u73_20:
  2242   00022E  0E46               	movlw	70
  2243   000230  1847               	xorwf	(Lo_ISR@command+2)^0,w,c
  2244   000232  A4D8               	btfss	status,2,c
  2245   000234  EF1E  F001         	goto	i1u74_21
  2246   000238  EF20  F001         	goto	i1u74_20
  2247   00023C                     i1u74_21:
  2248   00023C  EF40  F001         	goto	i1l1425
  2249   000240                     i1u74_20:
  2250   000240  0E45               	movlw	low Lo_ISR@command
  2251   000242  6E31               	movwf	strlen@s^0,c
  2252   000244  EC40  F004         	call	_strlen	;wreg free
  2253   000248  0E03               	movlw	3
  2254   00024A  1831               	xorwf	?_strlen^0,w,c
  2255   00024C  1032               	iorwf	(?_strlen+1)^0,w,c
  2256   00024E  A4D8               	btfss	status,2,c
  2257   000250  EF2C  F001         	goto	i1u75_21
  2258   000254  EF2E  F001         	goto	i1u75_20
  2259   000258                     i1u75_21:
  2260   000258  EF40  F001         	goto	i1l1425
  2261   00025C                     i1u75_20:
  2262   00025C                     
  2263                           ;main.c: 146:             state = 4;
  2264   00025C  0E00               	movlw	0
  2265   00025E  6E1A               	movwf	(_state+1)^0,c
  2266   000260  0E04               	movlw	4
  2267   000262  6E19               	movwf	_state^0,c
  2268   000264                     
  2269                           ;main.c: 147:             ClearBuffer();
  2270   000264  EC05  F004         	call	_ClearBuffer	;wreg free
  2271   000268                     
  2272                           ;main.c: 148:             strcpy(command, "");
  2273   000268  0E45               	movlw	low Lo_ISR@command
  2274   00026A  6E33               	movwf	strcpy@dest^0,c
  2275   00026C  0E03               	movlw	low (STR_1+2)
  2276   00026E  6E34               	movwf	strcpy@src^0,c
  2277   000270  5034               	movf	strcpy@src^0,w,c
  2278   000272  A4D8               	btfss	status,2,c
  2279   000274  0E06               	movlw	high __smallconst
  2280   000276  6E35               	movwf	(strcpy@src+1)^0,c
  2281   000278  ECBA  F003         	call	_strcpy	;wreg free
  2282   00027C  EFA4  F001         	goto	i1l219
  2283   000280                     i1l1425:
  2284   000280  0E42               	movlw	66
  2285   000282  1845               	xorwf	Lo_ISR@command^0,w,c
  2286   000284  A4D8               	btfss	status,2,c
  2287   000286  EF47  F001         	goto	i1u76_21
  2288   00028A  EF49  F001         	goto	i1u76_20
  2289   00028E                     i1u76_21:
  2290   00028E  EF72  F001         	goto	i1l1441
  2291   000292                     i1u76_20:
  2292   000292  0E4E               	movlw	78
  2293   000294  1846               	xorwf	(Lo_ISR@command+1)^0,w,c
  2294   000296  A4D8               	btfss	status,2,c
  2295   000298  EF50  F001         	goto	i1u77_21
  2296   00029C  EF52  F001         	goto	i1u77_20
  2297   0002A0                     i1u77_21:
  2298   0002A0  EF72  F001         	goto	i1l1441
  2299   0002A4                     i1u77_20:
  2300   0002A4  0E45               	movlw	low Lo_ISR@command
  2301   0002A6  6E31               	movwf	strlen@s^0,c
  2302   0002A8  EC40  F004         	call	_strlen	;wreg free
  2303   0002AC  0E02               	movlw	2
  2304   0002AE  1831               	xorwf	?_strlen^0,w,c
  2305   0002B0  1032               	iorwf	(?_strlen+1)^0,w,c
  2306   0002B2  A4D8               	btfss	status,2,c
  2307   0002B4  EF5E  F001         	goto	i1u78_21
  2308   0002B8  EF60  F001         	goto	i1u78_20
  2309   0002BC                     i1u78_21:
  2310   0002BC  EF72  F001         	goto	i1l1441
  2311   0002C0                     i1u78_20:
  2312   0002C0                     
  2313                           ;main.c: 152:             state = 5;
  2314   0002C0  0E00               	movlw	0
  2315   0002C2  6E1A               	movwf	(_state+1)^0,c
  2316   0002C4  0E05               	movlw	5
  2317   0002C6  6E19               	movwf	_state^0,c
  2318   0002C8                     
  2319                           ;main.c: 153:             ClearBuffer();
  2320   0002C8  EC05  F004         	call	_ClearBuffer	;wreg free
  2321   0002CC                     
  2322                           ;main.c: 154:             strcpy(command, "");
  2323   0002CC  0E45               	movlw	low Lo_ISR@command
  2324   0002CE  6E33               	movwf	strcpy@dest^0,c
  2325   0002D0  0E03               	movlw	low (STR_1+2)
  2326   0002D2  6E34               	movwf	strcpy@src^0,c
  2327   0002D4  5034               	movf	strcpy@src^0,w,c
  2328   0002D6  A4D8               	btfss	status,2,c
  2329   0002D8  0E06               	movlw	high __smallconst
  2330   0002DA  6E35               	movwf	(strcpy@src+1)^0,c
  2331   0002DC  ECBA  F003         	call	_strcpy	;wreg free
  2332   0002E0  EFA4  F001         	goto	i1l219
  2333   0002E4                     i1l1441:
  2334   0002E4  0E42               	movlw	66
  2335   0002E6  1845               	xorwf	Lo_ISR@command^0,w,c
  2336   0002E8  A4D8               	btfss	status,2,c
  2337   0002EA  EF79  F001         	goto	i1u79_21
  2338   0002EE  EF7B  F001         	goto	i1u79_20
  2339   0002F2                     i1u79_21:
  2340   0002F2  EFA4  F001         	goto	i1l224
  2341   0002F6                     i1u79_20:
  2342   0002F6  0E46               	movlw	70
  2343   0002F8  1846               	xorwf	(Lo_ISR@command+1)^0,w,c
  2344   0002FA  A4D8               	btfss	status,2,c
  2345   0002FC  EF82  F001         	goto	i1u80_21
  2346   000300  EF84  F001         	goto	i1u80_20
  2347   000304                     i1u80_21:
  2348   000304  EFA4  F001         	goto	i1l224
  2349   000308                     i1u80_20:
  2350   000308  0E45               	movlw	low Lo_ISR@command
  2351   00030A  6E31               	movwf	strlen@s^0,c
  2352   00030C  EC40  F004         	call	_strlen	;wreg free
  2353   000310  0E02               	movlw	2
  2354   000312  1831               	xorwf	?_strlen^0,w,c
  2355   000314  1032               	iorwf	(?_strlen+1)^0,w,c
  2356   000316  A4D8               	btfss	status,2,c
  2357   000318  EF90  F001         	goto	i1u81_21
  2358   00031C  EF92  F001         	goto	i1u81_20
  2359   000320                     i1u81_21:
  2360   000320  EFA4  F001         	goto	i1l224
  2361   000324                     i1u81_20:
  2362   000324                     
  2363                           ;main.c: 158:             state = 6;
  2364   000324  0E00               	movlw	0
  2365   000326  6E1A               	movwf	(_state+1)^0,c
  2366   000328  0E06               	movlw	6
  2367   00032A  6E19               	movwf	_state^0,c
  2368   00032C                     
  2369                           ;main.c: 159:             ClearBuffer();
  2370   00032C  EC05  F004         	call	_ClearBuffer	;wreg free
  2371   000330                     
  2372                           ;main.c: 160:             strcpy(command, "");
  2373   000330  0E45               	movlw	low Lo_ISR@command
  2374   000332  6E33               	movwf	strcpy@dest^0,c
  2375   000334  0E03               	movlw	low (STR_1+2)
  2376   000336  6E34               	movwf	strcpy@src^0,c
  2377   000338  5034               	movf	strcpy@src^0,w,c
  2378   00033A  A4D8               	btfss	status,2,c
  2379   00033C  0E06               	movlw	high __smallconst
  2380   00033E  6E35               	movwf	(strcpy@src+1)^0,c
  2381   000340  ECBA  F003         	call	_strcpy	;wreg free
  2382   000344  EFA4  F001         	goto	i1l219
  2383   000348                     i1l224:
  2384   000348                     i1l219:
  2385   000348  C044  FFF5         	movff	??_Lo_ISR+11,tablat
  2386   00034C  C043  FFF8         	movff	??_Lo_ISR+10,tblptru
  2387   000350  C042  FFF7         	movff	??_Lo_ISR+9,tblptrh
  2388   000354  C041  FFF6         	movff	??_Lo_ISR+8,tblptrl
  2389   000358  C040  FFDA         	movff	??_Lo_ISR+7,fsr2h
  2390   00035C  C03F  FFD9         	movff	??_Lo_ISR+6,fsr2l
  2391   000360  C03E  FFE2         	movff	??_Lo_ISR+5,fsr1h
  2392   000364  C03D  FFE1         	movff	??_Lo_ISR+4,fsr1l
  2393   000368  C03C  FFE0         	movff	??_Lo_ISR+3,bsr
  2394   00036C  C03B  FFE8         	movff	??_Lo_ISR+2,wreg
  2395   000370  C03A  FFD8         	movff	??_Lo_ISR+1,status
  2396   000374  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2397   000376  0010               	retfie	
  2398   000378                     __end_of_Lo_ISR:
  2399                           	callstack 0
  2400                           
  2401 ;; *************** function _strlen *****************
  2402 ;; Defined at:
  2403 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2406 ;;		 -> Lo_ISR@command(20), 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2409 ;;		 -> Lo_ISR@command(20), 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  2    0[COMRAM] unsigned int 
  2412 ;; Registers used:
  2413 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2419 ;;      Params:         2       0       0       0       0       0       0
  2420 ;;      Locals:         1       0       0       0       0       0       0
  2421 ;;      Temps:          0       0       0       0       0       0       0
  2422 ;;      Totals:         3       0       0       0       0       0       0
  2423 ;;Total ram usage:        3 bytes
  2424 ;; Hardware stack levels used: 1
  2425 ;; Hardware stack levels required when called: 1
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_Lo_ISR
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text12
  2434   000880                     __ptext12:
  2435                           	callstack 0
  2436   000880                     _strlen:
  2437                           	callstack 26
  2438   000880  C031  F033         	movff	strlen@s,strlen@a
  2439   000884  EF45  F004         	goto	i1l1293
  2440   000888                     i1l1291:
  2441   000888  2A31               	incf	strlen@s^0,f,c
  2442   00088A                     i1l1293:
  2443   00088A  5031               	movf	strlen@s^0,w,c
  2444   00088C  6ED9               	movwf	fsr2l,c
  2445   00088E  6ADA               	clrf	fsr2h,c
  2446   000890  50DF               	movf	indf2,w,c
  2447   000892  A4D8               	btfss	status,2,c
  2448   000894  EF4E  F004         	goto	i1u55_21
  2449   000898  EF50  F004         	goto	i1u55_20
  2450   00089C                     i1u55_21:
  2451   00089C  EF44  F004         	goto	i1l1291
  2452   0008A0                     i1u55_20:
  2453   0008A0  5033               	movf	strlen@a^0,w,c
  2454   0008A2  5C31               	subwf	strlen@s^0,w,c
  2455   0008A4  6E31               	movwf	?_strlen^0,c
  2456   0008A6  6A32               	clrf	(?_strlen+1)^0,c
  2457   0008A8  BE31               	btfsc	?_strlen^0,7,c
  2458   0008AA  0632               	decf	(?_strlen+1)^0,f,c
  2459   0008AC  0012               	return		;funcret
  2460   0008AE                     __end_of_strlen:
  2461                           	callstack 0
  2462                           
  2463 ;; *************** function _strcpy *****************
  2464 ;; Defined at:
  2465 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  dest            1    2[COMRAM] PTR unsigned char 
  2468 ;;		 -> Lo_ISR@command(20), 
  2469 ;;  src             2    3[COMRAM] PTR const unsigned char 
  2470 ;;		 -> STR_7(1), STR_6(1), STR_5(1), STR_4(1), 
  2471 ;;		 -> STR_3(1), STR_2(1), mystring(20), 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  d               1    7[COMRAM] PTR unsigned char 
  2474 ;;		 -> Lo_ISR@command(20), 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    2[COMRAM] PTR unsigned char 
  2477 ;; Registers used:
  2478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2484 ;;      Params:         3       0       0       0       0       0       0
  2485 ;;      Locals:         1       0       0       0       0       0       0
  2486 ;;      Temps:          2       0       0       0       0       0       0
  2487 ;;      Totals:         6       0       0       0       0       0       0
  2488 ;;Total ram usage:        6 bytes
  2489 ;; Hardware stack levels used: 1
  2490 ;; Hardware stack levels required when called: 1
  2491 ;; This function calls:
  2492 ;;		Nothing
  2493 ;; This function is called by:
  2494 ;;		_Lo_ISR
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           	psect	text13
  2499   000774                     __ptext13:
  2500                           	callstack 0
  2501   000774                     _strcpy:
  2502                           	callstack 26
  2503   000774  C033  F038         	movff	strcpy@dest,strcpy@d
  2504   000778                     i1l1287:
  2505   000778  5034               	movf	strcpy@src^0,w,c
  2506   00077A  6E36               	movwf	??_strcpy^0,c
  2507   00077C  5035               	movf	(strcpy@src+1)^0,w,c
  2508   00077E  6E37               	movwf	(??_strcpy+1)^0,c
  2509   000780  4A34               	infsnz	strcpy@src^0,f,c
  2510   000782  2A35               	incf	(strcpy@src+1)^0,f,c
  2511   000784  C036  FFF6         	movff	??_strcpy,tblptrl
  2512   000788  C037  FFF7         	movff	??_strcpy+1,tblptrh
  2513   00078C  6AF8               	clrf	tblptru,c
  2514   00078E  2A38               	incf	strcpy@d^0,f,c
  2515   000790  0438               	decf	strcpy@d^0,w,c
  2516   000792  6ED9               	movwf	fsr2l,c
  2517   000794  6ADA               	clrf	fsr2h,c
  2518   000796  0E05               	movlw	(high __ramtop+-1)
  2519   000798  64F7               	cpfsgt	tblptrh,c
  2520   00079A  D003               	bra	i1u53_27
  2521   00079C  0008               	tblrd		*
  2522   00079E  50F5               	movf	tablat,w,c
  2523   0007A0  D005               	bra	i1u53_20
  2524   0007A2                     i1u53_27:
  2525   0007A2  CFF6 FFE1          	movff	tblptrl,fsr1l
  2526   0007A6  CFF7 FFE2          	movff	tblptrh,fsr1h
  2527   0007AA  50E7               	movf	indf1,w,c
  2528   0007AC                     i1u53_20:
  2529   0007AC  6EDF               	movwf	indf2,c
  2530   0007AE  50DF               	movf	indf2,w,c
  2531   0007B0  A4D8               	btfss	status,2,c
  2532   0007B2  EFDD  F003         	goto	i1u54_21
  2533   0007B6  EFDF  F003         	goto	i1u54_20
  2534   0007BA                     i1u54_21:
  2535   0007BA  EFBC  F003         	goto	i1l1287
  2536   0007BE                     i1u54_20:
  2537   0007BE  0012               	return		;funcret
  2538   0007C0                     __end_of_strcpy:
  2539                           	callstack 0
  2540                           
  2541 ;; *************** function _MyusartRead *****************
  2542 ;; Defined at:
  2543 ;;		line 62 in file "setting_hardaware/uart.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;		None
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  receivedData    1    5[COMRAM] unsigned char 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      void 
  2550 ;; Registers used:
  2551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2557 ;;      Params:         0       0       0       0       0       0       0
  2558 ;;      Locals:         1       0       0       0       0       0       0
  2559 ;;      Temps:          0       0       0       0       0       0       0
  2560 ;;      Totals:         1       0       0       0       0       0       0
  2561 ;;Total ram usage:        1 bytes
  2562 ;; Hardware stack levels used: 1
  2563 ;; Hardware stack levels required when called: 3
  2564 ;; This function calls:
  2565 ;;		_UART_Write
  2566 ;;		_UART_Write_Text
  2567 ;; This function is called by:
  2568 ;;		_Lo_ISR
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           	psect	text14
  2573   000846                     __ptext14:
  2574                           	callstack 0
  2575   000846                     _MyusartRead:
  2576                           	callstack 24
  2577   000846                     
  2578                           ;setting_hardaware/uart.c: 66:     unsigned char receivedData = RCREG;
  2579   000846  CFAE F036          	movff	4014,MyusartRead@receivedData	;volatile
  2580   00084A                     
  2581                           ;setting_hardaware/uart.c: 67:     if(receivedData == '\r'){
  2582   00084A  0E0D               	movlw	13
  2583   00084C  1836               	xorwf	MyusartRead@receivedData^0,w,c
  2584   00084E  A4D8               	btfss	status,2,c
  2585   000850  EF2C  F004         	goto	i1u52_21
  2586   000854  EF2E  F004         	goto	i1u52_20
  2587   000858                     i1u52_21:
  2588   000858  EF34  F004         	goto	i1l1253
  2589   00085C                     i1u52_20:
  2590   00085C                     
  2591                           ;setting_hardaware/uart.c: 68:         UART_Write_Text("\r\n");
  2592   00085C  0E01               	movlw	low STR_1
  2593   00085E  6E32               	movwf	UART_Write_Text@text^0,c
  2594   000860  ECE0  F003         	call	_UART_Write_Text	;wreg free
  2595   000864  EF3F  F004         	goto	i1l126
  2596   000868                     i1l1253:
  2597                           
  2598                           ;setting_hardaware/uart.c: 71:     mystring[lenStr] = receivedData;
  2599   000868  501B               	movf	_lenStr^0,w,c
  2600   00086A  0F1D               	addlw	low _mystring
  2601   00086C  6ED9               	movwf	fsr2l,c
  2602   00086E  6ADA               	clrf	fsr2h,c
  2603   000870  C036  FFDF         	movff	MyusartRead@receivedData,indf2
  2604   000874                     
  2605                           ;setting_hardaware/uart.c: 72:     lenStr++;
  2606   000874  4A1B               	infsnz	_lenStr^0,f,c
  2607   000876  2A1C               	incf	(_lenStr+1)^0,f,c
  2608   000878                     
  2609                           ;setting_hardaware/uart.c: 73:     UART_Write(receivedData);
  2610   000878  5036               	movf	MyusartRead@receivedData^0,w,c
  2611   00087A  EC9A  F004         	call	_UART_Write
  2612   00087E                     i1l126:
  2613   00087E  0012               	return		;funcret
  2614   000880                     __end_of_MyusartRead:
  2615                           	callstack 0
  2616                           
  2617 ;; *************** function _UART_Write_Text *****************
  2618 ;; Defined at:
  2619 ;;		line 51 in file "setting_hardaware/uart.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  text            1    1[COMRAM] PTR unsigned char 
  2622 ;;		 -> STR_1(3), 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  i               2    3[COMRAM] int 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2634 ;;      Params:         1       0       0       0       0       0       0
  2635 ;;      Locals:         2       0       0       0       0       0       0
  2636 ;;      Temps:          1       0       0       0       0       0       0
  2637 ;;      Totals:         4       0       0       0       0       0       0
  2638 ;;Total ram usage:        4 bytes
  2639 ;; Hardware stack levels used: 1
  2640 ;; Hardware stack levels required when called: 2
  2641 ;; This function calls:
  2642 ;;		_UART_Write
  2643 ;; This function is called by:
  2644 ;;		_MyusartRead
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text15
  2649   0007C0                     __ptext15:
  2650                           	callstack 0
  2651   0007C0                     _UART_Write_Text:
  2652                           	callstack 24
  2653   0007C0                     
  2654                           ;setting_hardaware/uart.c: 52:     for(int i=0;text[i]!='\0';i++)
  2655   0007C0  0E00               	movlw	0
  2656   0007C2  6E35               	movwf	(UART_Write_Text@i+1)^0,c
  2657   0007C4  0E00               	movlw	0
  2658   0007C6  6E34               	movwf	UART_Write_Text@i^0,c
  2659   0007C8  EFF3  F003         	goto	i1l1241
  2660   0007CC                     i1l1237:
  2661                           
  2662                           ;setting_hardaware/uart.c: 53:         UART_Write(text[i]);
  2663   0007CC  5032               	movf	UART_Write_Text@text^0,w,c
  2664   0007CE  2434               	addwf	UART_Write_Text@i^0,w,c
  2665   0007D0  6E33               	movwf	??_UART_Write_Text^0,c
  2666   0007D2  C033  FFF6         	movff	??_UART_Write_Text,tblptrl
  2667   0007D6                     	if	1	;There is more than 1 active tblptr byte
  2668   0007D6  0E06               	movlw	high __smallconst
  2669   0007D8  6EF7               	movwf	tblptrh,c
  2670   0007DA                     	endif
  2671   0007DA                     	if	0	;tblptru may be non-zero
  2672   0007DA                     	endif
  2673   0007DA                     	if	0	;tblptru may be non-zero
  2674   0007DA                     	endif
  2675   0007DA  0008               	tblrd		*
  2676   0007DC  50F5               	movf	tablat,w,c
  2677   0007DE  EC9A  F004         	call	_UART_Write
  2678   0007E2  4A34               	infsnz	UART_Write_Text@i^0,f,c
  2679   0007E4  2A35               	incf	(UART_Write_Text@i+1)^0,f,c
  2680   0007E6                     i1l1241:
  2681   0007E6  5032               	movf	UART_Write_Text@text^0,w,c
  2682   0007E8  2434               	addwf	UART_Write_Text@i^0,w,c
  2683   0007EA  6E33               	movwf	??_UART_Write_Text^0,c
  2684   0007EC  C033  FFF6         	movff	??_UART_Write_Text,tblptrl
  2685   0007F0                     	if	1	;There is more than 1 active tblptr byte
  2686   0007F0  0E06               	movlw	high __smallconst
  2687   0007F2  6EF7               	movwf	tblptrh,c
  2688   0007F4                     	endif
  2689   0007F4                     	if	0	;tblptru may be non-zero
  2690   0007F4                     	endif
  2691   0007F4                     	if	0	;tblptru may be non-zero
  2692   0007F4                     	endif
  2693   0007F4  0008               	tblrd		*
  2694   0007F6  50F5               	movf	tablat,w,c
  2695   0007F8  0900               	iorlw	0
  2696   0007FA  A4D8               	btfss	status,2,c
  2697   0007FC  EF02  F004         	goto	i1u43_21
  2698   000800  EF04  F004         	goto	i1u43_20
  2699   000804                     i1u43_21:
  2700   000804  EFE6  F003         	goto	i1l1237
  2701   000808                     i1u43_20:
  2702   000808  0012               	return		;funcret
  2703   00080A                     __end_of_UART_Write_Text:
  2704                           	callstack 0
  2705                           
  2706 ;; *************** function _UART_Write *****************
  2707 ;; Defined at:
  2708 ;;		line 44 in file "setting_hardaware/uart.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  data            1    wreg     unsigned char 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  data            1    0[COMRAM] unsigned char 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1    wreg      void 
  2715 ;; Registers used:
  2716 ;;		wreg
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2722 ;;      Params:         0       0       0       0       0       0       0
  2723 ;;      Locals:         1       0       0       0       0       0       0
  2724 ;;      Temps:          0       0       0       0       0       0       0
  2725 ;;      Totals:         1       0       0       0       0       0       0
  2726 ;;Total ram usage:        1 bytes
  2727 ;; Hardware stack levels used: 1
  2728 ;; Hardware stack levels required when called: 1
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		_UART_Write_Text
  2733 ;;		_MyusartRead
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text16
  2738   000934                     __ptext16:
  2739                           	callstack 0
  2740   000934                     _UART_Write:
  2741                           	callstack 24
  2742                           
  2743                           ;incstack = 0
  2744                           ;UART_Write@data stored from wreg
  2745   000934  6E31               	movwf	UART_Write@data^0,c
  2746   000936                     i1l108:
  2747   000936  A2AC               	btfss	172,1,c	;volatile
  2748   000938  EFA0  F004         	goto	i1u1_21
  2749   00093C  EFA2  F004         	goto	i1u1_20
  2750   000940                     i1u1_21:
  2751   000940  EF9B  F004         	goto	i1l108
  2752   000944                     i1u1_20:
  2753   000944                     
  2754                           ;setting_hardaware/uart.c: 47:     TXREG = data;
  2755   000944  C031  FFAD         	movff	UART_Write@data,4013	;volatile
  2756   000948  0012               	return		;funcret
  2757   00094A                     __end_of_UART_Write:
  2758                           	callstack 0
  2759                           
  2760 ;; *************** function _GetString *****************
  2761 ;; Defined at:
  2762 ;;		line 77 in file "setting_hardaware/uart.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    0[COMRAM] PTR unsigned char 
  2769 ;; Registers used:
  2770 ;;		wreg
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2776 ;;      Params:         2       0       0       0       0       0       0
  2777 ;;      Locals:         0       0       0       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0       0       0
  2779 ;;      Totals:         2       0       0       0       0       0       0
  2780 ;;Total ram usage:        2 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 1
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_Lo_ISR
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text17
  2791   00097E                     __ptext17:
  2792                           	callstack 0
  2793   00097E                     _GetString:
  2794                           	callstack 26
  2795   00097E                     
  2796                           ;setting_hardaware/uart.c: 78:     return mystring;
  2797   00097E  0E1D               	movlw	_mystring& (0+255)
  2798   000980  0012               	return		;funcret
  2799   000982                     __end_of_GetString:
  2800                           	callstack 0
  2801                           
  2802 ;; *************** function _ClearBuffer *****************
  2803 ;; Defined at:
  2804 ;;		line 56 in file "setting_hardaware/uart.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  i               2    0[COMRAM] int 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2818 ;;      Params:         0       0       0       0       0       0       0
  2819 ;;      Locals:         2       0       0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0
  2821 ;;      Totals:         2       0       0       0       0       0       0
  2822 ;;Total ram usage:        2 bytes
  2823 ;; Hardware stack levels used: 1
  2824 ;; Hardware stack levels required when called: 1
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_Lo_ISR
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text18
  2833   00080A                     __ptext18:
  2834                           	callstack 0
  2835   00080A                     _ClearBuffer:
  2836                           	callstack 26
  2837   00080A                     
  2838                           ;setting_hardaware/uart.c: 57:     for(int i = 0; i < 10 ; i++)
  2839   00080A  0E00               	movlw	0
  2840   00080C  6E32               	movwf	(ClearBuffer@i+1)^0,c
  2841   00080E  0E00               	movlw	0
  2842   000810  6E31               	movwf	ClearBuffer@i^0,c
  2843   000812                     i1l983:
  2844                           
  2845                           ;setting_hardaware/uart.c: 58:         mystring[i] = '\0';
  2846   000812  5031               	movf	ClearBuffer@i^0,w,c
  2847   000814  0F1D               	addlw	low _mystring
  2848   000816  6ED9               	movwf	fsr2l,c
  2849   000818  6ADA               	clrf	fsr2h,c
  2850   00081A  6ADF               	clrf	indf2,c
  2851   00081C  4A31               	infsnz	ClearBuffer@i^0,f,c
  2852   00081E  2A32               	incf	(ClearBuffer@i+1)^0,f,c
  2853   000820  BE32               	btfsc	(ClearBuffer@i+1)^0,7,c
  2854   000822  EF1C  F004         	goto	i1u11_21
  2855   000826  5032               	movf	(ClearBuffer@i+1)^0,w,c
  2856   000828  E109               	bnz	i1u11_20
  2857   00082A  0E0A               	movlw	10
  2858   00082C  5C31               	subwf	ClearBuffer@i^0,w,c
  2859   00082E  A0D8               	btfss	status,0,c
  2860   000830  EF1C  F004         	goto	i1u11_21
  2861   000834  EF1E  F004         	goto	i1u11_20
  2862   000838                     i1u11_21:
  2863   000838  EF09  F004         	goto	i1l983
  2864   00083C                     i1u11_20:
  2865   00083C                     
  2866                           ;setting_hardaware/uart.c: 59:     lenStr = 0;
  2867   00083C  0E00               	movlw	0
  2868   00083E  6E1C               	movwf	(_lenStr+1)^0,c
  2869   000840  0E00               	movlw	0
  2870   000842  6E1B               	movwf	_lenStr^0,c
  2871   000844  0012               	return		;funcret
  2872   000846                     __end_of_ClearBuffer:
  2873                           	callstack 0
  2874                           
  2875 ;; *************** function _Hi_ISR *****************
  2876 ;; Defined at:
  2877 ;;		line 104 in file "main.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      void 
  2884 ;; Registers used:
  2885 ;;		None
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2891 ;;      Params:         0       0       0       0       0       0       0
  2892 ;;      Locals:         0       0       0       0       0       0       0
  2893 ;;      Temps:          0       0       0       0       0       0       0
  2894 ;;      Totals:         0       0       0       0       0       0       0
  2895 ;;Total ram usage:        0 bytes
  2896 ;; Hardware stack levels used: 1
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		Interrupt level 2
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	intcode
  2905   000008                     __pintcode:
  2906                           	callstack 0
  2907   000008                     _Hi_ISR:
  2908                           	callstack 24
  2909                           
  2910                           ;incstack = 0
  2911   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2912   00000A  EDBA  F004         	call	int_func,f	;refresh shadow registers
  2913                           
  2914                           	psect	intcode_body
  2915   000974                     __pintcode_body:
  2916                           	callstack 24
  2917   000974                     int_func:
  2918                           	callstack 24
  2919   000974  0006               	pop		; remove dummy address from shadow register refresh
  2920   000976  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2921   000978  0011               	retfie		f
  2922   00097A                     __end_of_Hi_ISR:
  2923                           	callstack 0
  2924                           
  2925                           	psect	rparam
  2926   000001                     ___rparam_used  equ	1
  2927   000000                     ___param_bank   equ	0
  2928   000000                     __Lparam        equ	__Lrparam
  2929   000000                     __Hparam        equ	__Hrparam
  2930                           
  2931                           	psect	temp
  2932   000059                     btemp:
  2933                           	callstack 0
  2934   000059                     	ds	1
  2935   000059                     int$flags       set	btemp
  2936   00005A                     wtemp8          set	btemp+1
  2937   00005A                     ttemp5          set	btemp+1
  2938   00005D                     ttemp6          set	btemp+4
  2939   000061                     ttemp7          set	btemp+8
  2940                           
  2941                           	psect	idloc
  2942                           
  2943                           ;Config register IDLOC0 @ 0x200000
  2944                           ;	unspecified, using default values
  2945   200000                     	org	2097152
  2946   200000  FF                 	db	255
  2947                           
  2948                           ;Config register IDLOC1 @ 0x200001
  2949                           ;	unspecified, using default values
  2950   200001                     	org	2097153
  2951   200001  FF                 	db	255
  2952                           
  2953                           ;Config register IDLOC2 @ 0x200002
  2954                           ;	unspecified, using default values
  2955   200002                     	org	2097154
  2956   200002  FF                 	db	255
  2957                           
  2958                           ;Config register IDLOC3 @ 0x200003
  2959                           ;	unspecified, using default values
  2960   200003                     	org	2097155
  2961   200003  FF                 	db	255
  2962                           
  2963                           ;Config register IDLOC4 @ 0x200004
  2964                           ;	unspecified, using default values
  2965   200004                     	org	2097156
  2966   200004  FF                 	db	255
  2967                           
  2968                           ;Config register IDLOC5 @ 0x200005
  2969                           ;	unspecified, using default values
  2970   200005                     	org	2097157
  2971   200005  FF                 	db	255
  2972                           
  2973                           ;Config register IDLOC6 @ 0x200006
  2974                           ;	unspecified, using default values
  2975   200006                     	org	2097158
  2976   200006  FF                 	db	255
  2977                           
  2978                           ;Config register IDLOC7 @ 0x200007
  2979                           ;	unspecified, using default values
  2980   200007                     	org	2097159
  2981   200007  FF                 	db	255
  2982                           
  2983                           	psect	config
  2984                           
  2985                           ; Padding undefined space
  2986   300000                     	org	3145728
  2987   300000  FF                 	db	255
  2988                           
  2989                           ;Config register CONFIG1H @ 0x300001
  2990                           ;	Oscillator Selection bits
  2991                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2992                           ;	Fail-Safe Clock Monitor Enable bit
  2993                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2994                           ;	Internal/External Oscillator Switchover bit
  2995                           ;	IESO = ON, Oscillator Switchover mode enabled
  2996   300001                     	org	3145729
  2997   300001  88                 	db	136
  2998                           
  2999                           ;Config register CONFIG2L @ 0x300002
  3000                           ;	Power-up Timer Enable bit
  3001                           ;	PWRT = OFF, PWRT disabled
  3002                           ;	Brown-out Reset Enable bits
  3003                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3004                           ;	Brown Out Reset Voltage bits
  3005                           ;	BORV = 3, Minimum setting
  3006   300002                     	org	3145730
  3007   300002  1F                 	db	31
  3008                           
  3009                           ;Config register CONFIG2H @ 0x300003
  3010                           ;	Watchdog Timer Enable bit
  3011                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3012                           ;	Watchdog Timer Postscale Select bits
  3013                           ;	WDTPS = 1, 1:1
  3014   300003                     	org	3145731
  3015   300003  00                 	db	0
  3016                           
  3017                           ; Padding undefined space
  3018   300004                     	org	3145732
  3019   300004  FF                 	db	255
  3020                           
  3021                           ;Config register CONFIG3H @ 0x300005
  3022                           ;	CCP2 MUX bit
  3023                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3024                           ;	PORTB A/D Enable bit
  3025                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3026                           ;	Low-Power Timer1 Oscillator Enable bit
  3027                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3028                           ;	MCLR Pin Enable bit
  3029                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3030   300005                     	org	3145733
  3031   300005  83                 	db	131
  3032                           
  3033                           ;Config register CONFIG4L @ 0x300006
  3034                           ;	Stack Full/Underflow Reset Enable bit
  3035                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3036                           ;	Single-Supply ICSP Enable bit
  3037                           ;	LVP = OFF, Single-Supply ICSP disabled
  3038                           ;	Extended Instruction Set Enable bit
  3039                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3040                           ;	Background Debugger Enable bit
  3041                           ;	DEBUG = 0x1, unprogrammed default
  3042   300006                     	org	3145734
  3043   300006  81                 	db	129
  3044                           
  3045                           ; Padding undefined space
  3046   300007                     	org	3145735
  3047   300007  FF                 	db	255
  3048                           
  3049                           ;Config register CONFIG5L @ 0x300008
  3050                           ;	Code Protection bit
  3051                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3052                           ;	Code Protection bit
  3053                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3054                           ;	Code Protection bit
  3055                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3056                           ;	Code Protection bit
  3057                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3058   300008                     	org	3145736
  3059   300008  0F                 	db	15
  3060                           
  3061                           ;Config register CONFIG5H @ 0x300009
  3062                           ;	Boot Block Code Protection bit
  3063                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3064                           ;	Data EEPROM Code Protection bit
  3065                           ;	CPD = OFF, Data EEPROM not code-protected
  3066   300009                     	org	3145737
  3067   300009  C0                 	db	192
  3068                           
  3069                           ;Config register CONFIG6L @ 0x30000A
  3070                           ;	Write Protection bit
  3071                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3072                           ;	Write Protection bit
  3073                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3074                           ;	Write Protection bit
  3075                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3076                           ;	Write Protection bit
  3077                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3078   30000A                     	org	3145738
  3079   30000A  0F                 	db	15
  3080                           
  3081                           ;Config register CONFIG6H @ 0x30000B
  3082                           ;	Configuration Register Write Protection bit
  3083                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3084                           ;	Boot Block Write Protection bit
  3085                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3086                           ;	Data EEPROM Write Protection bit
  3087                           ;	WRTD = OFF, Data EEPROM not write-protected
  3088   30000B                     	org	3145739
  3089   30000B  E0                 	db	224
  3090                           
  3091                           ;Config register CONFIG7L @ 0x30000C
  3092                           ;	Table Read Protection bit
  3093                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3094                           ;	Table Read Protection bit
  3095                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3096                           ;	Table Read Protection bit
  3097                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3098                           ;	Table Read Protection bit
  3099                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3100   30000C                     	org	3145740
  3101   30000C  0F                 	db	15
  3102                           
  3103                           ;Config register CONFIG7H @ 0x30000D
  3104                           ;	Boot Block Table Read Protection bit
  3105                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3106   30000D                     	org	3145741
  3107   30000D  40                 	db	64
  3108                           tosu	equ	0xFFF
  3109                           tosh	equ	0xFFE
  3110                           tosl	equ	0xFFD
  3111                           stkptr	equ	0xFFC
  3112                           pclatu	equ	0xFFB
  3113                           pclath	equ	0xFFA
  3114                           pcl	equ	0xFF9
  3115                           tblptru	equ	0xFF8
  3116                           tblptrh	equ	0xFF7
  3117                           tblptrl	equ	0xFF6
  3118                           tablat	equ	0xFF5
  3119                           prodh	equ	0xFF4
  3120                           prodl	equ	0xFF3
  3121                           indf0	equ	0xFEF
  3122                           postinc0	equ	0xFEE
  3123                           postdec0	equ	0xFED
  3124                           preinc0	equ	0xFEC
  3125                           plusw0	equ	0xFEB
  3126                           fsr0h	equ	0xFEA
  3127                           fsr0l	equ	0xFE9
  3128                           wreg	equ	0xFE8
  3129                           indf1	equ	0xFE7
  3130                           postinc1	equ	0xFE6
  3131                           postdec1	equ	0xFE5
  3132                           preinc1	equ	0xFE4
  3133                           plusw1	equ	0xFE3
  3134                           fsr1h	equ	0xFE2
  3135                           fsr1l	equ	0xFE1
  3136                           bsr	equ	0xFE0
  3137                           indf2	equ	0xFDF
  3138                           postinc2	equ	0xFDE
  3139                           postdec2	equ	0xFDD
  3140                           preinc2	equ	0xFDC
  3141                           plusw2	equ	0xFDB
  3142                           fsr2h	equ	0xFDA
  3143                           fsr2l	equ	0xFD9
  3144                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     40      88
    BANK0           128      7       7
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    sp__GetString	PTR unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), STR_2(CODE[1]), STR_3(CODE[1]), STR_4(CODE[1]), 
		 -> STR_5(CODE[1]), STR_6(CODE[1]), STR_7(CODE[1]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_strcpy
    _strcpy->_GetString
    _MyusartRead->_UART_Write_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ledLeftOn
    _main->_ledRightOff
    _main->_ledRightOn
    _ledRightOn->_displayBinary
    _ledRightOff->_displayBinary
    _ledLeftOn->_displayBinary

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     697
                                              5 BANK0      2     2      0
                  _SYSTEM_Initialize
                      _displayBinary
                       _initialState
                         _ledLeftOff
                          _ledLeftOn
                        _ledRightOff
                         _ledRightOn
 ---------------------------------------------------------------------------------
 (1) _ledRightOn                                           2     0      2     182
                                              3 BANK0      2     0      2
                      _displayBinary
 ---------------------------------------------------------------------------------
 (1) _ledRightOff                                          2     0      2     182
                                              3 BANK0      2     0      2
                      _displayBinary
 ---------------------------------------------------------------------------------
 (1) _ledLeftOn                                            2     0      2     182
                                              3 BANK0      2     0      2
                      _displayBinary
 ---------------------------------------------------------------------------------
 (2) _displayBinary                                        3     1      2     148
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _ledLeftOff                                           2     0      2       3
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initialState                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                              32    32      0    1067
                                              8 COMRAM    32    32      0
                        _ClearBuffer
                          _GetString
                        _MyusartRead
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               3     1      2      96
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     3      3      87
                                              2 COMRAM     6     3      3
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          1     1      0     188
                                              5 COMRAM     1     1      0
                         _UART_Write
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (5) _UART_Write_Text                                      4     3      1     106
                                              1 COMRAM     4     3      1
                         _UART_Write
 ---------------------------------------------------------------------------------
 (6) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _GetString                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ClearBuffer                                          2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Hi_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _displayBinary
   _initialState
   _ledLeftOff
   _ledLeftOn
     _displayBinary
   _ledRightOff
     _displayBinary
   _ledRightOn
     _displayBinary

 _Lo_ISR (ROOT)
   _ClearBuffer
   _GetString
   _MyusartRead
     _UART_Write
     _UART_Write_Text
       _UART_Write
   _strcpy
     _GetString (ARG)
   _strlen

 _Hi_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1523      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK5           244      0       0      0.0%
BANK5              244      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      7       7      5.5%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     40      88     69.8%
BITBIGSFR_1h        38      0       0      0.0%
BITBIGSFRh          18      0       0      0.0%
BITBIGSFR_1llh      12      0       0      0.0%
BITBIGSFR_5h        10      0       0      0.0%
BITBIGSFRl           9      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_5l         2      0       0      0.0%
BITBIGSFR_1lh        1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      95      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Jan 15 20:27:22 2025

                           l47 0932                             l72 096A                             l75 0972  
                           bsr 0FE0                            l105 08CE                            l170 0902  
                          l164 0772                            l173 091A                            l167 0982  
                          l191 0688                            l176 095C                            l179 097C  
                          _PR2 0FCB                            u820 06F6                            u821 06EE  
                          u840 0718                            u841 0710                            u860 073C  
                          u861 0734                            u838 06FA                            u880 0762  
                          u881 075A                            u858 071C                            u878 0740  
                          u898 0766                            _dir 0017                            _str 0001  
               ?_displayBinary 0080                            wreg 0FE8                           l1501 095E  
                         l1503 0962                           l1511 08F8                           l1505 0966  
                         l1521 094A                           l1513 08FA                           l1523 0950  
                         l1515 0904                           l1507 08EA                           l1461 0922  
                         l1525 097A                           l1517 090C                           l1509 08F6  
                         l1541 0626                           l1471 092E                           l1463 0926  
                         l1519 0918                           l1551 0670                           l1543 0636  
                         l1535 0606                           l1473 0930                           l1465 0928  
                         l1481 08BC                           l1553 0676                           l1545 0646  
                         l1537 060E                           l1467 092A                           l1459 091C  
                         l1475 096C                           l1491 08C6                           l1483 08BE  
                         l1555 0682                           l1547 0652                           l1539 0616  
                         l1469 092C                           l1493 08C8                           l1485 08C0  
                         l1477 08AE                           l1549 0664                           l1495 08CA  
                         l1487 08C2                           l1479 08B8                           l1559 0688  
                         l1497 08CC                           l1489 08C4                           l1499 06E2  
                         l1597 06A0                           _ADFM 7E07                           STR_1 0601  
                         STR_2 0603                           STR_3 0603                           STR_4 0603  
                         STR_5 0603                           STR_6 0603                           STR_7 0603  
                         _CREN 7D5C                           _LATA 0F89                           _RCIF 7CF5  
                         _main 0606                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf1 0FE7                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 0059                           start 0378  
                 ___param_bank 0000        __end_of_UART_Write_Text 080A               ?_UART_Initialize 0031  
__end_of_OSCILLATOR_Initialize 0974                          ?_main 0031                          _T2CON 0FCA  
                        _IRCF0 7E9C                          _IRCF1 7E9D                          _IRCF2 7E9E  
                        i1l111 0948                          i1l122 0844                          i1l108 0936  
                        i1l117 0808                          i1l126 087E                          i1l224 0348  
                        i1l129 0980                          i1l219 0348                          i2l208 0976  
                        i1l915 08AC                          i1l917 0936                          i1l909 07BE  
                        i1l919 0944                          i1l983 0812                          i1l985 081C  
                        i1l977 080A                          i1l987 0820                          i1l989 083C  
                        _RCREG 0FAE                          _SPBRG 0FAF                          _TRISA 0F92  
                        _TXREG 0FAD                    ?_UART_Write 0031                          _state 0019  
                  _ClearBuffer 080A                          tablat 0FF5                          ttemp5 005A  
                        ttemp6 005D                          ttemp7 0061                          status 0FD8  
                        wtemp8 005A                __initialization 08D0                   __end_of_main 06E2  
                       ??_main 0085                ??_displayBinary 0082                  __activetblptr 0002  
               _postpostscaler 0015                         _ADCON1 0FC1                         _ADRESH 0FC4  
                       _ADRESL 0FC3                         i1l1241 07E6                         i1l1401 01F2  
                       i1l1235 07C0                         i1l1411 022E                         i1l1261 097E  
                       i1l1237 07CC                         i1l1253 0868                         i1l1245 0846  
                       i1l1413 0240                         i1l1341 0062                         i1l1239 07E2  
                       i1l1255 0874                         i1l1247 084A                         i1l1431 02C0  
                       i1l1415 025C                         i1l1407 020A                         i1l1351 00A4  
                       i1l1343 0068                         i1l1257 0878                         i1l1249 085C  
                       i1l1433 02C8                         i1l1441 02E4                         i1l1417 0264  
                       i1l1409 021C                         i1l1425 0280                         i1l1361 00FA  
                       i1l1353 00A8                         i1l1345 006C                         i1l1337 0046  
                       i1l1291 0888                         i1l1451 0330                         i1l1443 02F6  
                       i1l1435 02CC                         i1l1427 0292                         i1l1419 0268  
                       i1l1363 0102                         i1l1355 00BA                         i1l1371 011E  
                       i1l1347 007E                         i1l1339 0054                         i1l1285 0774  
                       i1l1293 088A                         i1l1445 0308                         i1l1429 02A4  
                       i1l1381 0178                         i1l1373 0130                         i1l1365 0106  
                       i1l1357 00CC                         i1l1349 0090                         i1l1287 0778  
                       i1l1295 08A0                         i1l1447 0324                         i1l1391 01A6  
                       i1l1383 017C                         i1l1375 0142                         i1l1359 00DE  
                       i1l1289 0880                         i1l1449 032C                         i1l1393 01B8  
                       i1l1377 0154                         i1l1395 01CA                         i1l1379 0170  
                       i1l1397 01E6                         i1l1389 0194                         i1l1399 01EE  
                       i1u1_20 0944                         i1u1_21 0940                         _Hi_ISR 0008  
                ?_initialState 0031                         _Lo_ISR 0018               ?_UART_Write_Text 0032  
                       _lenStr 001B                         clear_0 08D6                         isa$std 0001  
                       _strcpy 0774                         _strlen 0880                   __mediumconst 0000  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
            _SYSTEM_Initialize 095E                     __accesstop 0080        __end_of__initialization 08DC  
               ??_initialState 0080             ?_SYSTEM_Initialize 0031                  ___rparam_used 0001  
            __end_of_GetString 0982                 __pcstackCOMRAM 0031            ??_SYSTEM_Initialize 0080  
                ??_MyusartRead 0036      __end_of_SYSTEM_Initialize 096C                        ?_Hi_ISR 0031  
                      ?_Lo_ISR 0031                        _CCP1CON 0FBD                     _ledLeftOff 097A  
                      ?_strcpy 0033                        ?_strlen 0031                     _ledRightOn 08EA  
                      i1u11_20 083C                        i1u11_21 0838                   ??_UART_Write 0031  
                      i1u43_20 0808                        i1u43_21 0804                        i1u52_20 085C  
                      i1u60_20 00BA                        i1u52_21 0858                        i1u60_21 00B6  
                      i1u53_20 07AC                        i1u61_20 00CC                        i1u61_21 00C8  
                      i1u53_27 07A2                        i1u54_20 07BE                        i1u70_20 01CA  
                      i1u62_20 00DE                        i1u54_21 07BA                        i1u70_21 01C6  
                      i1u62_21 00DA                        i1u55_20 08A0                        i1u71_20 01E6  
                      i1u63_20 00FA                        i1u55_21 089C                        i1u71_21 01E2  
                      i1u63_21 00F6                        i1u80_20 0308                        i1u72_20 021C  
                      i1u64_20 0130                        i1u56_20 0054                        i1u80_21 0304  
                      i1u72_21 0218                        i1u64_21 012C                        i1u56_21 0050  
                      i1u81_20 0324                        i1u73_20 022E                        i1u65_20 0142  
                      i1u57_20 0062                        i1u81_21 0320                        i1u73_21 022A  
                      i1u65_21 013E                        i1u57_21 005E                        i1u74_20 0240  
                      i1u66_20 0154                        i1u58_20 007E                        i1u74_21 023C  
                      i1u66_21 0150                        i1u58_21 007A                        i1u75_20 025C  
                      i1u67_20 0170                        i1u59_20 0090                        i1u75_21 0258  
                      i1u67_21 016C                        i1u59_21 008C                        i1u76_20 0292  
                      i1u68_20 01A6                        i1u76_21 028E                        i1u68_21 01A2  
                      i1u77_20 02A4                        i1u69_20 01B8                        i1u77_21 02A0  
                      i1u69_21 01B4                        i1u78_20 02C0                        i1u78_21 02BC  
                      i1u79_20 02F6                        i1u79_21 02F2                   ?_ClearBuffer 0031  
          __end_of_MyusartRead 0880              __end_of_ledLeftOn 095E                        __Hparam 0000  
                      __Lparam 0000             __end_of_UART_Write 094A                   __psmallconst 0600  
                      __pcinit 08D0                        __ramtop 0600                        __ptext0 0606  
                      __ptext1 08EA                        __ptext2 0904                        __ptext3 094A  
                      __ptext4 06E2                        __ptext5 097A                        __ptext6 0982  
                      __ptext7 095E                        __ptext8 08AE                        __ptext9 096C  
        _OSCILLATOR_Initialize 096C           __end_of_initialState 0984                 __pintcode_body 0974  
         end_of_initialization 08DC                  __Lmediumconst 0000                        int_func 0974  
                    _RCSTAbits 0FAB                        postinc0 0FEE                        strcpy@d 0038  
                      strlen@a 0033                        strlen@s 0031                    ?_ledLeftOff 0080  
               UART_Write@data 0031                    ?_ledRightOn 0083          __end_of_displayBinary 0774  
                    _TRISAbits 0F92                      _TRISCbits 0F94                    _MyusartRead 0846  
                ??_ledRightOff 0085                      _TXSTAbits 0FAC                 __end_of_Hi_ISR 097A  
               __end_of_Lo_ISR 0378   __end_of_INTERRUPT_Initialize 0934                      _GetString 097E  
                  _BAUDCONbits 0FB8         ?_OSCILLATOR_Initialize 0031                 __end_of_strcpy 07C0  
               __end_of_strlen 08AE            start_initialization 08D0                   ClearBuffer@i 0031  
            ??_UART_Initialize 0080                       ??_Hi_ISR 0031                       ??_Lo_ISR 0039  
          __end_of_ledRightOff 091C                     ?_GetString 0031                       ??_strcpy 0036  
                     ??_strlen 0033               displayBinary@num 0080                    __pbssCOMRAM 0001  
                __pcstackBANK0 0080                   _initialState 0982                  Lo_ISR@command 0045  
                    __pintcode 0008                      _ledLeftOn 094A                    __pintcodelo 0018  
                  __smallconst 0600              ??_UART_Write_Text 0033           _INTERRUPT_Initialize 091C  
                  _ledRightOff 0904                       _LATAbits 0F89                       _IPR1bits 0F9F  
                     _PIE1bits 0F9D                       _PIR1bits 0F9E                       _RCONbits 0FD0  
                   ?_ledLeftOn 0083                    ??_GetString 0033                   ??_ledLeftOff 0082  
                   _ADCON0bits 0FC2                     _ADCON2bits 0FC0                   ??_ledRightOn 0085  
      MyusartRead@receivedData 0036                   ?_MyusartRead 0031          ?_INTERRUPT_Initialize 0031  
           __end_of_ledLeftOff 097E                       __Hrparam 0000             __end_of_ledRightOn 0904  
                     __Lrparam 0000        ??_OSCILLATOR_Initialize 0080                _UART_Initialize 08AE  
                     __ptext10 091C                       __ptext12 0880                       __ptext13 0774  
                     __ptext14 0846                       __ptext15 07C0                       __ptext16 0934  
                     __ptext17 097E                       __ptext18 080A                     strcpy@dest 0033  
          UART_Write_Text@text 0032                  ledLeftOff@num 0080                       isa$xinst 0000  
                     int$flags 0059                    ??_ledLeftOn 0085                       _mystring 001D  
                   _INTCONbits 0FF2         ??_INTERRUPT_Initialize 0080                  ??_ClearBuffer 0031  
                     intlevel1 0000                       intlevel2 0000                      strcpy@src 0034  
                 ledLeftOn@num 0083        __end_of_UART_Initialize 08D0                _UART_Write_Text 07C0  
                _displayBinary 06E2                     _UART_Write 0934               UART_Write_Text@i 0034  
                 ?_ledRightOff 0083            __end_of_ClearBuffer 0846                 ledRightOff@num 0083  
                ledRightOn@num 0083  
