

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Jan 16 08:51:01 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Generated 25/07/2024 GMT
    39                           ; 
    40                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4520 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000FE0                     bsr             equ	4064
    73   000FE9                     fsr0            equ	4073
    74   000FEA                     fsr0h           equ	4074
    75   000FE9                     fsr0l           equ	4073
    76   000FE1                     fsr1            equ	4065
    77   000FE2                     fsr1h           equ	4066
    78   000FE1                     fsr1l           equ	4065
    79   000FD9                     fsr2            equ	4057
    80   000FDA                     fsr2h           equ	4058
    81   000FD9                     fsr2l           equ	4057
    82   000FEF                     indf0           equ	4079
    83   000FE7                     indf1           equ	4071
    84   000FDF                     indf2           equ	4063
    85   000FF2                     intcon          equ	4082
    86   000000                     nvmcon          equ	0
    87   000FF9                     pcl             equ	4089
    88   000FFA                     pclath          equ	4090
    89   000FFB                     pclatu          equ	4091
    90   000FEB                     plusw0          equ	4075
    91   000FE3                     plusw1          equ	4067
    92   000FDB                     plusw2          equ	4059
    93   000FED                     postdec0        equ	4077
    94   000FE5                     postdec1        equ	4069
    95   000FDD                     postdec2        equ	4061
    96   000FEE                     postinc0        equ	4078
    97   000FE6                     postinc1        equ	4070
    98   000FDE                     postinc2        equ	4062
    99   000FEC                     preinc0         equ	4076
   100   000FE4                     preinc1         equ	4068
   101   000FDC                     preinc2         equ	4060
   102   000FF3                     prod            equ	4083
   103   000FF4                     prodh           equ	4084
   104   000FF3                     prodl           equ	4083
   105   000FD8                     status          equ	4056
   106   000FF5                     tablat          equ	4085
   107   000FF6                     tblptr          equ	4086
   108   000FF7                     tblptrh         equ	4087
   109   000FF6                     tblptrl         equ	4086
   110   000FF8                     tblptru         equ	4088
   111   000FFD                     tosl            equ	4093
   112   000FE8                     wreg            equ	4072
   113   000F80                     PORTA           equ	3968	;# 
   114   000F81                     PORTB           equ	3969	;# 
   115   000F82                     PORTC           equ	3970	;# 
   116   000F83                     PORTD           equ	3971	;# 
   117   000F84                     PORTE           equ	3972	;# 
   118   000F89                     LATA            equ	3977	;# 
   119   000F8A                     LATB            equ	3978	;# 
   120   000F8B                     LATC            equ	3979	;# 
   121   000F8C                     LATD            equ	3980	;# 
   122   000F8D                     LATE            equ	3981	;# 
   123   000F92                     TRISA           equ	3986	;# 
   124   000F92                     DDRA            equ	3986	;# 
   125   000F93                     TRISB           equ	3987	;# 
   126   000F93                     DDRB            equ	3987	;# 
   127   000F94                     TRISC           equ	3988	;# 
   128   000F94                     DDRC            equ	3988	;# 
   129   000F95                     TRISD           equ	3989	;# 
   130   000F95                     DDRD            equ	3989	;# 
   131   000F96                     TRISE           equ	3990	;# 
   132   000F96                     DDRE            equ	3990	;# 
   133   000F9B                     OSCTUNE         equ	3995	;# 
   134   000F9D                     PIE1            equ	3997	;# 
   135   000F9E                     PIR1            equ	3998	;# 
   136   000F9F                     IPR1            equ	3999	;# 
   137   000FA0                     PIE2            equ	4000	;# 
   138   000FA1                     PIR2            equ	4001	;# 
   139   000FA2                     IPR2            equ	4002	;# 
   140   000FA6                     EECON1          equ	4006	;# 
   141   000FA7                     EECON2          equ	4007	;# 
   142   000FA8                     EEDATA          equ	4008	;# 
   143   000FA9                     EEADR           equ	4009	;# 
   144   000FAB                     RCSTA           equ	4011	;# 
   145   000FAB                     RCSTA1          equ	4011	;# 
   146   000FAC                     TXSTA           equ	4012	;# 
   147   000FAC                     TXSTA1          equ	4012	;# 
   148   000FAD                     TXREG           equ	4013	;# 
   149   000FAD                     TXREG1          equ	4013	;# 
   150   000FAE                     RCREG           equ	4014	;# 
   151   000FAE                     RCREG1          equ	4014	;# 
   152   000FAF                     SPBRG           equ	4015	;# 
   153   000FAF                     SPBRG1          equ	4015	;# 
   154   000FB0                     SPBRGH          equ	4016	;# 
   155   000FB1                     T3CON           equ	4017	;# 
   156   000FB2                     TMR3            equ	4018	;# 
   157   000FB2                     TMR3L           equ	4018	;# 
   158   000FB3                     TMR3H           equ	4019	;# 
   159   000FB4                     CMCON           equ	4020	;# 
   160   000FB5                     CVRCON          equ	4021	;# 
   161   000FB6                     ECCP1AS         equ	4022	;# 
   162   000FB6                     ECCPAS          equ	4022	;# 
   163   000FB7                     PWM1CON         equ	4023	;# 
   164   000FB7                     ECCP1DEL        equ	4023	;# 
   165   000FB8                     BAUDCON         equ	4024	;# 
   166   000FB8                     BAUDCTL         equ	4024	;# 
   167   000FBA                     CCP2CON         equ	4026	;# 
   168   000FBB                     CCPR2           equ	4027	;# 
   169   000FBB                     CCPR2L          equ	4027	;# 
   170   000FBC                     CCPR2H          equ	4028	;# 
   171   000FBD                     CCP1CON         equ	4029	;# 
   172   000FBE                     CCPR1           equ	4030	;# 
   173   000FBE                     CCPR1L          equ	4030	;# 
   174   000FBF                     CCPR1H          equ	4031	;# 
   175   000FC0                     ADCON2          equ	4032	;# 
   176   000FC1                     ADCON1          equ	4033	;# 
   177   000FC2                     ADCON0          equ	4034	;# 
   178   000FC3                     ADRES           equ	4035	;# 
   179   000FC3                     ADRESL          equ	4035	;# 
   180   000FC4                     ADRESH          equ	4036	;# 
   181   000FC5                     SSPCON2         equ	4037	;# 
   182   000FC6                     SSPCON1         equ	4038	;# 
   183   000FC7                     SSPSTAT         equ	4039	;# 
   184   000FC8                     SSPADD          equ	4040	;# 
   185   000FC9                     SSPBUF          equ	4041	;# 
   186   000FCA                     T2CON           equ	4042	;# 
   187   000FCB                     PR2             equ	4043	;# 
   188   000FCB                     MEMCON          equ	4043	;# 
   189   000FCC                     TMR2            equ	4044	;# 
   190   000FCD                     T1CON           equ	4045	;# 
   191   000FCE                     TMR1            equ	4046	;# 
   192   000FCE                     TMR1L           equ	4046	;# 
   193   000FCF                     TMR1H           equ	4047	;# 
   194   000FD0                     RCON            equ	4048	;# 
   195   000FD1                     WDTCON          equ	4049	;# 
   196   000FD2                     HLVDCON         equ	4050	;# 
   197   000FD2                     LVDCON          equ	4050	;# 
   198   000FD3                     OSCCON          equ	4051	;# 
   199   000FD5                     T0CON           equ	4053	;# 
   200   000FD6                     TMR0            equ	4054	;# 
   201   000FD6                     TMR0L           equ	4054	;# 
   202   000FD7                     TMR0H           equ	4055	;# 
   203   000FD8                     STATUS          equ	4056	;# 
   204   000FD9                     FSR2            equ	4057	;# 
   205   000FD9                     FSR2L           equ	4057	;# 
   206   000FDA                     FSR2H           equ	4058	;# 
   207   000FDB                     PLUSW2          equ	4059	;# 
   208   000FDC                     PREINC2         equ	4060	;# 
   209   000FDD                     POSTDEC2        equ	4061	;# 
   210   000FDE                     POSTINC2        equ	4062	;# 
   211   000FDF                     INDF2           equ	4063	;# 
   212   000FE0                     BSR             equ	4064	;# 
   213   000FE1                     FSR1            equ	4065	;# 
   214   000FE1                     FSR1L           equ	4065	;# 
   215   000FE2                     FSR1H           equ	4066	;# 
   216   000FE3                     PLUSW1          equ	4067	;# 
   217   000FE4                     PREINC1         equ	4068	;# 
   218   000FE5                     POSTDEC1        equ	4069	;# 
   219   000FE6                     POSTINC1        equ	4070	;# 
   220   000FE7                     INDF1           equ	4071	;# 
   221   000FE8                     WREG            equ	4072	;# 
   222   000FE9                     FSR0            equ	4073	;# 
   223   000FE9                     FSR0L           equ	4073	;# 
   224   000FEA                     FSR0H           equ	4074	;# 
   225   000FEB                     PLUSW0          equ	4075	;# 
   226   000FEC                     PREINC0         equ	4076	;# 
   227   000FED                     POSTDEC0        equ	4077	;# 
   228   000FEE                     POSTINC0        equ	4078	;# 
   229   000FEF                     INDF0           equ	4079	;# 
   230   000FF0                     INTCON3         equ	4080	;# 
   231   000FF1                     INTCON2         equ	4081	;# 
   232   000FF2                     INTCON          equ	4082	;# 
   233   000FF3                     PROD            equ	4083	;# 
   234   000FF3                     PRODL           equ	4083	;# 
   235   000FF4                     PRODH           equ	4084	;# 
   236   000FF5                     TABLAT          equ	4085	;# 
   237   000FF6                     TBLPTR          equ	4086	;# 
   238   000FF6                     TBLPTRL         equ	4086	;# 
   239   000FF7                     TBLPTRH         equ	4087	;# 
   240   000FF8                     TBLPTRU         equ	4088	;# 
   241   000FF9                     PCLAT           equ	4089	;# 
   242   000FF9                     PC              equ	4089	;# 
   243   000FF9                     PCL             equ	4089	;# 
   244   000FFA                     PCLATH          equ	4090	;# 
   245   000FFB                     PCLATU          equ	4091	;# 
   246   000FFC                     STKPTR          equ	4092	;# 
   247   000FFD                     TOS             equ	4093	;# 
   248   000FFD                     TOSL            equ	4093	;# 
   249   000FFE                     TOSH            equ	4094	;# 
   250   000FFF                     TOSU            equ	4095	;# 
   251   000F80                     PORTA           equ	3968	;# 
   252   000F81                     PORTB           equ	3969	;# 
   253   000F82                     PORTC           equ	3970	;# 
   254   000F83                     PORTD           equ	3971	;# 
   255   000F84                     PORTE           equ	3972	;# 
   256   000F89                     LATA            equ	3977	;# 
   257   000F8A                     LATB            equ	3978	;# 
   258   000F8B                     LATC            equ	3979	;# 
   259   000F8C                     LATD            equ	3980	;# 
   260   000F8D                     LATE            equ	3981	;# 
   261   000F92                     TRISA           equ	3986	;# 
   262   000F92                     DDRA            equ	3986	;# 
   263   000F93                     TRISB           equ	3987	;# 
   264   000F93                     DDRB            equ	3987	;# 
   265   000F94                     TRISC           equ	3988	;# 
   266   000F94                     DDRC            equ	3988	;# 
   267   000F95                     TRISD           equ	3989	;# 
   268   000F95                     DDRD            equ	3989	;# 
   269   000F96                     TRISE           equ	3990	;# 
   270   000F96                     DDRE            equ	3990	;# 
   271   000F9B                     OSCTUNE         equ	3995	;# 
   272   000F9D                     PIE1            equ	3997	;# 
   273   000F9E                     PIR1            equ	3998	;# 
   274   000F9F                     IPR1            equ	3999	;# 
   275   000FA0                     PIE2            equ	4000	;# 
   276   000FA1                     PIR2            equ	4001	;# 
   277   000FA2                     IPR2            equ	4002	;# 
   278   000FA6                     EECON1          equ	4006	;# 
   279   000FA7                     EECON2          equ	4007	;# 
   280   000FA8                     EEDATA          equ	4008	;# 
   281   000FA9                     EEADR           equ	4009	;# 
   282   000FAB                     RCSTA           equ	4011	;# 
   283   000FAB                     RCSTA1          equ	4011	;# 
   284   000FAC                     TXSTA           equ	4012	;# 
   285   000FAC                     TXSTA1          equ	4012	;# 
   286   000FAD                     TXREG           equ	4013	;# 
   287   000FAD                     TXREG1          equ	4013	;# 
   288   000FAE                     RCREG           equ	4014	;# 
   289   000FAE                     RCREG1          equ	4014	;# 
   290   000FAF                     SPBRG           equ	4015	;# 
   291   000FAF                     SPBRG1          equ	4015	;# 
   292   000FB0                     SPBRGH          equ	4016	;# 
   293   000FB1                     T3CON           equ	4017	;# 
   294   000FB2                     TMR3            equ	4018	;# 
   295   000FB2                     TMR3L           equ	4018	;# 
   296   000FB3                     TMR3H           equ	4019	;# 
   297   000FB4                     CMCON           equ	4020	;# 
   298   000FB5                     CVRCON          equ	4021	;# 
   299   000FB6                     ECCP1AS         equ	4022	;# 
   300   000FB6                     ECCPAS          equ	4022	;# 
   301   000FB7                     PWM1CON         equ	4023	;# 
   302   000FB7                     ECCP1DEL        equ	4023	;# 
   303   000FB8                     BAUDCON         equ	4024	;# 
   304   000FB8                     BAUDCTL         equ	4024	;# 
   305   000FBA                     CCP2CON         equ	4026	;# 
   306   000FBB                     CCPR2           equ	4027	;# 
   307   000FBB                     CCPR2L          equ	4027	;# 
   308   000FBC                     CCPR2H          equ	4028	;# 
   309   000FBD                     CCP1CON         equ	4029	;# 
   310   000FBE                     CCPR1           equ	4030	;# 
   311   000FBE                     CCPR1L          equ	4030	;# 
   312   000FBF                     CCPR1H          equ	4031	;# 
   313   000FC0                     ADCON2          equ	4032	;# 
   314   000FC1                     ADCON1          equ	4033	;# 
   315   000FC2                     ADCON0          equ	4034	;# 
   316   000FC3                     ADRES           equ	4035	;# 
   317   000FC3                     ADRESL          equ	4035	;# 
   318   000FC4                     ADRESH          equ	4036	;# 
   319   000FC5                     SSPCON2         equ	4037	;# 
   320   000FC6                     SSPCON1         equ	4038	;# 
   321   000FC7                     SSPSTAT         equ	4039	;# 
   322   000FC8                     SSPADD          equ	4040	;# 
   323   000FC9                     SSPBUF          equ	4041	;# 
   324   000FCA                     T2CON           equ	4042	;# 
   325   000FCB                     PR2             equ	4043	;# 
   326   000FCB                     MEMCON          equ	4043	;# 
   327   000FCC                     TMR2            equ	4044	;# 
   328   000FCD                     T1CON           equ	4045	;# 
   329   000FCE                     TMR1            equ	4046	;# 
   330   000FCE                     TMR1L           equ	4046	;# 
   331   000FCF                     TMR1H           equ	4047	;# 
   332   000FD0                     RCON            equ	4048	;# 
   333   000FD1                     WDTCON          equ	4049	;# 
   334   000FD2                     HLVDCON         equ	4050	;# 
   335   000FD2                     LVDCON          equ	4050	;# 
   336   000FD3                     OSCCON          equ	4051	;# 
   337   000FD5                     T0CON           equ	4053	;# 
   338   000FD6                     TMR0            equ	4054	;# 
   339   000FD6                     TMR0L           equ	4054	;# 
   340   000FD7                     TMR0H           equ	4055	;# 
   341   000FD8                     STATUS          equ	4056	;# 
   342   000FD9                     FSR2            equ	4057	;# 
   343   000FD9                     FSR2L           equ	4057	;# 
   344   000FDA                     FSR2H           equ	4058	;# 
   345   000FDB                     PLUSW2          equ	4059	;# 
   346   000FDC                     PREINC2         equ	4060	;# 
   347   000FDD                     POSTDEC2        equ	4061	;# 
   348   000FDE                     POSTINC2        equ	4062	;# 
   349   000FDF                     INDF2           equ	4063	;# 
   350   000FE0                     BSR             equ	4064	;# 
   351   000FE1                     FSR1            equ	4065	;# 
   352   000FE1                     FSR1L           equ	4065	;# 
   353   000FE2                     FSR1H           equ	4066	;# 
   354   000FE3                     PLUSW1          equ	4067	;# 
   355   000FE4                     PREINC1         equ	4068	;# 
   356   000FE5                     POSTDEC1        equ	4069	;# 
   357   000FE6                     POSTINC1        equ	4070	;# 
   358   000FE7                     INDF1           equ	4071	;# 
   359   000FE8                     WREG            equ	4072	;# 
   360   000FE9                     FSR0            equ	4073	;# 
   361   000FE9                     FSR0L           equ	4073	;# 
   362   000FEA                     FSR0H           equ	4074	;# 
   363   000FEB                     PLUSW0          equ	4075	;# 
   364   000FEC                     PREINC0         equ	4076	;# 
   365   000FED                     POSTDEC0        equ	4077	;# 
   366   000FEE                     POSTINC0        equ	4078	;# 
   367   000FEF                     INDF0           equ	4079	;# 
   368   000FF0                     INTCON3         equ	4080	;# 
   369   000FF1                     INTCON2         equ	4081	;# 
   370   000FF2                     INTCON          equ	4082	;# 
   371   000FF3                     PROD            equ	4083	;# 
   372   000FF3                     PRODL           equ	4083	;# 
   373   000FF4                     PRODH           equ	4084	;# 
   374   000FF5                     TABLAT          equ	4085	;# 
   375   000FF6                     TBLPTR          equ	4086	;# 
   376   000FF6                     TBLPTRL         equ	4086	;# 
   377   000FF7                     TBLPTRH         equ	4087	;# 
   378   000FF8                     TBLPTRU         equ	4088	;# 
   379   000FF9                     PCLAT           equ	4089	;# 
   380   000FF9                     PC              equ	4089	;# 
   381   000FF9                     PCL             equ	4089	;# 
   382   000FFA                     PCLATH          equ	4090	;# 
   383   000FFB                     PCLATU          equ	4091	;# 
   384   000FFC                     STKPTR          equ	4092	;# 
   385   000FFD                     TOS             equ	4093	;# 
   386   000FFD                     TOSL            equ	4093	;# 
   387   000FFE                     TOSH            equ	4094	;# 
   388   000FFF                     TOSU            equ	4095	;# 
   389   000F80                     PORTA           equ	3968	;# 
   390   000F81                     PORTB           equ	3969	;# 
   391   000F82                     PORTC           equ	3970	;# 
   392   000F83                     PORTD           equ	3971	;# 
   393   000F84                     PORTE           equ	3972	;# 
   394   000F89                     LATA            equ	3977	;# 
   395   000F8A                     LATB            equ	3978	;# 
   396   000F8B                     LATC            equ	3979	;# 
   397   000F8C                     LATD            equ	3980	;# 
   398   000F8D                     LATE            equ	3981	;# 
   399   000F92                     TRISA           equ	3986	;# 
   400   000F92                     DDRA            equ	3986	;# 
   401   000F93                     TRISB           equ	3987	;# 
   402   000F93                     DDRB            equ	3987	;# 
   403   000F94                     TRISC           equ	3988	;# 
   404   000F94                     DDRC            equ	3988	;# 
   405   000F95                     TRISD           equ	3989	;# 
   406   000F95                     DDRD            equ	3989	;# 
   407   000F96                     TRISE           equ	3990	;# 
   408   000F96                     DDRE            equ	3990	;# 
   409   000F9B                     OSCTUNE         equ	3995	;# 
   410   000F9D                     PIE1            equ	3997	;# 
   411   000F9E                     PIR1            equ	3998	;# 
   412   000F9F                     IPR1            equ	3999	;# 
   413   000FA0                     PIE2            equ	4000	;# 
   414   000FA1                     PIR2            equ	4001	;# 
   415   000FA2                     IPR2            equ	4002	;# 
   416   000FA6                     EECON1          equ	4006	;# 
   417   000FA7                     EECON2          equ	4007	;# 
   418   000FA8                     EEDATA          equ	4008	;# 
   419   000FA9                     EEADR           equ	4009	;# 
   420   000FAB                     RCSTA           equ	4011	;# 
   421   000FAB                     RCSTA1          equ	4011	;# 
   422   000FAC                     TXSTA           equ	4012	;# 
   423   000FAC                     TXSTA1          equ	4012	;# 
   424   000FAD                     TXREG           equ	4013	;# 
   425   000FAD                     TXREG1          equ	4013	;# 
   426   000FAE                     RCREG           equ	4014	;# 
   427   000FAE                     RCREG1          equ	4014	;# 
   428   000FAF                     SPBRG           equ	4015	;# 
   429   000FAF                     SPBRG1          equ	4015	;# 
   430   000FB0                     SPBRGH          equ	4016	;# 
   431   000FB1                     T3CON           equ	4017	;# 
   432   000FB2                     TMR3            equ	4018	;# 
   433   000FB2                     TMR3L           equ	4018	;# 
   434   000FB3                     TMR3H           equ	4019	;# 
   435   000FB4                     CMCON           equ	4020	;# 
   436   000FB5                     CVRCON          equ	4021	;# 
   437   000FB6                     ECCP1AS         equ	4022	;# 
   438   000FB6                     ECCPAS          equ	4022	;# 
   439   000FB7                     PWM1CON         equ	4023	;# 
   440   000FB7                     ECCP1DEL        equ	4023	;# 
   441   000FB8                     BAUDCON         equ	4024	;# 
   442   000FB8                     BAUDCTL         equ	4024	;# 
   443   000FBA                     CCP2CON         equ	4026	;# 
   444   000FBB                     CCPR2           equ	4027	;# 
   445   000FBB                     CCPR2L          equ	4027	;# 
   446   000FBC                     CCPR2H          equ	4028	;# 
   447   000FBD                     CCP1CON         equ	4029	;# 
   448   000FBE                     CCPR1           equ	4030	;# 
   449   000FBE                     CCPR1L          equ	4030	;# 
   450   000FBF                     CCPR1H          equ	4031	;# 
   451   000FC0                     ADCON2          equ	4032	;# 
   452   000FC1                     ADCON1          equ	4033	;# 
   453   000FC2                     ADCON0          equ	4034	;# 
   454   000FC3                     ADRES           equ	4035	;# 
   455   000FC3                     ADRESL          equ	4035	;# 
   456   000FC4                     ADRESH          equ	4036	;# 
   457   000FC5                     SSPCON2         equ	4037	;# 
   458   000FC6                     SSPCON1         equ	4038	;# 
   459   000FC7                     SSPSTAT         equ	4039	;# 
   460   000FC8                     SSPADD          equ	4040	;# 
   461   000FC9                     SSPBUF          equ	4041	;# 
   462   000FCA                     T2CON           equ	4042	;# 
   463   000FCB                     PR2             equ	4043	;# 
   464   000FCB                     MEMCON          equ	4043	;# 
   465   000FCC                     TMR2            equ	4044	;# 
   466   000FCD                     T1CON           equ	4045	;# 
   467   000FCE                     TMR1            equ	4046	;# 
   468   000FCE                     TMR1L           equ	4046	;# 
   469   000FCF                     TMR1H           equ	4047	;# 
   470   000FD0                     RCON            equ	4048	;# 
   471   000FD1                     WDTCON          equ	4049	;# 
   472   000FD2                     HLVDCON         equ	4050	;# 
   473   000FD2                     LVDCON          equ	4050	;# 
   474   000FD3                     OSCCON          equ	4051	;# 
   475   000FD5                     T0CON           equ	4053	;# 
   476   000FD6                     TMR0            equ	4054	;# 
   477   000FD6                     TMR0L           equ	4054	;# 
   478   000FD7                     TMR0H           equ	4055	;# 
   479   000FD8                     STATUS          equ	4056	;# 
   480   000FD9                     FSR2            equ	4057	;# 
   481   000FD9                     FSR2L           equ	4057	;# 
   482   000FDA                     FSR2H           equ	4058	;# 
   483   000FDB                     PLUSW2          equ	4059	;# 
   484   000FDC                     PREINC2         equ	4060	;# 
   485   000FDD                     POSTDEC2        equ	4061	;# 
   486   000FDE                     POSTINC2        equ	4062	;# 
   487   000FDF                     INDF2           equ	4063	;# 
   488   000FE0                     BSR             equ	4064	;# 
   489   000FE1                     FSR1            equ	4065	;# 
   490   000FE1                     FSR1L           equ	4065	;# 
   491   000FE2                     FSR1H           equ	4066	;# 
   492   000FE3                     PLUSW1          equ	4067	;# 
   493   000FE4                     PREINC1         equ	4068	;# 
   494   000FE5                     POSTDEC1        equ	4069	;# 
   495   000FE6                     POSTINC1        equ	4070	;# 
   496   000FE7                     INDF1           equ	4071	;# 
   497   000FE8                     WREG            equ	4072	;# 
   498   000FE9                     FSR0            equ	4073	;# 
   499   000FE9                     FSR0L           equ	4073	;# 
   500   000FEA                     FSR0H           equ	4074	;# 
   501   000FEB                     PLUSW0          equ	4075	;# 
   502   000FEC                     PREINC0         equ	4076	;# 
   503   000FED                     POSTDEC0        equ	4077	;# 
   504   000FEE                     POSTINC0        equ	4078	;# 
   505   000FEF                     INDF0           equ	4079	;# 
   506   000FF0                     INTCON3         equ	4080	;# 
   507   000FF1                     INTCON2         equ	4081	;# 
   508   000FF2                     INTCON          equ	4082	;# 
   509   000FF3                     PROD            equ	4083	;# 
   510   000FF3                     PRODL           equ	4083	;# 
   511   000FF4                     PRODH           equ	4084	;# 
   512   000FF5                     TABLAT          equ	4085	;# 
   513   000FF6                     TBLPTR          equ	4086	;# 
   514   000FF6                     TBLPTRL         equ	4086	;# 
   515   000FF7                     TBLPTRH         equ	4087	;# 
   516   000FF8                     TBLPTRU         equ	4088	;# 
   517   000FF9                     PCLAT           equ	4089	;# 
   518   000FF9                     PC              equ	4089	;# 
   519   000FF9                     PCL             equ	4089	;# 
   520   000FFA                     PCLATH          equ	4090	;# 
   521   000FFB                     PCLATU          equ	4091	;# 
   522   000FFC                     STKPTR          equ	4092	;# 
   523   000FFD                     TOS             equ	4093	;# 
   524   000FFD                     TOSL            equ	4093	;# 
   525   000FFE                     TOSH            equ	4094	;# 
   526   000FFF                     TOSU            equ	4095	;# 
   527   000F80                     PORTA           equ	3968	;# 
   528   000F81                     PORTB           equ	3969	;# 
   529   000F82                     PORTC           equ	3970	;# 
   530   000F83                     PORTD           equ	3971	;# 
   531   000F84                     PORTE           equ	3972	;# 
   532   000F89                     LATA            equ	3977	;# 
   533   000F8A                     LATB            equ	3978	;# 
   534   000F8B                     LATC            equ	3979	;# 
   535   000F8C                     LATD            equ	3980	;# 
   536   000F8D                     LATE            equ	3981	;# 
   537   000F92                     TRISA           equ	3986	;# 
   538   000F92                     DDRA            equ	3986	;# 
   539   000F93                     TRISB           equ	3987	;# 
   540   000F93                     DDRB            equ	3987	;# 
   541   000F94                     TRISC           equ	3988	;# 
   542   000F94                     DDRC            equ	3988	;# 
   543   000F95                     TRISD           equ	3989	;# 
   544   000F95                     DDRD            equ	3989	;# 
   545   000F96                     TRISE           equ	3990	;# 
   546   000F96                     DDRE            equ	3990	;# 
   547   000F9B                     OSCTUNE         equ	3995	;# 
   548   000F9D                     PIE1            equ	3997	;# 
   549   000F9E                     PIR1            equ	3998	;# 
   550   000F9F                     IPR1            equ	3999	;# 
   551   000FA0                     PIE2            equ	4000	;# 
   552   000FA1                     PIR2            equ	4001	;# 
   553   000FA2                     IPR2            equ	4002	;# 
   554   000FA6                     EECON1          equ	4006	;# 
   555   000FA7                     EECON2          equ	4007	;# 
   556   000FA8                     EEDATA          equ	4008	;# 
   557   000FA9                     EEADR           equ	4009	;# 
   558   000FAB                     RCSTA           equ	4011	;# 
   559   000FAB                     RCSTA1          equ	4011	;# 
   560   000FAC                     TXSTA           equ	4012	;# 
   561   000FAC                     TXSTA1          equ	4012	;# 
   562   000FAD                     TXREG           equ	4013	;# 
   563   000FAD                     TXREG1          equ	4013	;# 
   564   000FAE                     RCREG           equ	4014	;# 
   565   000FAE                     RCREG1          equ	4014	;# 
   566   000FAF                     SPBRG           equ	4015	;# 
   567   000FAF                     SPBRG1          equ	4015	;# 
   568   000FB0                     SPBRGH          equ	4016	;# 
   569   000FB1                     T3CON           equ	4017	;# 
   570   000FB2                     TMR3            equ	4018	;# 
   571   000FB2                     TMR3L           equ	4018	;# 
   572   000FB3                     TMR3H           equ	4019	;# 
   573   000FB4                     CMCON           equ	4020	;# 
   574   000FB5                     CVRCON          equ	4021	;# 
   575   000FB6                     ECCP1AS         equ	4022	;# 
   576   000FB6                     ECCPAS          equ	4022	;# 
   577   000FB7                     PWM1CON         equ	4023	;# 
   578   000FB7                     ECCP1DEL        equ	4023	;# 
   579   000FB8                     BAUDCON         equ	4024	;# 
   580   000FB8                     BAUDCTL         equ	4024	;# 
   581   000FBA                     CCP2CON         equ	4026	;# 
   582   000FBB                     CCPR2           equ	4027	;# 
   583   000FBB                     CCPR2L          equ	4027	;# 
   584   000FBC                     CCPR2H          equ	4028	;# 
   585   000FBD                     CCP1CON         equ	4029	;# 
   586   000FBE                     CCPR1           equ	4030	;# 
   587   000FBE                     CCPR1L          equ	4030	;# 
   588   000FBF                     CCPR1H          equ	4031	;# 
   589   000FC0                     ADCON2          equ	4032	;# 
   590   000FC1                     ADCON1          equ	4033	;# 
   591   000FC2                     ADCON0          equ	4034	;# 
   592   000FC3                     ADRES           equ	4035	;# 
   593   000FC3                     ADRESL          equ	4035	;# 
   594   000FC4                     ADRESH          equ	4036	;# 
   595   000FC5                     SSPCON2         equ	4037	;# 
   596   000FC6                     SSPCON1         equ	4038	;# 
   597   000FC7                     SSPSTAT         equ	4039	;# 
   598   000FC8                     SSPADD          equ	4040	;# 
   599   000FC9                     SSPBUF          equ	4041	;# 
   600   000FCA                     T2CON           equ	4042	;# 
   601   000FCB                     PR2             equ	4043	;# 
   602   000FCB                     MEMCON          equ	4043	;# 
   603   000FCC                     TMR2            equ	4044	;# 
   604   000FCD                     T1CON           equ	4045	;# 
   605   000FCE                     TMR1            equ	4046	;# 
   606   000FCE                     TMR1L           equ	4046	;# 
   607   000FCF                     TMR1H           equ	4047	;# 
   608   000FD0                     RCON            equ	4048	;# 
   609   000FD1                     WDTCON          equ	4049	;# 
   610   000FD2                     HLVDCON         equ	4050	;# 
   611   000FD2                     LVDCON          equ	4050	;# 
   612   000FD3                     OSCCON          equ	4051	;# 
   613   000FD5                     T0CON           equ	4053	;# 
   614   000FD6                     TMR0            equ	4054	;# 
   615   000FD6                     TMR0L           equ	4054	;# 
   616   000FD7                     TMR0H           equ	4055	;# 
   617   000FD8                     STATUS          equ	4056	;# 
   618   000FD9                     FSR2            equ	4057	;# 
   619   000FD9                     FSR2L           equ	4057	;# 
   620   000FDA                     FSR2H           equ	4058	;# 
   621   000FDB                     PLUSW2          equ	4059	;# 
   622   000FDC                     PREINC2         equ	4060	;# 
   623   000FDD                     POSTDEC2        equ	4061	;# 
   624   000FDE                     POSTINC2        equ	4062	;# 
   625   000FDF                     INDF2           equ	4063	;# 
   626   000FE0                     BSR             equ	4064	;# 
   627   000FE1                     FSR1            equ	4065	;# 
   628   000FE1                     FSR1L           equ	4065	;# 
   629   000FE2                     FSR1H           equ	4066	;# 
   630   000FE3                     PLUSW1          equ	4067	;# 
   631   000FE4                     PREINC1         equ	4068	;# 
   632   000FE5                     POSTDEC1        equ	4069	;# 
   633   000FE6                     POSTINC1        equ	4070	;# 
   634   000FE7                     INDF1           equ	4071	;# 
   635   000FE8                     WREG            equ	4072	;# 
   636   000FE9                     FSR0            equ	4073	;# 
   637   000FE9                     FSR0L           equ	4073	;# 
   638   000FEA                     FSR0H           equ	4074	;# 
   639   000FEB                     PLUSW0          equ	4075	;# 
   640   000FEC                     PREINC0         equ	4076	;# 
   641   000FED                     POSTDEC0        equ	4077	;# 
   642   000FEE                     POSTINC0        equ	4078	;# 
   643   000FEF                     INDF0           equ	4079	;# 
   644   000FF0                     INTCON3         equ	4080	;# 
   645   000FF1                     INTCON2         equ	4081	;# 
   646   000FF2                     INTCON          equ	4082	;# 
   647   000FF3                     PROD            equ	4083	;# 
   648   000FF3                     PRODL           equ	4083	;# 
   649   000FF4                     PRODH           equ	4084	;# 
   650   000FF5                     TABLAT          equ	4085	;# 
   651   000FF6                     TBLPTR          equ	4086	;# 
   652   000FF6                     TBLPTRL         equ	4086	;# 
   653   000FF7                     TBLPTRH         equ	4087	;# 
   654   000FF8                     TBLPTRU         equ	4088	;# 
   655   000FF9                     PCLAT           equ	4089	;# 
   656   000FF9                     PC              equ	4089	;# 
   657   000FF9                     PCL             equ	4089	;# 
   658   000FFA                     PCLATH          equ	4090	;# 
   659   000FFB                     PCLATU          equ	4091	;# 
   660   000FFC                     STKPTR          equ	4092	;# 
   661   000FFD                     TOS             equ	4093	;# 
   662   000FFD                     TOSL            equ	4093	;# 
   663   000FFE                     TOSH            equ	4094	;# 
   664   000FFF                     TOSU            equ	4095	;# 
   665   000F80                     PORTA           equ	3968	;# 
   666   000F81                     PORTB           equ	3969	;# 
   667   000F82                     PORTC           equ	3970	;# 
   668   000F83                     PORTD           equ	3971	;# 
   669   000F84                     PORTE           equ	3972	;# 
   670   000F89                     LATA            equ	3977	;# 
   671   000F8A                     LATB            equ	3978	;# 
   672   000F8B                     LATC            equ	3979	;# 
   673   000F8C                     LATD            equ	3980	;# 
   674   000F8D                     LATE            equ	3981	;# 
   675   000F92                     TRISA           equ	3986	;# 
   676   000F92                     DDRA            equ	3986	;# 
   677   000F93                     TRISB           equ	3987	;# 
   678   000F93                     DDRB            equ	3987	;# 
   679   000F94                     TRISC           equ	3988	;# 
   680   000F94                     DDRC            equ	3988	;# 
   681   000F95                     TRISD           equ	3989	;# 
   682   000F95                     DDRD            equ	3989	;# 
   683   000F96                     TRISE           equ	3990	;# 
   684   000F96                     DDRE            equ	3990	;# 
   685   000F9B                     OSCTUNE         equ	3995	;# 
   686   000F9D                     PIE1            equ	3997	;# 
   687   000F9E                     PIR1            equ	3998	;# 
   688   000F9F                     IPR1            equ	3999	;# 
   689   000FA0                     PIE2            equ	4000	;# 
   690   000FA1                     PIR2            equ	4001	;# 
   691   000FA2                     IPR2            equ	4002	;# 
   692   000FA6                     EECON1          equ	4006	;# 
   693   000FA7                     EECON2          equ	4007	;# 
   694   000FA8                     EEDATA          equ	4008	;# 
   695   000FA9                     EEADR           equ	4009	;# 
   696   000FAB                     RCSTA           equ	4011	;# 
   697   000FAB                     RCSTA1          equ	4011	;# 
   698   000FAC                     TXSTA           equ	4012	;# 
   699   000FAC                     TXSTA1          equ	4012	;# 
   700   000FAD                     TXREG           equ	4013	;# 
   701   000FAD                     TXREG1          equ	4013	;# 
   702   000FAE                     RCREG           equ	4014	;# 
   703   000FAE                     RCREG1          equ	4014	;# 
   704   000FAF                     SPBRG           equ	4015	;# 
   705   000FAF                     SPBRG1          equ	4015	;# 
   706   000FB0                     SPBRGH          equ	4016	;# 
   707   000FB1                     T3CON           equ	4017	;# 
   708   000FB2                     TMR3            equ	4018	;# 
   709   000FB2                     TMR3L           equ	4018	;# 
   710   000FB3                     TMR3H           equ	4019	;# 
   711   000FB4                     CMCON           equ	4020	;# 
   712   000FB5                     CVRCON          equ	4021	;# 
   713   000FB6                     ECCP1AS         equ	4022	;# 
   714   000FB6                     ECCPAS          equ	4022	;# 
   715   000FB7                     PWM1CON         equ	4023	;# 
   716   000FB7                     ECCP1DEL        equ	4023	;# 
   717   000FB8                     BAUDCON         equ	4024	;# 
   718   000FB8                     BAUDCTL         equ	4024	;# 
   719   000FBA                     CCP2CON         equ	4026	;# 
   720   000FBB                     CCPR2           equ	4027	;# 
   721   000FBB                     CCPR2L          equ	4027	;# 
   722   000FBC                     CCPR2H          equ	4028	;# 
   723   000FBD                     CCP1CON         equ	4029	;# 
   724   000FBE                     CCPR1           equ	4030	;# 
   725   000FBE                     CCPR1L          equ	4030	;# 
   726   000FBF                     CCPR1H          equ	4031	;# 
   727   000FC0                     ADCON2          equ	4032	;# 
   728   000FC1                     ADCON1          equ	4033	;# 
   729   000FC2                     ADCON0          equ	4034	;# 
   730   000FC3                     ADRES           equ	4035	;# 
   731   000FC3                     ADRESL          equ	4035	;# 
   732   000FC4                     ADRESH          equ	4036	;# 
   733   000FC5                     SSPCON2         equ	4037	;# 
   734   000FC6                     SSPCON1         equ	4038	;# 
   735   000FC7                     SSPSTAT         equ	4039	;# 
   736   000FC8                     SSPADD          equ	4040	;# 
   737   000FC9                     SSPBUF          equ	4041	;# 
   738   000FCA                     T2CON           equ	4042	;# 
   739   000FCB                     PR2             equ	4043	;# 
   740   000FCB                     MEMCON          equ	4043	;# 
   741   000FCC                     TMR2            equ	4044	;# 
   742   000FCD                     T1CON           equ	4045	;# 
   743   000FCE                     TMR1            equ	4046	;# 
   744   000FCE                     TMR1L           equ	4046	;# 
   745   000FCF                     TMR1H           equ	4047	;# 
   746   000FD0                     RCON            equ	4048	;# 
   747   000FD1                     WDTCON          equ	4049	;# 
   748   000FD2                     HLVDCON         equ	4050	;# 
   749   000FD2                     LVDCON          equ	4050	;# 
   750   000FD3                     OSCCON          equ	4051	;# 
   751   000FD5                     T0CON           equ	4053	;# 
   752   000FD6                     TMR0            equ	4054	;# 
   753   000FD6                     TMR0L           equ	4054	;# 
   754   000FD7                     TMR0H           equ	4055	;# 
   755   000FD8                     STATUS          equ	4056	;# 
   756   000FD9                     FSR2            equ	4057	;# 
   757   000FD9                     FSR2L           equ	4057	;# 
   758   000FDA                     FSR2H           equ	4058	;# 
   759   000FDB                     PLUSW2          equ	4059	;# 
   760   000FDC                     PREINC2         equ	4060	;# 
   761   000FDD                     POSTDEC2        equ	4061	;# 
   762   000FDE                     POSTINC2        equ	4062	;# 
   763   000FDF                     INDF2           equ	4063	;# 
   764   000FE0                     BSR             equ	4064	;# 
   765   000FE1                     FSR1            equ	4065	;# 
   766   000FE1                     FSR1L           equ	4065	;# 
   767   000FE2                     FSR1H           equ	4066	;# 
   768   000FE3                     PLUSW1          equ	4067	;# 
   769   000FE4                     PREINC1         equ	4068	;# 
   770   000FE5                     POSTDEC1        equ	4069	;# 
   771   000FE6                     POSTINC1        equ	4070	;# 
   772   000FE7                     INDF1           equ	4071	;# 
   773   000FE8                     WREG            equ	4072	;# 
   774   000FE9                     FSR0            equ	4073	;# 
   775   000FE9                     FSR0L           equ	4073	;# 
   776   000FEA                     FSR0H           equ	4074	;# 
   777   000FEB                     PLUSW0          equ	4075	;# 
   778   000FEC                     PREINC0         equ	4076	;# 
   779   000FED                     POSTDEC0        equ	4077	;# 
   780   000FEE                     POSTINC0        equ	4078	;# 
   781   000FEF                     INDF0           equ	4079	;# 
   782   000FF0                     INTCON3         equ	4080	;# 
   783   000FF1                     INTCON2         equ	4081	;# 
   784   000FF2                     INTCON          equ	4082	;# 
   785   000FF3                     PROD            equ	4083	;# 
   786   000FF3                     PRODL           equ	4083	;# 
   787   000FF4                     PRODH           equ	4084	;# 
   788   000FF5                     TABLAT          equ	4085	;# 
   789   000FF6                     TBLPTR          equ	4086	;# 
   790   000FF6                     TBLPTRL         equ	4086	;# 
   791   000FF7                     TBLPTRH         equ	4087	;# 
   792   000FF8                     TBLPTRU         equ	4088	;# 
   793   000FF9                     PCLAT           equ	4089	;# 
   794   000FF9                     PC              equ	4089	;# 
   795   000FF9                     PCL             equ	4089	;# 
   796   000FFA                     PCLATH          equ	4090	;# 
   797   000FFB                     PCLATU          equ	4091	;# 
   798   000FFC                     STKPTR          equ	4092	;# 
   799   000FFD                     TOS             equ	4093	;# 
   800   000FFD                     TOSL            equ	4093	;# 
   801   000FFE                     TOSH            equ	4094	;# 
   802   000FFF                     TOSU            equ	4095	;# 
   803   000F80                     PORTA           equ	3968	;# 
   804   000F81                     PORTB           equ	3969	;# 
   805   000F82                     PORTC           equ	3970	;# 
   806   000F83                     PORTD           equ	3971	;# 
   807   000F84                     PORTE           equ	3972	;# 
   808   000F89                     LATA            equ	3977	;# 
   809   000F8A                     LATB            equ	3978	;# 
   810   000F8B                     LATC            equ	3979	;# 
   811   000F8C                     LATD            equ	3980	;# 
   812   000F8D                     LATE            equ	3981	;# 
   813   000F92                     TRISA           equ	3986	;# 
   814   000F92                     DDRA            equ	3986	;# 
   815   000F93                     TRISB           equ	3987	;# 
   816   000F93                     DDRB            equ	3987	;# 
   817   000F94                     TRISC           equ	3988	;# 
   818   000F94                     DDRC            equ	3988	;# 
   819   000F95                     TRISD           equ	3989	;# 
   820   000F95                     DDRD            equ	3989	;# 
   821   000F96                     TRISE           equ	3990	;# 
   822   000F96                     DDRE            equ	3990	;# 
   823   000F9B                     OSCTUNE         equ	3995	;# 
   824   000F9D                     PIE1            equ	3997	;# 
   825   000F9E                     PIR1            equ	3998	;# 
   826   000F9F                     IPR1            equ	3999	;# 
   827   000FA0                     PIE2            equ	4000	;# 
   828   000FA1                     PIR2            equ	4001	;# 
   829   000FA2                     IPR2            equ	4002	;# 
   830   000FA6                     EECON1          equ	4006	;# 
   831   000FA7                     EECON2          equ	4007	;# 
   832   000FA8                     EEDATA          equ	4008	;# 
   833   000FA9                     EEADR           equ	4009	;# 
   834   000FAB                     RCSTA           equ	4011	;# 
   835   000FAB                     RCSTA1          equ	4011	;# 
   836   000FAC                     TXSTA           equ	4012	;# 
   837   000FAC                     TXSTA1          equ	4012	;# 
   838   000FAD                     TXREG           equ	4013	;# 
   839   000FAD                     TXREG1          equ	4013	;# 
   840   000FAE                     RCREG           equ	4014	;# 
   841   000FAE                     RCREG1          equ	4014	;# 
   842   000FAF                     SPBRG           equ	4015	;# 
   843   000FAF                     SPBRG1          equ	4015	;# 
   844   000FB0                     SPBRGH          equ	4016	;# 
   845   000FB1                     T3CON           equ	4017	;# 
   846   000FB2                     TMR3            equ	4018	;# 
   847   000FB2                     TMR3L           equ	4018	;# 
   848   000FB3                     TMR3H           equ	4019	;# 
   849   000FB4                     CMCON           equ	4020	;# 
   850   000FB5                     CVRCON          equ	4021	;# 
   851   000FB6                     ECCP1AS         equ	4022	;# 
   852   000FB6                     ECCPAS          equ	4022	;# 
   853   000FB7                     PWM1CON         equ	4023	;# 
   854   000FB7                     ECCP1DEL        equ	4023	;# 
   855   000FB8                     BAUDCON         equ	4024	;# 
   856   000FB8                     BAUDCTL         equ	4024	;# 
   857   000FBA                     CCP2CON         equ	4026	;# 
   858   000FBB                     CCPR2           equ	4027	;# 
   859   000FBB                     CCPR2L          equ	4027	;# 
   860   000FBC                     CCPR2H          equ	4028	;# 
   861   000FBD                     CCP1CON         equ	4029	;# 
   862   000FBE                     CCPR1           equ	4030	;# 
   863   000FBE                     CCPR1L          equ	4030	;# 
   864   000FBF                     CCPR1H          equ	4031	;# 
   865   000FC0                     ADCON2          equ	4032	;# 
   866   000FC1                     ADCON1          equ	4033	;# 
   867   000FC2                     ADCON0          equ	4034	;# 
   868   000FC3                     ADRES           equ	4035	;# 
   869   000FC3                     ADRESL          equ	4035	;# 
   870   000FC4                     ADRESH          equ	4036	;# 
   871   000FC5                     SSPCON2         equ	4037	;# 
   872   000FC6                     SSPCON1         equ	4038	;# 
   873   000FC7                     SSPSTAT         equ	4039	;# 
   874   000FC8                     SSPADD          equ	4040	;# 
   875   000FC9                     SSPBUF          equ	4041	;# 
   876   000FCA                     T2CON           equ	4042	;# 
   877   000FCB                     PR2             equ	4043	;# 
   878   000FCB                     MEMCON          equ	4043	;# 
   879   000FCC                     TMR2            equ	4044	;# 
   880   000FCD                     T1CON           equ	4045	;# 
   881   000FCE                     TMR1            equ	4046	;# 
   882   000FCE                     TMR1L           equ	4046	;# 
   883   000FCF                     TMR1H           equ	4047	;# 
   884   000FD0                     RCON            equ	4048	;# 
   885   000FD1                     WDTCON          equ	4049	;# 
   886   000FD2                     HLVDCON         equ	4050	;# 
   887   000FD2                     LVDCON          equ	4050	;# 
   888   000FD3                     OSCCON          equ	4051	;# 
   889   000FD5                     T0CON           equ	4053	;# 
   890   000FD6                     TMR0            equ	4054	;# 
   891   000FD6                     TMR0L           equ	4054	;# 
   892   000FD7                     TMR0H           equ	4055	;# 
   893   000FD8                     STATUS          equ	4056	;# 
   894   000FD9                     FSR2            equ	4057	;# 
   895   000FD9                     FSR2L           equ	4057	;# 
   896   000FDA                     FSR2H           equ	4058	;# 
   897   000FDB                     PLUSW2          equ	4059	;# 
   898   000FDC                     PREINC2         equ	4060	;# 
   899   000FDD                     POSTDEC2        equ	4061	;# 
   900   000FDE                     POSTINC2        equ	4062	;# 
   901   000FDF                     INDF2           equ	4063	;# 
   902   000FE0                     BSR             equ	4064	;# 
   903   000FE1                     FSR1            equ	4065	;# 
   904   000FE1                     FSR1L           equ	4065	;# 
   905   000FE2                     FSR1H           equ	4066	;# 
   906   000FE3                     PLUSW1          equ	4067	;# 
   907   000FE4                     PREINC1         equ	4068	;# 
   908   000FE5                     POSTDEC1        equ	4069	;# 
   909   000FE6                     POSTINC1        equ	4070	;# 
   910   000FE7                     INDF1           equ	4071	;# 
   911   000FE8                     WREG            equ	4072	;# 
   912   000FE9                     FSR0            equ	4073	;# 
   913   000FE9                     FSR0L           equ	4073	;# 
   914   000FEA                     FSR0H           equ	4074	;# 
   915   000FEB                     PLUSW0          equ	4075	;# 
   916   000FEC                     PREINC0         equ	4076	;# 
   917   000FED                     POSTDEC0        equ	4077	;# 
   918   000FEE                     POSTINC0        equ	4078	;# 
   919   000FEF                     INDF0           equ	4079	;# 
   920   000FF0                     INTCON3         equ	4080	;# 
   921   000FF1                     INTCON2         equ	4081	;# 
   922   000FF2                     INTCON          equ	4082	;# 
   923   000FF3                     PROD            equ	4083	;# 
   924   000FF3                     PRODL           equ	4083	;# 
   925   000FF4                     PRODH           equ	4084	;# 
   926   000FF5                     TABLAT          equ	4085	;# 
   927   000FF6                     TBLPTR          equ	4086	;# 
   928   000FF6                     TBLPTRL         equ	4086	;# 
   929   000FF7                     TBLPTRH         equ	4087	;# 
   930   000FF8                     TBLPTRU         equ	4088	;# 
   931   000FF9                     PCLAT           equ	4089	;# 
   932   000FF9                     PC              equ	4089	;# 
   933   000FF9                     PCL             equ	4089	;# 
   934   000FFA                     PCLATH          equ	4090	;# 
   935   000FFB                     PCLATU          equ	4091	;# 
   936   000FFC                     STKPTR          equ	4092	;# 
   937   000FFD                     TOS             equ	4093	;# 
   938   000FFD                     TOSL            equ	4093	;# 
   939   000FFE                     TOSH            equ	4094	;# 
   940   000FFF                     TOSU            equ	4095	;# 
   941   007CF1                     _TMR2IF         set	31985
   942   007D5C                     _CREN           set	32092
   943   007CF5                     _RCIF           set	31989
   944   007E9C                     _IRCF0          set	32412
   945   007E9D                     _IRCF1          set	32413
   946   007E9E                     _IRCF2          set	32414
   947   007E07                     _ADFM           set	32263
   948   000F89                     _LATAbits       set	3977
   949   000F92                     _TRISAbits      set	3986
   950   000F89                     _LATA           set	3977
   951   000F94                     _TRISCbits      set	3988
   952   000F92                     _TRISA          set	3986
   953   000FAE                     _RCREG          set	4014
   954   000FAD                     _TXREG          set	4013
   955   000FAB                     _RCSTAbits      set	4011
   956   000FAF                     _SPBRG          set	4015
   957   000FB8                     _BAUDCONbits    set	4024
   958   000FAC                     _TXSTAbits      set	4012
   959   000FCB                     _PR2            set	4043
   960   000FCA                     _T2CON          set	4042
   961   000F9D                     _PIE1bits       set	3997
   962   000FD0                     _RCONbits       set	4048
   963   000F9F                     _IPR1bits       set	3999
   964   000F9E                     _PIR1bits       set	3998
   965   000FBD                     _CCP1CON        set	4029
   966   000FC2                     _ADCON0bits     set	4034
   967   000FC3                     _ADRESL         set	4035
   968   000FC4                     _ADRESH         set	4036
   969   000FC0                     _ADCON2bits     set	4032
   970   000FC1                     _ADCON1         set	4033
   971   000FF2                     _INTCONbits     set	4082
   972                           
   973                           	psect	smallconst
   974   000600                     __psmallconst:
   975                           	callstack 0
   976   000600  00                 	db	0
   977   000601                     STR_1:
   978   000601  0D                 	db	13
   979   000602  0A                 	db	10
   980   000603  00                 	db	0
   981   000603                     STR_2           equ	STR_1+2
   982   000603                     STR_3           equ	STR_1+2
   983   000603                     STR_4           equ	STR_1+2
   984   000603                     STR_5           equ	STR_1+2
   985   000603                     STR_6           equ	STR_1+2
   986   000603                     STR_7           equ	STR_1+2
   987   000604  00                 	db	0	; dummy byte at the end
   988   000002                     __activetblptr  equ	2
   989                           
   990                           ; #config settings
   991                           
   992                           	psect	cinit
   993   0008D2                     __pcinit:
   994                           	callstack 0
   995   0008D2                     start_initialization:
   996                           	callstack 0
   997   0008D2                     __initialization:
   998                           	callstack 0
   999                           
  1000                           ; Clear objects allocated to COMRAM (48 bytes)
  1001   0008D2  EE00  F001         	lfsr	0,__pbssCOMRAM
  1002   0008D6  0E30               	movlw	48
  1003   0008D8                     clear_0:
  1004   0008D8  6AEE               	clrf	postinc0,c
  1005   0008DA  06E8               	decf	wreg,f,c
  1006   0008DC  E1FD               	bnz	clear_0
  1007   0008DE                     end_of_initialization:
  1008                           	callstack 0
  1009   0008DE                     __end_of__initialization:
  1010                           	callstack 0
  1011   0008DE  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1012   0008E0  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1013   0008E2  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1014   0008E4  6EF8               	movwf	tblptru,c
  1015   0008E6  0100               	movlb	0
  1016   0008E8  EF03  F003         	goto	_main	;jump to C main() function
  1017                           
  1018                           	psect	bssCOMRAM
  1019   000001                     __pbssCOMRAM:
  1020                           	callstack 0
  1021   000001                     _str:
  1022                           	callstack 0
  1023   000001                     	ds	20
  1024   000015                     _postpostscaler:
  1025                           	callstack 0
  1026   000015                     	ds	2
  1027   000017                     _dir:
  1028                           	callstack 0
  1029   000017                     	ds	2
  1030   000019                     _state:
  1031                           	callstack 0
  1032   000019                     	ds	2
  1033   00001B                     _lenStr:
  1034                           	callstack 0
  1035   00001B                     	ds	2
  1036   00001D                     _mystring:
  1037                           	callstack 0
  1038   00001D                     	ds	20
  1039                           
  1040                           	psect	cstackBANK0
  1041   000080                     __pcstackBANK0:
  1042                           	callstack 0
  1043   000080                     displayBinary@num:
  1044                           	callstack 0
  1045   000080                     ledLeftOff@num:
  1046                           	callstack 0
  1047   000080                     
  1048                           ; 1 bytes @ 0x0
  1049   000080                     	ds	2
  1050   000082                     ??_displayBinary:
  1051   000082                     
  1052                           ; 1 bytes @ 0x2
  1053   000082                     	ds	1
  1054   000083                     ledRightOn@num:
  1055                           	callstack 0
  1056   000083                     ledRightOff@num:
  1057                           	callstack 0
  1058   000083                     ledLeftOn@num:
  1059                           	callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x3
  1062   000083                     	ds	2
  1063   000085                     ??_main:
  1064                           
  1065                           ; 1 bytes @ 0x5
  1066   000085                     	ds	2
  1067                           
  1068                           	psect	cstackCOMRAM
  1069   000031                     __pcstackCOMRAM:
  1070                           	callstack 0
  1071   000031                     ?_strlen:
  1072                           	callstack 0
  1073   000031                     UART_Write@data:
  1074                           	callstack 0
  1075   000031                     strlen@s:
  1076                           	callstack 0
  1077   000031                     ClearBuffer@i:
  1078                           	callstack 0
  1079   000031                     
  1080                           ; 1 bytes @ 0x0
  1081   000031                     	ds	1
  1082   000032                     UART_Write_Text@text:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x1
  1086   000032                     	ds	1
  1087   000033                     strcpy@dest:
  1088                           	callstack 0
  1089   000033                     strlen@a:
  1090                           	callstack 0
  1091   000033                     ??_UART_Write_Text:
  1092                           
  1093                           ; 1 bytes @ 0x2
  1094   000033                     	ds	1
  1095   000034                     UART_Write_Text@i:
  1096                           	callstack 0
  1097   000034                     strcpy@src:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x3
  1101   000034                     	ds	2
  1102   000036                     MyusartRead@receivedData:
  1103                           	callstack 0
  1104   000036                     ??_strcpy:
  1105   000036                     
  1106                           ; 1 bytes @ 0x5
  1107   000036                     	ds	2
  1108   000038                     strcpy@d:
  1109                           	callstack 0
  1110                           
  1111                           ; 1 bytes @ 0x7
  1112   000038                     	ds	1
  1113   000039                     ??_Lo_ISR:
  1114                           
  1115                           ; 1 bytes @ 0x8
  1116   000039                     	ds	13
  1117   000046                     Lo_ISR@command:
  1118                           	callstack 0
  1119                           
  1120                           ; 20 bytes @ 0x15
  1121   000046                     	ds	20
  1122                           
  1123 ;;
  1124 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1125 ;;
  1126 ;; *************** function _main *****************
  1127 ;; Defined at:
  1128 ;;		line 67 in file "main.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;		None
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;		None
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2, status,0, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1142 ;;      Params:         0       0       0       0       0       0       0
  1143 ;;      Locals:         0       0       0       0       0       0       0
  1144 ;;      Temps:          0       2       0       0       0       0       0
  1145 ;;      Totals:         0       2       0       0       0       0       0
  1146 ;;Total ram usage:        2 bytes
  1147 ;; Hardware stack levels required when called: 7
  1148 ;; This function calls:
  1149 ;;		_SYSTEM_Initialize
  1150 ;;		_displayBinary
  1151 ;;		_initialState
  1152 ;;		_ledLeftOff
  1153 ;;		_ledLeftOn
  1154 ;;		_ledRightOff
  1155 ;;		_ledRightOn
  1156 ;; This function is called by:
  1157 ;;		Startup code after reset
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text0
  1162   000606                     __ptext0:
  1163                           	callstack 0
  1164   000606                     _main:
  1165                           	callstack 24
  1166   000606                     
  1167                           ;main.c: 69:     SYSTEM_Initialize() ;
  1168   000606  ECAF  F004         	call	_SYSTEM_Initialize	;wreg free
  1169   00060A                     l1574:
  1170                           
  1171                           ;main.c: 72:         LATAbits.LATA2 = 0;
  1172   00060A  9489               	bcf	137,2,c	;volatile
  1173                           
  1174                           ;main.c: 73:         switch(state){
  1175   00060C  EF45  F003         	goto	l1598
  1176   000610                     l1576:
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;main.c: 75:                 initialState();
  1180   000610  ECC9  F004         	call	_initialState	;wreg free
  1181                           
  1182                           ;main.c: 76:                 break;
  1183   000614  EF05  F003         	goto	l1574
  1184   000618                     l1578:
  1185                           
  1186                           ; BSR set to: 0
  1187                           ;main.c: 78:                 ledRightOn(1);
  1188   000618  0E00               	movlw	0
  1189   00061A  6F84               	movwf	(ledRightOn@num+1)& (0+255),b
  1190   00061C  0E01               	movlw	1
  1191   00061E  6F83               	movwf	ledRightOn@num& (0+255),b
  1192   000620  EC76  F004         	call	_ledRightOn	;wreg free
  1193                           
  1194                           ;main.c: 79:                 break;
  1195   000624  EF05  F003         	goto	l1574
  1196   000628                     l1580:
  1197                           
  1198                           ; BSR set to: 0
  1199                           ;main.c: 81:                 ledRightOff(2);
  1200   000628  0E00               	movlw	0
  1201   00062A  6F84               	movwf	(ledRightOff@num+1)& (0+255),b
  1202   00062C  0E02               	movlw	2
  1203   00062E  6F83               	movwf	ledRightOff@num& (0+255),b
  1204   000630  EC83  F004         	call	_ledRightOff	;wreg free
  1205                           
  1206                           ;main.c: 82:                 break;
  1207   000634  EF05  F003         	goto	l1574
  1208   000638                     l1582:
  1209                           
  1210                           ; BSR set to: 0
  1211                           ;main.c: 84:                 ledLeftOn(3);
  1212   000638  0E00               	movlw	0
  1213   00063A  6F84               	movwf	(ledLeftOn@num+1)& (0+255),b
  1214   00063C  0E03               	movlw	3
  1215   00063E  6F83               	movwf	ledLeftOn@num& (0+255),b
  1216   000640  ECA5  F004         	call	_ledLeftOn	;wreg free
  1217                           
  1218                           ;main.c: 85:                 break;
  1219   000644  EF05  F003         	goto	l1574
  1220   000648                     l1584:
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;main.c: 87:                 displayBinary(4);
  1224   000648  0E00               	movlw	0
  1225   00064A  6F81               	movwf	(displayBinary@num+1)& (0+255),b
  1226   00064C  0E04               	movlw	4
  1227   00064E  6F80               	movwf	displayBinary@num& (0+255),b
  1228   000650  EC72  F003         	call	_displayBinary	;wreg free
  1229   000654                     
  1230                           ;main.c: 88:                 ledLeftOff(4);
  1231   000654  0E00               	movlw	0
  1232   000656  0100               	movlb	0	; () banked
  1233   000658  6F81               	movwf	(ledLeftOff@num+1)& (0+255),b
  1234   00065A  0E04               	movlw	4
  1235   00065C  6F80               	movwf	ledLeftOff@num& (0+255),b
  1236   00065E  ECC5  F004         	call	_ledLeftOff	;wreg free
  1237                           
  1238                           ;main.c: 89:                 break;
  1239   000662  EF05  F003         	goto	l1574
  1240   000666                     l1588:
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;main.c: 91:                 displayBinary(5);
  1244   000666  0E00               	movlw	0
  1245   000668  6F81               	movwf	(displayBinary@num+1)& (0+255),b
  1246   00066A  0E05               	movlw	5
  1247   00066C  6F80               	movwf	displayBinary@num& (0+255),b
  1248   00066E  EC72  F003         	call	_displayBinary	;wreg free
  1249   000672                     
  1250                           ;main.c: 92:                 LATAbits.LATA6 = 1;;
  1251   000672  8C89               	bsf	137,6,c	;volatile
  1252                           
  1253                           ;main.c: 93:                 break;
  1254   000674  EF05  F003         	goto	l1574
  1255   000678                     l1592:
  1256                           
  1257                           ; BSR set to: 0
  1258                           ;main.c: 95:                 displayBinary(6);
  1259   000678  0E00               	movlw	0
  1260   00067A  6F81               	movwf	(displayBinary@num+1)& (0+255),b
  1261   00067C  0E06               	movlw	6
  1262   00067E  6F80               	movwf	displayBinary@num& (0+255),b
  1263   000680  EC72  F003         	call	_displayBinary	;wreg free
  1264   000684                     
  1265                           ;main.c: 96:                 LATAbits.LATA6 = 0;;
  1266   000684  9C89               	bcf	137,6,c	;volatile
  1267                           
  1268                           ;main.c: 97:                 break;
  1269   000686  EF05  F003         	goto	l1574
  1270   00068A                     l1598:
  1271   00068A  C019  F085         	movff	_state,??_main
  1272   00068E  C01A  F086         	movff	_state+1,??_main+1
  1273                           
  1274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1275                           ; Switch size 1, requested type "simple"
  1276                           ; Number of cases is 1, Range of values is 0 to 0
  1277                           ; switch strategies available:
  1278                           ; Name         Instructions Cycles
  1279                           ; simple_byte            4     3 (average)
  1280                           ;	Chosen strategy is simple_byte
  1281   000692  0100               	movlb	0	; () banked
  1282   000694  5186               	movf	(??_main+1)& (0+255),w,b
  1283   000696  0A00               	xorlw	0	; case 0
  1284   000698  B4D8               	btfsc	status,2,c
  1285   00069A  EF51  F003         	goto	l1624
  1286   00069E  EF05  F003         	goto	l1574
  1287   0006A2                     l1624:
  1288                           
  1289                           ; BSR set to: 0
  1290                           ; Switch size 1, requested type "simple"
  1291                           ; Number of cases is 7, Range of values is 0 to 6
  1292                           ; switch strategies available:
  1293                           ; Name         Instructions Cycles
  1294                           ; simple_byte           22    12 (average)
  1295                           ;	Chosen strategy is simple_byte
  1296   0006A2  5185               	movf	??_main& (0+255),w,b
  1297   0006A4  0A00               	xorlw	0	; case 0
  1298   0006A6  B4D8               	btfsc	status,2,c
  1299   0006A8  EF08  F003         	goto	l1576
  1300   0006AC  0A01               	xorlw	1	; case 1
  1301   0006AE  B4D8               	btfsc	status,2,c
  1302   0006B0  EF0C  F003         	goto	l1578
  1303   0006B4  0A03               	xorlw	3	; case 2
  1304   0006B6  B4D8               	btfsc	status,2,c
  1305   0006B8  EF14  F003         	goto	l1580
  1306   0006BC  0A01               	xorlw	1	; case 3
  1307   0006BE  B4D8               	btfsc	status,2,c
  1308   0006C0  EF1C  F003         	goto	l1582
  1309   0006C4  0A07               	xorlw	7	; case 4
  1310   0006C6  B4D8               	btfsc	status,2,c
  1311   0006C8  EF24  F003         	goto	l1584
  1312   0006CC  0A01               	xorlw	1	; case 5
  1313   0006CE  B4D8               	btfsc	status,2,c
  1314   0006D0  EF33  F003         	goto	l1588
  1315   0006D4  0A03               	xorlw	3	; case 6
  1316   0006D6  B4D8               	btfsc	status,2,c
  1317   0006D8  EF3C  F003         	goto	l1592
  1318   0006DC  EF05  F003         	goto	l1574
  1319   0006E0  EF11  F002         	goto	start
  1320   0006E4                     __end_of_main:
  1321                           	callstack 0
  1322                           
  1323 ;; *************** function _ledRightOn *****************
  1324 ;; Defined at:
  1325 ;;		line 31 in file "main.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  num             2    3[BANK0 ] int 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, status,0, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1339 ;;      Params:         0       2       0       0       0       0       0
  1340 ;;      Locals:         0       0       0       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0       0       0
  1342 ;;      Totals:         0       2       0       0       0       0       0
  1343 ;;Total ram usage:        2 bytes
  1344 ;; Hardware stack levels used: 1
  1345 ;; Hardware stack levels required when called: 6
  1346 ;; This function calls:
  1347 ;;		_displayBinary
  1348 ;; This function is called by:
  1349 ;;		_main
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text1
  1354   0008EC                     __ptext1:
  1355                           	callstack 0
  1356   0008EC                     _ledRightOn:
  1357                           	callstack 24
  1358   0008EC                     
  1359                           ;main.c: 32:     displayBinary(num);
  1360   0008EC  C083  F080         	movff	ledRightOn@num,displayBinary@num
  1361   0008F0  C084  F081         	movff	ledRightOn@num+1,displayBinary@num+1
  1362   0008F4  EC72  F003         	call	_displayBinary	;wreg free
  1363   0008F8                     
  1364                           ;main.c: 33:     LATAbits.LATA7 = 1;
  1365   0008F8  8E89               	bsf	137,7,c	;volatile
  1366   0008FA                     
  1367                           ;main.c: 34:     LATAbits.LATA5 = 0;;
  1368   0008FA  9A89               	bcf	137,5,c	;volatile
  1369   0008FC                     
  1370                           ;main.c: 35:     dir = 1;
  1371   0008FC  0E00               	movlw	0
  1372   0008FE  6E18               	movwf	(_dir+1)^0,c
  1373   000900  0E01               	movlw	1
  1374   000902  6E17               	movwf	_dir^0,c
  1375   000904  0012               	return		;funcret
  1376   000906                     __end_of_ledRightOn:
  1377                           	callstack 0
  1378                           
  1379 ;; *************** function _ledRightOff *****************
  1380 ;; Defined at:
  1381 ;;		line 38 in file "main.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  num             2    3[BANK0 ] int 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1395 ;;      Params:         0       2       0       0       0       0       0
  1396 ;;      Locals:         0       0       0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0
  1398 ;;      Totals:         0       2       0       0       0       0       0
  1399 ;;Total ram usage:        2 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 6
  1402 ;; This function calls:
  1403 ;;		_displayBinary
  1404 ;; This function is called by:
  1405 ;;		_main
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text2
  1410   000906                     __ptext2:
  1411                           	callstack 0
  1412   000906                     _ledRightOff:
  1413                           	callstack 24
  1414   000906                     
  1415                           ;main.c: 39:     dir = 0;
  1416   000906  0E00               	movlw	0
  1417   000908  6E18               	movwf	(_dir+1)^0,c
  1418   00090A  0E00               	movlw	0
  1419   00090C  6E17               	movwf	_dir^0,c
  1420   00090E                     
  1421                           ;main.c: 40:     displayBinary(num);
  1422   00090E  C083  F080         	movff	ledRightOff@num,displayBinary@num
  1423   000912  C084  F081         	movff	ledRightOff@num+1,displayBinary@num+1
  1424   000916  EC72  F003         	call	_displayBinary	;wreg free
  1425   00091A                     
  1426                           ;main.c: 43:     LATAbits.LATA7 = 0;
  1427   00091A  9E89               	bcf	137,7,c	;volatile
  1428   00091C  0012               	return		;funcret
  1429   00091E                     __end_of_ledRightOff:
  1430                           	callstack 0
  1431                           
  1432 ;; *************** function _ledLeftOn *****************
  1433 ;; Defined at:
  1434 ;;		line 46 in file "main.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  num             2    3[BANK0 ] int 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;		None
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, status,2, status,0, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1448 ;;      Params:         0       2       0       0       0       0       0
  1449 ;;      Locals:         0       0       0       0       0       0       0
  1450 ;;      Temps:          0       0       0       0       0       0       0
  1451 ;;      Totals:         0       2       0       0       0       0       0
  1452 ;;Total ram usage:        2 bytes
  1453 ;; Hardware stack levels used: 1
  1454 ;; Hardware stack levels required when called: 6
  1455 ;; This function calls:
  1456 ;;		_displayBinary
  1457 ;; This function is called by:
  1458 ;;		_main
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text3
  1463   00094A                     __ptext3:
  1464                           	callstack 0
  1465   00094A                     _ledLeftOn:
  1466                           	callstack 24
  1467   00094A                     
  1468                           ;main.c: 47:     dir = -1;
  1469   00094A  6817               	setf	_dir^0,c
  1470   00094C  6818               	setf	(_dir+1)^0,c
  1471                           
  1472                           ;main.c: 49:     LATAbits.LATA5 = 1;
  1473   00094E  8A89               	bsf	137,5,c	;volatile
  1474   000950                     
  1475                           ;main.c: 50:     displayBinary(num);
  1476   000950  C083  F080         	movff	ledLeftOn@num,displayBinary@num
  1477   000954  C084  F081         	movff	ledLeftOn@num+1,displayBinary@num+1
  1478   000958  EC72  F003         	call	_displayBinary	;wreg free
  1479   00095C  0012               	return		;funcret
  1480   00095E                     __end_of_ledLeftOn:
  1481                           	callstack 0
  1482                           
  1483 ;; *************** function _displayBinary *****************
  1484 ;; Defined at:
  1485 ;;		line 20 in file "main.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  num             2    0[BANK0 ] int 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1499 ;;      Params:         0       2       0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0       0       0
  1501 ;;      Temps:          0       1       0       0       0       0       0
  1502 ;;      Totals:         0       3       0       0       0       0       0
  1503 ;;Total ram usage:        3 bytes
  1504 ;; Hardware stack levels used: 1
  1505 ;; Hardware stack levels required when called: 5
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_ledRightOn
  1510 ;;		_ledRightOff
  1511 ;;		_ledLeftOn
  1512 ;;		_main
  1513 ;;		_BrakeOn
  1514 ;;		_BrakeOff
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           	psect	text4
  1519   0006E4                     __ptext4:
  1520                           	callstack 0
  1521   0006E4                     _displayBinary:
  1522                           	callstack 24
  1523   0006E4                     
  1524                           ;main.c: 22:      LATAbits.LATA1 = (num & 0x01) ? 1 : 0;
  1525   0006E4  0100               	movlb	0	; () banked
  1526   0006E6  B180               	btfsc	displayBinary@num& (0+255),0,b
  1527   0006E8  EF78  F003         	goto	u981
  1528   0006EC  EF7C  F003         	goto	u980
  1529   0006F0                     u981:
  1530   0006F0  6B82               	clrf	??_displayBinary& (0+255),b
  1531   0006F2  2B82               	incf	??_displayBinary& (0+255),f,b
  1532   0006F4  EF7E  F003         	goto	u998
  1533   0006F8                     u980:
  1534   0006F8  0100               	movlb	0	; () banked
  1535   0006FA  6B82               	clrf	??_displayBinary& (0+255),b
  1536   0006FC                     u998:
  1537   0006FC  4782               	rlncf	??_displayBinary& (0+255),f,b
  1538   0006FE  5089               	movf	137,w,c	;volatile
  1539   000700  1982               	xorwf	??_displayBinary& (0+255),w,b
  1540   000702  0BFD               	andlw	-3
  1541   000704  1982               	xorwf	??_displayBinary& (0+255),w,b
  1542   000706  6E89               	movwf	137,c	;volatile
  1543                           
  1544                           ;main.c: 23:      LATAbits.LATA2 = (num & 0x02) ? 1 : 0;
  1545   000708  B380               	btfsc	displayBinary@num& (0+255),1,b
  1546   00070A  EF89  F003         	goto	u1001
  1547   00070E  EF8D  F003         	goto	u1000
  1548   000712                     u1001:
  1549   000712  6B82               	clrf	??_displayBinary& (0+255),b
  1550   000714  2B82               	incf	??_displayBinary& (0+255),f,b
  1551   000716  EF8F  F003         	goto	u1018
  1552   00071A                     u1000:
  1553   00071A  0100               	movlb	0	; () banked
  1554   00071C  6B82               	clrf	??_displayBinary& (0+255),b
  1555   00071E                     u1018:
  1556   00071E  4782               	rlncf	??_displayBinary& (0+255),f,b
  1557   000720  4782               	rlncf	??_displayBinary& (0+255),f,b
  1558   000722  5089               	movf	137,w,c	;volatile
  1559   000724  1982               	xorwf	??_displayBinary& (0+255),w,b
  1560   000726  0BFB               	andlw	-5
  1561   000728  1982               	xorwf	??_displayBinary& (0+255),w,b
  1562   00072A  6E89               	movwf	137,c	;volatile
  1563                           
  1564                           ;main.c: 24:      LATAbits.LATA3 = (num & 0x04) ? 1 : 0;
  1565   00072C  B580               	btfsc	displayBinary@num& (0+255),2,b
  1566   00072E  EF9B  F003         	goto	u1021
  1567   000732  EF9F  F003         	goto	u1020
  1568   000736                     u1021:
  1569   000736  6B82               	clrf	??_displayBinary& (0+255),b
  1570   000738  2B82               	incf	??_displayBinary& (0+255),f,b
  1571   00073A  EFA1  F003         	goto	u1038
  1572   00073E                     u1020:
  1573   00073E  0100               	movlb	0	; () banked
  1574   000740  6B82               	clrf	??_displayBinary& (0+255),b
  1575   000742                     u1038:
  1576   000742  4782               	rlncf	??_displayBinary& (0+255),f,b
  1577   000744  4782               	rlncf	??_displayBinary& (0+255),f,b
  1578   000746  4782               	rlncf	??_displayBinary& (0+255),f,b
  1579   000748  5089               	movf	137,w,c	;volatile
  1580   00074A  1982               	xorwf	??_displayBinary& (0+255),w,b
  1581   00074C  0BF7               	andlw	-9
  1582   00074E  1982               	xorwf	??_displayBinary& (0+255),w,b
  1583   000750  6E89               	movwf	137,c	;volatile
  1584                           
  1585                           ;main.c: 25:      LATAbits.LATA4 = (num & 0x08) ? 1 : 0;
  1586   000752  B780               	btfsc	displayBinary@num& (0+255),3,b
  1587   000754  EFAE  F003         	goto	u1041
  1588   000758  EFB2  F003         	goto	u1040
  1589   00075C                     u1041:
  1590   00075C  6B82               	clrf	??_displayBinary& (0+255),b
  1591   00075E  2B82               	incf	??_displayBinary& (0+255),f,b
  1592   000760  EFB4  F003         	goto	u1058
  1593   000764                     u1040:
  1594   000764  0100               	movlb	0	; () banked
  1595   000766  6B82               	clrf	??_displayBinary& (0+255),b
  1596   000768                     u1058:
  1597   000768  3B82               	swapf	??_displayBinary& (0+255),f,b
  1598   00076A  5089               	movf	137,w,c	;volatile
  1599   00076C  1982               	xorwf	??_displayBinary& (0+255),w,b
  1600   00076E  0BEF               	andlw	-17
  1601   000770  1982               	xorwf	??_displayBinary& (0+255),w,b
  1602   000772  6E89               	movwf	137,c	;volatile
  1603   000774                     
  1604                           ; BSR set to: 0
  1605   000774  0012               	return		;funcret
  1606   000776                     __end_of_displayBinary:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function _ledLeftOff *****************
  1610 ;; Defined at:
  1611 ;;		line 53 in file "main.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  num             2    0[BANK0 ] int 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		None
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1625 ;;      Params:         0       2       0       0       0       0       0
  1626 ;;      Locals:         0       0       0       0       0       0       0
  1627 ;;      Temps:          0       0       0       0       0       0       0
  1628 ;;      Totals:         0       2       0       0       0       0       0
  1629 ;;Total ram usage:        2 bytes
  1630 ;; Hardware stack levels used: 1
  1631 ;; Hardware stack levels required when called: 5
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_main
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text5
  1640   00098A                     __ptext5:
  1641                           	callstack 0
  1642   00098A                     _ledLeftOff:
  1643                           	callstack 25
  1644   00098A                     
  1645                           ;main.c: 54:     LATAbits.LATA5 = 0;
  1646   00098A  9A89               	bcf	137,5,c	;volatile
  1647   00098C  0012               	return		;funcret
  1648   00098E                     __end_of_ledLeftOff:
  1649                           	callstack 0
  1650                           
  1651 ;; *************** function _initialState *****************
  1652 ;; Defined at:
  1653 ;;		line 28 in file "main.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;		None
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		None
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1667 ;;      Params:         0       0       0       0       0       0       0
  1668 ;;      Locals:         0       0       0       0       0       0       0
  1669 ;;      Temps:          0       0       0       0       0       0       0
  1670 ;;      Totals:         0       0       0       0       0       0       0
  1671 ;;Total ram usage:        0 bytes
  1672 ;; Hardware stack levels used: 1
  1673 ;; Hardware stack levels required when called: 5
  1674 ;; This function calls:
  1675 ;;		Nothing
  1676 ;; This function is called by:
  1677 ;;		_main
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text6
  1682   000992                     __ptext6:
  1683                           	callstack 0
  1684   000992                     _initialState:
  1685                           	callstack 25
  1686   000992  0012               	return		;funcret
  1687   000994                     __end_of_initialState:
  1688                           	callstack 0
  1689                           
  1690 ;; *************** function _SYSTEM_Initialize *****************
  1691 ;; Defined at:
  1692 ;;		line 60 in file "setting_hardaware/setting.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      void 
  1699 ;; Registers used:
  1700 ;;		wreg, status,2, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1706 ;;      Params:         0       0       0       0       0       0       0
  1707 ;;      Locals:         0       0       0       0       0       0       0
  1708 ;;      Temps:          0       0       0       0       0       0       0
  1709 ;;      Totals:         0       0       0       0       0       0       0
  1710 ;;Total ram usage:        0 bytes
  1711 ;; Hardware stack levels used: 1
  1712 ;; Hardware stack levels required when called: 6
  1713 ;; This function calls:
  1714 ;;		_INTERRUPT_Initialize
  1715 ;;		_OSCILLATOR_Initialize
  1716 ;;		_TMR2_Initialize
  1717 ;;		_UART_Initialize
  1718 ;; This function is called by:
  1719 ;;		_main
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text7
  1724   00095E                     __ptext7:
  1725                           	callstack 0
  1726   00095E                     _SYSTEM_Initialize:
  1727                           	callstack 24
  1728   00095E                     
  1729                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
  1730   00095E  ECBE  F004         	call	_OSCILLATOR_Initialize	;wreg free
  1731                           
  1732                           ;setting_hardaware/setting.c: 64:     TMR2_Initialize();
  1733   000962  ECB8  F004         	call	_TMR2_Initialize	;wreg free
  1734   000966                     
  1735                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  1736   000966  EC8F  F004         	call	_INTERRUPT_Initialize	;wreg free
  1737   00096A                     
  1738                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
  1739   00096A  EC58  F004         	call	_UART_Initialize	;wreg free
  1740   00096E  0012               	return		;funcret
  1741   000970                     __end_of_SYSTEM_Initialize:
  1742                           	callstack 0
  1743                           
  1744 ;; *************** function _UART_Initialize *****************
  1745 ;; Defined at:
  1746 ;;		line 10 in file "setting_hardaware/uart.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1760 ;;      Params:         0       0       0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0
  1763 ;;      Totals:         0       0       0       0       0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; Hardware stack levels required when called: 5
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_SYSTEM_Initialize
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text8
  1775   0008B0                     __ptext8:
  1776                           	callstack 0
  1777   0008B0                     _UART_Initialize:
  1778                           	callstack 24
  1779   0008B0                     
  1780                           ;setting_hardaware/uart.c: 21:     TRISCbits.TRISC6 = 1;
  1781   0008B0  8C94               	bsf	148,6,c	;volatile
  1782                           
  1783                           ;setting_hardaware/uart.c: 22:     TRISCbits.TRISC7 = 1;
  1784   0008B2  8E94               	bsf	148,7,c	;volatile
  1785                           
  1786                           ;setting_hardaware/uart.c: 25:     TXSTAbits.SYNC = 0;
  1787   0008B4  98AC               	bcf	172,4,c	;volatile
  1788                           
  1789                           ;setting_hardaware/uart.c: 26:     BAUDCONbits.BRG16 = 0;
  1790   0008B6  96B8               	bcf	184,3,c	;volatile
  1791                           
  1792                           ;setting_hardaware/uart.c: 27:     TXSTAbits.BRGH = 1;
  1793   0008B8  84AC               	bsf	172,2,c	;volatile
  1794   0008BA                     
  1795                           ;setting_hardaware/uart.c: 28:     SPBRG = 25;
  1796   0008BA  0E19               	movlw	25
  1797   0008BC  6EAF               	movwf	175,c	;volatile
  1798   0008BE                     
  1799                           ;setting_hardaware/uart.c: 31:     RCSTAbits.SPEN = 1;
  1800   0008BE  8EAB               	bsf	171,7,c	;volatile
  1801   0008C0                     
  1802                           ;setting_hardaware/uart.c: 32:     PIR1bits.TXIF = 0;
  1803   0008C0  989E               	bcf	158,4,c	;volatile
  1804   0008C2                     
  1805                           ;setting_hardaware/uart.c: 33:     PIR1bits.RCIF = 1;
  1806   0008C2  8A9E               	bsf	158,5,c	;volatile
  1807   0008C4                     
  1808                           ;setting_hardaware/uart.c: 34:     TXSTAbits.TXEN = 1;
  1809   0008C4  8AAC               	bsf	172,5,c	;volatile
  1810   0008C6                     
  1811                           ;setting_hardaware/uart.c: 35:     RCSTAbits.CREN = 1;
  1812   0008C6  88AB               	bsf	171,4,c	;volatile
  1813   0008C8                     
  1814                           ;setting_hardaware/uart.c: 36:     PIE1bits.TXIE = 0;
  1815   0008C8  989D               	bcf	157,4,c	;volatile
  1816   0008CA                     
  1817                           ;setting_hardaware/uart.c: 37:     IPR1bits.TXIP = 0;
  1818   0008CA  989F               	bcf	159,4,c	;volatile
  1819   0008CC                     
  1820                           ;setting_hardaware/uart.c: 38:     PIE1bits.RCIE = 1;
  1821   0008CC  8A9D               	bsf	157,5,c	;volatile
  1822   0008CE                     
  1823                           ;setting_hardaware/uart.c: 39:     IPR1bits.RCIP = 0;
  1824   0008CE  9A9F               	bcf	159,5,c	;volatile
  1825   0008D0  0012               	return		;funcret
  1826   0008D2                     __end_of_UART_Initialize:
  1827                           	callstack 0
  1828                           
  1829 ;; *************** function _TMR2_Initialize *****************
  1830 ;; Defined at:
  1831 ;;		line 82 in file "setting_hardaware/setting.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;		None
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;		None
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      void 
  1838 ;; Registers used:
  1839 ;;		None
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1845 ;;      Params:         0       0       0       0       0       0       0
  1846 ;;      Locals:         0       0       0       0       0       0       0
  1847 ;;      Temps:          0       0       0       0       0       0       0
  1848 ;;      Totals:         0       0       0       0       0       0       0
  1849 ;;Total ram usage:        0 bytes
  1850 ;; Hardware stack levels used: 1
  1851 ;; Hardware stack levels required when called: 5
  1852 ;; This function calls:
  1853 ;;		Nothing
  1854 ;; This function is called by:
  1855 ;;		_SYSTEM_Initialize
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text9
  1860   000970                     __ptext9:
  1861                           	callstack 0
  1862   000970                     _TMR2_Initialize:
  1863                           	callstack 24
  1864   000970                     
  1865                           ;setting_hardaware/setting.c: 83:     PIR1bits.TMR2IF = 0;
  1866   000970  929E               	bcf	158,1,c	;volatile
  1867                           
  1868                           ;setting_hardaware/setting.c: 84:     IPR1bits.TMR2IP = 0;
  1869   000972  929F               	bcf	159,1,c	;volatile
  1870                           
  1871                           ;setting_hardaware/setting.c: 85:     PIE1bits.TMR2IE = 1;
  1872   000974  829D               	bsf	157,1,c	;volatile
  1873                           
  1874                           ;setting_hardaware/setting.c: 86:     T2CON = 255;
  1875   000976  68CA               	setf	202,c	;volatile
  1876                           
  1877                           ;setting_hardaware/setting.c: 87:     PR2 = 255;
  1878   000978  68CB               	setf	203,c	;volatile
  1879   00097A  0012               	return		;funcret
  1880   00097C                     __end_of_TMR2_Initialize:
  1881                           	callstack 0
  1882                           
  1883 ;; *************** function _OSCILLATOR_Initialize *****************
  1884 ;; Defined at:
  1885 ;;		line 73 in file "setting_hardaware/setting.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		None
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1899 ;;      Params:         0       0       0       0       0       0       0
  1900 ;;      Locals:         0       0       0       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0
  1902 ;;      Totals:         0       0       0       0       0       0       0
  1903 ;;Total ram usage:        0 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; Hardware stack levels required when called: 5
  1906 ;; This function calls:
  1907 ;;		Nothing
  1908 ;; This function is called by:
  1909 ;;		_SYSTEM_Initialize
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text10
  1914   00097C                     __ptext10:
  1915                           	callstack 0
  1916   00097C                     _OSCILLATOR_Initialize:
  1917                           	callstack 24
  1918   00097C                     
  1919                           ;setting_hardaware/setting.c: 75:     IRCF2 = 1;
  1920   00097C  8CD3               	bsf	4051,6,c	;volatile
  1921                           
  1922                           ;setting_hardaware/setting.c: 76:     IRCF1 = 1;
  1923   00097E  8AD3               	bsf	4051,5,c	;volatile
  1924                           
  1925                           ;setting_hardaware/setting.c: 77:     IRCF0 = 0;
  1926   000980  98D3               	bcf	4051,4,c	;volatile
  1927   000982  0012               	return		;funcret
  1928   000984                     __end_of_OSCILLATOR_Initialize:
  1929                           	callstack 0
  1930                           
  1931 ;; *************** function _INTERRUPT_Initialize *****************
  1932 ;; Defined at:
  1933 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;		None
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;		None
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		wreg, status,2
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1947 ;;      Params:         0       0       0       0       0       0       0
  1948 ;;      Locals:         0       0       0       0       0       0       0
  1949 ;;      Temps:          0       0       0       0       0       0       0
  1950 ;;      Totals:         0       0       0       0       0       0       0
  1951 ;;Total ram usage:        0 bytes
  1952 ;; Hardware stack levels used: 1
  1953 ;; Hardware stack levels required when called: 5
  1954 ;; This function calls:
  1955 ;;		Nothing
  1956 ;; This function is called by:
  1957 ;;		_SYSTEM_Initialize
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text11
  1962   00091E                     __ptext11:
  1963                           	callstack 0
  1964   00091E                     _INTERRUPT_Initialize:
  1965                           	callstack 24
  1966   00091E                     
  1967                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
  1968   00091E  8ED0               	bsf	208,7,c	;volatile
  1969                           
  1970                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
  1971   000920  8EF2               	bsf	242,7,c	;volatile
  1972                           
  1973                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
  1974   000922  8CF2               	bsf	242,6,c	;volatile
  1975   000924                     
  1976                           ;setting_hardaware/interrupt_manager.c: 10:     ADCON1 = 0x0f;
  1977   000924  0E0F               	movlw	15
  1978   000926  6EC1               	movwf	193,c	;volatile
  1979   000928                     
  1980                           ;setting_hardaware/interrupt_manager.c: 11:     LATA = 0x00;
  1981   000928  6A89               	clrf	137,c	;volatile
  1982   00092A                     
  1983                           ;setting_hardaware/interrupt_manager.c: 12:     TRISAbits.TRISA2 = 0;
  1984   00092A  9492               	bcf	146,2,c	;volatile
  1985   00092C                     
  1986                           ;setting_hardaware/interrupt_manager.c: 13:     TRISAbits.TRISA5 = 0;
  1987   00092C  9A92               	bcf	146,5,c	;volatile
  1988   00092E                     
  1989                           ;setting_hardaware/interrupt_manager.c: 14:     TRISAbits.TRISA6 = 0;
  1990   00092E  9C92               	bcf	146,6,c	;volatile
  1991   000930                     
  1992                           ;setting_hardaware/interrupt_manager.c: 15:     TRISAbits.TRISA7 = 0;
  1993   000930  9E92               	bcf	146,7,c	;volatile
  1994   000932  0012               	return		;funcret
  1995   000934                     __end_of_INTERRUPT_Initialize:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _Lo_ISR *****************
  1999 ;; Defined at:
  2000 ;;		line 111 in file "main.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;  command        20   21[COMRAM] unsigned char [20]
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2014 ;;      Params:         0       0       0       0       0       0       0
  2015 ;;      Locals:        20       0       0       0       0       0       0
  2016 ;;      Temps:         13       0       0       0       0       0       0
  2017 ;;      Totals:        33       0       0       0       0       0       0
  2018 ;;Total ram usage:       33 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; Hardware stack levels required when called: 4
  2021 ;; This function calls:
  2022 ;;		_ClearBuffer
  2023 ;;		_GetString
  2024 ;;		_MyusartRead
  2025 ;;		_strcpy
  2026 ;;		_strlen
  2027 ;; This function is called by:
  2028 ;;		Interrupt level 1
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	intcodelo
  2033   000018                     __pintcodelo:
  2034                           	callstack 0
  2035   000018                     _Lo_ISR:
  2036                           	callstack 24
  2037                           
  2038                           ;incstack = 0
  2039   000018  805A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2040   00001A  CFD8 F03B          	movff	status,??_Lo_ISR+2
  2041   00001E  CFE8 F03C          	movff	wreg,??_Lo_ISR+3
  2042   000022  CFE0 F03D          	movff	bsr,??_Lo_ISR+4
  2043   000026  CFE1 F03E          	movff	fsr1l,??_Lo_ISR+5
  2044   00002A  CFE2 F03F          	movff	fsr1h,??_Lo_ISR+6
  2045   00002E  CFD9 F040          	movff	fsr2l,??_Lo_ISR+7
  2046   000032  CFDA F041          	movff	fsr2h,??_Lo_ISR+8
  2047   000036  CFF6 F042          	movff	tblptrl,??_Lo_ISR+9
  2048   00003A  CFF7 F043          	movff	tblptrh,??_Lo_ISR+10
  2049   00003E  CFF8 F044          	movff	tblptru,??_Lo_ISR+11
  2050   000042  CFF5 F045          	movff	tablat,??_Lo_ISR+12
  2051   000046                     
  2052                           ;main.c: 113:     if(RCIF)
  2053   000046  AA9E               	btfss	3998,5,c	;volatile
  2054   000048  EF28  F000         	goto	i1u64_21
  2055   00004C  EF2A  F000         	goto	i1u64_20
  2056   000050                     i1u64_21:
  2057   000050  EFA7  F001         	goto	i1l217
  2058   000054                     i1u64_20:
  2059   000054                     
  2060                           ;main.c: 114:     {;main.c: 115:         if(RCSTAbits.OERR)
  2061   000054  A2AB               	btfss	171,1,c	;volatile
  2062   000056  EF2F  F000         	goto	i1u65_21
  2063   00005A  EF31  F000         	goto	i1u65_20
  2064   00005E                     i1u65_21:
  2065   00005E  EF34  F000         	goto	i1l218
  2066   000062                     i1u65_20:
  2067   000062                     
  2068                           ;main.c: 116:         {;main.c: 117:             CREN = 0;
  2069   000062  98AB               	bcf	4011,4,c	;volatile
  2070                           
  2071                           ;main.c: 118:             __nop();
  2072   000064  0000               	nop	
  2073                           
  2074                           ;main.c: 119:             CREN = 1;
  2075   000066  88AB               	bsf	4011,4,c	;volatile
  2076   000068                     i1l218:
  2077                           
  2078                           ;main.c: 122:         LATAbits.LATA2 = 1;
  2079   000068  8489               	bsf	137,2,c	;volatile
  2080   00006A                     
  2081                           ;main.c: 123:         MyusartRead();
  2082   00006A  EC24  F004         	call	_MyusartRead	;wreg free
  2083   00006E                     
  2084                           ;main.c: 124:         char command[20];;main.c: 125:         if(RCREG == '\r' || RCREG =
      +                          = '\n'){
  2085   00006E  0E0D               	movlw	13
  2086   000070  18AE               	xorwf	174,w,c	;volatile
  2087   000072  B4D8               	btfsc	status,2,c
  2088   000074  EF3E  F000         	goto	i1u66_21
  2089   000078  EF40  F000         	goto	i1u66_20
  2090   00007C                     i1u66_21:
  2091   00007C  EF49  F000         	goto	i1l1374
  2092   000080                     i1u66_20:
  2093   000080  0E0A               	movlw	10
  2094   000082  18AE               	xorwf	174,w,c	;volatile
  2095   000084  A4D8               	btfss	status,2,c
  2096   000086  EF47  F000         	goto	i1u67_21
  2097   00008A  EF49  F000         	goto	i1u67_20
  2098   00008E                     i1u67_21:
  2099   00008E  EF55  F000         	goto	i1l1378
  2100   000092                     i1u67_20:
  2101   000092                     i1l1374:
  2102                           
  2103                           ;main.c: 126:             strcpy(command, GetString());
  2104   000092  0E46               	movlw	low Lo_ISR@command
  2105   000094  6E33               	movwf	strcpy@dest^0,c
  2106   000096  ECC7  F004         	call	_GetString	;wreg free
  2107   00009A  6E39               	movwf	??_Lo_ISR^0,c
  2108   00009C  C039  F034         	movff	??_Lo_ISR,strcpy@src
  2109   0000A0  6A35               	clrf	(strcpy@src+1)^0,c
  2110   0000A2  ECBB  F003         	call	_strcpy	;wreg free
  2111   0000A6                     
  2112                           ;main.c: 127:             ClearBuffer();
  2113   0000A6  EC06  F004         	call	_ClearBuffer	;wreg free
  2114   0000AA                     i1l1378:
  2115                           
  2116                           ;main.c: 129:         if(command[0] == 'L' && command[1] == 'R' && command[2] == 'N' && 
      +                          strlen(command) == 3){
  2117   0000AA  0E4C               	movlw	76
  2118   0000AC  1846               	xorwf	Lo_ISR@command^0,w,c
  2119   0000AE  A4D8               	btfss	status,2,c
  2120   0000B0  EF5C  F000         	goto	i1u68_21
  2121   0000B4  EF5E  F000         	goto	i1u68_20
  2122   0000B8                     i1u68_21:
  2123   0000B8  EF90  F000         	goto	i1l1396
  2124   0000BC                     i1u68_20:
  2125   0000BC  0E52               	movlw	82
  2126   0000BE  1847               	xorwf	(Lo_ISR@command+1)^0,w,c
  2127   0000C0  A4D8               	btfss	status,2,c
  2128   0000C2  EF65  F000         	goto	i1u69_21
  2129   0000C6  EF67  F000         	goto	i1u69_20
  2130   0000CA                     i1u69_21:
  2131   0000CA  EF90  F000         	goto	i1l1396
  2132   0000CE                     i1u69_20:
  2133   0000CE  0E4E               	movlw	78
  2134   0000D0  1848               	xorwf	(Lo_ISR@command+2)^0,w,c
  2135   0000D2  A4D8               	btfss	status,2,c
  2136   0000D4  EF6E  F000         	goto	i1u70_21
  2137   0000D8  EF70  F000         	goto	i1u70_20
  2138   0000DC                     i1u70_21:
  2139   0000DC  EF90  F000         	goto	i1l1396
  2140   0000E0                     i1u70_20:
  2141   0000E0  0E46               	movlw	low Lo_ISR@command
  2142   0000E2  6E31               	movwf	strlen@s^0,c
  2143   0000E4  EC41  F004         	call	_strlen	;wreg free
  2144   0000E8  0E03               	movlw	3
  2145   0000EA  1831               	xorwf	?_strlen^0,w,c
  2146   0000EC  1032               	iorwf	(?_strlen+1)^0,w,c
  2147   0000EE  A4D8               	btfss	status,2,c
  2148   0000F0  EF7C  F000         	goto	i1u71_21
  2149   0000F4  EF7E  F000         	goto	i1u71_20
  2150   0000F8                     i1u71_21:
  2151   0000F8  EF90  F000         	goto	i1l1396
  2152   0000FC                     i1u71_20:
  2153   0000FC                     
  2154                           ;main.c: 130:             state = 1;
  2155   0000FC  0E00               	movlw	0
  2156   0000FE  6E1A               	movwf	(_state+1)^0,c
  2157   000100  0E01               	movlw	1
  2158   000102  6E19               	movwf	_state^0,c
  2159   000104                     
  2160                           ;main.c: 131:             ClearBuffer();
  2161   000104  EC06  F004         	call	_ClearBuffer	;wreg free
  2162   000108                     
  2163                           ;main.c: 132:             strcpy(command, "");
  2164   000108  0E46               	movlw	low Lo_ISR@command
  2165   00010A  6E33               	movwf	strcpy@dest^0,c
  2166   00010C  0E03               	movlw	low (STR_1+2)
  2167   00010E  6E34               	movwf	strcpy@src^0,c
  2168   000110  5034               	movf	strcpy@src^0,w,c
  2169   000112  A4D8               	btfss	status,2,c
  2170   000114  0E06               	movlw	high __smallconst
  2171   000116  6E35               	movwf	(strcpy@src+1)^0,c
  2172   000118  ECBB  F003         	call	_strcpy	;wreg free
  2173   00011C  EFF9  F001         	goto	i1l223
  2174   000120                     i1l1396:
  2175   000120  0E4C               	movlw	76
  2176   000122  1846               	xorwf	Lo_ISR@command^0,w,c
  2177   000124  A4D8               	btfss	status,2,c
  2178   000126  EF97  F000         	goto	i1u72_21
  2179   00012A  EF99  F000         	goto	i1u72_20
  2180   00012E                     i1u72_21:
  2181   00012E  EFCB  F000         	goto	i1l1414
  2182   000132                     i1u72_20:
  2183   000132  0E52               	movlw	82
  2184   000134  1847               	xorwf	(Lo_ISR@command+1)^0,w,c
  2185   000136  A4D8               	btfss	status,2,c
  2186   000138  EFA0  F000         	goto	i1u73_21
  2187   00013C  EFA2  F000         	goto	i1u73_20
  2188   000140                     i1u73_21:
  2189   000140  EFCB  F000         	goto	i1l1414
  2190   000144                     i1u73_20:
  2191   000144  0E46               	movlw	70
  2192   000146  1848               	xorwf	(Lo_ISR@command+2)^0,w,c
  2193   000148  A4D8               	btfss	status,2,c
  2194   00014A  EFA9  F000         	goto	i1u74_21
  2195   00014E  EFAB  F000         	goto	i1u74_20
  2196   000152                     i1u74_21:
  2197   000152  EFCB  F000         	goto	i1l1414
  2198   000156                     i1u74_20:
  2199   000156  0E46               	movlw	low Lo_ISR@command
  2200   000158  6E31               	movwf	strlen@s^0,c
  2201   00015A  EC41  F004         	call	_strlen	;wreg free
  2202   00015E  0E03               	movlw	3
  2203   000160  1831               	xorwf	?_strlen^0,w,c
  2204   000162  1032               	iorwf	(?_strlen+1)^0,w,c
  2205   000164  A4D8               	btfss	status,2,c
  2206   000166  EFB7  F000         	goto	i1u75_21
  2207   00016A  EFB9  F000         	goto	i1u75_20
  2208   00016E                     i1u75_21:
  2209   00016E  EFCB  F000         	goto	i1l1414
  2210   000172                     i1u75_20:
  2211   000172                     
  2212                           ;main.c: 136:             state = 2;
  2213   000172  0E00               	movlw	0
  2214   000174  6E1A               	movwf	(_state+1)^0,c
  2215   000176  0E02               	movlw	2
  2216   000178  6E19               	movwf	_state^0,c
  2217   00017A                     
  2218                           ;main.c: 137:             ClearBuffer();
  2219   00017A  EC06  F004         	call	_ClearBuffer	;wreg free
  2220   00017E                     
  2221                           ;main.c: 138:             strcpy(command, "");
  2222   00017E  0E46               	movlw	low Lo_ISR@command
  2223   000180  6E33               	movwf	strcpy@dest^0,c
  2224   000182  0E03               	movlw	low (STR_1+2)
  2225   000184  6E34               	movwf	strcpy@src^0,c
  2226   000186  5034               	movf	strcpy@src^0,w,c
  2227   000188  A4D8               	btfss	status,2,c
  2228   00018A  0E06               	movlw	high __smallconst
  2229   00018C  6E35               	movwf	(strcpy@src+1)^0,c
  2230   00018E  ECBB  F003         	call	_strcpy	;wreg free
  2231   000192  EFF9  F001         	goto	i1l223
  2232   000196                     i1l1414:
  2233   000196  0E4C               	movlw	76
  2234   000198  1846               	xorwf	Lo_ISR@command^0,w,c
  2235   00019A  A4D8               	btfss	status,2,c
  2236   00019C  EFD2  F000         	goto	i1u76_21
  2237   0001A0  EFD4  F000         	goto	i1u76_20
  2238   0001A4                     i1u76_21:
  2239   0001A4  EF06  F001         	goto	i1l1432
  2240   0001A8                     i1u76_20:
  2241   0001A8  0E4C               	movlw	76
  2242   0001AA  1847               	xorwf	(Lo_ISR@command+1)^0,w,c
  2243   0001AC  A4D8               	btfss	status,2,c
  2244   0001AE  EFDB  F000         	goto	i1u77_21
  2245   0001B2  EFDD  F000         	goto	i1u77_20
  2246   0001B6                     i1u77_21:
  2247   0001B6  EF06  F001         	goto	i1l1432
  2248   0001BA                     i1u77_20:
  2249   0001BA  0E4E               	movlw	78
  2250   0001BC  1848               	xorwf	(Lo_ISR@command+2)^0,w,c
  2251   0001BE  A4D8               	btfss	status,2,c
  2252   0001C0  EFE4  F000         	goto	i1u78_21
  2253   0001C4  EFE6  F000         	goto	i1u78_20
  2254   0001C8                     i1u78_21:
  2255   0001C8  EF06  F001         	goto	i1l1432
  2256   0001CC                     i1u78_20:
  2257   0001CC  0E46               	movlw	low Lo_ISR@command
  2258   0001CE  6E31               	movwf	strlen@s^0,c
  2259   0001D0  EC41  F004         	call	_strlen	;wreg free
  2260   0001D4  0E03               	movlw	3
  2261   0001D6  1831               	xorwf	?_strlen^0,w,c
  2262   0001D8  1032               	iorwf	(?_strlen+1)^0,w,c
  2263   0001DA  A4D8               	btfss	status,2,c
  2264   0001DC  EFF2  F000         	goto	i1u79_21
  2265   0001E0  EFF4  F000         	goto	i1u79_20
  2266   0001E4                     i1u79_21:
  2267   0001E4  EF06  F001         	goto	i1l1432
  2268   0001E8                     i1u79_20:
  2269   0001E8                     
  2270                           ;main.c: 142:             state = 3;
  2271   0001E8  0E00               	movlw	0
  2272   0001EA  6E1A               	movwf	(_state+1)^0,c
  2273   0001EC  0E03               	movlw	3
  2274   0001EE  6E19               	movwf	_state^0,c
  2275   0001F0                     
  2276                           ;main.c: 143:             ClearBuffer();
  2277   0001F0  EC06  F004         	call	_ClearBuffer	;wreg free
  2278   0001F4                     
  2279                           ;main.c: 144:             strcpy(command, "");
  2280   0001F4  0E46               	movlw	low Lo_ISR@command
  2281   0001F6  6E33               	movwf	strcpy@dest^0,c
  2282   0001F8  0E03               	movlw	low (STR_1+2)
  2283   0001FA  6E34               	movwf	strcpy@src^0,c
  2284   0001FC  5034               	movf	strcpy@src^0,w,c
  2285   0001FE  A4D8               	btfss	status,2,c
  2286   000200  0E06               	movlw	high __smallconst
  2287   000202  6E35               	movwf	(strcpy@src+1)^0,c
  2288   000204  ECBB  F003         	call	_strcpy	;wreg free
  2289   000208  EFF9  F001         	goto	i1l223
  2290   00020C                     i1l1432:
  2291   00020C  0E4C               	movlw	76
  2292   00020E  1846               	xorwf	Lo_ISR@command^0,w,c
  2293   000210  A4D8               	btfss	status,2,c
  2294   000212  EF0D  F001         	goto	i1u80_21
  2295   000216  EF0F  F001         	goto	i1u80_20
  2296   00021A                     i1u80_21:
  2297   00021A  EF41  F001         	goto	i1l1450
  2298   00021E                     i1u80_20:
  2299   00021E  0E4C               	movlw	76
  2300   000220  1847               	xorwf	(Lo_ISR@command+1)^0,w,c
  2301   000222  A4D8               	btfss	status,2,c
  2302   000224  EF16  F001         	goto	i1u81_21
  2303   000228  EF18  F001         	goto	i1u81_20
  2304   00022C                     i1u81_21:
  2305   00022C  EF41  F001         	goto	i1l1450
  2306   000230                     i1u81_20:
  2307   000230  0E46               	movlw	70
  2308   000232  1848               	xorwf	(Lo_ISR@command+2)^0,w,c
  2309   000234  A4D8               	btfss	status,2,c
  2310   000236  EF1F  F001         	goto	i1u82_21
  2311   00023A  EF21  F001         	goto	i1u82_20
  2312   00023E                     i1u82_21:
  2313   00023E  EF41  F001         	goto	i1l1450
  2314   000242                     i1u82_20:
  2315   000242  0E46               	movlw	low Lo_ISR@command
  2316   000244  6E31               	movwf	strlen@s^0,c
  2317   000246  EC41  F004         	call	_strlen	;wreg free
  2318   00024A  0E03               	movlw	3
  2319   00024C  1831               	xorwf	?_strlen^0,w,c
  2320   00024E  1032               	iorwf	(?_strlen+1)^0,w,c
  2321   000250  A4D8               	btfss	status,2,c
  2322   000252  EF2D  F001         	goto	i1u83_21
  2323   000256  EF2F  F001         	goto	i1u83_20
  2324   00025A                     i1u83_21:
  2325   00025A  EF41  F001         	goto	i1l1450
  2326   00025E                     i1u83_20:
  2327   00025E                     
  2328                           ;main.c: 148:             state = 4;
  2329   00025E  0E00               	movlw	0
  2330   000260  6E1A               	movwf	(_state+1)^0,c
  2331   000262  0E04               	movlw	4
  2332   000264  6E19               	movwf	_state^0,c
  2333   000266                     
  2334                           ;main.c: 149:             ClearBuffer();
  2335   000266  EC06  F004         	call	_ClearBuffer	;wreg free
  2336   00026A                     
  2337                           ;main.c: 150:             strcpy(command, "");
  2338   00026A  0E46               	movlw	low Lo_ISR@command
  2339   00026C  6E33               	movwf	strcpy@dest^0,c
  2340   00026E  0E03               	movlw	low (STR_1+2)
  2341   000270  6E34               	movwf	strcpy@src^0,c
  2342   000272  5034               	movf	strcpy@src^0,w,c
  2343   000274  A4D8               	btfss	status,2,c
  2344   000276  0E06               	movlw	high __smallconst
  2345   000278  6E35               	movwf	(strcpy@src+1)^0,c
  2346   00027A  ECBB  F003         	call	_strcpy	;wreg free
  2347   00027E  EFF9  F001         	goto	i1l223
  2348   000282                     i1l1450:
  2349   000282  0E42               	movlw	66
  2350   000284  1846               	xorwf	Lo_ISR@command^0,w,c
  2351   000286  A4D8               	btfss	status,2,c
  2352   000288  EF48  F001         	goto	i1u84_21
  2353   00028C  EF4A  F001         	goto	i1u84_20
  2354   000290                     i1u84_21:
  2355   000290  EF73  F001         	goto	i1l1466
  2356   000294                     i1u84_20:
  2357   000294  0E4E               	movlw	78
  2358   000296  1847               	xorwf	(Lo_ISR@command+1)^0,w,c
  2359   000298  A4D8               	btfss	status,2,c
  2360   00029A  EF51  F001         	goto	i1u85_21
  2361   00029E  EF53  F001         	goto	i1u85_20
  2362   0002A2                     i1u85_21:
  2363   0002A2  EF73  F001         	goto	i1l1466
  2364   0002A6                     i1u85_20:
  2365   0002A6  0E46               	movlw	low Lo_ISR@command
  2366   0002A8  6E31               	movwf	strlen@s^0,c
  2367   0002AA  EC41  F004         	call	_strlen	;wreg free
  2368   0002AE  0E02               	movlw	2
  2369   0002B0  1831               	xorwf	?_strlen^0,w,c
  2370   0002B2  1032               	iorwf	(?_strlen+1)^0,w,c
  2371   0002B4  A4D8               	btfss	status,2,c
  2372   0002B6  EF5F  F001         	goto	i1u86_21
  2373   0002BA  EF61  F001         	goto	i1u86_20
  2374   0002BE                     i1u86_21:
  2375   0002BE  EF73  F001         	goto	i1l1466
  2376   0002C2                     i1u86_20:
  2377   0002C2                     
  2378                           ;main.c: 154:             state = 5;
  2379   0002C2  0E00               	movlw	0
  2380   0002C4  6E1A               	movwf	(_state+1)^0,c
  2381   0002C6  0E05               	movlw	5
  2382   0002C8  6E19               	movwf	_state^0,c
  2383   0002CA                     
  2384                           ;main.c: 155:             ClearBuffer();
  2385   0002CA  EC06  F004         	call	_ClearBuffer	;wreg free
  2386   0002CE                     
  2387                           ;main.c: 156:             strcpy(command, "");
  2388   0002CE  0E46               	movlw	low Lo_ISR@command
  2389   0002D0  6E33               	movwf	strcpy@dest^0,c
  2390   0002D2  0E03               	movlw	low (STR_1+2)
  2391   0002D4  6E34               	movwf	strcpy@src^0,c
  2392   0002D6  5034               	movf	strcpy@src^0,w,c
  2393   0002D8  A4D8               	btfss	status,2,c
  2394   0002DA  0E06               	movlw	high __smallconst
  2395   0002DC  6E35               	movwf	(strcpy@src+1)^0,c
  2396   0002DE  ECBB  F003         	call	_strcpy	;wreg free
  2397   0002E2  EFF9  F001         	goto	i1l223
  2398   0002E6                     i1l1466:
  2399   0002E6  0E42               	movlw	66
  2400   0002E8  1846               	xorwf	Lo_ISR@command^0,w,c
  2401   0002EA  A4D8               	btfss	status,2,c
  2402   0002EC  EF7A  F001         	goto	i1u87_21
  2403   0002F0  EF7C  F001         	goto	i1u87_20
  2404   0002F4                     i1u87_21:
  2405   0002F4  EFA5  F001         	goto	i1l228
  2406   0002F8                     i1u87_20:
  2407   0002F8  0E46               	movlw	70
  2408   0002FA  1847               	xorwf	(Lo_ISR@command+1)^0,w,c
  2409   0002FC  A4D8               	btfss	status,2,c
  2410   0002FE  EF83  F001         	goto	i1u88_21
  2411   000302  EF85  F001         	goto	i1u88_20
  2412   000306                     i1u88_21:
  2413   000306  EFA5  F001         	goto	i1l228
  2414   00030A                     i1u88_20:
  2415   00030A  0E46               	movlw	low Lo_ISR@command
  2416   00030C  6E31               	movwf	strlen@s^0,c
  2417   00030E  EC41  F004         	call	_strlen	;wreg free
  2418   000312  0E02               	movlw	2
  2419   000314  1831               	xorwf	?_strlen^0,w,c
  2420   000316  1032               	iorwf	(?_strlen+1)^0,w,c
  2421   000318  A4D8               	btfss	status,2,c
  2422   00031A  EF91  F001         	goto	i1u89_21
  2423   00031E  EF93  F001         	goto	i1u89_20
  2424   000322                     i1u89_21:
  2425   000322  EFA5  F001         	goto	i1l228
  2426   000326                     i1u89_20:
  2427   000326                     
  2428                           ;main.c: 160:             state = 6;
  2429   000326  0E00               	movlw	0
  2430   000328  6E1A               	movwf	(_state+1)^0,c
  2431   00032A  0E06               	movlw	6
  2432   00032C  6E19               	movwf	_state^0,c
  2433   00032E                     
  2434                           ;main.c: 161:             ClearBuffer();
  2435   00032E  EC06  F004         	call	_ClearBuffer	;wreg free
  2436   000332                     
  2437                           ;main.c: 162:             strcpy(command, "");
  2438   000332  0E46               	movlw	low Lo_ISR@command
  2439   000334  6E33               	movwf	strcpy@dest^0,c
  2440   000336  0E03               	movlw	low (STR_1+2)
  2441   000338  6E34               	movwf	strcpy@src^0,c
  2442   00033A  5034               	movf	strcpy@src^0,w,c
  2443   00033C  A4D8               	btfss	status,2,c
  2444   00033E  0E06               	movlw	high __smallconst
  2445   000340  6E35               	movwf	(strcpy@src+1)^0,c
  2446   000342  ECBB  F003         	call	_strcpy	;wreg free
  2447   000346  EFF9  F001         	goto	i1l223
  2448   00034A                     i1l228:
  2449   00034A  EFF9  F001         	goto	i1l223
  2450   00034E                     i1l217:
  2451   00034E  A29E               	btfss	3998,1,c	;volatile
  2452   000350  EFAC  F001         	goto	i1u90_21
  2453   000354  EFAE  F001         	goto	i1u90_20
  2454   000358                     i1u90_21:
  2455   000358  EFF9  F001         	goto	i1l223
  2456   00035C                     i1u90_20:
  2457   00035C                     
  2458                           ;main.c: 171:         TMR2IF = 0;
  2459   00035C  929E               	bcf	3998,1,c	;volatile
  2460   00035E                     
  2461                           ;main.c: 172:         postpostscaler = (postpostscaler+1)%8;
  2462   00035E  0E01               	movlw	1
  2463   000360  2415               	addwf	_postpostscaler^0,w,c
  2464   000362  6E39               	movwf	??_Lo_ISR^0,c
  2465   000364  0E00               	movlw	0
  2466   000366  2016               	addwfc	(_postpostscaler+1)^0,w,c
  2467   000368  6E3A               	movwf	(??_Lo_ISR+1)^0,c
  2468   00036A  0E07               	movlw	7
  2469   00036C  1439               	andwf	??_Lo_ISR^0,w,c
  2470   00036E  6E15               	movwf	_postpostscaler^0,c
  2471   000370  6A16               	clrf	(_postpostscaler+1)^0,c
  2472                           
  2473                           ;main.c: 173:         if(!postpostscaler){
  2474   000372  5015               	movf	_postpostscaler^0,w,c
  2475   000374  1016               	iorwf	(_postpostscaler+1)^0,w,c
  2476   000376  A4D8               	btfss	status,2,c
  2477   000378  EFC0  F001         	goto	i1u91_21
  2478   00037C  EFC2  F001         	goto	i1u91_20
  2479   000380                     i1u91_21:
  2480   000380  EFF9  F001         	goto	i1l223
  2481   000384                     i1u91_20:
  2482   000384                     
  2483                           ;main.c: 174:             if(dir == -1){
  2484   000384  2817               	incf	_dir^0,w,c
  2485   000386  E106               	bnz	i1u92_21
  2486   000388  2818               	incf	(_dir+1)^0,w,c
  2487   00038A  A4D8               	btfss	status,2,c
  2488   00038C  EFCA  F001         	goto	i1u92_21
  2489   000390  EFCC  F001         	goto	i1u92_20
  2490   000394                     i1u92_21:
  2491   000394  EFDF  F001         	goto	i1l1488
  2492   000398                     i1u92_20:
  2493   000398                     
  2494                           ;main.c: 175:                 LATAbits.LATA5 = !LATAbits.LATA5;;
  2495   000398  AA89               	btfss	137,5,c	;volatile
  2496   00039A  EFD1  F001         	goto	i1u93_21
  2497   00039E  EFD5  F001         	goto	i1u93_20
  2498   0003A2                     i1u93_21:
  2499   0003A2  6A39               	clrf	??_Lo_ISR^0,c
  2500   0003A4  2A39               	incf	??_Lo_ISR^0,f,c
  2501   0003A6  EFD6  F001         	goto	i1u94_28
  2502   0003AA                     i1u93_20:
  2503   0003AA  6A39               	clrf	??_Lo_ISR^0,c
  2504   0003AC                     i1u94_28:
  2505   0003AC  3A39               	swapf	??_Lo_ISR^0,f,c
  2506   0003AE  4639               	rlncf	??_Lo_ISR^0,f,c
  2507   0003B0  5089               	movf	137,w,c	;volatile
  2508   0003B2  1839               	xorwf	??_Lo_ISR^0,w,c
  2509   0003B4  0BDF               	andlw	-33
  2510   0003B6  1839               	xorwf	??_Lo_ISR^0,w,c
  2511   0003B8  6E89               	movwf	137,c	;volatile
  2512                           
  2513                           ;main.c: 176:             }else if(dir == 1){
  2514   0003BA  EFF9  F001         	goto	i1l223
  2515   0003BE                     i1l1488:
  2516   0003BE  0417               	decf	_dir^0,w,c
  2517   0003C0  1018               	iorwf	(_dir+1)^0,w,c
  2518   0003C2  A4D8               	btfss	status,2,c
  2519   0003C4  EFE6  F001         	goto	i1u95_21
  2520   0003C8  EFE8  F001         	goto	i1u95_20
  2521   0003CC                     i1u95_21:
  2522   0003CC  EFA5  F001         	goto	i1l228
  2523   0003D0                     i1u95_20:
  2524   0003D0                     
  2525                           ;main.c: 177:                 LATAbits.LATA7 = !LATAbits.LATA7;;
  2526   0003D0  AE89               	btfss	137,7,c	;volatile
  2527   0003D2  EFED  F001         	goto	i1u96_21
  2528   0003D6  EFF1  F001         	goto	i1u96_20
  2529   0003DA                     i1u96_21:
  2530   0003DA  6A39               	clrf	??_Lo_ISR^0,c
  2531   0003DC  2A39               	incf	??_Lo_ISR^0,f,c
  2532   0003DE  EFF2  F001         	goto	i1u97_28
  2533   0003E2                     i1u96_20:
  2534   0003E2  6A39               	clrf	??_Lo_ISR^0,c
  2535   0003E4                     i1u97_28:
  2536   0003E4  3239               	rrcf	??_Lo_ISR^0,f,c
  2537   0003E6  3239               	rrcf	??_Lo_ISR^0,f,c
  2538   0003E8  5089               	movf	137,w,c	;volatile
  2539   0003EA  1839               	xorwf	??_Lo_ISR^0,w,c
  2540   0003EC  0B7F               	andlw	-129
  2541   0003EE  1839               	xorwf	??_Lo_ISR^0,w,c
  2542   0003F0  6E89               	movwf	137,c	;volatile
  2543   0003F2                     i1l223:
  2544   0003F2  C045  FFF5         	movff	??_Lo_ISR+12,tablat
  2545   0003F6  C044  FFF8         	movff	??_Lo_ISR+11,tblptru
  2546   0003FA  C043  FFF7         	movff	??_Lo_ISR+10,tblptrh
  2547   0003FE  C042  FFF6         	movff	??_Lo_ISR+9,tblptrl
  2548   000402  C041  FFDA         	movff	??_Lo_ISR+8,fsr2h
  2549   000406  C040  FFD9         	movff	??_Lo_ISR+7,fsr2l
  2550   00040A  C03F  FFE2         	movff	??_Lo_ISR+6,fsr1h
  2551   00040E  C03E  FFE1         	movff	??_Lo_ISR+5,fsr1l
  2552   000412  C03D  FFE0         	movff	??_Lo_ISR+4,bsr
  2553   000416  C03C  FFE8         	movff	??_Lo_ISR+3,wreg
  2554   00041A  C03B  FFD8         	movff	??_Lo_ISR+2,status
  2555   00041E  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2556   000420  0010               	retfie	
  2557   000422                     __end_of_Lo_ISR:
  2558                           	callstack 0
  2559                           
  2560 ;; *************** function _strlen *****************
  2561 ;; Defined at:
  2562 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2565 ;;		 -> Lo_ISR@command(20), 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2568 ;;		 -> Lo_ISR@command(20), 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  2    0[COMRAM] unsigned int 
  2571 ;; Registers used:
  2572 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2578 ;;      Params:         2       0       0       0       0       0       0
  2579 ;;      Locals:         1       0       0       0       0       0       0
  2580 ;;      Temps:          0       0       0       0       0       0       0
  2581 ;;      Totals:         3       0       0       0       0       0       0
  2582 ;;Total ram usage:        3 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; Hardware stack levels required when called: 1
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_Lo_ISR
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text13
  2593   000882                     __ptext13:
  2594                           	callstack 0
  2595   000882                     _strlen:
  2596                           	callstack 26
  2597   000882  C031  F033         	movff	strlen@s,strlen@a
  2598   000886  EF46  F004         	goto	i1l1316
  2599   00088A                     i1l1314:
  2600   00088A  2A31               	incf	strlen@s^0,f,c
  2601   00088C                     i1l1316:
  2602   00088C  5031               	movf	strlen@s^0,w,c
  2603   00088E  6ED9               	movwf	fsr2l,c
  2604   000890  6ADA               	clrf	fsr2h,c
  2605   000892  50DF               	movf	indf2,w,c
  2606   000894  A4D8               	btfss	status,2,c
  2607   000896  EF4F  F004         	goto	i1u63_21
  2608   00089A  EF51  F004         	goto	i1u63_20
  2609   00089E                     i1u63_21:
  2610   00089E  EF45  F004         	goto	i1l1314
  2611   0008A2                     i1u63_20:
  2612   0008A2  5033               	movf	strlen@a^0,w,c
  2613   0008A4  5C31               	subwf	strlen@s^0,w,c
  2614   0008A6  6E31               	movwf	?_strlen^0,c
  2615   0008A8  6A32               	clrf	(?_strlen+1)^0,c
  2616   0008AA  BE31               	btfsc	?_strlen^0,7,c
  2617   0008AC  0632               	decf	(?_strlen+1)^0,f,c
  2618   0008AE  0012               	return		;funcret
  2619   0008B0                     __end_of_strlen:
  2620                           	callstack 0
  2621                           
  2622 ;; *************** function _strcpy *****************
  2623 ;; Defined at:
  2624 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  dest            1    2[COMRAM] PTR unsigned char 
  2627 ;;		 -> Lo_ISR@command(20), 
  2628 ;;  src             2    3[COMRAM] PTR const unsigned char 
  2629 ;;		 -> STR_7(1), STR_6(1), STR_5(1), STR_4(1), 
  2630 ;;		 -> STR_3(1), STR_2(1), mystring(20), 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  d               1    7[COMRAM] PTR unsigned char 
  2633 ;;		 -> Lo_ISR@command(20), 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    2[COMRAM] PTR unsigned char 
  2636 ;; Registers used:
  2637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2643 ;;      Params:         3       0       0       0       0       0       0
  2644 ;;      Locals:         1       0       0       0       0       0       0
  2645 ;;      Temps:          2       0       0       0       0       0       0
  2646 ;;      Totals:         6       0       0       0       0       0       0
  2647 ;;Total ram usage:        6 bytes
  2648 ;; Hardware stack levels used: 1
  2649 ;; Hardware stack levels required when called: 1
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_Lo_ISR
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           	psect	text14
  2658   000776                     __ptext14:
  2659                           	callstack 0
  2660   000776                     _strcpy:
  2661                           	callstack 26
  2662   000776  C033  F038         	movff	strcpy@dest,strcpy@d
  2663   00077A                     i1l1310:
  2664   00077A  5034               	movf	strcpy@src^0,w,c
  2665   00077C  6E36               	movwf	??_strcpy^0,c
  2666   00077E  5035               	movf	(strcpy@src+1)^0,w,c
  2667   000780  6E37               	movwf	(??_strcpy+1)^0,c
  2668   000782  4A34               	infsnz	strcpy@src^0,f,c
  2669   000784  2A35               	incf	(strcpy@src+1)^0,f,c
  2670   000786  C036  FFF6         	movff	??_strcpy,tblptrl
  2671   00078A  C037  FFF7         	movff	??_strcpy+1,tblptrh
  2672   00078E  6AF8               	clrf	tblptru,c
  2673   000790  2A38               	incf	strcpy@d^0,f,c
  2674   000792  0438               	decf	strcpy@d^0,w,c
  2675   000794  6ED9               	movwf	fsr2l,c
  2676   000796  6ADA               	clrf	fsr2h,c
  2677   000798  0E05               	movlw	(high __ramtop+-1)
  2678   00079A  64F7               	cpfsgt	tblptrh,c
  2679   00079C  D003               	bra	i1u61_27
  2680   00079E  0008               	tblrd		*
  2681   0007A0  50F5               	movf	tablat,w,c
  2682   0007A2  D005               	bra	i1u61_20
  2683   0007A4                     i1u61_27:
  2684   0007A4  CFF6 FFE1          	movff	tblptrl,fsr1l
  2685   0007A8  CFF7 FFE2          	movff	tblptrh,fsr1h
  2686   0007AC  50E7               	movf	indf1,w,c
  2687   0007AE                     i1u61_20:
  2688   0007AE  6EDF               	movwf	indf2,c
  2689   0007B0  50DF               	movf	indf2,w,c
  2690   0007B2  A4D8               	btfss	status,2,c
  2691   0007B4  EFDE  F003         	goto	i1u62_21
  2692   0007B8  EFE0  F003         	goto	i1u62_20
  2693   0007BC                     i1u62_21:
  2694   0007BC  EFBD  F003         	goto	i1l1310
  2695   0007C0                     i1u62_20:
  2696   0007C0  0012               	return		;funcret
  2697   0007C2                     __end_of_strcpy:
  2698                           	callstack 0
  2699                           
  2700 ;; *************** function _MyusartRead *****************
  2701 ;; Defined at:
  2702 ;;		line 62 in file "setting_hardaware/uart.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;		None
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  receivedData    1    5[COMRAM] unsigned char 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1    wreg      void 
  2709 ;; Registers used:
  2710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2716 ;;      Params:         0       0       0       0       0       0       0
  2717 ;;      Locals:         1       0       0       0       0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0
  2719 ;;      Totals:         1       0       0       0       0       0       0
  2720 ;;Total ram usage:        1 bytes
  2721 ;; Hardware stack levels used: 1
  2722 ;; Hardware stack levels required when called: 3
  2723 ;; This function calls:
  2724 ;;		_UART_Write
  2725 ;;		_UART_Write_Text
  2726 ;; This function is called by:
  2727 ;;		_Lo_ISR
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           	psect	text15
  2732   000848                     __ptext15:
  2733                           	callstack 0
  2734   000848                     _MyusartRead:
  2735                           	callstack 24
  2736   000848                     
  2737                           ;setting_hardaware/uart.c: 66:     unsigned char receivedData = RCREG;
  2738   000848  CFAE F036          	movff	4014,MyusartRead@receivedData	;volatile
  2739   00084C                     
  2740                           ;setting_hardaware/uart.c: 67:     if(receivedData == '\r'){
  2741   00084C  0E0D               	movlw	13
  2742   00084E  1836               	xorwf	MyusartRead@receivedData^0,w,c
  2743   000850  A4D8               	btfss	status,2,c
  2744   000852  EF2D  F004         	goto	i1u60_21
  2745   000856  EF2F  F004         	goto	i1u60_20
  2746   00085A                     i1u60_21:
  2747   00085A  EF35  F004         	goto	i1l1276
  2748   00085E                     i1u60_20:
  2749   00085E                     
  2750                           ;setting_hardaware/uart.c: 68:         UART_Write_Text("\r\n");
  2751   00085E  0E01               	movlw	low STR_1
  2752   000860  6E32               	movwf	UART_Write_Text@text^0,c
  2753   000862  ECE1  F003         	call	_UART_Write_Text	;wreg free
  2754   000866  EF40  F004         	goto	i1l128
  2755   00086A                     i1l1276:
  2756                           
  2757                           ;setting_hardaware/uart.c: 71:     mystring[lenStr] = receivedData;
  2758   00086A  501B               	movf	_lenStr^0,w,c
  2759   00086C  0F1D               	addlw	low _mystring
  2760   00086E  6ED9               	movwf	fsr2l,c
  2761   000870  6ADA               	clrf	fsr2h,c
  2762   000872  C036  FFDF         	movff	MyusartRead@receivedData,indf2
  2763   000876                     
  2764                           ;setting_hardaware/uart.c: 72:     lenStr++;
  2765   000876  4A1B               	infsnz	_lenStr^0,f,c
  2766   000878  2A1C               	incf	(_lenStr+1)^0,f,c
  2767   00087A                     
  2768                           ;setting_hardaware/uart.c: 73:     UART_Write(receivedData);
  2769   00087A  5036               	movf	MyusartRead@receivedData^0,w,c
  2770   00087C  EC9A  F004         	call	_UART_Write
  2771   000880                     i1l128:
  2772   000880  0012               	return		;funcret
  2773   000882                     __end_of_MyusartRead:
  2774                           	callstack 0
  2775                           
  2776 ;; *************** function _UART_Write_Text *****************
  2777 ;; Defined at:
  2778 ;;		line 51 in file "setting_hardaware/uart.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  text            1    1[COMRAM] PTR unsigned char 
  2781 ;;		 -> STR_1(3), 
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;  i               2    3[COMRAM] int 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      void 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2793 ;;      Params:         1       0       0       0       0       0       0
  2794 ;;      Locals:         2       0       0       0       0       0       0
  2795 ;;      Temps:          1       0       0       0       0       0       0
  2796 ;;      Totals:         4       0       0       0       0       0       0
  2797 ;;Total ram usage:        4 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; Hardware stack levels required when called: 2
  2800 ;; This function calls:
  2801 ;;		_UART_Write
  2802 ;; This function is called by:
  2803 ;;		_MyusartRead
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text16
  2808   0007C2                     __ptext16:
  2809                           	callstack 0
  2810   0007C2                     _UART_Write_Text:
  2811                           	callstack 24
  2812   0007C2                     
  2813                           ;setting_hardaware/uart.c: 52:     for(int i=0;text[i]!='\0';i++)
  2814   0007C2  0E00               	movlw	0
  2815   0007C4  6E35               	movwf	(UART_Write_Text@i+1)^0,c
  2816   0007C6  0E00               	movlw	0
  2817   0007C8  6E34               	movwf	UART_Write_Text@i^0,c
  2818   0007CA  EFF4  F003         	goto	i1l1264
  2819   0007CE                     i1l1260:
  2820                           
  2821                           ;setting_hardaware/uart.c: 53:         UART_Write(text[i]);
  2822   0007CE  5032               	movf	UART_Write_Text@text^0,w,c
  2823   0007D0  2434               	addwf	UART_Write_Text@i^0,w,c
  2824   0007D2  6E33               	movwf	??_UART_Write_Text^0,c
  2825   0007D4  C033  FFF6         	movff	??_UART_Write_Text,tblptrl
  2826   0007D8                     	if	1	;There is more than 1 active tblptr byte
  2827   0007D8  0E06               	movlw	high __smallconst
  2828   0007DA  6EF7               	movwf	tblptrh,c
  2829   0007DC                     	endif
  2830   0007DC                     	if	0	;tblptru may be non-zero
  2831   0007DC                     	endif
  2832   0007DC                     	if	0	;tblptru may be non-zero
  2833   0007DC                     	endif
  2834   0007DC  0008               	tblrd		*
  2835   0007DE  50F5               	movf	tablat,w,c
  2836   0007E0  EC9A  F004         	call	_UART_Write
  2837   0007E4  4A34               	infsnz	UART_Write_Text@i^0,f,c
  2838   0007E6  2A35               	incf	(UART_Write_Text@i+1)^0,f,c
  2839   0007E8                     i1l1264:
  2840   0007E8  5032               	movf	UART_Write_Text@text^0,w,c
  2841   0007EA  2434               	addwf	UART_Write_Text@i^0,w,c
  2842   0007EC  6E33               	movwf	??_UART_Write_Text^0,c
  2843   0007EE  C033  FFF6         	movff	??_UART_Write_Text,tblptrl
  2844   0007F2                     	if	1	;There is more than 1 active tblptr byte
  2845   0007F2  0E06               	movlw	high __smallconst
  2846   0007F4  6EF7               	movwf	tblptrh,c
  2847   0007F6                     	endif
  2848   0007F6                     	if	0	;tblptru may be non-zero
  2849   0007F6                     	endif
  2850   0007F6                     	if	0	;tblptru may be non-zero
  2851   0007F6                     	endif
  2852   0007F6  0008               	tblrd		*
  2853   0007F8  50F5               	movf	tablat,w,c
  2854   0007FA  0900               	iorlw	0
  2855   0007FC  A4D8               	btfss	status,2,c
  2856   0007FE  EF03  F004         	goto	i1u51_21
  2857   000802  EF05  F004         	goto	i1u51_20
  2858   000806                     i1u51_21:
  2859   000806  EFE7  F003         	goto	i1l1260
  2860   00080A                     i1u51_20:
  2861   00080A  0012               	return		;funcret
  2862   00080C                     __end_of_UART_Write_Text:
  2863                           	callstack 0
  2864                           
  2865 ;; *************** function _UART_Write *****************
  2866 ;; Defined at:
  2867 ;;		line 44 in file "setting_hardaware/uart.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  data            1    wreg     unsigned char 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  data            1    0[COMRAM] unsigned char 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2881 ;;      Params:         0       0       0       0       0       0       0
  2882 ;;      Locals:         1       0       0       0       0       0       0
  2883 ;;      Temps:          0       0       0       0       0       0       0
  2884 ;;      Totals:         1       0       0       0       0       0       0
  2885 ;;Total ram usage:        1 bytes
  2886 ;; Hardware stack levels used: 1
  2887 ;; Hardware stack levels required when called: 1
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_UART_Write_Text
  2892 ;;		_MyusartRead
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text17
  2897   000934                     __ptext17:
  2898                           	callstack 0
  2899   000934                     _UART_Write:
  2900                           	callstack 24
  2901                           
  2902                           ;incstack = 0
  2903                           ;UART_Write@data stored from wreg
  2904   000934  6E31               	movwf	UART_Write@data^0,c
  2905   000936                     i1l110:
  2906   000936  A2AC               	btfss	172,1,c	;volatile
  2907   000938  EFA0  F004         	goto	i1u1_21
  2908   00093C  EFA2  F004         	goto	i1u1_20
  2909   000940                     i1u1_21:
  2910   000940  EF9B  F004         	goto	i1l110
  2911   000944                     i1u1_20:
  2912   000944                     
  2913                           ;setting_hardaware/uart.c: 47:     TXREG = data;
  2914   000944  C031  FFAD         	movff	UART_Write@data,4013	;volatile
  2915   000948  0012               	return		;funcret
  2916   00094A                     __end_of_UART_Write:
  2917                           	callstack 0
  2918                           
  2919 ;; *************** function _GetString *****************
  2920 ;; Defined at:
  2921 ;;		line 77 in file "setting_hardaware/uart.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;		None
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    0[COMRAM] PTR unsigned char 
  2928 ;; Registers used:
  2929 ;;		wreg
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2935 ;;      Params:         2       0       0       0       0       0       0
  2936 ;;      Locals:         0       0       0       0       0       0       0
  2937 ;;      Temps:          0       0       0       0       0       0       0
  2938 ;;      Totals:         2       0       0       0       0       0       0
  2939 ;;Total ram usage:        2 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 1
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_Lo_ISR
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text18
  2950   00098E                     __ptext18:
  2951                           	callstack 0
  2952   00098E                     _GetString:
  2953                           	callstack 26
  2954   00098E                     
  2955                           ;setting_hardaware/uart.c: 78:     return mystring;
  2956   00098E  0E1D               	movlw	_mystring& (0+255)
  2957   000990  0012               	return		;funcret
  2958   000992                     __end_of_GetString:
  2959                           	callstack 0
  2960                           
  2961 ;; *************** function _ClearBuffer *****************
  2962 ;; Defined at:
  2963 ;;		line 56 in file "setting_hardaware/uart.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;		None
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  i               2    0[COMRAM] int 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2977 ;;      Params:         0       0       0       0       0       0       0
  2978 ;;      Locals:         2       0       0       0       0       0       0
  2979 ;;      Temps:          0       0       0       0       0       0       0
  2980 ;;      Totals:         2       0       0       0       0       0       0
  2981 ;;Total ram usage:        2 bytes
  2982 ;; Hardware stack levels used: 1
  2983 ;; Hardware stack levels required when called: 1
  2984 ;; This function calls:
  2985 ;;		Nothing
  2986 ;; This function is called by:
  2987 ;;		_Lo_ISR
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	text19
  2992   00080C                     __ptext19:
  2993                           	callstack 0
  2994   00080C                     _ClearBuffer:
  2995                           	callstack 26
  2996   00080C                     
  2997                           ;setting_hardaware/uart.c: 57:     for(int i = 0; i < 10 ; i++)
  2998   00080C  0E00               	movlw	0
  2999   00080E  6E32               	movwf	(ClearBuffer@i+1)^0,c
  3000   000810  0E00               	movlw	0
  3001   000812  6E31               	movwf	ClearBuffer@i^0,c
  3002   000814                     i1l994:
  3003                           
  3004                           ;setting_hardaware/uart.c: 58:         mystring[i] = '\0';
  3005   000814  5031               	movf	ClearBuffer@i^0,w,c
  3006   000816  0F1D               	addlw	low _mystring
  3007   000818  6ED9               	movwf	fsr2l,c
  3008   00081A  6ADA               	clrf	fsr2h,c
  3009   00081C  6ADF               	clrf	indf2,c
  3010   00081E  4A31               	infsnz	ClearBuffer@i^0,f,c
  3011   000820  2A32               	incf	(ClearBuffer@i+1)^0,f,c
  3012   000822  BE32               	btfsc	(ClearBuffer@i+1)^0,7,c
  3013   000824  EF1D  F004         	goto	i1u11_21
  3014   000828  5032               	movf	(ClearBuffer@i+1)^0,w,c
  3015   00082A  E109               	bnz	i1u11_20
  3016   00082C  0E0A               	movlw	10
  3017   00082E  5C31               	subwf	ClearBuffer@i^0,w,c
  3018   000830  A0D8               	btfss	status,0,c
  3019   000832  EF1D  F004         	goto	i1u11_21
  3020   000836  EF1F  F004         	goto	i1u11_20
  3021   00083A                     i1u11_21:
  3022   00083A  EF0A  F004         	goto	i1l994
  3023   00083E                     i1u11_20:
  3024   00083E                     
  3025                           ;setting_hardaware/uart.c: 59:     lenStr = 0;
  3026   00083E  0E00               	movlw	0
  3027   000840  6E1C               	movwf	(_lenStr+1)^0,c
  3028   000842  0E00               	movlw	0
  3029   000844  6E1B               	movwf	_lenStr^0,c
  3030   000846  0012               	return		;funcret
  3031   000848                     __end_of_ClearBuffer:
  3032                           	callstack 0
  3033                           
  3034 ;; *************** function _Hi_ISR *****************
  3035 ;; Defined at:
  3036 ;;		line 105 in file "main.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;		None
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		None
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3050 ;;      Params:         0       0       0       0       0       0       0
  3051 ;;      Locals:         0       0       0       0       0       0       0
  3052 ;;      Temps:          0       0       0       0       0       0       0
  3053 ;;      Totals:         0       0       0       0       0       0       0
  3054 ;;Total ram usage:        0 bytes
  3055 ;; Hardware stack levels used: 1
  3056 ;; This function calls:
  3057 ;;		Nothing
  3058 ;; This function is called by:
  3059 ;;		Interrupt level 2
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           	psect	intcode
  3064   000008                     __pintcode:
  3065                           	callstack 0
  3066   000008                     _Hi_ISR:
  3067                           	callstack 24
  3068                           
  3069                           ;incstack = 0
  3070   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3071   00000A  EDC2  F004         	call	int_func,f	;refresh shadow registers
  3072                           
  3073                           	psect	intcode_body
  3074   000984                     __pintcode_body:
  3075                           	callstack 24
  3076   000984                     int_func:
  3077                           	callstack 24
  3078   000984  0006               	pop		; remove dummy address from shadow register refresh
  3079   000986  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3080   000988  0011               	retfie		f
  3081   00098A                     __end_of_Hi_ISR:
  3082                           	callstack 0
  3083                           
  3084                           	psect	rparam
  3085   000001                     ___rparam_used  equ	1
  3086   000000                     ___param_bank   equ	0
  3087   000000                     __Lparam        equ	__Lrparam
  3088   000000                     __Hparam        equ	__Hrparam
  3089                           
  3090                           	psect	temp
  3091   00005A                     btemp:
  3092                           	callstack 0
  3093   00005A                     	ds	1
  3094   00005A                     int$flags       set	btemp
  3095   00005B                     wtemp8          set	btemp+1
  3096   00005B                     ttemp5          set	btemp+1
  3097   00005E                     ttemp6          set	btemp+4
  3098   000062                     ttemp7          set	btemp+8
  3099                           
  3100                           	psect	idloc
  3101                           
  3102                           ;Config register IDLOC0 @ 0x200000
  3103                           ;	unspecified, using default values
  3104   200000                     	org	2097152
  3105   200000  FF                 	db	255
  3106                           
  3107                           ;Config register IDLOC1 @ 0x200001
  3108                           ;	unspecified, using default values
  3109   200001                     	org	2097153
  3110   200001  FF                 	db	255
  3111                           
  3112                           ;Config register IDLOC2 @ 0x200002
  3113                           ;	unspecified, using default values
  3114   200002                     	org	2097154
  3115   200002  FF                 	db	255
  3116                           
  3117                           ;Config register IDLOC3 @ 0x200003
  3118                           ;	unspecified, using default values
  3119   200003                     	org	2097155
  3120   200003  FF                 	db	255
  3121                           
  3122                           ;Config register IDLOC4 @ 0x200004
  3123                           ;	unspecified, using default values
  3124   200004                     	org	2097156
  3125   200004  FF                 	db	255
  3126                           
  3127                           ;Config register IDLOC5 @ 0x200005
  3128                           ;	unspecified, using default values
  3129   200005                     	org	2097157
  3130   200005  FF                 	db	255
  3131                           
  3132                           ;Config register IDLOC6 @ 0x200006
  3133                           ;	unspecified, using default values
  3134   200006                     	org	2097158
  3135   200006  FF                 	db	255
  3136                           
  3137                           ;Config register IDLOC7 @ 0x200007
  3138                           ;	unspecified, using default values
  3139   200007                     	org	2097159
  3140   200007  FF                 	db	255
  3141                           
  3142                           	psect	config
  3143                           
  3144                           ; Padding undefined space
  3145   300000                     	org	3145728
  3146   300000  FF                 	db	255
  3147                           
  3148                           ;Config register CONFIG1H @ 0x300001
  3149                           ;	Oscillator Selection bits
  3150                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  3151                           ;	Fail-Safe Clock Monitor Enable bit
  3152                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3153                           ;	Internal/External Oscillator Switchover bit
  3154                           ;	IESO = ON, Oscillator Switchover mode enabled
  3155   300001                     	org	3145729
  3156   300001  88                 	db	136
  3157                           
  3158                           ;Config register CONFIG2L @ 0x300002
  3159                           ;	Power-up Timer Enable bit
  3160                           ;	PWRT = OFF, PWRT disabled
  3161                           ;	Brown-out Reset Enable bits
  3162                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3163                           ;	Brown Out Reset Voltage bits
  3164                           ;	BORV = 3, Minimum setting
  3165   300002                     	org	3145730
  3166   300002  1F                 	db	31
  3167                           
  3168                           ;Config register CONFIG2H @ 0x300003
  3169                           ;	Watchdog Timer Enable bit
  3170                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3171                           ;	Watchdog Timer Postscale Select bits
  3172                           ;	WDTPS = 1, 1:1
  3173   300003                     	org	3145731
  3174   300003  00                 	db	0
  3175                           
  3176                           ; Padding undefined space
  3177   300004                     	org	3145732
  3178   300004  FF                 	db	255
  3179                           
  3180                           ;Config register CONFIG3H @ 0x300005
  3181                           ;	CCP2 MUX bit
  3182                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3183                           ;	PORTB A/D Enable bit
  3184                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3185                           ;	Low-Power Timer1 Oscillator Enable bit
  3186                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3187                           ;	MCLR Pin Enable bit
  3188                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3189   300005                     	org	3145733
  3190   300005  83                 	db	131
  3191                           
  3192                           ;Config register CONFIG4L @ 0x300006
  3193                           ;	Stack Full/Underflow Reset Enable bit
  3194                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3195                           ;	Single-Supply ICSP Enable bit
  3196                           ;	LVP = OFF, Single-Supply ICSP disabled
  3197                           ;	Extended Instruction Set Enable bit
  3198                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3199                           ;	Background Debugger Enable bit
  3200                           ;	DEBUG = 0x1, unprogrammed default
  3201   300006                     	org	3145734
  3202   300006  81                 	db	129
  3203                           
  3204                           ; Padding undefined space
  3205   300007                     	org	3145735
  3206   300007  FF                 	db	255
  3207                           
  3208                           ;Config register CONFIG5L @ 0x300008
  3209                           ;	Code Protection bit
  3210                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3211                           ;	Code Protection bit
  3212                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3213                           ;	Code Protection bit
  3214                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3215                           ;	Code Protection bit
  3216                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3217   300008                     	org	3145736
  3218   300008  0F                 	db	15
  3219                           
  3220                           ;Config register CONFIG5H @ 0x300009
  3221                           ;	Boot Block Code Protection bit
  3222                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3223                           ;	Data EEPROM Code Protection bit
  3224                           ;	CPD = OFF, Data EEPROM not code-protected
  3225   300009                     	org	3145737
  3226   300009  C0                 	db	192
  3227                           
  3228                           ;Config register CONFIG6L @ 0x30000A
  3229                           ;	Write Protection bit
  3230                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3231                           ;	Write Protection bit
  3232                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3233                           ;	Write Protection bit
  3234                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3235                           ;	Write Protection bit
  3236                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3237   30000A                     	org	3145738
  3238   30000A  0F                 	db	15
  3239                           
  3240                           ;Config register CONFIG6H @ 0x30000B
  3241                           ;	Configuration Register Write Protection bit
  3242                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3243                           ;	Boot Block Write Protection bit
  3244                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3245                           ;	Data EEPROM Write Protection bit
  3246                           ;	WRTD = OFF, Data EEPROM not write-protected
  3247   30000B                     	org	3145739
  3248   30000B  E0                 	db	224
  3249                           
  3250                           ;Config register CONFIG7L @ 0x30000C
  3251                           ;	Table Read Protection bit
  3252                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3253                           ;	Table Read Protection bit
  3254                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3255                           ;	Table Read Protection bit
  3256                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3257                           ;	Table Read Protection bit
  3258                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3259   30000C                     	org	3145740
  3260   30000C  0F                 	db	15
  3261                           
  3262                           ;Config register CONFIG7H @ 0x30000D
  3263                           ;	Boot Block Table Read Protection bit
  3264                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3265   30000D                     	org	3145741
  3266   30000D  40                 	db	64
  3267                           tosu	equ	0xFFF
  3268                           tosh	equ	0xFFE
  3269                           tosl	equ	0xFFD
  3270                           stkptr	equ	0xFFC
  3271                           pclatu	equ	0xFFB
  3272                           pclath	equ	0xFFA
  3273                           pcl	equ	0xFF9
  3274                           tblptru	equ	0xFF8
  3275                           tblptrh	equ	0xFF7
  3276                           tblptrl	equ	0xFF6
  3277                           tablat	equ	0xFF5
  3278                           prodh	equ	0xFF4
  3279                           prodl	equ	0xFF3
  3280                           indf0	equ	0xFEF
  3281                           postinc0	equ	0xFEE
  3282                           postdec0	equ	0xFED
  3283                           preinc0	equ	0xFEC
  3284                           plusw0	equ	0xFEB
  3285                           fsr0h	equ	0xFEA
  3286                           fsr0l	equ	0xFE9
  3287                           wreg	equ	0xFE8
  3288                           indf1	equ	0xFE7
  3289                           postinc1	equ	0xFE6
  3290                           postdec1	equ	0xFE5
  3291                           preinc1	equ	0xFE4
  3292                           plusw1	equ	0xFE3
  3293                           fsr1h	equ	0xFE2
  3294                           fsr1l	equ	0xFE1
  3295                           bsr	equ	0xFE0
  3296                           indf2	equ	0xFDF
  3297                           postinc2	equ	0xFDE
  3298                           postdec2	equ	0xFDD
  3299                           preinc2	equ	0xFDC
  3300                           plusw2	equ	0xFDB
  3301                           fsr2h	equ	0xFDA
  3302                           fsr2l	equ	0xFD9
  3303                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     41      89
    BANK0           128      7       7
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    sp__GetString	PTR unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), STR_2(CODE[1]), STR_3(CODE[1]), STR_4(CODE[1]), 
		 -> STR_5(CODE[1]), STR_6(CODE[1]), STR_7(CODE[1]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_strcpy
    _strcpy->_GetString
    _MyusartRead->_UART_Write_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ledLeftOn
    _main->_ledRightOff
    _main->_ledRightOn
    _ledRightOn->_displayBinary
    _ledRightOff->_displayBinary
    _ledLeftOn->_displayBinary

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     697
                                              5 BANK0      2     2      0
                  _SYSTEM_Initialize
                      _displayBinary
                       _initialState
                         _ledLeftOff
                          _ledLeftOn
                        _ledRightOff
                         _ledRightOn
 ---------------------------------------------------------------------------------
 (1) _ledRightOn                                           2     0      2     182
                                              3 BANK0      2     0      2
                      _displayBinary
 ---------------------------------------------------------------------------------
 (1) _ledRightOff                                          2     0      2     182
                                              3 BANK0      2     0      2
                      _displayBinary
 ---------------------------------------------------------------------------------
 (1) _ledLeftOn                                            2     0      2     182
                                              3 BANK0      2     0      2
                      _displayBinary
 ---------------------------------------------------------------------------------
 (2) _displayBinary                                        3     1      2     148
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _ledLeftOff                                           2     0      2       3
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initialState                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _TMR2_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                              33    33      0    1067
                                              8 COMRAM    33    33      0
                        _ClearBuffer
                          _GetString
                        _MyusartRead
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               3     1      2      96
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     3      3      87
                                              2 COMRAM     6     3      3
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          1     1      0     188
                                              5 COMRAM     1     1      0
                         _UART_Write
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (5) _UART_Write_Text                                      4     3      1     106
                                              1 COMRAM     4     3      1
                         _UART_Write
 ---------------------------------------------------------------------------------
 (6) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _GetString                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ClearBuffer                                          2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Hi_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _TMR2_Initialize
     _UART_Initialize
   _displayBinary
   _initialState
   _ledLeftOff
   _ledLeftOn
     _displayBinary
   _ledRightOff
     _displayBinary
   _ledRightOn
     _displayBinary

 _Lo_ISR (ROOT)
   _ClearBuffer
   _GetString
   _MyusartRead
     _UART_Write
     _UART_Write_Text
       _UART_Write
   _strcpy
     _GetString (ARG)
   _strlen

 _Hi_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1523      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK5           244      0       0      0.0%
BANK5              244      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      7       7      5.5%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     41      89     70.6%
BITBIGSFR_1h        38      0       0      0.0%
BITBIGSFRh          18      0       0      0.0%
BITBIGSFR_1lh       14      0       0      0.0%
BITBIGSFR_5h        10      0       0      0.0%
BITBIGSFRl           9      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_5l         2      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      96      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Jan 16 08:51:01 2025

                           l47 0932                             l80 097A                             l74 096E  
                           l77 0982                             bsr 0FE0                            l107 08D0  
                          l171 0992                            l180 095C                            l174 0904  
                          l183 098C                            l168 0774                            l177 091C  
                          _PR2 0FCB                            u980 06F8                            u981 06F0  
                          u998 06FC                            _dir 0017                            _str 0001  
              _TMR2_Initialize 0970                 ?_displayBinary 0080                            wreg 0FE8  
                         l1500 0928                           l1502 092A                           l1510 097C  
                         l1504 092C                           l1512 0970                           l1520 08C0  
                         l1506 092E                           l1530 08CA                           l1522 08C2  
                         l1514 08B0                           l1508 0930                           l1532 08CC  
                         l1524 08C4                           l1516 08BA                           l1540 0966  
                         l1534 08CE                           l1526 08C6                           l1518 08BE  
                         l1542 096A                           l1550 08FC                           l1528 08C8  
                         l1536 06E4                           l1560 0950                           l1552 0906  
                         l1544 08EC                           l1624 06A2                           l1538 095E  
                         l1562 098A                           l1554 090E                           l1546 08F8  
                         l1556 091A                           l1548 08FA                           l1580 0628  
                         l1572 0606                           l1558 094A                           l1590 0672  
                         l1582 0638                           l1574 060A                           l1496 091E  
                         l1592 0678                           l1584 0648                           l1576 0610  
                         l1498 0924                           l1594 0684                           l1586 0654  
                         l1578 0618                           l1588 0666                           l1598 068A  
                         _ADFM 7E07                           STR_1 0601                           STR_2 0603  
                         STR_3 0603                           STR_4 0603                           STR_5 0603  
                         STR_6 0603                           STR_7 0603                           u1000 071A  
                         _CREN 7D5C                           u1001 0712                           u1020 073E  
                         u1021 0736                           u1040 0764                           u1041 075C  
                         u1018 071E                           u1038 0742                           u1058 0768  
                         _LATA 0F89                           _RCIF 7CF5                           _main 0606  
                         fsr1h 0FE2                           fsr2h 0FDA                           indf1 0FE7  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 005A                           start 0422                   ___param_bank 0000  
      __end_of_UART_Write_Text 080C               ?_UART_Initialize 0031  __end_of_OSCILLATOR_Initialize 0984  
                        ?_main 0031                          _T2CON 0FCA                          _IRCF0 7E9C  
                        _IRCF1 7E9D                          _IRCF2 7E9E                          i1l110 0936  
                        i1l113 0948                          i1l131 0990                          i1l124 0846  
                        i1l119 080A                          i1l223 03F2                          i1l128 0880  
                        i1l217 034E                          i1l218 0068                          i1l228 034A  
                        i2l212 0986                          i1l920 07C0                          i1l930 0944  
                        i1l926 08AE                          i1l928 0936                          i1l994 0814  
                        i1l996 081E                          i1l988 080C                          i1l998 0822  
                        _RCREG 0FAE                          _SPBRG 0FAF                          _TRISA 0F92  
                        _TXREG 0FAD                    ?_UART_Write 0031                          _state 0019  
                  _ClearBuffer 080C                          tablat 0FF5                          ttemp5 005B  
                        ttemp6 005E                          ttemp7 0062                          status 0FD8  
                        wtemp8 005B                __initialization 08D2                   __end_of_main 06E4  
      __end_of_TMR2_Initialize 097C                         ??_main 0085                ??_displayBinary 0082  
                __activetblptr 0002                 _postpostscaler 0015                         _ADCON1 0FC1  
                       _ADRESH 0FC4                         _ADRESL 0FC3                         i1l1000 083E  
                       i1l1310 077A                         i1l1312 0882                         i1l1400 0144  
                       i1l1314 088A                         i1l1402 0156                         i1l1260 07CE  
                       i1l1308 0776                         i1l1316 088C                         i1l1420 01CC  
                       i1l1404 0172                         i1l1262 07E4                         i1l1270 084C  
                       i1l1318 08A2                         i1l1422 01E8                         i1l1406 017A  
                       i1l1414 0196                         i1l1264 07E8                         i1l1280 087A  
                       i1l1272 085E                         i1l1440 025E                         i1l1424 01F0  
                       i1l1416 01A8                         i1l1432 020C                         i1l1408 017E  
                       i1l1258 07C2                         i1l1442 0266                         i1l1434 021E  
                       i1l1450 0282                         i1l1426 01F4                         i1l1418 01BA  
                       i1l1370 006E                         i1l1362 0046                         i1l1284 098E  
                       i1l1276 086A                         i1l1268 0848                         i1l1460 02CE  
                       i1l1452 0294                         i1l1444 026A                         i1l1436 0230  
                       i1l1380 00BC                         i1l1372 0080                         i1l1364 0054  
                       i1l1278 0876                         i1l1470 030A                         i1l1454 02A6  
                       i1l1438 0242                         i1l1390 0108                         i1l1382 00CE  
                       i1l1374 0092                         i1l1366 0062                         i1l1480 035C  
                       i1l1472 0326                         i1l1456 02C2                         i1l1384 00E0  
                       i1l1376 00A6                         i1l1368 006A                         i1l1490 03D0  
                       i1l1482 035E                         i1l1474 032E                         i1l1458 02CA  
                       i1l1466 02E6                         i1l1386 00FC                         i1l1378 00AA  
                       i1l1484 0384                         i1l1476 0332                         i1l1468 02F8  
                       i1l1388 0104                         i1l1396 0120                         i1l1486 0398  
                       i1l1398 0132                         i1l1488 03BE                         _TMR2IF 7CF1  
                       i1u1_20 0944                         i1u1_21 0940                         _Hi_ISR 0008  
                ?_initialState 0031                         _Lo_ISR 0018               ?_UART_Write_Text 0032  
                       _lenStr 001B                         clear_0 08D8                         isa$std 0001  
                       _strcpy 0776                         _strlen 0882                   __mediumconst 0000  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
            _SYSTEM_Initialize 095E                     __accesstop 0080        __end_of__initialization 08DE  
               ??_initialState 0080             ?_SYSTEM_Initialize 0031                  ___rparam_used 0001  
            __end_of_GetString 0992                 __pcstackCOMRAM 0031            ??_SYSTEM_Initialize 0080  
             ?_TMR2_Initialize 0031                  ??_MyusartRead 0036      __end_of_SYSTEM_Initialize 0970  
                      ?_Hi_ISR 0031                        ?_Lo_ISR 0031                        _CCP1CON 0FBD  
                   _ledLeftOff 098A                        ?_strcpy 0033                        ?_strlen 0031  
                   _ledRightOn 08EC                        i1u11_20 083E                        i1u11_21 083A  
                 ??_UART_Write 0031                        i1u51_20 080A                        i1u51_21 0806  
                      i1u60_20 085E                        i1u60_21 085A                        i1u61_20 07AE  
                      i1u61_27 07A4                        i1u62_20 07C0                        i1u70_20 00E0  
                      i1u62_21 07BC                        i1u70_21 00DC                        i1u63_20 08A2  
                      i1u71_20 00FC                        i1u63_21 089E                        i1u71_21 00F8  
                      i1u80_20 021E                        i1u72_20 0132                        i1u64_20 0054  
                      i1u80_21 021A                        i1u72_21 012E                        i1u64_21 0050  
                      i1u81_20 0230                        i1u73_20 0144                        i1u65_20 0062  
                      i1u81_21 022C                        i1u73_21 0140                        i1u65_21 005E  
                      i1u90_20 035C                        i1u82_20 0242                        i1u74_20 0156  
                      i1u66_20 0080                        i1u90_21 0358                        i1u82_21 023E  
                      i1u74_21 0152                        i1u66_21 007C                        i1u91_20 0384  
                      i1u83_20 025E                        i1u75_20 0172                        i1u67_20 0092  
                      i1u91_21 0380                        i1u83_21 025A                        i1u75_21 016E  
                      i1u67_21 008E                        i1u92_20 0398                        i1u84_20 0294  
                      i1u76_20 01A8                        i1u68_20 00BC                        i1u92_21 0394  
                      i1u84_21 0290                        i1u76_21 01A4                        i1u68_21 00B8  
                      i1u93_20 03AA                        i1u85_20 02A6                        i1u77_20 01BA  
                      i1u69_20 00CE                        i1u93_21 03A2                        i1u85_21 02A2  
                      i1u77_21 01B6                        i1u69_21 00CA                        i1u86_20 02C2  
                      i1u78_20 01CC                        i1u86_21 02BE                        i1u78_21 01C8  
                      i1u95_20 03D0                        i1u94_28 03AC                        i1u87_20 02F8  
                      i1u79_20 01E8                        i1u95_21 03CC                        i1u87_21 02F4  
                      i1u79_21 01E4                        i1u96_20 03E2                        i1u88_20 030A  
                      i1u96_21 03DA                        i1u88_21 0306                        i1u89_20 0326  
                      i1u89_21 0322                        i1u97_28 03E4                   ?_ClearBuffer 0031  
          __end_of_MyusartRead 0882              __end_of_ledLeftOn 095E                        __Hparam 0000  
                      __Lparam 0000             __end_of_UART_Write 094A                   __psmallconst 0600  
                      __pcinit 08D2                        __ramtop 0600                        __ptext0 0606  
                      __ptext1 08EC                        __ptext2 0906                        __ptext3 094A  
                      __ptext4 06E4                        __ptext5 098A                        __ptext6 0992  
                      __ptext7 095E                        __ptext8 08B0                        __ptext9 0970  
        _OSCILLATOR_Initialize 097C           __end_of_initialState 0994                 __pintcode_body 0984  
         end_of_initialization 08DE                  __Lmediumconst 0000                        int_func 0984  
                    _RCSTAbits 0FAB                        postinc0 0FEE                        strcpy@d 0038  
                      strlen@a 0033                        strlen@s 0031                    ?_ledLeftOff 0080  
               UART_Write@data 0031                    ?_ledRightOn 0083          __end_of_displayBinary 0776  
                    _TRISAbits 0F92                      _TRISCbits 0F94                    _MyusartRead 0848  
                ??_ledRightOff 0085                      _TXSTAbits 0FAC                 __end_of_Hi_ISR 098A  
               __end_of_Lo_ISR 0422   __end_of_INTERRUPT_Initialize 0934                      _GetString 098E  
                  _BAUDCONbits 0FB8         ?_OSCILLATOR_Initialize 0031                 __end_of_strcpy 07C2  
               __end_of_strlen 08B0            start_initialization 08D2                   ClearBuffer@i 0031  
            ??_UART_Initialize 0080                       ??_Hi_ISR 0031                       ??_Lo_ISR 0039  
          __end_of_ledRightOff 091E                     ?_GetString 0031                       ??_strcpy 0036  
                     ??_strlen 0033               displayBinary@num 0080                    __pbssCOMRAM 0001  
                __pcstackBANK0 0080                   _initialState 0992                  Lo_ISR@command 0046  
                    __pintcode 0008                      _ledLeftOn 094A                    __pintcodelo 0018  
                  __smallconst 0600              ??_UART_Write_Text 0033           _INTERRUPT_Initialize 091E  
                  _ledRightOff 0906                       _LATAbits 0F89                       _IPR1bits 0F9F  
                     _PIE1bits 0F9D                       _PIR1bits 0F9E                       _RCONbits 0FD0  
                   ?_ledLeftOn 0083                    ??_GetString 0033                   ??_ledLeftOff 0082  
                   _ADCON0bits 0FC2                     _ADCON2bits 0FC0                   ??_ledRightOn 0085  
      MyusartRead@receivedData 0036                   ?_MyusartRead 0031          ?_INTERRUPT_Initialize 0031  
            ??_TMR2_Initialize 0080             __end_of_ledLeftOff 098E                       __Hrparam 0000  
           __end_of_ledRightOn 0906                       __Lrparam 0000        ??_OSCILLATOR_Initialize 0080  
              _UART_Initialize 08B0                       __ptext10 097C                       __ptext11 091E  
                     __ptext13 0882                       __ptext14 0776                       __ptext15 0848  
                     __ptext16 07C2                       __ptext17 0934                       __ptext18 098E  
                     __ptext19 080C                     strcpy@dest 0033            UART_Write_Text@text 0032  
                ledLeftOff@num 0080                       isa$xinst 0000                       int$flags 005A  
                  ??_ledLeftOn 0085                       _mystring 001D                     _INTCONbits 0FF2  
       ??_INTERRUPT_Initialize 0080                  ??_ClearBuffer 0031                       intlevel1 0000  
                     intlevel2 0000                      strcpy@src 0034                   ledLeftOn@num 0083  
      __end_of_UART_Initialize 08D2                _UART_Write_Text 07C2                  _displayBinary 06E4  
                   _UART_Write 0934               UART_Write_Text@i 0034                   ?_ledRightOff 0083  
          __end_of_ClearBuffer 0848                 ledRightOff@num 0083                  ledRightOn@num 0083  
