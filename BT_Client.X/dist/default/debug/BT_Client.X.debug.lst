

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Jan 15 00:05:31 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36   000000                     
    37                           ; Generated 25/07/2024 GMT
    38                           ; 
    39                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4520 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71   000FE0                     bsr             equ	4064
    72   000FE9                     fsr0            equ	4073
    73   000FEA                     fsr0h           equ	4074
    74   000FE9                     fsr0l           equ	4073
    75   000FE1                     fsr1            equ	4065
    76   000FE2                     fsr1h           equ	4066
    77   000FE1                     fsr1l           equ	4065
    78   000FD9                     fsr2            equ	4057
    79   000FDA                     fsr2h           equ	4058
    80   000FD9                     fsr2l           equ	4057
    81   000FEF                     indf0           equ	4079
    82   000FE7                     indf1           equ	4071
    83   000FDF                     indf2           equ	4063
    84   000FF2                     intcon          equ	4082
    85   000000                     nvmcon          equ	0
    86   000FF9                     pcl             equ	4089
    87   000FFA                     pclath          equ	4090
    88   000FFB                     pclatu          equ	4091
    89   000FEB                     plusw0          equ	4075
    90   000FE3                     plusw1          equ	4067
    91   000FDB                     plusw2          equ	4059
    92   000FED                     postdec0        equ	4077
    93   000FE5                     postdec1        equ	4069
    94   000FDD                     postdec2        equ	4061
    95   000FEE                     postinc0        equ	4078
    96   000FE6                     postinc1        equ	4070
    97   000FDE                     postinc2        equ	4062
    98   000FEC                     preinc0         equ	4076
    99   000FE4                     preinc1         equ	4068
   100   000FDC                     preinc2         equ	4060
   101   000FF3                     prod            equ	4083
   102   000FF4                     prodh           equ	4084
   103   000FF3                     prodl           equ	4083
   104   000FD8                     status          equ	4056
   105   000FF5                     tablat          equ	4085
   106   000FF6                     tblptr          equ	4086
   107   000FF7                     tblptrh         equ	4087
   108   000FF6                     tblptrl         equ	4086
   109   000FF8                     tblptru         equ	4088
   110   000FFD                     tosl            equ	4093
   111   000FE8                     wreg            equ	4072
   112   000F80                     PORTA           equ	3968	;# 
   113   000F81                     PORTB           equ	3969	;# 
   114   000F82                     PORTC           equ	3970	;# 
   115   000F83                     PORTD           equ	3971	;# 
   116   000F84                     PORTE           equ	3972	;# 
   117   000F89                     LATA            equ	3977	;# 
   118   000F8A                     LATB            equ	3978	;# 
   119   000F8B                     LATC            equ	3979	;# 
   120   000F8C                     LATD            equ	3980	;# 
   121   000F8D                     LATE            equ	3981	;# 
   122   000F92                     TRISA           equ	3986	;# 
   123   000F92                     DDRA            equ	3986	;# 
   124   000F93                     TRISB           equ	3987	;# 
   125   000F93                     DDRB            equ	3987	;# 
   126   000F94                     TRISC           equ	3988	;# 
   127   000F94                     DDRC            equ	3988	;# 
   128   000F95                     TRISD           equ	3989	;# 
   129   000F95                     DDRD            equ	3989	;# 
   130   000F96                     TRISE           equ	3990	;# 
   131   000F96                     DDRE            equ	3990	;# 
   132   000F9B                     OSCTUNE         equ	3995	;# 
   133   000F9D                     PIE1            equ	3997	;# 
   134   000F9E                     PIR1            equ	3998	;# 
   135   000F9F                     IPR1            equ	3999	;# 
   136   000FA0                     PIE2            equ	4000	;# 
   137   000FA1                     PIR2            equ	4001	;# 
   138   000FA2                     IPR2            equ	4002	;# 
   139   000FA6                     EECON1          equ	4006	;# 
   140   000FA7                     EECON2          equ	4007	;# 
   141   000FA8                     EEDATA          equ	4008	;# 
   142   000FA9                     EEADR           equ	4009	;# 
   143   000FAB                     RCSTA           equ	4011	;# 
   144   000FAB                     RCSTA1          equ	4011	;# 
   145   000FAC                     TXSTA           equ	4012	;# 
   146   000FAC                     TXSTA1          equ	4012	;# 
   147   000FAD                     TXREG           equ	4013	;# 
   148   000FAD                     TXREG1          equ	4013	;# 
   149   000FAE                     RCREG           equ	4014	;# 
   150   000FAE                     RCREG1          equ	4014	;# 
   151   000FAF                     SPBRG           equ	4015	;# 
   152   000FAF                     SPBRG1          equ	4015	;# 
   153   000FB0                     SPBRGH          equ	4016	;# 
   154   000FB1                     T3CON           equ	4017	;# 
   155   000FB2                     TMR3            equ	4018	;# 
   156   000FB2                     TMR3L           equ	4018	;# 
   157   000FB3                     TMR3H           equ	4019	;# 
   158   000FB4                     CMCON           equ	4020	;# 
   159   000FB5                     CVRCON          equ	4021	;# 
   160   000FB6                     ECCP1AS         equ	4022	;# 
   161   000FB6                     ECCPAS          equ	4022	;# 
   162   000FB7                     PWM1CON         equ	4023	;# 
   163   000FB7                     ECCP1DEL        equ	4023	;# 
   164   000FB8                     BAUDCON         equ	4024	;# 
   165   000FB8                     BAUDCTL         equ	4024	;# 
   166   000FBA                     CCP2CON         equ	4026	;# 
   167   000FBB                     CCPR2           equ	4027	;# 
   168   000FBB                     CCPR2L          equ	4027	;# 
   169   000FBC                     CCPR2H          equ	4028	;# 
   170   000FBD                     CCP1CON         equ	4029	;# 
   171   000FBE                     CCPR1           equ	4030	;# 
   172   000FBE                     CCPR1L          equ	4030	;# 
   173   000FBF                     CCPR1H          equ	4031	;# 
   174   000FC0                     ADCON2          equ	4032	;# 
   175   000FC1                     ADCON1          equ	4033	;# 
   176   000FC2                     ADCON0          equ	4034	;# 
   177   000FC3                     ADRES           equ	4035	;# 
   178   000FC3                     ADRESL          equ	4035	;# 
   179   000FC4                     ADRESH          equ	4036	;# 
   180   000FC5                     SSPCON2         equ	4037	;# 
   181   000FC6                     SSPCON1         equ	4038	;# 
   182   000FC7                     SSPSTAT         equ	4039	;# 
   183   000FC8                     SSPADD          equ	4040	;# 
   184   000FC9                     SSPBUF          equ	4041	;# 
   185   000FCA                     T2CON           equ	4042	;# 
   186   000FCB                     PR2             equ	4043	;# 
   187   000FCB                     MEMCON          equ	4043	;# 
   188   000FCC                     TMR2            equ	4044	;# 
   189   000FCD                     T1CON           equ	4045	;# 
   190   000FCE                     TMR1            equ	4046	;# 
   191   000FCE                     TMR1L           equ	4046	;# 
   192   000FCF                     TMR1H           equ	4047	;# 
   193   000FD0                     RCON            equ	4048	;# 
   194   000FD1                     WDTCON          equ	4049	;# 
   195   000FD2                     HLVDCON         equ	4050	;# 
   196   000FD2                     LVDCON          equ	4050	;# 
   197   000FD3                     OSCCON          equ	4051	;# 
   198   000FD5                     T0CON           equ	4053	;# 
   199   000FD6                     TMR0            equ	4054	;# 
   200   000FD6                     TMR0L           equ	4054	;# 
   201   000FD7                     TMR0H           equ	4055	;# 
   202   000FD8                     STATUS          equ	4056	;# 
   203   000FD9                     FSR2            equ	4057	;# 
   204   000FD9                     FSR2L           equ	4057	;# 
   205   000FDA                     FSR2H           equ	4058	;# 
   206   000FDB                     PLUSW2          equ	4059	;# 
   207   000FDC                     PREINC2         equ	4060	;# 
   208   000FDD                     POSTDEC2        equ	4061	;# 
   209   000FDE                     POSTINC2        equ	4062	;# 
   210   000FDF                     INDF2           equ	4063	;# 
   211   000FE0                     BSR             equ	4064	;# 
   212   000FE1                     FSR1            equ	4065	;# 
   213   000FE1                     FSR1L           equ	4065	;# 
   214   000FE2                     FSR1H           equ	4066	;# 
   215   000FE3                     PLUSW1          equ	4067	;# 
   216   000FE4                     PREINC1         equ	4068	;# 
   217   000FE5                     POSTDEC1        equ	4069	;# 
   218   000FE6                     POSTINC1        equ	4070	;# 
   219   000FE7                     INDF1           equ	4071	;# 
   220   000FE8                     WREG            equ	4072	;# 
   221   000FE9                     FSR0            equ	4073	;# 
   222   000FE9                     FSR0L           equ	4073	;# 
   223   000FEA                     FSR0H           equ	4074	;# 
   224   000FEB                     PLUSW0          equ	4075	;# 
   225   000FEC                     PREINC0         equ	4076	;# 
   226   000FED                     POSTDEC0        equ	4077	;# 
   227   000FEE                     POSTINC0        equ	4078	;# 
   228   000FEF                     INDF0           equ	4079	;# 
   229   000FF0                     INTCON3         equ	4080	;# 
   230   000FF1                     INTCON2         equ	4081	;# 
   231   000FF2                     INTCON          equ	4082	;# 
   232   000FF3                     PROD            equ	4083	;# 
   233   000FF3                     PRODL           equ	4083	;# 
   234   000FF4                     PRODH           equ	4084	;# 
   235   000FF5                     TABLAT          equ	4085	;# 
   236   000FF6                     TBLPTR          equ	4086	;# 
   237   000FF6                     TBLPTRL         equ	4086	;# 
   238   000FF7                     TBLPTRH         equ	4087	;# 
   239   000FF8                     TBLPTRU         equ	4088	;# 
   240   000FF9                     PCLAT           equ	4089	;# 
   241   000FF9                     PC              equ	4089	;# 
   242   000FF9                     PCL             equ	4089	;# 
   243   000FFA                     PCLATH          equ	4090	;# 
   244   000FFB                     PCLATU          equ	4091	;# 
   245   000FFC                     STKPTR          equ	4092	;# 
   246   000FFD                     TOS             equ	4093	;# 
   247   000FFD                     TOSL            equ	4093	;# 
   248   000FFE                     TOSH            equ	4094	;# 
   249   000FFF                     TOSU            equ	4095	;# 
   250   000F80                     PORTA           equ	3968	;# 
   251   000F81                     PORTB           equ	3969	;# 
   252   000F82                     PORTC           equ	3970	;# 
   253   000F83                     PORTD           equ	3971	;# 
   254   000F84                     PORTE           equ	3972	;# 
   255   000F89                     LATA            equ	3977	;# 
   256   000F8A                     LATB            equ	3978	;# 
   257   000F8B                     LATC            equ	3979	;# 
   258   000F8C                     LATD            equ	3980	;# 
   259   000F8D                     LATE            equ	3981	;# 
   260   000F92                     TRISA           equ	3986	;# 
   261   000F92                     DDRA            equ	3986	;# 
   262   000F93                     TRISB           equ	3987	;# 
   263   000F93                     DDRB            equ	3987	;# 
   264   000F94                     TRISC           equ	3988	;# 
   265   000F94                     DDRC            equ	3988	;# 
   266   000F95                     TRISD           equ	3989	;# 
   267   000F95                     DDRD            equ	3989	;# 
   268   000F96                     TRISE           equ	3990	;# 
   269   000F96                     DDRE            equ	3990	;# 
   270   000F9B                     OSCTUNE         equ	3995	;# 
   271   000F9D                     PIE1            equ	3997	;# 
   272   000F9E                     PIR1            equ	3998	;# 
   273   000F9F                     IPR1            equ	3999	;# 
   274   000FA0                     PIE2            equ	4000	;# 
   275   000FA1                     PIR2            equ	4001	;# 
   276   000FA2                     IPR2            equ	4002	;# 
   277   000FA6                     EECON1          equ	4006	;# 
   278   000FA7                     EECON2          equ	4007	;# 
   279   000FA8                     EEDATA          equ	4008	;# 
   280   000FA9                     EEADR           equ	4009	;# 
   281   000FAB                     RCSTA           equ	4011	;# 
   282   000FAB                     RCSTA1          equ	4011	;# 
   283   000FAC                     TXSTA           equ	4012	;# 
   284   000FAC                     TXSTA1          equ	4012	;# 
   285   000FAD                     TXREG           equ	4013	;# 
   286   000FAD                     TXREG1          equ	4013	;# 
   287   000FAE                     RCREG           equ	4014	;# 
   288   000FAE                     RCREG1          equ	4014	;# 
   289   000FAF                     SPBRG           equ	4015	;# 
   290   000FAF                     SPBRG1          equ	4015	;# 
   291   000FB0                     SPBRGH          equ	4016	;# 
   292   000FB1                     T3CON           equ	4017	;# 
   293   000FB2                     TMR3            equ	4018	;# 
   294   000FB2                     TMR3L           equ	4018	;# 
   295   000FB3                     TMR3H           equ	4019	;# 
   296   000FB4                     CMCON           equ	4020	;# 
   297   000FB5                     CVRCON          equ	4021	;# 
   298   000FB6                     ECCP1AS         equ	4022	;# 
   299   000FB6                     ECCPAS          equ	4022	;# 
   300   000FB7                     PWM1CON         equ	4023	;# 
   301   000FB7                     ECCP1DEL        equ	4023	;# 
   302   000FB8                     BAUDCON         equ	4024	;# 
   303   000FB8                     BAUDCTL         equ	4024	;# 
   304   000FBA                     CCP2CON         equ	4026	;# 
   305   000FBB                     CCPR2           equ	4027	;# 
   306   000FBB                     CCPR2L          equ	4027	;# 
   307   000FBC                     CCPR2H          equ	4028	;# 
   308   000FBD                     CCP1CON         equ	4029	;# 
   309   000FBE                     CCPR1           equ	4030	;# 
   310   000FBE                     CCPR1L          equ	4030	;# 
   311   000FBF                     CCPR1H          equ	4031	;# 
   312   000FC0                     ADCON2          equ	4032	;# 
   313   000FC1                     ADCON1          equ	4033	;# 
   314   000FC2                     ADCON0          equ	4034	;# 
   315   000FC3                     ADRES           equ	4035	;# 
   316   000FC3                     ADRESL          equ	4035	;# 
   317   000FC4                     ADRESH          equ	4036	;# 
   318   000FC5                     SSPCON2         equ	4037	;# 
   319   000FC6                     SSPCON1         equ	4038	;# 
   320   000FC7                     SSPSTAT         equ	4039	;# 
   321   000FC8                     SSPADD          equ	4040	;# 
   322   000FC9                     SSPBUF          equ	4041	;# 
   323   000FCA                     T2CON           equ	4042	;# 
   324   000FCB                     PR2             equ	4043	;# 
   325   000FCB                     MEMCON          equ	4043	;# 
   326   000FCC                     TMR2            equ	4044	;# 
   327   000FCD                     T1CON           equ	4045	;# 
   328   000FCE                     TMR1            equ	4046	;# 
   329   000FCE                     TMR1L           equ	4046	;# 
   330   000FCF                     TMR1H           equ	4047	;# 
   331   000FD0                     RCON            equ	4048	;# 
   332   000FD1                     WDTCON          equ	4049	;# 
   333   000FD2                     HLVDCON         equ	4050	;# 
   334   000FD2                     LVDCON          equ	4050	;# 
   335   000FD3                     OSCCON          equ	4051	;# 
   336   000FD5                     T0CON           equ	4053	;# 
   337   000FD6                     TMR0            equ	4054	;# 
   338   000FD6                     TMR0L           equ	4054	;# 
   339   000FD7                     TMR0H           equ	4055	;# 
   340   000FD8                     STATUS          equ	4056	;# 
   341   000FD9                     FSR2            equ	4057	;# 
   342   000FD9                     FSR2L           equ	4057	;# 
   343   000FDA                     FSR2H           equ	4058	;# 
   344   000FDB                     PLUSW2          equ	4059	;# 
   345   000FDC                     PREINC2         equ	4060	;# 
   346   000FDD                     POSTDEC2        equ	4061	;# 
   347   000FDE                     POSTINC2        equ	4062	;# 
   348   000FDF                     INDF2           equ	4063	;# 
   349   000FE0                     BSR             equ	4064	;# 
   350   000FE1                     FSR1            equ	4065	;# 
   351   000FE1                     FSR1L           equ	4065	;# 
   352   000FE2                     FSR1H           equ	4066	;# 
   353   000FE3                     PLUSW1          equ	4067	;# 
   354   000FE4                     PREINC1         equ	4068	;# 
   355   000FE5                     POSTDEC1        equ	4069	;# 
   356   000FE6                     POSTINC1        equ	4070	;# 
   357   000FE7                     INDF1           equ	4071	;# 
   358   000FE8                     WREG            equ	4072	;# 
   359   000FE9                     FSR0            equ	4073	;# 
   360   000FE9                     FSR0L           equ	4073	;# 
   361   000FEA                     FSR0H           equ	4074	;# 
   362   000FEB                     PLUSW0          equ	4075	;# 
   363   000FEC                     PREINC0         equ	4076	;# 
   364   000FED                     POSTDEC0        equ	4077	;# 
   365   000FEE                     POSTINC0        equ	4078	;# 
   366   000FEF                     INDF0           equ	4079	;# 
   367   000FF0                     INTCON3         equ	4080	;# 
   368   000FF1                     INTCON2         equ	4081	;# 
   369   000FF2                     INTCON          equ	4082	;# 
   370   000FF3                     PROD            equ	4083	;# 
   371   000FF3                     PRODL           equ	4083	;# 
   372   000FF4                     PRODH           equ	4084	;# 
   373   000FF5                     TABLAT          equ	4085	;# 
   374   000FF6                     TBLPTR          equ	4086	;# 
   375   000FF6                     TBLPTRL         equ	4086	;# 
   376   000FF7                     TBLPTRH         equ	4087	;# 
   377   000FF8                     TBLPTRU         equ	4088	;# 
   378   000FF9                     PCLAT           equ	4089	;# 
   379   000FF9                     PC              equ	4089	;# 
   380   000FF9                     PCL             equ	4089	;# 
   381   000FFA                     PCLATH          equ	4090	;# 
   382   000FFB                     PCLATU          equ	4091	;# 
   383   000FFC                     STKPTR          equ	4092	;# 
   384   000FFD                     TOS             equ	4093	;# 
   385   000FFD                     TOSL            equ	4093	;# 
   386   000FFE                     TOSH            equ	4094	;# 
   387   000FFF                     TOSU            equ	4095	;# 
   388   000F80                     PORTA           equ	3968	;# 
   389   000F81                     PORTB           equ	3969	;# 
   390   000F82                     PORTC           equ	3970	;# 
   391   000F83                     PORTD           equ	3971	;# 
   392   000F84                     PORTE           equ	3972	;# 
   393   000F89                     LATA            equ	3977	;# 
   394   000F8A                     LATB            equ	3978	;# 
   395   000F8B                     LATC            equ	3979	;# 
   396   000F8C                     LATD            equ	3980	;# 
   397   000F8D                     LATE            equ	3981	;# 
   398   000F92                     TRISA           equ	3986	;# 
   399   000F92                     DDRA            equ	3986	;# 
   400   000F93                     TRISB           equ	3987	;# 
   401   000F93                     DDRB            equ	3987	;# 
   402   000F94                     TRISC           equ	3988	;# 
   403   000F94                     DDRC            equ	3988	;# 
   404   000F95                     TRISD           equ	3989	;# 
   405   000F95                     DDRD            equ	3989	;# 
   406   000F96                     TRISE           equ	3990	;# 
   407   000F96                     DDRE            equ	3990	;# 
   408   000F9B                     OSCTUNE         equ	3995	;# 
   409   000F9D                     PIE1            equ	3997	;# 
   410   000F9E                     PIR1            equ	3998	;# 
   411   000F9F                     IPR1            equ	3999	;# 
   412   000FA0                     PIE2            equ	4000	;# 
   413   000FA1                     PIR2            equ	4001	;# 
   414   000FA2                     IPR2            equ	4002	;# 
   415   000FA6                     EECON1          equ	4006	;# 
   416   000FA7                     EECON2          equ	4007	;# 
   417   000FA8                     EEDATA          equ	4008	;# 
   418   000FA9                     EEADR           equ	4009	;# 
   419   000FAB                     RCSTA           equ	4011	;# 
   420   000FAB                     RCSTA1          equ	4011	;# 
   421   000FAC                     TXSTA           equ	4012	;# 
   422   000FAC                     TXSTA1          equ	4012	;# 
   423   000FAD                     TXREG           equ	4013	;# 
   424   000FAD                     TXREG1          equ	4013	;# 
   425   000FAE                     RCREG           equ	4014	;# 
   426   000FAE                     RCREG1          equ	4014	;# 
   427   000FAF                     SPBRG           equ	4015	;# 
   428   000FAF                     SPBRG1          equ	4015	;# 
   429   000FB0                     SPBRGH          equ	4016	;# 
   430   000FB1                     T3CON           equ	4017	;# 
   431   000FB2                     TMR3            equ	4018	;# 
   432   000FB2                     TMR3L           equ	4018	;# 
   433   000FB3                     TMR3H           equ	4019	;# 
   434   000FB4                     CMCON           equ	4020	;# 
   435   000FB5                     CVRCON          equ	4021	;# 
   436   000FB6                     ECCP1AS         equ	4022	;# 
   437   000FB6                     ECCPAS          equ	4022	;# 
   438   000FB7                     PWM1CON         equ	4023	;# 
   439   000FB7                     ECCP1DEL        equ	4023	;# 
   440   000FB8                     BAUDCON         equ	4024	;# 
   441   000FB8                     BAUDCTL         equ	4024	;# 
   442   000FBA                     CCP2CON         equ	4026	;# 
   443   000FBB                     CCPR2           equ	4027	;# 
   444   000FBB                     CCPR2L          equ	4027	;# 
   445   000FBC                     CCPR2H          equ	4028	;# 
   446   000FBD                     CCP1CON         equ	4029	;# 
   447   000FBE                     CCPR1           equ	4030	;# 
   448   000FBE                     CCPR1L          equ	4030	;# 
   449   000FBF                     CCPR1H          equ	4031	;# 
   450   000FC0                     ADCON2          equ	4032	;# 
   451   000FC1                     ADCON1          equ	4033	;# 
   452   000FC2                     ADCON0          equ	4034	;# 
   453   000FC3                     ADRES           equ	4035	;# 
   454   000FC3                     ADRESL          equ	4035	;# 
   455   000FC4                     ADRESH          equ	4036	;# 
   456   000FC5                     SSPCON2         equ	4037	;# 
   457   000FC6                     SSPCON1         equ	4038	;# 
   458   000FC7                     SSPSTAT         equ	4039	;# 
   459   000FC8                     SSPADD          equ	4040	;# 
   460   000FC9                     SSPBUF          equ	4041	;# 
   461   000FCA                     T2CON           equ	4042	;# 
   462   000FCB                     PR2             equ	4043	;# 
   463   000FCB                     MEMCON          equ	4043	;# 
   464   000FCC                     TMR2            equ	4044	;# 
   465   000FCD                     T1CON           equ	4045	;# 
   466   000FCE                     TMR1            equ	4046	;# 
   467   000FCE                     TMR1L           equ	4046	;# 
   468   000FCF                     TMR1H           equ	4047	;# 
   469   000FD0                     RCON            equ	4048	;# 
   470   000FD1                     WDTCON          equ	4049	;# 
   471   000FD2                     HLVDCON         equ	4050	;# 
   472   000FD2                     LVDCON          equ	4050	;# 
   473   000FD3                     OSCCON          equ	4051	;# 
   474   000FD5                     T0CON           equ	4053	;# 
   475   000FD6                     TMR0            equ	4054	;# 
   476   000FD6                     TMR0L           equ	4054	;# 
   477   000FD7                     TMR0H           equ	4055	;# 
   478   000FD8                     STATUS          equ	4056	;# 
   479   000FD9                     FSR2            equ	4057	;# 
   480   000FD9                     FSR2L           equ	4057	;# 
   481   000FDA                     FSR2H           equ	4058	;# 
   482   000FDB                     PLUSW2          equ	4059	;# 
   483   000FDC                     PREINC2         equ	4060	;# 
   484   000FDD                     POSTDEC2        equ	4061	;# 
   485   000FDE                     POSTINC2        equ	4062	;# 
   486   000FDF                     INDF2           equ	4063	;# 
   487   000FE0                     BSR             equ	4064	;# 
   488   000FE1                     FSR1            equ	4065	;# 
   489   000FE1                     FSR1L           equ	4065	;# 
   490   000FE2                     FSR1H           equ	4066	;# 
   491   000FE3                     PLUSW1          equ	4067	;# 
   492   000FE4                     PREINC1         equ	4068	;# 
   493   000FE5                     POSTDEC1        equ	4069	;# 
   494   000FE6                     POSTINC1        equ	4070	;# 
   495   000FE7                     INDF1           equ	4071	;# 
   496   000FE8                     WREG            equ	4072	;# 
   497   000FE9                     FSR0            equ	4073	;# 
   498   000FE9                     FSR0L           equ	4073	;# 
   499   000FEA                     FSR0H           equ	4074	;# 
   500   000FEB                     PLUSW0          equ	4075	;# 
   501   000FEC                     PREINC0         equ	4076	;# 
   502   000FED                     POSTDEC0        equ	4077	;# 
   503   000FEE                     POSTINC0        equ	4078	;# 
   504   000FEF                     INDF0           equ	4079	;# 
   505   000FF0                     INTCON3         equ	4080	;# 
   506   000FF1                     INTCON2         equ	4081	;# 
   507   000FF2                     INTCON          equ	4082	;# 
   508   000FF3                     PROD            equ	4083	;# 
   509   000FF3                     PRODL           equ	4083	;# 
   510   000FF4                     PRODH           equ	4084	;# 
   511   000FF5                     TABLAT          equ	4085	;# 
   512   000FF6                     TBLPTR          equ	4086	;# 
   513   000FF6                     TBLPTRL         equ	4086	;# 
   514   000FF7                     TBLPTRH         equ	4087	;# 
   515   000FF8                     TBLPTRU         equ	4088	;# 
   516   000FF9                     PCLAT           equ	4089	;# 
   517   000FF9                     PC              equ	4089	;# 
   518   000FF9                     PCL             equ	4089	;# 
   519   000FFA                     PCLATH          equ	4090	;# 
   520   000FFB                     PCLATU          equ	4091	;# 
   521   000FFC                     STKPTR          equ	4092	;# 
   522   000FFD                     TOS             equ	4093	;# 
   523   000FFD                     TOSL            equ	4093	;# 
   524   000FFE                     TOSH            equ	4094	;# 
   525   000FFF                     TOSU            equ	4095	;# 
   526   000F80                     PORTA           equ	3968	;# 
   527   000F81                     PORTB           equ	3969	;# 
   528   000F82                     PORTC           equ	3970	;# 
   529   000F83                     PORTD           equ	3971	;# 
   530   000F84                     PORTE           equ	3972	;# 
   531   000F89                     LATA            equ	3977	;# 
   532   000F8A                     LATB            equ	3978	;# 
   533   000F8B                     LATC            equ	3979	;# 
   534   000F8C                     LATD            equ	3980	;# 
   535   000F8D                     LATE            equ	3981	;# 
   536   000F92                     TRISA           equ	3986	;# 
   537   000F92                     DDRA            equ	3986	;# 
   538   000F93                     TRISB           equ	3987	;# 
   539   000F93                     DDRB            equ	3987	;# 
   540   000F94                     TRISC           equ	3988	;# 
   541   000F94                     DDRC            equ	3988	;# 
   542   000F95                     TRISD           equ	3989	;# 
   543   000F95                     DDRD            equ	3989	;# 
   544   000F96                     TRISE           equ	3990	;# 
   545   000F96                     DDRE            equ	3990	;# 
   546   000F9B                     OSCTUNE         equ	3995	;# 
   547   000F9D                     PIE1            equ	3997	;# 
   548   000F9E                     PIR1            equ	3998	;# 
   549   000F9F                     IPR1            equ	3999	;# 
   550   000FA0                     PIE2            equ	4000	;# 
   551   000FA1                     PIR2            equ	4001	;# 
   552   000FA2                     IPR2            equ	4002	;# 
   553   000FA6                     EECON1          equ	4006	;# 
   554   000FA7                     EECON2          equ	4007	;# 
   555   000FA8                     EEDATA          equ	4008	;# 
   556   000FA9                     EEADR           equ	4009	;# 
   557   000FAB                     RCSTA           equ	4011	;# 
   558   000FAB                     RCSTA1          equ	4011	;# 
   559   000FAC                     TXSTA           equ	4012	;# 
   560   000FAC                     TXSTA1          equ	4012	;# 
   561   000FAD                     TXREG           equ	4013	;# 
   562   000FAD                     TXREG1          equ	4013	;# 
   563   000FAE                     RCREG           equ	4014	;# 
   564   000FAE                     RCREG1          equ	4014	;# 
   565   000FAF                     SPBRG           equ	4015	;# 
   566   000FAF                     SPBRG1          equ	4015	;# 
   567   000FB0                     SPBRGH          equ	4016	;# 
   568   000FB1                     T3CON           equ	4017	;# 
   569   000FB2                     TMR3            equ	4018	;# 
   570   000FB2                     TMR3L           equ	4018	;# 
   571   000FB3                     TMR3H           equ	4019	;# 
   572   000FB4                     CMCON           equ	4020	;# 
   573   000FB5                     CVRCON          equ	4021	;# 
   574   000FB6                     ECCP1AS         equ	4022	;# 
   575   000FB6                     ECCPAS          equ	4022	;# 
   576   000FB7                     PWM1CON         equ	4023	;# 
   577   000FB7                     ECCP1DEL        equ	4023	;# 
   578   000FB8                     BAUDCON         equ	4024	;# 
   579   000FB8                     BAUDCTL         equ	4024	;# 
   580   000FBA                     CCP2CON         equ	4026	;# 
   581   000FBB                     CCPR2           equ	4027	;# 
   582   000FBB                     CCPR2L          equ	4027	;# 
   583   000FBC                     CCPR2H          equ	4028	;# 
   584   000FBD                     CCP1CON         equ	4029	;# 
   585   000FBE                     CCPR1           equ	4030	;# 
   586   000FBE                     CCPR1L          equ	4030	;# 
   587   000FBF                     CCPR1H          equ	4031	;# 
   588   000FC0                     ADCON2          equ	4032	;# 
   589   000FC1                     ADCON1          equ	4033	;# 
   590   000FC2                     ADCON0          equ	4034	;# 
   591   000FC3                     ADRES           equ	4035	;# 
   592   000FC3                     ADRESL          equ	4035	;# 
   593   000FC4                     ADRESH          equ	4036	;# 
   594   000FC5                     SSPCON2         equ	4037	;# 
   595   000FC6                     SSPCON1         equ	4038	;# 
   596   000FC7                     SSPSTAT         equ	4039	;# 
   597   000FC8                     SSPADD          equ	4040	;# 
   598   000FC9                     SSPBUF          equ	4041	;# 
   599   000FCA                     T2CON           equ	4042	;# 
   600   000FCB                     PR2             equ	4043	;# 
   601   000FCB                     MEMCON          equ	4043	;# 
   602   000FCC                     TMR2            equ	4044	;# 
   603   000FCD                     T1CON           equ	4045	;# 
   604   000FCE                     TMR1            equ	4046	;# 
   605   000FCE                     TMR1L           equ	4046	;# 
   606   000FCF                     TMR1H           equ	4047	;# 
   607   000FD0                     RCON            equ	4048	;# 
   608   000FD1                     WDTCON          equ	4049	;# 
   609   000FD2                     HLVDCON         equ	4050	;# 
   610   000FD2                     LVDCON          equ	4050	;# 
   611   000FD3                     OSCCON          equ	4051	;# 
   612   000FD5                     T0CON           equ	4053	;# 
   613   000FD6                     TMR0            equ	4054	;# 
   614   000FD6                     TMR0L           equ	4054	;# 
   615   000FD7                     TMR0H           equ	4055	;# 
   616   000FD8                     STATUS          equ	4056	;# 
   617   000FD9                     FSR2            equ	4057	;# 
   618   000FD9                     FSR2L           equ	4057	;# 
   619   000FDA                     FSR2H           equ	4058	;# 
   620   000FDB                     PLUSW2          equ	4059	;# 
   621   000FDC                     PREINC2         equ	4060	;# 
   622   000FDD                     POSTDEC2        equ	4061	;# 
   623   000FDE                     POSTINC2        equ	4062	;# 
   624   000FDF                     INDF2           equ	4063	;# 
   625   000FE0                     BSR             equ	4064	;# 
   626   000FE1                     FSR1            equ	4065	;# 
   627   000FE1                     FSR1L           equ	4065	;# 
   628   000FE2                     FSR1H           equ	4066	;# 
   629   000FE3                     PLUSW1          equ	4067	;# 
   630   000FE4                     PREINC1         equ	4068	;# 
   631   000FE5                     POSTDEC1        equ	4069	;# 
   632   000FE6                     POSTINC1        equ	4070	;# 
   633   000FE7                     INDF1           equ	4071	;# 
   634   000FE8                     WREG            equ	4072	;# 
   635   000FE9                     FSR0            equ	4073	;# 
   636   000FE9                     FSR0L           equ	4073	;# 
   637   000FEA                     FSR0H           equ	4074	;# 
   638   000FEB                     PLUSW0          equ	4075	;# 
   639   000FEC                     PREINC0         equ	4076	;# 
   640   000FED                     POSTDEC0        equ	4077	;# 
   641   000FEE                     POSTINC0        equ	4078	;# 
   642   000FEF                     INDF0           equ	4079	;# 
   643   000FF0                     INTCON3         equ	4080	;# 
   644   000FF1                     INTCON2         equ	4081	;# 
   645   000FF2                     INTCON          equ	4082	;# 
   646   000FF3                     PROD            equ	4083	;# 
   647   000FF3                     PRODL           equ	4083	;# 
   648   000FF4                     PRODH           equ	4084	;# 
   649   000FF5                     TABLAT          equ	4085	;# 
   650   000FF6                     TBLPTR          equ	4086	;# 
   651   000FF6                     TBLPTRL         equ	4086	;# 
   652   000FF7                     TBLPTRH         equ	4087	;# 
   653   000FF8                     TBLPTRU         equ	4088	;# 
   654   000FF9                     PCLAT           equ	4089	;# 
   655   000FF9                     PC              equ	4089	;# 
   656   000FF9                     PCL             equ	4089	;# 
   657   000FFA                     PCLATH          equ	4090	;# 
   658   000FFB                     PCLATU          equ	4091	;# 
   659   000FFC                     STKPTR          equ	4092	;# 
   660   000FFD                     TOS             equ	4093	;# 
   661   000FFD                     TOSL            equ	4093	;# 
   662   000FFE                     TOSH            equ	4094	;# 
   663   000FFF                     TOSU            equ	4095	;# 
   664   000F80                     PORTA           equ	3968	;# 
   665   000F81                     PORTB           equ	3969	;# 
   666   000F82                     PORTC           equ	3970	;# 
   667   000F83                     PORTD           equ	3971	;# 
   668   000F84                     PORTE           equ	3972	;# 
   669   000F89                     LATA            equ	3977	;# 
   670   000F8A                     LATB            equ	3978	;# 
   671   000F8B                     LATC            equ	3979	;# 
   672   000F8C                     LATD            equ	3980	;# 
   673   000F8D                     LATE            equ	3981	;# 
   674   000F92                     TRISA           equ	3986	;# 
   675   000F92                     DDRA            equ	3986	;# 
   676   000F93                     TRISB           equ	3987	;# 
   677   000F93                     DDRB            equ	3987	;# 
   678   000F94                     TRISC           equ	3988	;# 
   679   000F94                     DDRC            equ	3988	;# 
   680   000F95                     TRISD           equ	3989	;# 
   681   000F95                     DDRD            equ	3989	;# 
   682   000F96                     TRISE           equ	3990	;# 
   683   000F96                     DDRE            equ	3990	;# 
   684   000F9B                     OSCTUNE         equ	3995	;# 
   685   000F9D                     PIE1            equ	3997	;# 
   686   000F9E                     PIR1            equ	3998	;# 
   687   000F9F                     IPR1            equ	3999	;# 
   688   000FA0                     PIE2            equ	4000	;# 
   689   000FA1                     PIR2            equ	4001	;# 
   690   000FA2                     IPR2            equ	4002	;# 
   691   000FA6                     EECON1          equ	4006	;# 
   692   000FA7                     EECON2          equ	4007	;# 
   693   000FA8                     EEDATA          equ	4008	;# 
   694   000FA9                     EEADR           equ	4009	;# 
   695   000FAB                     RCSTA           equ	4011	;# 
   696   000FAB                     RCSTA1          equ	4011	;# 
   697   000FAC                     TXSTA           equ	4012	;# 
   698   000FAC                     TXSTA1          equ	4012	;# 
   699   000FAD                     TXREG           equ	4013	;# 
   700   000FAD                     TXREG1          equ	4013	;# 
   701   000FAE                     RCREG           equ	4014	;# 
   702   000FAE                     RCREG1          equ	4014	;# 
   703   000FAF                     SPBRG           equ	4015	;# 
   704   000FAF                     SPBRG1          equ	4015	;# 
   705   000FB0                     SPBRGH          equ	4016	;# 
   706   000FB1                     T3CON           equ	4017	;# 
   707   000FB2                     TMR3            equ	4018	;# 
   708   000FB2                     TMR3L           equ	4018	;# 
   709   000FB3                     TMR3H           equ	4019	;# 
   710   000FB4                     CMCON           equ	4020	;# 
   711   000FB5                     CVRCON          equ	4021	;# 
   712   000FB6                     ECCP1AS         equ	4022	;# 
   713   000FB6                     ECCPAS          equ	4022	;# 
   714   000FB7                     PWM1CON         equ	4023	;# 
   715   000FB7                     ECCP1DEL        equ	4023	;# 
   716   000FB8                     BAUDCON         equ	4024	;# 
   717   000FB8                     BAUDCTL         equ	4024	;# 
   718   000FBA                     CCP2CON         equ	4026	;# 
   719   000FBB                     CCPR2           equ	4027	;# 
   720   000FBB                     CCPR2L          equ	4027	;# 
   721   000FBC                     CCPR2H          equ	4028	;# 
   722   000FBD                     CCP1CON         equ	4029	;# 
   723   000FBE                     CCPR1           equ	4030	;# 
   724   000FBE                     CCPR1L          equ	4030	;# 
   725   000FBF                     CCPR1H          equ	4031	;# 
   726   000FC0                     ADCON2          equ	4032	;# 
   727   000FC1                     ADCON1          equ	4033	;# 
   728   000FC2                     ADCON0          equ	4034	;# 
   729   000FC3                     ADRES           equ	4035	;# 
   730   000FC3                     ADRESL          equ	4035	;# 
   731   000FC4                     ADRESH          equ	4036	;# 
   732   000FC5                     SSPCON2         equ	4037	;# 
   733   000FC6                     SSPCON1         equ	4038	;# 
   734   000FC7                     SSPSTAT         equ	4039	;# 
   735   000FC8                     SSPADD          equ	4040	;# 
   736   000FC9                     SSPBUF          equ	4041	;# 
   737   000FCA                     T2CON           equ	4042	;# 
   738   000FCB                     PR2             equ	4043	;# 
   739   000FCB                     MEMCON          equ	4043	;# 
   740   000FCC                     TMR2            equ	4044	;# 
   741   000FCD                     T1CON           equ	4045	;# 
   742   000FCE                     TMR1            equ	4046	;# 
   743   000FCE                     TMR1L           equ	4046	;# 
   744   000FCF                     TMR1H           equ	4047	;# 
   745   000FD0                     RCON            equ	4048	;# 
   746   000FD1                     WDTCON          equ	4049	;# 
   747   000FD2                     HLVDCON         equ	4050	;# 
   748   000FD2                     LVDCON          equ	4050	;# 
   749   000FD3                     OSCCON          equ	4051	;# 
   750   000FD5                     T0CON           equ	4053	;# 
   751   000FD6                     TMR0            equ	4054	;# 
   752   000FD6                     TMR0L           equ	4054	;# 
   753   000FD7                     TMR0H           equ	4055	;# 
   754   000FD8                     STATUS          equ	4056	;# 
   755   000FD9                     FSR2            equ	4057	;# 
   756   000FD9                     FSR2L           equ	4057	;# 
   757   000FDA                     FSR2H           equ	4058	;# 
   758   000FDB                     PLUSW2          equ	4059	;# 
   759   000FDC                     PREINC2         equ	4060	;# 
   760   000FDD                     POSTDEC2        equ	4061	;# 
   761   000FDE                     POSTINC2        equ	4062	;# 
   762   000FDF                     INDF2           equ	4063	;# 
   763   000FE0                     BSR             equ	4064	;# 
   764   000FE1                     FSR1            equ	4065	;# 
   765   000FE1                     FSR1L           equ	4065	;# 
   766   000FE2                     FSR1H           equ	4066	;# 
   767   000FE3                     PLUSW1          equ	4067	;# 
   768   000FE4                     PREINC1         equ	4068	;# 
   769   000FE5                     POSTDEC1        equ	4069	;# 
   770   000FE6                     POSTINC1        equ	4070	;# 
   771   000FE7                     INDF1           equ	4071	;# 
   772   000FE8                     WREG            equ	4072	;# 
   773   000FE9                     FSR0            equ	4073	;# 
   774   000FE9                     FSR0L           equ	4073	;# 
   775   000FEA                     FSR0H           equ	4074	;# 
   776   000FEB                     PLUSW0          equ	4075	;# 
   777   000FEC                     PREINC0         equ	4076	;# 
   778   000FED                     POSTDEC0        equ	4077	;# 
   779   000FEE                     POSTINC0        equ	4078	;# 
   780   000FEF                     INDF0           equ	4079	;# 
   781   000FF0                     INTCON3         equ	4080	;# 
   782   000FF1                     INTCON2         equ	4081	;# 
   783   000FF2                     INTCON          equ	4082	;# 
   784   000FF3                     PROD            equ	4083	;# 
   785   000FF3                     PRODL           equ	4083	;# 
   786   000FF4                     PRODH           equ	4084	;# 
   787   000FF5                     TABLAT          equ	4085	;# 
   788   000FF6                     TBLPTR          equ	4086	;# 
   789   000FF6                     TBLPTRL         equ	4086	;# 
   790   000FF7                     TBLPTRH         equ	4087	;# 
   791   000FF8                     TBLPTRU         equ	4088	;# 
   792   000FF9                     PCLAT           equ	4089	;# 
   793   000FF9                     PC              equ	4089	;# 
   794   000FF9                     PCL             equ	4089	;# 
   795   000FFA                     PCLATH          equ	4090	;# 
   796   000FFB                     PCLATU          equ	4091	;# 
   797   000FFC                     STKPTR          equ	4092	;# 
   798   000FFD                     TOS             equ	4093	;# 
   799   000FFD                     TOSL            equ	4093	;# 
   800   000FFE                     TOSH            equ	4094	;# 
   801   000FFF                     TOSU            equ	4095	;# 
   802   000F80                     PORTA           equ	3968	;# 
   803   000F81                     PORTB           equ	3969	;# 
   804   000F82                     PORTC           equ	3970	;# 
   805   000F83                     PORTD           equ	3971	;# 
   806   000F84                     PORTE           equ	3972	;# 
   807   000F89                     LATA            equ	3977	;# 
   808   000F8A                     LATB            equ	3978	;# 
   809   000F8B                     LATC            equ	3979	;# 
   810   000F8C                     LATD            equ	3980	;# 
   811   000F8D                     LATE            equ	3981	;# 
   812   000F92                     TRISA           equ	3986	;# 
   813   000F92                     DDRA            equ	3986	;# 
   814   000F93                     TRISB           equ	3987	;# 
   815   000F93                     DDRB            equ	3987	;# 
   816   000F94                     TRISC           equ	3988	;# 
   817   000F94                     DDRC            equ	3988	;# 
   818   000F95                     TRISD           equ	3989	;# 
   819   000F95                     DDRD            equ	3989	;# 
   820   000F96                     TRISE           equ	3990	;# 
   821   000F96                     DDRE            equ	3990	;# 
   822   000F9B                     OSCTUNE         equ	3995	;# 
   823   000F9D                     PIE1            equ	3997	;# 
   824   000F9E                     PIR1            equ	3998	;# 
   825   000F9F                     IPR1            equ	3999	;# 
   826   000FA0                     PIE2            equ	4000	;# 
   827   000FA1                     PIR2            equ	4001	;# 
   828   000FA2                     IPR2            equ	4002	;# 
   829   000FA6                     EECON1          equ	4006	;# 
   830   000FA7                     EECON2          equ	4007	;# 
   831   000FA8                     EEDATA          equ	4008	;# 
   832   000FA9                     EEADR           equ	4009	;# 
   833   000FAB                     RCSTA           equ	4011	;# 
   834   000FAB                     RCSTA1          equ	4011	;# 
   835   000FAC                     TXSTA           equ	4012	;# 
   836   000FAC                     TXSTA1          equ	4012	;# 
   837   000FAD                     TXREG           equ	4013	;# 
   838   000FAD                     TXREG1          equ	4013	;# 
   839   000FAE                     RCREG           equ	4014	;# 
   840   000FAE                     RCREG1          equ	4014	;# 
   841   000FAF                     SPBRG           equ	4015	;# 
   842   000FAF                     SPBRG1          equ	4015	;# 
   843   000FB0                     SPBRGH          equ	4016	;# 
   844   000FB1                     T3CON           equ	4017	;# 
   845   000FB2                     TMR3            equ	4018	;# 
   846   000FB2                     TMR3L           equ	4018	;# 
   847   000FB3                     TMR3H           equ	4019	;# 
   848   000FB4                     CMCON           equ	4020	;# 
   849   000FB5                     CVRCON          equ	4021	;# 
   850   000FB6                     ECCP1AS         equ	4022	;# 
   851   000FB6                     ECCPAS          equ	4022	;# 
   852   000FB7                     PWM1CON         equ	4023	;# 
   853   000FB7                     ECCP1DEL        equ	4023	;# 
   854   000FB8                     BAUDCON         equ	4024	;# 
   855   000FB8                     BAUDCTL         equ	4024	;# 
   856   000FBA                     CCP2CON         equ	4026	;# 
   857   000FBB                     CCPR2           equ	4027	;# 
   858   000FBB                     CCPR2L          equ	4027	;# 
   859   000FBC                     CCPR2H          equ	4028	;# 
   860   000FBD                     CCP1CON         equ	4029	;# 
   861   000FBE                     CCPR1           equ	4030	;# 
   862   000FBE                     CCPR1L          equ	4030	;# 
   863   000FBF                     CCPR1H          equ	4031	;# 
   864   000FC0                     ADCON2          equ	4032	;# 
   865   000FC1                     ADCON1          equ	4033	;# 
   866   000FC2                     ADCON0          equ	4034	;# 
   867   000FC3                     ADRES           equ	4035	;# 
   868   000FC3                     ADRESL          equ	4035	;# 
   869   000FC4                     ADRESH          equ	4036	;# 
   870   000FC5                     SSPCON2         equ	4037	;# 
   871   000FC6                     SSPCON1         equ	4038	;# 
   872   000FC7                     SSPSTAT         equ	4039	;# 
   873   000FC8                     SSPADD          equ	4040	;# 
   874   000FC9                     SSPBUF          equ	4041	;# 
   875   000FCA                     T2CON           equ	4042	;# 
   876   000FCB                     PR2             equ	4043	;# 
   877   000FCB                     MEMCON          equ	4043	;# 
   878   000FCC                     TMR2            equ	4044	;# 
   879   000FCD                     T1CON           equ	4045	;# 
   880   000FCE                     TMR1            equ	4046	;# 
   881   000FCE                     TMR1L           equ	4046	;# 
   882   000FCF                     TMR1H           equ	4047	;# 
   883   000FD0                     RCON            equ	4048	;# 
   884   000FD1                     WDTCON          equ	4049	;# 
   885   000FD2                     HLVDCON         equ	4050	;# 
   886   000FD2                     LVDCON          equ	4050	;# 
   887   000FD3                     OSCCON          equ	4051	;# 
   888   000FD5                     T0CON           equ	4053	;# 
   889   000FD6                     TMR0            equ	4054	;# 
   890   000FD6                     TMR0L           equ	4054	;# 
   891   000FD7                     TMR0H           equ	4055	;# 
   892   000FD8                     STATUS          equ	4056	;# 
   893   000FD9                     FSR2            equ	4057	;# 
   894   000FD9                     FSR2L           equ	4057	;# 
   895   000FDA                     FSR2H           equ	4058	;# 
   896   000FDB                     PLUSW2          equ	4059	;# 
   897   000FDC                     PREINC2         equ	4060	;# 
   898   000FDD                     POSTDEC2        equ	4061	;# 
   899   000FDE                     POSTINC2        equ	4062	;# 
   900   000FDF                     INDF2           equ	4063	;# 
   901   000FE0                     BSR             equ	4064	;# 
   902   000FE1                     FSR1            equ	4065	;# 
   903   000FE1                     FSR1L           equ	4065	;# 
   904   000FE2                     FSR1H           equ	4066	;# 
   905   000FE3                     PLUSW1          equ	4067	;# 
   906   000FE4                     PREINC1         equ	4068	;# 
   907   000FE5                     POSTDEC1        equ	4069	;# 
   908   000FE6                     POSTINC1        equ	4070	;# 
   909   000FE7                     INDF1           equ	4071	;# 
   910   000FE8                     WREG            equ	4072	;# 
   911   000FE9                     FSR0            equ	4073	;# 
   912   000FE9                     FSR0L           equ	4073	;# 
   913   000FEA                     FSR0H           equ	4074	;# 
   914   000FEB                     PLUSW0          equ	4075	;# 
   915   000FEC                     PREINC0         equ	4076	;# 
   916   000FED                     POSTDEC0        equ	4077	;# 
   917   000FEE                     POSTINC0        equ	4078	;# 
   918   000FEF                     INDF0           equ	4079	;# 
   919   000FF0                     INTCON3         equ	4080	;# 
   920   000FF1                     INTCON2         equ	4081	;# 
   921   000FF2                     INTCON          equ	4082	;# 
   922   000FF3                     PROD            equ	4083	;# 
   923   000FF3                     PRODL           equ	4083	;# 
   924   000FF4                     PRODH           equ	4084	;# 
   925   000FF5                     TABLAT          equ	4085	;# 
   926   000FF6                     TBLPTR          equ	4086	;# 
   927   000FF6                     TBLPTRL         equ	4086	;# 
   928   000FF7                     TBLPTRH         equ	4087	;# 
   929   000FF8                     TBLPTRU         equ	4088	;# 
   930   000FF9                     PCLAT           equ	4089	;# 
   931   000FF9                     PC              equ	4089	;# 
   932   000FF9                     PCL             equ	4089	;# 
   933   000FFA                     PCLATH          equ	4090	;# 
   934   000FFB                     PCLATU          equ	4091	;# 
   935   000FFC                     STKPTR          equ	4092	;# 
   936   000FFD                     TOS             equ	4093	;# 
   937   000FFD                     TOSL            equ	4093	;# 
   938   000FFE                     TOSH            equ	4094	;# 
   939   000FFF                     TOSU            equ	4095	;# 
   940   007CF1                     _TMR2IF         set	31985
   941   007D5C                     _CREN           set	32092
   942   007CF5                     _RCIF           set	31989
   943   007E9C                     _IRCF0          set	32412
   944   007E9D                     _IRCF1          set	32413
   945   007E9E                     _IRCF2          set	32414
   946   007E07                     _ADFM           set	32263
   947   000F89                     _LATAbits       set	3977
   948   000F92                     _TRISAbits      set	3986
   949   000F89                     _LATA           set	3977
   950   000F94                     _TRISCbits      set	3988
   951   000F92                     _TRISA          set	3986
   952   000FAE                     _RCREG          set	4014
   953   000FAD                     _TXREG          set	4013
   954   000FAB                     _RCSTAbits      set	4011
   955   000FAF                     _SPBRG          set	4015
   956   000FB8                     _BAUDCONbits    set	4024
   957   000FAC                     _TXSTAbits      set	4012
   958   000FCB                     _PR2            set	4043
   959   000FCA                     _T2CON          set	4042
   960   000F9D                     _PIE1bits       set	3997
   961   000FD0                     _RCONbits       set	4048
   962   000F9F                     _IPR1bits       set	3999
   963   000F9E                     _PIR1bits       set	3998
   964   000FBD                     _CCP1CON        set	4029
   965   000FC2                     _ADCON0bits     set	4034
   966   000FC3                     _ADRESL         set	4035
   967   000FC4                     _ADRESH         set	4036
   968   000FC0                     _ADCON2bits     set	4032
   969   000FC1                     _ADCON1         set	4033
   970   000FF2                     _INTCONbits     set	4082
   971                           
   972                           	psect	smallconst
   973   000600                     __psmallconst:
   974                           	callstack 0
   975   000600  00                 	db	0
   976   000601                     STR_1:
   977   000601  0D                 	db	13
   978   000602  0A                 	db	10
   979   000603  00                 	db	0
   980   000603                     STR_2           equ	STR_1+2
   981   000603                     STR_3           equ	STR_1+2
   982   000603                     STR_4           equ	STR_1+2
   983   000603                     STR_5           equ	STR_1+2
   984   000603                     STR_6           equ	STR_1+2
   985   000604  00                 	db	0	; dummy byte at the end
   986   000002                     __activetblptr  equ	2
   987                           
   988                           ; #config settings
   989                           
   990                           	psect	cinit
   991   0008AA                     __pcinit:
   992                           	callstack 0
   993   0008AA                     start_initialization:
   994                           	callstack 0
   995   0008AA                     __initialization:
   996                           	callstack 0
   997                           
   998                           ; Clear objects allocated to COMRAM (48 bytes)
   999   0008AA  EE00  F001         	lfsr	0,__pbssCOMRAM
  1000   0008AE  0E30               	movlw	48
  1001   0008B0                     clear_0:
  1002   0008B0  6AEE               	clrf	postinc0,c
  1003   0008B2  06E8               	decf	wreg,f,c
  1004   0008B4  E1FD               	bnz	clear_0
  1005   0008B6                     end_of_initialization:
  1006                           	callstack 0
  1007   0008B6                     __end_of__initialization:
  1008                           	callstack 0
  1009   0008B6  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1010   0008B8  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1011   0008BA  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1012   0008BC  6EF8               	movwf	tblptru,c
  1013   0008BE  0100               	movlb	0
  1014   0008C0  EF03  F003         	goto	_main	;jump to C main() function
  1015                           
  1016                           	psect	bssCOMRAM
  1017   000001                     __pbssCOMRAM:
  1018                           	callstack 0
  1019   000001                     _str:
  1020                           	callstack 0
  1021   000001                     	ds	20
  1022   000015                     _postpostscaler:
  1023                           	callstack 0
  1024   000015                     	ds	2
  1025   000017                     _dir:
  1026                           	callstack 0
  1027   000017                     	ds	2
  1028   000019                     _state:
  1029                           	callstack 0
  1030   000019                     	ds	2
  1031   00001B                     _lenStr:
  1032                           	callstack 0
  1033   00001B                     	ds	2
  1034   00001D                     _mystring:
  1035                           	callstack 0
  1036   00001D                     	ds	20
  1037                           
  1038                           	psect	cstackBANK0
  1039   000080                     __pcstackBANK0:
  1040                           	callstack 0
  1041   000080                     displayBinary@num:
  1042                           	callstack 0
  1043   000080                     
  1044                           ; 1 bytes @ 0x0
  1045   000080                     	ds	2
  1046   000082                     ??_displayBinary:
  1047                           
  1048                           ; 1 bytes @ 0x2
  1049   000082                     	ds	1
  1050   000083                     ledRightOn@num:
  1051                           	callstack 0
  1052   000083                     ledOff@num:
  1053                           	callstack 0
  1054   000083                     ledLeftOn@num:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x3
  1058   000083                     	ds	2
  1059   000085                     ??_main:
  1060                           
  1061                           ; 1 bytes @ 0x5
  1062   000085                     	ds	2
  1063                           
  1064                           	psect	cstackCOMRAM
  1065   000031                     __pcstackCOMRAM:
  1066                           	callstack 0
  1067   000031                     ?_strlen:
  1068                           	callstack 0
  1069   000031                     UART_Write@data:
  1070                           	callstack 0
  1071   000031                     strlen@s:
  1072                           	callstack 0
  1073   000031                     ClearBuffer@i:
  1074                           	callstack 0
  1075   000031                     
  1076                           ; 1 bytes @ 0x0
  1077   000031                     	ds	1
  1078   000032                     UART_Write_Text@text:
  1079                           	callstack 0
  1080                           
  1081                           ; 1 bytes @ 0x1
  1082   000032                     	ds	1
  1083   000033                     strcpy@dest:
  1084                           	callstack 0
  1085   000033                     strlen@a:
  1086                           	callstack 0
  1087   000033                     ??_UART_Write_Text:
  1088                           
  1089                           ; 1 bytes @ 0x2
  1090   000033                     	ds	1
  1091   000034                     UART_Write_Text@i:
  1092                           	callstack 0
  1093   000034                     strcpy@src:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x3
  1097   000034                     	ds	2
  1098   000036                     MyusartRead@receivedData:
  1099                           	callstack 0
  1100   000036                     ??_strcpy:
  1101   000036                     
  1102                           ; 1 bytes @ 0x5
  1103   000036                     	ds	2
  1104   000038                     strcpy@d:
  1105                           	callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x7
  1108   000038                     	ds	1
  1109   000039                     ??_Lo_ISR:
  1110                           
  1111                           ; 1 bytes @ 0x8
  1112   000039                     	ds	13
  1113   000046                     Lo_ISR@command:
  1114                           	callstack 0
  1115                           
  1116                           ; 20 bytes @ 0x15
  1117   000046                     	ds	20
  1118                           
  1119 ;;
  1120 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1121 ;;
  1122 ;; *************** function _main *****************
  1123 ;; Defined at:
  1124 ;;		line 58 in file "main.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;		None
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;		None
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		wreg, status,2, status,0, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1138 ;;      Params:         0       0       0       0       0       0       0
  1139 ;;      Locals:         0       0       0       0       0       0       0
  1140 ;;      Temps:          0       2       0       0       0       0       0
  1141 ;;      Totals:         0       2       0       0       0       0       0
  1142 ;;Total ram usage:        2 bytes
  1143 ;; Hardware stack levels required when called: 7
  1144 ;; This function calls:
  1145 ;;		_SYSTEM_Initialize
  1146 ;;		_displayBinary
  1147 ;;		_initialState
  1148 ;;		_ledLeftOn
  1149 ;;		_ledOff
  1150 ;;		_ledRightOn
  1151 ;; This function is called by:
  1152 ;;		Startup code after reset
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text0
  1157   000606                     __ptext0:
  1158                           	callstack 0
  1159   000606                     _main:
  1160                           	callstack 24
  1161   000606                     
  1162                           ;main.c: 60:     SYSTEM_Initialize() ;
  1163   000606  EC9A  F004         	call	_SYSTEM_Initialize	;wreg free
  1164   00060A  EF35  F003         	goto	l1526
  1165   00060E                     l1508:
  1166                           
  1167                           ; BSR set to: 0
  1168                           ;main.c: 65:                 initialState();
  1169   00060E  ECB2  F004         	call	_initialState	;wreg free
  1170                           
  1171                           ;main.c: 66:                 break;
  1172   000612  EF35  F003         	goto	l1526
  1173   000616                     l1510:
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;main.c: 68:                 ledRightOn(1);
  1177   000616  0E00               	movlw	0
  1178   000618  6F84               	movwf	(ledRightOn@num+1)& (0+255),b
  1179   00061A  0E01               	movlw	1
  1180   00061C  6F83               	movwf	ledRightOn@num& (0+255),b
  1181   00061E  EC7B  F004         	call	_ledRightOn	;wreg free
  1182                           
  1183                           ;main.c: 69:                 break;
  1184   000622  EF35  F003         	goto	l1526
  1185   000626                     l1512:
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;main.c: 71:                 ledOff(2);
  1189   000626  0E00               	movlw	0
  1190   000628  6F84               	movwf	(ledOff@num+1)& (0+255),b
  1191   00062A  0E02               	movlw	2
  1192   00062C  6F83               	movwf	ledOff@num& (0+255),b
  1193   00062E  EC62  F004         	call	_ledOff	;wreg free
  1194                           
  1195                           ;main.c: 72:                 break;
  1196   000632  EF35  F003         	goto	l1526
  1197   000636                     l1514:
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;main.c: 74:                 ledLeftOn(3);
  1201   000636  0E00               	movlw	0
  1202   000638  6F84               	movwf	(ledLeftOn@num+1)& (0+255),b
  1203   00063A  0E03               	movlw	3
  1204   00063C  6F83               	movwf	ledLeftOn@num& (0+255),b
  1205   00063E  EC91  F004         	call	_ledLeftOn	;wreg free
  1206                           
  1207                           ;main.c: 75:                 break;
  1208   000642  EF35  F003         	goto	l1526
  1209   000646                     l1516:
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;main.c: 77:                 displayBinary(4);
  1213   000646  0E00               	movlw	0
  1214   000648  6F81               	movwf	(displayBinary@num+1)& (0+255),b
  1215   00064A  0E04               	movlw	4
  1216   00064C  6F80               	movwf	displayBinary@num& (0+255),b
  1217   00064E  EC5E  F003         	call	_displayBinary	;wreg free
  1218   000652                     
  1219                           ;main.c: 78:                 LATAbits.LATA6 = 1;;
  1220   000652  8C89               	bsf	137,6,c	;volatile
  1221                           
  1222                           ;main.c: 79:                 break;
  1223   000654  EF35  F003         	goto	l1526
  1224   000658                     l1520:
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;main.c: 81:                 displayBinary(5);
  1228   000658  0E00               	movlw	0
  1229   00065A  6F81               	movwf	(displayBinary@num+1)& (0+255),b
  1230   00065C  0E05               	movlw	5
  1231   00065E  6F80               	movwf	displayBinary@num& (0+255),b
  1232   000660  EC5E  F003         	call	_displayBinary	;wreg free
  1233   000664                     
  1234                           ;main.c: 82:                 LATAbits.LATA6 = 0;;
  1235   000664  9C89               	bcf	137,6,c	;volatile
  1236                           
  1237                           ;main.c: 83:                 break;
  1238   000666  EF35  F003         	goto	l1526
  1239   00066A                     l192:
  1240   00066A                     l1526:
  1241   00066A  C019  F085         	movff	_state,??_main
  1242   00066E  C01A  F086         	movff	_state+1,??_main+1
  1243                           
  1244                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1245                           ; Switch size 1, requested type "simple"
  1246                           ; Number of cases is 1, Range of values is 0 to 0
  1247                           ; switch strategies available:
  1248                           ; Name         Instructions Cycles
  1249                           ; simple_byte            4     3 (average)
  1250                           ;	Chosen strategy is simple_byte
  1251   000672  0100               	movlb	0	; () banked
  1252   000674  5186               	movf	(??_main+1)& (0+255),w,b
  1253   000676  0A00               	xorlw	0	; case 0
  1254   000678  B4D8               	btfsc	status,2,c
  1255   00067A  EF41  F003         	goto	l1564
  1256   00067E  EF35  F003         	goto	l192
  1257   000682                     l1564:
  1258                           
  1259                           ; BSR set to: 0
  1260                           ; Switch size 1, requested type "simple"
  1261                           ; Number of cases is 6, Range of values is 0 to 5
  1262                           ; switch strategies available:
  1263                           ; Name         Instructions Cycles
  1264                           ; simple_byte           19    10 (average)
  1265                           ;	Chosen strategy is simple_byte
  1266   000682  5185               	movf	??_main& (0+255),w,b
  1267   000684  0A00               	xorlw	0	; case 0
  1268   000686  B4D8               	btfsc	status,2,c
  1269   000688  EF07  F003         	goto	l1508
  1270   00068C  0A01               	xorlw	1	; case 1
  1271   00068E  B4D8               	btfsc	status,2,c
  1272   000690  EF0B  F003         	goto	l1510
  1273   000694  0A03               	xorlw	3	; case 2
  1274   000696  B4D8               	btfsc	status,2,c
  1275   000698  EF13  F003         	goto	l1512
  1276   00069C  0A01               	xorlw	1	; case 3
  1277   00069E  B4D8               	btfsc	status,2,c
  1278   0006A0  EF1B  F003         	goto	l1514
  1279   0006A4  0A07               	xorlw	7	; case 4
  1280   0006A6  B4D8               	btfsc	status,2,c
  1281   0006A8  EF23  F003         	goto	l1516
  1282   0006AC  0A01               	xorlw	1	; case 5
  1283   0006AE  B4D8               	btfsc	status,2,c
  1284   0006B0  EF2C  F003         	goto	l1520
  1285   0006B4  EF35  F003         	goto	l192
  1286   0006B8  EFCC  F001         	goto	start
  1287   0006BC                     __end_of_main:
  1288                           	callstack 0
  1289                           
  1290 ;; *************** function _ledRightOn *****************
  1291 ;; Defined at:
  1292 ;;		line 31 in file "main.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  num             2    3[BANK0 ] int 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		wreg, status,2, status,0, cstack
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1306 ;;      Params:         0       2       0       0       0       0       0
  1307 ;;      Locals:         0       0       0       0       0       0       0
  1308 ;;      Temps:          0       0       0       0       0       0       0
  1309 ;;      Totals:         0       2       0       0       0       0       0
  1310 ;;Total ram usage:        2 bytes
  1311 ;; Hardware stack levels used: 1
  1312 ;; Hardware stack levels required when called: 6
  1313 ;; This function calls:
  1314 ;;		_displayBinary
  1315 ;; This function is called by:
  1316 ;;		_main
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text1
  1321   0008F6                     __ptext1:
  1322                           	callstack 0
  1323   0008F6                     _ledRightOn:
  1324                           	callstack 24
  1325   0008F6                     
  1326                           ;main.c: 32:     displayBinary(num);
  1327   0008F6  C083  F080         	movff	ledRightOn@num,displayBinary@num
  1328   0008FA  C084  F081         	movff	ledRightOn@num+1,displayBinary@num+1
  1329   0008FE  EC5E  F003         	call	_displayBinary	;wreg free
  1330   000902                     
  1331                           ;main.c: 33:     dir = 1;
  1332   000902  0E00               	movlw	0
  1333   000904  6E18               	movwf	(_dir+1)^0,c
  1334   000906  0E01               	movlw	1
  1335   000908  6E17               	movwf	_dir^0,c
  1336   00090A  0012               	return		;funcret
  1337   00090C                     __end_of_ledRightOn:
  1338                           	callstack 0
  1339                           
  1340 ;; *************** function _ledOff *****************
  1341 ;; Defined at:
  1342 ;;		line 36 in file "main.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  num             2    3[BANK0 ] int 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1356 ;;      Params:         0       2       0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0       0       0
  1359 ;;      Totals:         0       2       0       0       0       0       0
  1360 ;;Total ram usage:        2 bytes
  1361 ;; Hardware stack levels used: 1
  1362 ;; Hardware stack levels required when called: 6
  1363 ;; This function calls:
  1364 ;;		_displayBinary
  1365 ;; This function is called by:
  1366 ;;		_main
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           	psect	text2
  1371   0008C4                     __ptext2:
  1372                           	callstack 0
  1373   0008C4                     _ledOff:
  1374                           	callstack 24
  1375   0008C4                     
  1376                           ;main.c: 37:     dir = 0;
  1377   0008C4  0E00               	movlw	0
  1378   0008C6  6E18               	movwf	(_dir+1)^0,c
  1379   0008C8  0E00               	movlw	0
  1380   0008CA  6E17               	movwf	_dir^0,c
  1381   0008CC                     
  1382                           ;main.c: 38:     displayBinary(num);
  1383   0008CC  C083  F080         	movff	ledOff@num,displayBinary@num
  1384   0008D0  C084  F081         	movff	ledOff@num+1,displayBinary@num+1
  1385   0008D4  EC5E  F003         	call	_displayBinary	;wreg free
  1386   0008D8                     
  1387                           ;main.c: 39:     LATAbits.LATA5 = 0;;
  1388   0008D8  9A89               	bcf	137,5,c	;volatile
  1389   0008DA                     
  1390                           ;main.c: 40:     LATAbits.LATA7 = 0;;
  1391   0008DA  9E89               	bcf	137,7,c	;volatile
  1392   0008DC  0012               	return		;funcret
  1393   0008DE                     __end_of_ledOff:
  1394                           	callstack 0
  1395                           
  1396 ;; *************** function _ledLeftOn *****************
  1397 ;; Defined at:
  1398 ;;		line 43 in file "main.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  num             2    3[BANK0 ] int 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;		None
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1412 ;;      Params:         0       2       0       0       0       0       0
  1413 ;;      Locals:         0       0       0       0       0       0       0
  1414 ;;      Temps:          0       0       0       0       0       0       0
  1415 ;;      Totals:         0       2       0       0       0       0       0
  1416 ;;Total ram usage:        2 bytes
  1417 ;; Hardware stack levels used: 1
  1418 ;; Hardware stack levels required when called: 6
  1419 ;; This function calls:
  1420 ;;		_displayBinary
  1421 ;; This function is called by:
  1422 ;;		_main
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text3
  1427   000922                     __ptext3:
  1428                           	callstack 0
  1429   000922                     _ledLeftOn:
  1430                           	callstack 24
  1431   000922                     
  1432                           ;main.c: 44:     dir = -1;
  1433   000922  6817               	setf	_dir^0,c
  1434   000924  6818               	setf	(_dir+1)^0,c
  1435   000926                     
  1436                           ;main.c: 45:     displayBinary(num);
  1437   000926  C083  F080         	movff	ledLeftOn@num,displayBinary@num
  1438   00092A  C084  F081         	movff	ledLeftOn@num+1,displayBinary@num+1
  1439   00092E  EC5E  F003         	call	_displayBinary	;wreg free
  1440   000932  0012               	return		;funcret
  1441   000934                     __end_of_ledLeftOn:
  1442                           	callstack 0
  1443                           
  1444 ;; *************** function _displayBinary *****************
  1445 ;; Defined at:
  1446 ;;		line 20 in file "main.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  num             2    0[BANK0 ] int 
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;		None
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		wreg, status,2, status,0
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1460 ;;      Params:         0       2       0       0       0       0       0
  1461 ;;      Locals:         0       0       0       0       0       0       0
  1462 ;;      Temps:          0       1       0       0       0       0       0
  1463 ;;      Totals:         0       3       0       0       0       0       0
  1464 ;;Total ram usage:        3 bytes
  1465 ;; Hardware stack levels used: 1
  1466 ;; Hardware stack levels required when called: 5
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		_ledRightOn
  1471 ;;		_ledOff
  1472 ;;		_ledLeftOn
  1473 ;;		_main
  1474 ;;		_BrakeOn
  1475 ;;		_BrakeOff
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text4
  1480   0006BC                     __ptext4:
  1481                           	callstack 0
  1482   0006BC                     _displayBinary:
  1483                           	callstack 24
  1484   0006BC                     
  1485                           ;main.c: 22:      LATAbits.LATA1 = (num & 0x01) ? 1 : 0;
  1486   0006BC  0100               	movlb	0	; () banked
  1487   0006BE  B180               	btfsc	displayBinary@num& (0+255),0,b
  1488   0006C0  EF64  F003         	goto	u881
  1489   0006C4  EF68  F003         	goto	u880
  1490   0006C8                     u881:
  1491   0006C8  6B82               	clrf	??_displayBinary& (0+255),b
  1492   0006CA  2B82               	incf	??_displayBinary& (0+255),f,b
  1493   0006CC  EF6A  F003         	goto	u898
  1494   0006D0                     u880:
  1495   0006D0  0100               	movlb	0	; () banked
  1496   0006D2  6B82               	clrf	??_displayBinary& (0+255),b
  1497   0006D4                     u898:
  1498   0006D4  4782               	rlncf	??_displayBinary& (0+255),f,b
  1499   0006D6  5089               	movf	137,w,c	;volatile
  1500   0006D8  1982               	xorwf	??_displayBinary& (0+255),w,b
  1501   0006DA  0BFD               	andlw	-3
  1502   0006DC  1982               	xorwf	??_displayBinary& (0+255),w,b
  1503   0006DE  6E89               	movwf	137,c	;volatile
  1504                           
  1505                           ;main.c: 23:      LATAbits.LATA2 = (num & 0x02) ? 1 : 0;
  1506   0006E0  B380               	btfsc	displayBinary@num& (0+255),1,b
  1507   0006E2  EF75  F003         	goto	u901
  1508   0006E6  EF79  F003         	goto	u900
  1509   0006EA                     u901:
  1510   0006EA  6B82               	clrf	??_displayBinary& (0+255),b
  1511   0006EC  2B82               	incf	??_displayBinary& (0+255),f,b
  1512   0006EE  EF7B  F003         	goto	u918
  1513   0006F2                     u900:
  1514   0006F2  0100               	movlb	0	; () banked
  1515   0006F4  6B82               	clrf	??_displayBinary& (0+255),b
  1516   0006F6                     u918:
  1517   0006F6  4782               	rlncf	??_displayBinary& (0+255),f,b
  1518   0006F8  4782               	rlncf	??_displayBinary& (0+255),f,b
  1519   0006FA  5089               	movf	137,w,c	;volatile
  1520   0006FC  1982               	xorwf	??_displayBinary& (0+255),w,b
  1521   0006FE  0BFB               	andlw	-5
  1522   000700  1982               	xorwf	??_displayBinary& (0+255),w,b
  1523   000702  6E89               	movwf	137,c	;volatile
  1524                           
  1525                           ;main.c: 24:      LATAbits.LATA3 = (num & 0x04) ? 1 : 0;
  1526   000704  B580               	btfsc	displayBinary@num& (0+255),2,b
  1527   000706  EF87  F003         	goto	u921
  1528   00070A  EF8B  F003         	goto	u920
  1529   00070E                     u921:
  1530   00070E  6B82               	clrf	??_displayBinary& (0+255),b
  1531   000710  2B82               	incf	??_displayBinary& (0+255),f,b
  1532   000712  EF8D  F003         	goto	u938
  1533   000716                     u920:
  1534   000716  0100               	movlb	0	; () banked
  1535   000718  6B82               	clrf	??_displayBinary& (0+255),b
  1536   00071A                     u938:
  1537   00071A  4782               	rlncf	??_displayBinary& (0+255),f,b
  1538   00071C  4782               	rlncf	??_displayBinary& (0+255),f,b
  1539   00071E  4782               	rlncf	??_displayBinary& (0+255),f,b
  1540   000720  5089               	movf	137,w,c	;volatile
  1541   000722  1982               	xorwf	??_displayBinary& (0+255),w,b
  1542   000724  0BF7               	andlw	-9
  1543   000726  1982               	xorwf	??_displayBinary& (0+255),w,b
  1544   000728  6E89               	movwf	137,c	;volatile
  1545                           
  1546                           ;main.c: 25:      LATAbits.LATA4 = (num & 0x08) ? 1 : 0;
  1547   00072A  B780               	btfsc	displayBinary@num& (0+255),3,b
  1548   00072C  EF9A  F003         	goto	u941
  1549   000730  EF9E  F003         	goto	u940
  1550   000734                     u941:
  1551   000734  6B82               	clrf	??_displayBinary& (0+255),b
  1552   000736  2B82               	incf	??_displayBinary& (0+255),f,b
  1553   000738  EFA0  F003         	goto	u958
  1554   00073C                     u940:
  1555   00073C  0100               	movlb	0	; () banked
  1556   00073E  6B82               	clrf	??_displayBinary& (0+255),b
  1557   000740                     u958:
  1558   000740  3B82               	swapf	??_displayBinary& (0+255),f,b
  1559   000742  5089               	movf	137,w,c	;volatile
  1560   000744  1982               	xorwf	??_displayBinary& (0+255),w,b
  1561   000746  0BEF               	andlw	-17
  1562   000748  1982               	xorwf	??_displayBinary& (0+255),w,b
  1563   00074A  6E89               	movwf	137,c	;volatile
  1564   00074C                     
  1565                           ; BSR set to: 0
  1566   00074C  0012               	return		;funcret
  1567   00074E                     __end_of_displayBinary:
  1568                           	callstack 0
  1569                           
  1570 ;; *************** function _initialState *****************
  1571 ;; Defined at:
  1572 ;;		line 28 in file "main.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		None
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1586 ;;      Params:         0       0       0       0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0
  1589 ;;      Totals:         0       0       0       0       0       0       0
  1590 ;;Total ram usage:        0 bytes
  1591 ;; Hardware stack levels used: 1
  1592 ;; Hardware stack levels required when called: 5
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text5
  1601   000964                     __ptext5:
  1602                           	callstack 0
  1603   000964                     _initialState:
  1604                           	callstack 25
  1605   000964  0012               	return		;funcret
  1606   000966                     __end_of_initialState:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function _SYSTEM_Initialize *****************
  1610 ;; Defined at:
  1611 ;;		line 60 in file "setting_hardaware/setting.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;		None
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1625 ;;      Params:         0       0       0       0       0       0       0
  1626 ;;      Locals:         0       0       0       0       0       0       0
  1627 ;;      Temps:          0       0       0       0       0       0       0
  1628 ;;      Totals:         0       0       0       0       0       0       0
  1629 ;;Total ram usage:        0 bytes
  1630 ;; Hardware stack levels used: 1
  1631 ;; Hardware stack levels required when called: 6
  1632 ;; This function calls:
  1633 ;;		_INTERRUPT_Initialize
  1634 ;;		_OSCILLATOR_Initialize
  1635 ;;		_TMR2_Initialize
  1636 ;;		_UART_Initialize
  1637 ;; This function is called by:
  1638 ;;		_main
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text6
  1643   000934                     __ptext6:
  1644                           	callstack 0
  1645   000934                     _SYSTEM_Initialize:
  1646                           	callstack 24
  1647   000934                     
  1648                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
  1649   000934  ECA9  F004         	call	_OSCILLATOR_Initialize	;wreg free
  1650                           
  1651                           ;setting_hardaware/setting.c: 64:     TMR2_Initialize();
  1652   000938  ECA3  F004         	call	_TMR2_Initialize	;wreg free
  1653   00093C                     
  1654                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  1655   00093C  EC6F  F004         	call	_INTERRUPT_Initialize	;wreg free
  1656   000940                     
  1657                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
  1658   000940  EC44  F004         	call	_UART_Initialize	;wreg free
  1659   000944  0012               	return		;funcret
  1660   000946                     __end_of_SYSTEM_Initialize:
  1661                           	callstack 0
  1662                           
  1663 ;; *************** function _UART_Initialize *****************
  1664 ;; Defined at:
  1665 ;;		line 10 in file "setting_hardaware/uart.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1679 ;;      Params:         0       0       0       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0       0       0
  1682 ;;      Totals:         0       0       0       0       0       0       0
  1683 ;;Total ram usage:        0 bytes
  1684 ;; Hardware stack levels used: 1
  1685 ;; Hardware stack levels required when called: 5
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_SYSTEM_Initialize
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text7
  1694   000888                     __ptext7:
  1695                           	callstack 0
  1696   000888                     _UART_Initialize:
  1697                           	callstack 24
  1698   000888                     
  1699                           ;setting_hardaware/uart.c: 21:     TRISCbits.TRISC6 = 1;
  1700   000888  8C94               	bsf	148,6,c	;volatile
  1701                           
  1702                           ;setting_hardaware/uart.c: 22:     TRISCbits.TRISC7 = 1;
  1703   00088A  8E94               	bsf	148,7,c	;volatile
  1704                           
  1705                           ;setting_hardaware/uart.c: 25:     TXSTAbits.SYNC = 0;
  1706   00088C  98AC               	bcf	172,4,c	;volatile
  1707                           
  1708                           ;setting_hardaware/uart.c: 26:     BAUDCONbits.BRG16 = 0;
  1709   00088E  96B8               	bcf	184,3,c	;volatile
  1710                           
  1711                           ;setting_hardaware/uart.c: 27:     TXSTAbits.BRGH = 1;
  1712   000890  84AC               	bsf	172,2,c	;volatile
  1713   000892                     
  1714                           ;setting_hardaware/uart.c: 28:     SPBRG = 25;
  1715   000892  0E19               	movlw	25
  1716   000894  6EAF               	movwf	175,c	;volatile
  1717   000896                     
  1718                           ;setting_hardaware/uart.c: 31:     RCSTAbits.SPEN = 1;
  1719   000896  8EAB               	bsf	171,7,c	;volatile
  1720   000898                     
  1721                           ;setting_hardaware/uart.c: 32:     PIR1bits.TXIF = 0;
  1722   000898  989E               	bcf	158,4,c	;volatile
  1723   00089A                     
  1724                           ;setting_hardaware/uart.c: 33:     PIR1bits.RCIF = 1;
  1725   00089A  8A9E               	bsf	158,5,c	;volatile
  1726   00089C                     
  1727                           ;setting_hardaware/uart.c: 34:     TXSTAbits.TXEN = 1;
  1728   00089C  8AAC               	bsf	172,5,c	;volatile
  1729   00089E                     
  1730                           ;setting_hardaware/uart.c: 35:     RCSTAbits.CREN = 1;
  1731   00089E  88AB               	bsf	171,4,c	;volatile
  1732   0008A0                     
  1733                           ;setting_hardaware/uart.c: 36:     PIE1bits.TXIE = 0;
  1734   0008A0  989D               	bcf	157,4,c	;volatile
  1735   0008A2                     
  1736                           ;setting_hardaware/uart.c: 37:     IPR1bits.TXIP = 0;
  1737   0008A2  989F               	bcf	159,4,c	;volatile
  1738   0008A4                     
  1739                           ;setting_hardaware/uart.c: 38:     PIE1bits.RCIE = 1;
  1740   0008A4  8A9D               	bsf	157,5,c	;volatile
  1741   0008A6                     
  1742                           ;setting_hardaware/uart.c: 39:     IPR1bits.RCIP = 0;
  1743   0008A6  9A9F               	bcf	159,5,c	;volatile
  1744   0008A8  0012               	return		;funcret
  1745   0008AA                     __end_of_UART_Initialize:
  1746                           	callstack 0
  1747                           
  1748 ;; *************** function _TMR2_Initialize *****************
  1749 ;; Defined at:
  1750 ;;		line 82 in file "setting_hardaware/setting.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;		None
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		None
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1764 ;;      Params:         0       0       0       0       0       0       0
  1765 ;;      Locals:         0       0       0       0       0       0       0
  1766 ;;      Temps:          0       0       0       0       0       0       0
  1767 ;;      Totals:         0       0       0       0       0       0       0
  1768 ;;Total ram usage:        0 bytes
  1769 ;; Hardware stack levels used: 1
  1770 ;; Hardware stack levels required when called: 5
  1771 ;; This function calls:
  1772 ;;		Nothing
  1773 ;; This function is called by:
  1774 ;;		_SYSTEM_Initialize
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           	psect	text8
  1779   000946                     __ptext8:
  1780                           	callstack 0
  1781   000946                     _TMR2_Initialize:
  1782                           	callstack 24
  1783   000946                     
  1784                           ;setting_hardaware/setting.c: 83:     PIR1bits.TMR2IF = 0;
  1785   000946  929E               	bcf	158,1,c	;volatile
  1786                           
  1787                           ;setting_hardaware/setting.c: 84:     IPR1bits.TMR2IP = 0;
  1788   000948  929F               	bcf	159,1,c	;volatile
  1789                           
  1790                           ;setting_hardaware/setting.c: 85:     PIE1bits.TMR2IE = 1;
  1791   00094A  829D               	bsf	157,1,c	;volatile
  1792                           
  1793                           ;setting_hardaware/setting.c: 86:     T2CON = 255;
  1794   00094C  68CA               	setf	202,c	;volatile
  1795                           
  1796                           ;setting_hardaware/setting.c: 87:     PR2 = 255;
  1797   00094E  68CB               	setf	203,c	;volatile
  1798   000950  0012               	return		;funcret
  1799   000952                     __end_of_TMR2_Initialize:
  1800                           	callstack 0
  1801                           
  1802 ;; *************** function _OSCILLATOR_Initialize *****************
  1803 ;; Defined at:
  1804 ;;		line 73 in file "setting_hardaware/setting.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;		None
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		None
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1818 ;;      Params:         0       0       0       0       0       0       0
  1819 ;;      Locals:         0       0       0       0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0       0       0
  1821 ;;      Totals:         0       0       0       0       0       0       0
  1822 ;;Total ram usage:        0 bytes
  1823 ;; Hardware stack levels used: 1
  1824 ;; Hardware stack levels required when called: 5
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_SYSTEM_Initialize
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text9
  1833   000952                     __ptext9:
  1834                           	callstack 0
  1835   000952                     _OSCILLATOR_Initialize:
  1836                           	callstack 24
  1837   000952                     
  1838                           ;setting_hardaware/setting.c: 75:     IRCF2 = 1;
  1839   000952  8CD3               	bsf	4051,6,c	;volatile
  1840                           
  1841                           ;setting_hardaware/setting.c: 76:     IRCF1 = 1;
  1842   000954  8AD3               	bsf	4051,5,c	;volatile
  1843                           
  1844                           ;setting_hardaware/setting.c: 77:     IRCF0 = 0;
  1845   000956  98D3               	bcf	4051,4,c	;volatile
  1846   000958  0012               	return		;funcret
  1847   00095A                     __end_of_OSCILLATOR_Initialize:
  1848                           	callstack 0
  1849                           
  1850 ;; *************** function _INTERRUPT_Initialize *****************
  1851 ;; Defined at:
  1852 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;		None
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;		None
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg, status,2
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1866 ;;      Params:         0       0       0       0       0       0       0
  1867 ;;      Locals:         0       0       0       0       0       0       0
  1868 ;;      Temps:          0       0       0       0       0       0       0
  1869 ;;      Totals:         0       0       0       0       0       0       0
  1870 ;;Total ram usage:        0 bytes
  1871 ;; Hardware stack levels used: 1
  1872 ;; Hardware stack levels required when called: 5
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_SYSTEM_Initialize
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text10
  1881   0008DE                     __ptext10:
  1882                           	callstack 0
  1883   0008DE                     _INTERRUPT_Initialize:
  1884                           	callstack 24
  1885   0008DE                     
  1886                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
  1887   0008DE  8ED0               	bsf	208,7,c	;volatile
  1888                           
  1889                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
  1890   0008E0  8EF2               	bsf	242,7,c	;volatile
  1891                           
  1892                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
  1893   0008E2  8CF2               	bsf	242,6,c	;volatile
  1894   0008E4                     
  1895                           ;setting_hardaware/interrupt_manager.c: 10:     ADCON1 = 0x0f;
  1896   0008E4  0E0F               	movlw	15
  1897   0008E6  6EC1               	movwf	193,c	;volatile
  1898   0008E8                     
  1899                           ;setting_hardaware/interrupt_manager.c: 11:     LATA = 0x00;
  1900   0008E8  6A89               	clrf	137,c	;volatile
  1901   0008EA                     
  1902                           ;setting_hardaware/interrupt_manager.c: 12:     TRISAbits.TRISA5 = 0;
  1903   0008EA  9A92               	bcf	146,5,c	;volatile
  1904   0008EC                     
  1905                           ;setting_hardaware/interrupt_manager.c: 13:     TRISAbits.TRISA6 = 0;
  1906   0008EC  9C92               	bcf	146,6,c	;volatile
  1907   0008EE                     
  1908                           ;setting_hardaware/interrupt_manager.c: 14:     TRISAbits.TRISA7 = 0;
  1909   0008EE  9E92               	bcf	146,7,c	;volatile
  1910   0008F0                     
  1911                           ;setting_hardaware/interrupt_manager.c: 16:     INTCONbits.INT0IE = 1;
  1912   0008F0  88F2               	bsf	242,4,c	;volatile
  1913   0008F2                     
  1914                           ;setting_hardaware/interrupt_manager.c: 17:     INTCONbits.INT0IF = 0;
  1915   0008F2  92F2               	bcf	242,1,c	;volatile
  1916   0008F4  0012               	return		;funcret
  1917   0008F6                     __end_of_INTERRUPT_Initialize:
  1918                           	callstack 0
  1919                           
  1920 ;; *************** function _Lo_ISR *****************
  1921 ;; Defined at:
  1922 ;;		line 97 in file "main.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  command        20   21[COMRAM] unsigned char [20]
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1936 ;;      Params:         0       0       0       0       0       0       0
  1937 ;;      Locals:        20       0       0       0       0       0       0
  1938 ;;      Temps:         13       0       0       0       0       0       0
  1939 ;;      Totals:        33       0       0       0       0       0       0
  1940 ;;Total ram usage:       33 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 4
  1943 ;; This function calls:
  1944 ;;		_ClearBuffer
  1945 ;;		_GetString
  1946 ;;		_MyusartRead
  1947 ;;		_strcpy
  1948 ;;		_strlen
  1949 ;; This function is called by:
  1950 ;;		Interrupt level 1
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	intcodelo
  1955   000018                     __pintcodelo:
  1956                           	callstack 0
  1957   000018                     _Lo_ISR:
  1958                           	callstack 24
  1959                           
  1960                           ;incstack = 0
  1961   000018  805A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1962   00001A  CFD8 F03B          	movff	status,??_Lo_ISR+2
  1963   00001E  CFE8 F03C          	movff	wreg,??_Lo_ISR+3
  1964   000022  CFE0 F03D          	movff	bsr,??_Lo_ISR+4
  1965   000026  CFE1 F03E          	movff	fsr1l,??_Lo_ISR+5
  1966   00002A  CFE2 F03F          	movff	fsr1h,??_Lo_ISR+6
  1967   00002E  CFD9 F040          	movff	fsr2l,??_Lo_ISR+7
  1968   000032  CFDA F041          	movff	fsr2h,??_Lo_ISR+8
  1969   000036  CFF6 F042          	movff	tblptrl,??_Lo_ISR+9
  1970   00003A  CFF7 F043          	movff	tblptrh,??_Lo_ISR+10
  1971   00003E  CFF8 F044          	movff	tblptru,??_Lo_ISR+11
  1972   000042  CFF5 F045          	movff	tablat,??_Lo_ISR+12
  1973   000046                     
  1974                           ;main.c: 99:     if(RCIF)
  1975   000046  AA9E               	btfss	3998,5,c	;volatile
  1976   000048  EF28  F000         	goto	i1u59_21
  1977   00004C  EF2A  F000         	goto	i1u59_20
  1978   000050                     i1u59_21:
  1979   000050  EF62  F001         	goto	i1l213
  1980   000054                     i1u59_20:
  1981   000054                     
  1982                           ;main.c: 100:     {;main.c: 101:         if(RCSTAbits.OERR)
  1983   000054  A2AB               	btfss	171,1,c	;volatile
  1984   000056  EF2F  F000         	goto	i1u60_21
  1985   00005A  EF31  F000         	goto	i1u60_20
  1986   00005E                     i1u60_21:
  1987   00005E  EF34  F000         	goto	i1l1324
  1988   000062                     i1u60_20:
  1989   000062                     
  1990                           ;main.c: 102:         {;main.c: 103:             CREN = 0;
  1991   000062  98AB               	bcf	4011,4,c	;volatile
  1992                           
  1993                           ;main.c: 104:             __nop();
  1994   000064  0000               	nop	
  1995                           
  1996                           ;main.c: 105:             CREN = 1;
  1997   000066  88AB               	bsf	4011,4,c	;volatile
  1998   000068                     i1l1324:
  1999                           
  2000                           ;main.c: 108:         MyusartRead();
  2001   000068  EC10  F004         	call	_MyusartRead	;wreg free
  2002   00006C                     
  2003                           ;main.c: 109:         char command[20];;main.c: 110:         if(RCREG == '\r' || RCREG =
      +                          = '\n'){
  2004   00006C  0E0D               	movlw	13
  2005   00006E  18AE               	xorwf	174,w,c	;volatile
  2006   000070  B4D8               	btfsc	status,2,c
  2007   000072  EF3D  F000         	goto	i1u61_21
  2008   000076  EF3F  F000         	goto	i1u61_20
  2009   00007A                     i1u61_21:
  2010   00007A  EF48  F000         	goto	i1l1330
  2011   00007E                     i1u61_20:
  2012   00007E  0E0A               	movlw	10
  2013   000080  18AE               	xorwf	174,w,c	;volatile
  2014   000082  A4D8               	btfss	status,2,c
  2015   000084  EF46  F000         	goto	i1u62_21
  2016   000088  EF48  F000         	goto	i1u62_20
  2017   00008C                     i1u62_21:
  2018   00008C  EF54  F000         	goto	i1l1334
  2019   000090                     i1u62_20:
  2020   000090                     i1l1330:
  2021                           
  2022                           ;main.c: 111:             strcpy(command, GetString());
  2023   000090  0E46               	movlw	low Lo_ISR@command
  2024   000092  6E33               	movwf	strcpy@dest^0,c
  2025   000094  ECB0  F004         	call	_GetString	;wreg free
  2026   000098  6E39               	movwf	??_Lo_ISR^0,c
  2027   00009A  C039  F034         	movff	??_Lo_ISR,strcpy@src
  2028   00009E  6A35               	clrf	(strcpy@src+1)^0,c
  2029   0000A0  ECA7  F003         	call	_strcpy	;wreg free
  2030   0000A4                     
  2031                           ;main.c: 112:             ClearBuffer();
  2032   0000A4  ECF2  F003         	call	_ClearBuffer	;wreg free
  2033   0000A8                     i1l1334:
  2034                           
  2035                           ;main.c: 114:         if(command[0] == 'L' && command[1] == 'R' && command[2] == 'N' && 
      +                          strlen(command) == 3){
  2036   0000A8  0E4C               	movlw	76
  2037   0000AA  1846               	xorwf	Lo_ISR@command^0,w,c
  2038   0000AC  A4D8               	btfss	status,2,c
  2039   0000AE  EF5B  F000         	goto	i1u63_21
  2040   0000B2  EF5D  F000         	goto	i1u63_20
  2041   0000B6                     i1u63_21:
  2042   0000B6  EF8F  F000         	goto	i1l1352
  2043   0000BA                     i1u63_20:
  2044   0000BA  0E52               	movlw	82
  2045   0000BC  1847               	xorwf	(Lo_ISR@command+1)^0,w,c
  2046   0000BE  A4D8               	btfss	status,2,c
  2047   0000C0  EF64  F000         	goto	i1u64_21
  2048   0000C4  EF66  F000         	goto	i1u64_20
  2049   0000C8                     i1u64_21:
  2050   0000C8  EF8F  F000         	goto	i1l1352
  2051   0000CC                     i1u64_20:
  2052   0000CC  0E4E               	movlw	78
  2053   0000CE  1848               	xorwf	(Lo_ISR@command+2)^0,w,c
  2054   0000D0  A4D8               	btfss	status,2,c
  2055   0000D2  EF6D  F000         	goto	i1u65_21
  2056   0000D6  EF6F  F000         	goto	i1u65_20
  2057   0000DA                     i1u65_21:
  2058   0000DA  EF8F  F000         	goto	i1l1352
  2059   0000DE                     i1u65_20:
  2060   0000DE  0E46               	movlw	low Lo_ISR@command
  2061   0000E0  6E31               	movwf	strlen@s^0,c
  2062   0000E2  EC2D  F004         	call	_strlen	;wreg free
  2063   0000E6  0E03               	movlw	3
  2064   0000E8  1831               	xorwf	?_strlen^0,w,c
  2065   0000EA  1032               	iorwf	(?_strlen+1)^0,w,c
  2066   0000EC  A4D8               	btfss	status,2,c
  2067   0000EE  EF7B  F000         	goto	i1u66_21
  2068   0000F2  EF7D  F000         	goto	i1u66_20
  2069   0000F6                     i1u66_21:
  2070   0000F6  EF8F  F000         	goto	i1l1352
  2071   0000FA                     i1u66_20:
  2072   0000FA                     
  2073                           ;main.c: 115:             state = 1;
  2074   0000FA  0E00               	movlw	0
  2075   0000FC  6E1A               	movwf	(_state+1)^0,c
  2076   0000FE  0E01               	movlw	1
  2077   000100  6E19               	movwf	_state^0,c
  2078   000102                     
  2079                           ;main.c: 116:             ClearBuffer();
  2080   000102  ECF2  F003         	call	_ClearBuffer	;wreg free
  2081   000106                     
  2082                           ;main.c: 117:             strcpy(command, "");
  2083   000106  0E46               	movlw	low Lo_ISR@command
  2084   000108  6E33               	movwf	strcpy@dest^0,c
  2085   00010A  0E03               	movlw	low (STR_1+2)
  2086   00010C  6E34               	movwf	strcpy@src^0,c
  2087   00010E  5034               	movf	strcpy@src^0,w,c
  2088   000110  A4D8               	btfss	status,2,c
  2089   000112  0E06               	movlw	high __smallconst
  2090   000114  6E35               	movwf	(strcpy@src+1)^0,c
  2091   000116  ECA7  F003         	call	_strcpy	;wreg free
  2092   00011A  EFB4  F001         	goto	i1l219
  2093   00011E                     i1l1352:
  2094   00011E  0E4C               	movlw	76
  2095   000120  1846               	xorwf	Lo_ISR@command^0,w,c
  2096   000122  A4D8               	btfss	status,2,c
  2097   000124  EF96  F000         	goto	i1u67_21
  2098   000128  EF98  F000         	goto	i1u67_20
  2099   00012C                     i1u67_21:
  2100   00012C  EFC1  F000         	goto	i1l1368
  2101   000130                     i1u67_20:
  2102   000130  0E46               	movlw	70
  2103   000132  1847               	xorwf	(Lo_ISR@command+1)^0,w,c
  2104   000134  A4D8               	btfss	status,2,c
  2105   000136  EF9F  F000         	goto	i1u68_21
  2106   00013A  EFA1  F000         	goto	i1u68_20
  2107   00013E                     i1u68_21:
  2108   00013E  EFC1  F000         	goto	i1l1368
  2109   000142                     i1u68_20:
  2110   000142  0E46               	movlw	low Lo_ISR@command
  2111   000144  6E31               	movwf	strlen@s^0,c
  2112   000146  EC2D  F004         	call	_strlen	;wreg free
  2113   00014A  0E02               	movlw	2
  2114   00014C  1831               	xorwf	?_strlen^0,w,c
  2115   00014E  1032               	iorwf	(?_strlen+1)^0,w,c
  2116   000150  A4D8               	btfss	status,2,c
  2117   000152  EFAD  F000         	goto	i1u69_21
  2118   000156  EFAF  F000         	goto	i1u69_20
  2119   00015A                     i1u69_21:
  2120   00015A  EFC1  F000         	goto	i1l1368
  2121   00015E                     i1u69_20:
  2122   00015E                     
  2123                           ;main.c: 121:             state = 2;
  2124   00015E  0E00               	movlw	0
  2125   000160  6E1A               	movwf	(_state+1)^0,c
  2126   000162  0E02               	movlw	2
  2127   000164  6E19               	movwf	_state^0,c
  2128   000166                     
  2129                           ;main.c: 122:             ClearBuffer();
  2130   000166  ECF2  F003         	call	_ClearBuffer	;wreg free
  2131   00016A                     
  2132                           ;main.c: 123:             strcpy(command, "");
  2133   00016A  0E46               	movlw	low Lo_ISR@command
  2134   00016C  6E33               	movwf	strcpy@dest^0,c
  2135   00016E  0E03               	movlw	low (STR_1+2)
  2136   000170  6E34               	movwf	strcpy@src^0,c
  2137   000172  5034               	movf	strcpy@src^0,w,c
  2138   000174  A4D8               	btfss	status,2,c
  2139   000176  0E06               	movlw	high __smallconst
  2140   000178  6E35               	movwf	(strcpy@src+1)^0,c
  2141   00017A  ECA7  F003         	call	_strcpy	;wreg free
  2142   00017E  EFB4  F001         	goto	i1l219
  2143   000182                     i1l1368:
  2144   000182  0E4C               	movlw	76
  2145   000184  1846               	xorwf	Lo_ISR@command^0,w,c
  2146   000186  A4D8               	btfss	status,2,c
  2147   000188  EFC8  F000         	goto	i1u70_21
  2148   00018C  EFCA  F000         	goto	i1u70_20
  2149   000190                     i1u70_21:
  2150   000190  EFFC  F000         	goto	i1l1386
  2151   000194                     i1u70_20:
  2152   000194  0E4C               	movlw	76
  2153   000196  1847               	xorwf	(Lo_ISR@command+1)^0,w,c
  2154   000198  A4D8               	btfss	status,2,c
  2155   00019A  EFD1  F000         	goto	i1u71_21
  2156   00019E  EFD3  F000         	goto	i1u71_20
  2157   0001A2                     i1u71_21:
  2158   0001A2  EFFC  F000         	goto	i1l1386
  2159   0001A6                     i1u71_20:
  2160   0001A6  0E4E               	movlw	78
  2161   0001A8  1848               	xorwf	(Lo_ISR@command+2)^0,w,c
  2162   0001AA  A4D8               	btfss	status,2,c
  2163   0001AC  EFDA  F000         	goto	i1u72_21
  2164   0001B0  EFDC  F000         	goto	i1u72_20
  2165   0001B4                     i1u72_21:
  2166   0001B4  EFFC  F000         	goto	i1l1386
  2167   0001B8                     i1u72_20:
  2168   0001B8  0E46               	movlw	low Lo_ISR@command
  2169   0001BA  6E31               	movwf	strlen@s^0,c
  2170   0001BC  EC2D  F004         	call	_strlen	;wreg free
  2171   0001C0  0E03               	movlw	3
  2172   0001C2  1831               	xorwf	?_strlen^0,w,c
  2173   0001C4  1032               	iorwf	(?_strlen+1)^0,w,c
  2174   0001C6  A4D8               	btfss	status,2,c
  2175   0001C8  EFE8  F000         	goto	i1u73_21
  2176   0001CC  EFEA  F000         	goto	i1u73_20
  2177   0001D0                     i1u73_21:
  2178   0001D0  EFFC  F000         	goto	i1l1386
  2179   0001D4                     i1u73_20:
  2180   0001D4                     
  2181                           ;main.c: 127:             state = 3;
  2182   0001D4  0E00               	movlw	0
  2183   0001D6  6E1A               	movwf	(_state+1)^0,c
  2184   0001D8  0E03               	movlw	3
  2185   0001DA  6E19               	movwf	_state^0,c
  2186   0001DC                     
  2187                           ;main.c: 128:             ClearBuffer();
  2188   0001DC  ECF2  F003         	call	_ClearBuffer	;wreg free
  2189   0001E0                     
  2190                           ;main.c: 129:             strcpy(command, "");
  2191   0001E0  0E46               	movlw	low Lo_ISR@command
  2192   0001E2  6E33               	movwf	strcpy@dest^0,c
  2193   0001E4  0E03               	movlw	low (STR_1+2)
  2194   0001E6  6E34               	movwf	strcpy@src^0,c
  2195   0001E8  5034               	movf	strcpy@src^0,w,c
  2196   0001EA  A4D8               	btfss	status,2,c
  2197   0001EC  0E06               	movlw	high __smallconst
  2198   0001EE  6E35               	movwf	(strcpy@src+1)^0,c
  2199   0001F0  ECA7  F003         	call	_strcpy	;wreg free
  2200   0001F4  EFB4  F001         	goto	i1l219
  2201   0001F8                     i1l1386:
  2202   0001F8  0E42               	movlw	66
  2203   0001FA  1846               	xorwf	Lo_ISR@command^0,w,c
  2204   0001FC  A4D8               	btfss	status,2,c
  2205   0001FE  EF03  F001         	goto	i1u74_21
  2206   000202  EF05  F001         	goto	i1u74_20
  2207   000206                     i1u74_21:
  2208   000206  EF2E  F001         	goto	i1l1402
  2209   00020A                     i1u74_20:
  2210   00020A  0E4E               	movlw	78
  2211   00020C  1847               	xorwf	(Lo_ISR@command+1)^0,w,c
  2212   00020E  A4D8               	btfss	status,2,c
  2213   000210  EF0C  F001         	goto	i1u75_21
  2214   000214  EF0E  F001         	goto	i1u75_20
  2215   000218                     i1u75_21:
  2216   000218  EF2E  F001         	goto	i1l1402
  2217   00021C                     i1u75_20:
  2218   00021C  0E46               	movlw	low Lo_ISR@command
  2219   00021E  6E31               	movwf	strlen@s^0,c
  2220   000220  EC2D  F004         	call	_strlen	;wreg free
  2221   000224  0E02               	movlw	2
  2222   000226  1831               	xorwf	?_strlen^0,w,c
  2223   000228  1032               	iorwf	(?_strlen+1)^0,w,c
  2224   00022A  A4D8               	btfss	status,2,c
  2225   00022C  EF1A  F001         	goto	i1u76_21
  2226   000230  EF1C  F001         	goto	i1u76_20
  2227   000234                     i1u76_21:
  2228   000234  EF2E  F001         	goto	i1l1402
  2229   000238                     i1u76_20:
  2230   000238                     
  2231                           ;main.c: 133:             state = 4;
  2232   000238  0E00               	movlw	0
  2233   00023A  6E1A               	movwf	(_state+1)^0,c
  2234   00023C  0E04               	movlw	4
  2235   00023E  6E19               	movwf	_state^0,c
  2236   000240                     
  2237                           ;main.c: 134:             ClearBuffer();
  2238   000240  ECF2  F003         	call	_ClearBuffer	;wreg free
  2239   000244                     
  2240                           ;main.c: 135:             strcpy(command, "");
  2241   000244  0E46               	movlw	low Lo_ISR@command
  2242   000246  6E33               	movwf	strcpy@dest^0,c
  2243   000248  0E03               	movlw	low (STR_1+2)
  2244   00024A  6E34               	movwf	strcpy@src^0,c
  2245   00024C  5034               	movf	strcpy@src^0,w,c
  2246   00024E  A4D8               	btfss	status,2,c
  2247   000250  0E06               	movlw	high __smallconst
  2248   000252  6E35               	movwf	(strcpy@src+1)^0,c
  2249   000254  ECA7  F003         	call	_strcpy	;wreg free
  2250   000258  EFB4  F001         	goto	i1l219
  2251   00025C                     i1l1402:
  2252   00025C  0E42               	movlw	66
  2253   00025E  1846               	xorwf	Lo_ISR@command^0,w,c
  2254   000260  A4D8               	btfss	status,2,c
  2255   000262  EF35  F001         	goto	i1u77_21
  2256   000266  EF37  F001         	goto	i1u77_20
  2257   00026A                     i1u77_21:
  2258   00026A  EF60  F001         	goto	i1l222
  2259   00026E                     i1u77_20:
  2260   00026E  0E46               	movlw	70
  2261   000270  1847               	xorwf	(Lo_ISR@command+1)^0,w,c
  2262   000272  A4D8               	btfss	status,2,c
  2263   000274  EF3E  F001         	goto	i1u78_21
  2264   000278  EF40  F001         	goto	i1u78_20
  2265   00027C                     i1u78_21:
  2266   00027C  EF60  F001         	goto	i1l222
  2267   000280                     i1u78_20:
  2268   000280  0E46               	movlw	low Lo_ISR@command
  2269   000282  6E31               	movwf	strlen@s^0,c
  2270   000284  EC2D  F004         	call	_strlen	;wreg free
  2271   000288  0E02               	movlw	2
  2272   00028A  1831               	xorwf	?_strlen^0,w,c
  2273   00028C  1032               	iorwf	(?_strlen+1)^0,w,c
  2274   00028E  A4D8               	btfss	status,2,c
  2275   000290  EF4C  F001         	goto	i1u79_21
  2276   000294  EF4E  F001         	goto	i1u79_20
  2277   000298                     i1u79_21:
  2278   000298  EF60  F001         	goto	i1l222
  2279   00029C                     i1u79_20:
  2280   00029C                     
  2281                           ;main.c: 139:             state = 5;
  2282   00029C  0E00               	movlw	0
  2283   00029E  6E1A               	movwf	(_state+1)^0,c
  2284   0002A0  0E05               	movlw	5
  2285   0002A2  6E19               	movwf	_state^0,c
  2286   0002A4                     
  2287                           ;main.c: 140:             ClearBuffer();
  2288   0002A4  ECF2  F003         	call	_ClearBuffer	;wreg free
  2289   0002A8                     
  2290                           ;main.c: 141:             strcpy(command, "");
  2291   0002A8  0E46               	movlw	low Lo_ISR@command
  2292   0002AA  6E33               	movwf	strcpy@dest^0,c
  2293   0002AC  0E03               	movlw	low (STR_1+2)
  2294   0002AE  6E34               	movwf	strcpy@src^0,c
  2295   0002B0  5034               	movf	strcpy@src^0,w,c
  2296   0002B2  A4D8               	btfss	status,2,c
  2297   0002B4  0E06               	movlw	high __smallconst
  2298   0002B6  6E35               	movwf	(strcpy@src+1)^0,c
  2299   0002B8  ECA7  F003         	call	_strcpy	;wreg free
  2300   0002BC  EFB4  F001         	goto	i1l219
  2301   0002C0                     i1l222:
  2302   0002C0  EFB4  F001         	goto	i1l219
  2303   0002C4                     i1l213:
  2304   0002C4  A29E               	btfss	3998,1,c	;volatile
  2305   0002C6  EF67  F001         	goto	i1u80_21
  2306   0002CA  EF69  F001         	goto	i1u80_20
  2307   0002CE                     i1u80_21:
  2308   0002CE  EFB4  F001         	goto	i1l219
  2309   0002D2                     i1u80_20:
  2310   0002D2                     
  2311                           ;main.c: 145:         TMR2IF = 0;
  2312   0002D2  929E               	bcf	3998,1,c	;volatile
  2313   0002D4                     
  2314                           ;main.c: 146:         postpostscaler = (postpostscaler+1)%8;
  2315   0002D4  0E01               	movlw	1
  2316   0002D6  2415               	addwf	_postpostscaler^0,w,c
  2317   0002D8  6E39               	movwf	??_Lo_ISR^0,c
  2318   0002DA  0E00               	movlw	0
  2319   0002DC  2016               	addwfc	(_postpostscaler+1)^0,w,c
  2320   0002DE  6E3A               	movwf	(??_Lo_ISR+1)^0,c
  2321   0002E0  0E07               	movlw	7
  2322   0002E2  1439               	andwf	??_Lo_ISR^0,w,c
  2323   0002E4  6E15               	movwf	_postpostscaler^0,c
  2324   0002E6  6A16               	clrf	(_postpostscaler+1)^0,c
  2325                           
  2326                           ;main.c: 147:         if(!postpostscaler){
  2327   0002E8  5015               	movf	_postpostscaler^0,w,c
  2328   0002EA  1016               	iorwf	(_postpostscaler+1)^0,w,c
  2329   0002EC  A4D8               	btfss	status,2,c
  2330   0002EE  EF7B  F001         	goto	i1u81_21
  2331   0002F2  EF7D  F001         	goto	i1u81_20
  2332   0002F6                     i1u81_21:
  2333   0002F6  EFB4  F001         	goto	i1l219
  2334   0002FA                     i1u81_20:
  2335   0002FA                     
  2336                           ;main.c: 148:             if(dir == -1){
  2337   0002FA  2817               	incf	_dir^0,w,c
  2338   0002FC  E106               	bnz	i1u82_21
  2339   0002FE  2818               	incf	(_dir+1)^0,w,c
  2340   000300  A4D8               	btfss	status,2,c
  2341   000302  EF85  F001         	goto	i1u82_21
  2342   000306  EF87  F001         	goto	i1u82_20
  2343   00030A                     i1u82_21:
  2344   00030A  EF9A  F001         	goto	i1l1424
  2345   00030E                     i1u82_20:
  2346   00030E                     
  2347                           ;main.c: 149:                 LATAbits.LATA5 = !LATAbits.LATA5;;
  2348   00030E  AA89               	btfss	137,5,c	;volatile
  2349   000310  EF8C  F001         	goto	i1u83_21
  2350   000314  EF90  F001         	goto	i1u83_20
  2351   000318                     i1u83_21:
  2352   000318  6A39               	clrf	??_Lo_ISR^0,c
  2353   00031A  2A39               	incf	??_Lo_ISR^0,f,c
  2354   00031C  EF91  F001         	goto	i1u84_28
  2355   000320                     i1u83_20:
  2356   000320  6A39               	clrf	??_Lo_ISR^0,c
  2357   000322                     i1u84_28:
  2358   000322  3A39               	swapf	??_Lo_ISR^0,f,c
  2359   000324  4639               	rlncf	??_Lo_ISR^0,f,c
  2360   000326  5089               	movf	137,w,c	;volatile
  2361   000328  1839               	xorwf	??_Lo_ISR^0,w,c
  2362   00032A  0BDF               	andlw	-33
  2363   00032C  1839               	xorwf	??_Lo_ISR^0,w,c
  2364   00032E  6E89               	movwf	137,c	;volatile
  2365                           
  2366                           ;main.c: 150:             }else if(dir == 1){
  2367   000330  EFB4  F001         	goto	i1l219
  2368   000334                     i1l1424:
  2369   000334  0417               	decf	_dir^0,w,c
  2370   000336  1018               	iorwf	(_dir+1)^0,w,c
  2371   000338  A4D8               	btfss	status,2,c
  2372   00033A  EFA1  F001         	goto	i1u85_21
  2373   00033E  EFA3  F001         	goto	i1u85_20
  2374   000342                     i1u85_21:
  2375   000342  EF60  F001         	goto	i1l222
  2376   000346                     i1u85_20:
  2377   000346                     
  2378                           ;main.c: 151:                 LATAbits.LATA7 = !LATAbits.LATA7;;
  2379   000346  AE89               	btfss	137,7,c	;volatile
  2380   000348  EFA8  F001         	goto	i1u86_21
  2381   00034C  EFAC  F001         	goto	i1u86_20
  2382   000350                     i1u86_21:
  2383   000350  6A39               	clrf	??_Lo_ISR^0,c
  2384   000352  2A39               	incf	??_Lo_ISR^0,f,c
  2385   000354  EFAD  F001         	goto	i1u87_28
  2386   000358                     i1u86_20:
  2387   000358  6A39               	clrf	??_Lo_ISR^0,c
  2388   00035A                     i1u87_28:
  2389   00035A  3239               	rrcf	??_Lo_ISR^0,f,c
  2390   00035C  3239               	rrcf	??_Lo_ISR^0,f,c
  2391   00035E  5089               	movf	137,w,c	;volatile
  2392   000360  1839               	xorwf	??_Lo_ISR^0,w,c
  2393   000362  0B7F               	andlw	-129
  2394   000364  1839               	xorwf	??_Lo_ISR^0,w,c
  2395   000366  6E89               	movwf	137,c	;volatile
  2396   000368                     i1l219:
  2397   000368  C045  FFF5         	movff	??_Lo_ISR+12,tablat
  2398   00036C  C044  FFF8         	movff	??_Lo_ISR+11,tblptru
  2399   000370  C043  FFF7         	movff	??_Lo_ISR+10,tblptrh
  2400   000374  C042  FFF6         	movff	??_Lo_ISR+9,tblptrl
  2401   000378  C041  FFDA         	movff	??_Lo_ISR+8,fsr2h
  2402   00037C  C040  FFD9         	movff	??_Lo_ISR+7,fsr2l
  2403   000380  C03F  FFE2         	movff	??_Lo_ISR+6,fsr1h
  2404   000384  C03E  FFE1         	movff	??_Lo_ISR+5,fsr1l
  2405   000388  C03D  FFE0         	movff	??_Lo_ISR+4,bsr
  2406   00038C  C03C  FFE8         	movff	??_Lo_ISR+3,wreg
  2407   000390  C03B  FFD8         	movff	??_Lo_ISR+2,status
  2408   000394  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2409   000396  0010               	retfie	
  2410   000398                     __end_of_Lo_ISR:
  2411                           	callstack 0
  2412                           
  2413 ;; *************** function _strlen *****************
  2414 ;; Defined at:
  2415 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2418 ;;		 -> Lo_ISR@command(20), 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2421 ;;		 -> Lo_ISR@command(20), 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  2    0[COMRAM] unsigned int 
  2424 ;; Registers used:
  2425 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2431 ;;      Params:         2       0       0       0       0       0       0
  2432 ;;      Locals:         1       0       0       0       0       0       0
  2433 ;;      Temps:          0       0       0       0       0       0       0
  2434 ;;      Totals:         3       0       0       0       0       0       0
  2435 ;;Total ram usage:        3 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; Hardware stack levels required when called: 1
  2438 ;; This function calls:
  2439 ;;		Nothing
  2440 ;; This function is called by:
  2441 ;;		_Lo_ISR
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text12
  2446   00085A                     __ptext12:
  2447                           	callstack 0
  2448   00085A                     _strlen:
  2449                           	callstack 26
  2450   00085A  C031  F033         	movff	strlen@s,strlen@a
  2451   00085E  EF32  F004         	goto	i1l1278
  2452   000862                     i1l1276:
  2453   000862  2A31               	incf	strlen@s^0,f,c
  2454   000864                     i1l1278:
  2455   000864  5031               	movf	strlen@s^0,w,c
  2456   000866  6ED9               	movwf	fsr2l,c
  2457   000868  6ADA               	clrf	fsr2h,c
  2458   00086A  50DF               	movf	indf2,w,c
  2459   00086C  A4D8               	btfss	status,2,c
  2460   00086E  EF3B  F004         	goto	i1u58_21
  2461   000872  EF3D  F004         	goto	i1u58_20
  2462   000876                     i1u58_21:
  2463   000876  EF31  F004         	goto	i1l1276
  2464   00087A                     i1u58_20:
  2465   00087A  5033               	movf	strlen@a^0,w,c
  2466   00087C  5C31               	subwf	strlen@s^0,w,c
  2467   00087E  6E31               	movwf	?_strlen^0,c
  2468   000880  6A32               	clrf	(?_strlen+1)^0,c
  2469   000882  BE31               	btfsc	?_strlen^0,7,c
  2470   000884  0632               	decf	(?_strlen+1)^0,f,c
  2471   000886  0012               	return		;funcret
  2472   000888                     __end_of_strlen:
  2473                           	callstack 0
  2474                           
  2475 ;; *************** function _strcpy *****************
  2476 ;; Defined at:
  2477 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  dest            1    2[COMRAM] PTR unsigned char 
  2480 ;;		 -> Lo_ISR@command(20), 
  2481 ;;  src             2    3[COMRAM] PTR const unsigned char 
  2482 ;;		 -> STR_6(1), STR_5(1), STR_4(1), STR_3(1), 
  2483 ;;		 -> STR_2(1), mystring(20), 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  d               1    7[COMRAM] PTR unsigned char 
  2486 ;;		 -> Lo_ISR@command(20), 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    2[COMRAM] PTR unsigned char 
  2489 ;; Registers used:
  2490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2496 ;;      Params:         3       0       0       0       0       0       0
  2497 ;;      Locals:         1       0       0       0       0       0       0
  2498 ;;      Temps:          2       0       0       0       0       0       0
  2499 ;;      Totals:         6       0       0       0       0       0       0
  2500 ;;Total ram usage:        6 bytes
  2501 ;; Hardware stack levels used: 1
  2502 ;; Hardware stack levels required when called: 1
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_Lo_ISR
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text13
  2511   00074E                     __ptext13:
  2512                           	callstack 0
  2513   00074E                     _strcpy:
  2514                           	callstack 26
  2515   00074E  C033  F038         	movff	strcpy@dest,strcpy@d
  2516   000752                     i1l1272:
  2517   000752  5034               	movf	strcpy@src^0,w,c
  2518   000754  6E36               	movwf	??_strcpy^0,c
  2519   000756  5035               	movf	(strcpy@src+1)^0,w,c
  2520   000758  6E37               	movwf	(??_strcpy+1)^0,c
  2521   00075A  4A34               	infsnz	strcpy@src^0,f,c
  2522   00075C  2A35               	incf	(strcpy@src+1)^0,f,c
  2523   00075E  C036  FFF6         	movff	??_strcpy,tblptrl
  2524   000762  C037  FFF7         	movff	??_strcpy+1,tblptrh
  2525   000766  6AF8               	clrf	tblptru,c
  2526   000768  2A38               	incf	strcpy@d^0,f,c
  2527   00076A  0438               	decf	strcpy@d^0,w,c
  2528   00076C  6ED9               	movwf	fsr2l,c
  2529   00076E  6ADA               	clrf	fsr2h,c
  2530   000770  0E05               	movlw	(high __ramtop+-1)
  2531   000772  64F7               	cpfsgt	tblptrh,c
  2532   000774  D003               	bra	i1u56_27
  2533   000776  0008               	tblrd		*
  2534   000778  50F5               	movf	tablat,w,c
  2535   00077A  D005               	bra	i1u56_20
  2536   00077C                     i1u56_27:
  2537   00077C  CFF6 FFE1          	movff	tblptrl,fsr1l
  2538   000780  CFF7 FFE2          	movff	tblptrh,fsr1h
  2539   000784  50E7               	movf	indf1,w,c
  2540   000786                     i1u56_20:
  2541   000786  6EDF               	movwf	indf2,c
  2542   000788  50DF               	movf	indf2,w,c
  2543   00078A  A4D8               	btfss	status,2,c
  2544   00078C  EFCA  F003         	goto	i1u57_21
  2545   000790  EFCC  F003         	goto	i1u57_20
  2546   000794                     i1u57_21:
  2547   000794  EFA9  F003         	goto	i1l1272
  2548   000798                     i1u57_20:
  2549   000798  0012               	return		;funcret
  2550   00079A                     __end_of_strcpy:
  2551                           	callstack 0
  2552                           
  2553 ;; *************** function _MyusartRead *****************
  2554 ;; Defined at:
  2555 ;;		line 62 in file "setting_hardaware/uart.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;		None
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  receivedData    1    5[COMRAM] unsigned char 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1    wreg      void 
  2562 ;; Registers used:
  2563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2569 ;;      Params:         0       0       0       0       0       0       0
  2570 ;;      Locals:         1       0       0       0       0       0       0
  2571 ;;      Temps:          0       0       0       0       0       0       0
  2572 ;;      Totals:         1       0       0       0       0       0       0
  2573 ;;Total ram usage:        1 bytes
  2574 ;; Hardware stack levels used: 1
  2575 ;; Hardware stack levels required when called: 3
  2576 ;; This function calls:
  2577 ;;		_UART_Write
  2578 ;;		_UART_Write_Text
  2579 ;; This function is called by:
  2580 ;;		_Lo_ISR
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           	psect	text14
  2585   000820                     __ptext14:
  2586                           	callstack 0
  2587   000820                     _MyusartRead:
  2588                           	callstack 24
  2589   000820                     
  2590                           ;setting_hardaware/uart.c: 66:     unsigned char receivedData = RCREG;
  2591   000820  CFAE F036          	movff	4014,MyusartRead@receivedData	;volatile
  2592   000824                     
  2593                           ;setting_hardaware/uart.c: 67:     if(receivedData == '\r'){
  2594   000824  0E0D               	movlw	13
  2595   000826  1836               	xorwf	MyusartRead@receivedData^0,w,c
  2596   000828  A4D8               	btfss	status,2,c
  2597   00082A  EF19  F004         	goto	i1u55_21
  2598   00082E  EF1B  F004         	goto	i1u55_20
  2599   000832                     i1u55_21:
  2600   000832  EF21  F004         	goto	i1l1242
  2601   000836                     i1u55_20:
  2602   000836                     
  2603                           ;setting_hardaware/uart.c: 68:         UART_Write_Text("\r\n");
  2604   000836  0E01               	movlw	low STR_1
  2605   000838  6E32               	movwf	UART_Write_Text@text^0,c
  2606   00083A  ECCD  F003         	call	_UART_Write_Text	;wreg free
  2607   00083E  EF2C  F004         	goto	i1l128
  2608   000842                     i1l1242:
  2609                           
  2610                           ;setting_hardaware/uart.c: 71:     mystring[lenStr] = receivedData;
  2611   000842  501B               	movf	_lenStr^0,w,c
  2612   000844  0F1D               	addlw	low _mystring
  2613   000846  6ED9               	movwf	fsr2l,c
  2614   000848  6ADA               	clrf	fsr2h,c
  2615   00084A  C036  FFDF         	movff	MyusartRead@receivedData,indf2
  2616   00084E                     
  2617                           ;setting_hardaware/uart.c: 72:     lenStr++;
  2618   00084E  4A1B               	infsnz	_lenStr^0,f,c
  2619   000850  2A1C               	incf	(_lenStr+1)^0,f,c
  2620   000852                     
  2621                           ;setting_hardaware/uart.c: 73:     UART_Write(receivedData);
  2622   000852  5036               	movf	MyusartRead@receivedData^0,w,c
  2623   000854  EC86  F004         	call	_UART_Write
  2624   000858                     i1l128:
  2625   000858  0012               	return		;funcret
  2626   00085A                     __end_of_MyusartRead:
  2627                           	callstack 0
  2628                           
  2629 ;; *************** function _UART_Write_Text *****************
  2630 ;; Defined at:
  2631 ;;		line 51 in file "setting_hardaware/uart.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  text            1    1[COMRAM] PTR unsigned char 
  2634 ;;		 -> STR_1(3), 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  i               2    3[COMRAM] int 
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2646 ;;      Params:         1       0       0       0       0       0       0
  2647 ;;      Locals:         2       0       0       0       0       0       0
  2648 ;;      Temps:          1       0       0       0       0       0       0
  2649 ;;      Totals:         4       0       0       0       0       0       0
  2650 ;;Total ram usage:        4 bytes
  2651 ;; Hardware stack levels used: 1
  2652 ;; Hardware stack levels required when called: 2
  2653 ;; This function calls:
  2654 ;;		_UART_Write
  2655 ;; This function is called by:
  2656 ;;		_MyusartRead
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text15
  2661   00079A                     __ptext15:
  2662                           	callstack 0
  2663   00079A                     _UART_Write_Text:
  2664                           	callstack 24
  2665   00079A                     
  2666                           ;setting_hardaware/uart.c: 52:     for(int i=0;text[i]!='\0';i++)
  2667   00079A  0E00               	movlw	0
  2668   00079C  6E35               	movwf	(UART_Write_Text@i+1)^0,c
  2669   00079E  0E00               	movlw	0
  2670   0007A0  6E34               	movwf	UART_Write_Text@i^0,c
  2671   0007A2  EFE0  F003         	goto	i1l1230
  2672   0007A6                     i1l1226:
  2673                           
  2674                           ;setting_hardaware/uart.c: 53:         UART_Write(text[i]);
  2675   0007A6  5032               	movf	UART_Write_Text@text^0,w,c
  2676   0007A8  2434               	addwf	UART_Write_Text@i^0,w,c
  2677   0007AA  6E33               	movwf	??_UART_Write_Text^0,c
  2678   0007AC  C033  FFF6         	movff	??_UART_Write_Text,tblptrl
  2679   0007B0                     	if	1	;There is more than 1 active tblptr byte
  2680   0007B0  0E06               	movlw	high __smallconst
  2681   0007B2  6EF7               	movwf	tblptrh,c
  2682   0007B4                     	endif
  2683   0007B4                     	if	0	;tblptru may be non-zero
  2684   0007B4                     	endif
  2685   0007B4                     	if	0	;tblptru may be non-zero
  2686   0007B4                     	endif
  2687   0007B4  0008               	tblrd		*
  2688   0007B6  50F5               	movf	tablat,w,c
  2689   0007B8  EC86  F004         	call	_UART_Write
  2690   0007BC  4A34               	infsnz	UART_Write_Text@i^0,f,c
  2691   0007BE  2A35               	incf	(UART_Write_Text@i+1)^0,f,c
  2692   0007C0                     i1l1230:
  2693   0007C0  5032               	movf	UART_Write_Text@text^0,w,c
  2694   0007C2  2434               	addwf	UART_Write_Text@i^0,w,c
  2695   0007C4  6E33               	movwf	??_UART_Write_Text^0,c
  2696   0007C6  C033  FFF6         	movff	??_UART_Write_Text,tblptrl
  2697   0007CA                     	if	1	;There is more than 1 active tblptr byte
  2698   0007CA  0E06               	movlw	high __smallconst
  2699   0007CC  6EF7               	movwf	tblptrh,c
  2700   0007CE                     	endif
  2701   0007CE                     	if	0	;tblptru may be non-zero
  2702   0007CE                     	endif
  2703   0007CE                     	if	0	;tblptru may be non-zero
  2704   0007CE                     	endif
  2705   0007CE  0008               	tblrd		*
  2706   0007D0  50F5               	movf	tablat,w,c
  2707   0007D2  0900               	iorlw	0
  2708   0007D4  A4D8               	btfss	status,2,c
  2709   0007D6  EFEF  F003         	goto	i1u46_21
  2710   0007DA  EFF1  F003         	goto	i1u46_20
  2711   0007DE                     i1u46_21:
  2712   0007DE  EFD3  F003         	goto	i1l1226
  2713   0007E2                     i1u46_20:
  2714   0007E2  0012               	return		;funcret
  2715   0007E4                     __end_of_UART_Write_Text:
  2716                           	callstack 0
  2717                           
  2718 ;; *************** function _UART_Write *****************
  2719 ;; Defined at:
  2720 ;;		line 44 in file "setting_hardaware/uart.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  data            1    wreg     unsigned char 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  data            1    0[COMRAM] unsigned char 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2734 ;;      Params:         0       0       0       0       0       0       0
  2735 ;;      Locals:         1       0       0       0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0
  2737 ;;      Totals:         1       0       0       0       0       0       0
  2738 ;;Total ram usage:        1 bytes
  2739 ;; Hardware stack levels used: 1
  2740 ;; Hardware stack levels required when called: 1
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_UART_Write_Text
  2745 ;;		_MyusartRead
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text16
  2750   00090C                     __ptext16:
  2751                           	callstack 0
  2752   00090C                     _UART_Write:
  2753                           	callstack 24
  2754                           
  2755                           ;incstack = 0
  2756                           ;UART_Write@data stored from wreg
  2757   00090C  6E31               	movwf	UART_Write@data^0,c
  2758   00090E                     i1l110:
  2759   00090E  A2AC               	btfss	172,1,c	;volatile
  2760   000910  EF8C  F004         	goto	i1u1_21
  2761   000914  EF8E  F004         	goto	i1u1_20
  2762   000918                     i1u1_21:
  2763   000918  EF87  F004         	goto	i1l110
  2764   00091C                     i1u1_20:
  2765   00091C                     
  2766                           ;setting_hardaware/uart.c: 47:     TXREG = data;
  2767   00091C  C031  FFAD         	movff	UART_Write@data,4013	;volatile
  2768   000920  0012               	return		;funcret
  2769   000922                     __end_of_UART_Write:
  2770                           	callstack 0
  2771                           
  2772 ;; *************** function _GetString *****************
  2773 ;; Defined at:
  2774 ;;		line 77 in file "setting_hardaware/uart.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    0[COMRAM] PTR unsigned char 
  2781 ;; Registers used:
  2782 ;;		wreg
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2788 ;;      Params:         2       0       0       0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0       0       0
  2791 ;;      Totals:         2       0       0       0       0       0       0
  2792 ;;Total ram usage:        2 bytes
  2793 ;; Hardware stack levels used: 1
  2794 ;; Hardware stack levels required when called: 1
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_Lo_ISR
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text17
  2803   000960                     __ptext17:
  2804                           	callstack 0
  2805   000960                     _GetString:
  2806                           	callstack 26
  2807   000960                     
  2808                           ;setting_hardaware/uart.c: 78:     return mystring;
  2809   000960  0E1D               	movlw	_mystring& (0+255)
  2810   000962  0012               	return		;funcret
  2811   000964                     __end_of_GetString:
  2812                           	callstack 0
  2813                           
  2814 ;; *************** function _ClearBuffer *****************
  2815 ;; Defined at:
  2816 ;;		line 56 in file "setting_hardaware/uart.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;		None
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;  i               2    0[COMRAM] int 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      void 
  2823 ;; Registers used:
  2824 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2830 ;;      Params:         0       0       0       0       0       0       0
  2831 ;;      Locals:         2       0       0       0       0       0       0
  2832 ;;      Temps:          0       0       0       0       0       0       0
  2833 ;;      Totals:         2       0       0       0       0       0       0
  2834 ;;Total ram usage:        2 bytes
  2835 ;; Hardware stack levels used: 1
  2836 ;; Hardware stack levels required when called: 1
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_Lo_ISR
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text18
  2845   0007E4                     __ptext18:
  2846                           	callstack 0
  2847   0007E4                     _ClearBuffer:
  2848                           	callstack 26
  2849   0007E4                     
  2850                           ;setting_hardaware/uart.c: 57:     for(int i = 0; i < 10 ; i++)
  2851   0007E4  0E00               	movlw	0
  2852   0007E6  6E32               	movwf	(ClearBuffer@i+1)^0,c
  2853   0007E8  0E00               	movlw	0
  2854   0007EA  6E31               	movwf	ClearBuffer@i^0,c
  2855   0007EC                     i1l990:
  2856                           
  2857                           ;setting_hardaware/uart.c: 58:         mystring[i] = '\0';
  2858   0007EC  5031               	movf	ClearBuffer@i^0,w,c
  2859   0007EE  0F1D               	addlw	low _mystring
  2860   0007F0  6ED9               	movwf	fsr2l,c
  2861   0007F2  6ADA               	clrf	fsr2h,c
  2862   0007F4  6ADF               	clrf	indf2,c
  2863   0007F6  4A31               	infsnz	ClearBuffer@i^0,f,c
  2864   0007F8  2A32               	incf	(ClearBuffer@i+1)^0,f,c
  2865   0007FA  BE32               	btfsc	(ClearBuffer@i+1)^0,7,c
  2866   0007FC  EF09  F004         	goto	i1u11_21
  2867   000800  5032               	movf	(ClearBuffer@i+1)^0,w,c
  2868   000802  E109               	bnz	i1u11_20
  2869   000804  0E0A               	movlw	10
  2870   000806  5C31               	subwf	ClearBuffer@i^0,w,c
  2871   000808  A0D8               	btfss	status,0,c
  2872   00080A  EF09  F004         	goto	i1u11_21
  2873   00080E  EF0B  F004         	goto	i1u11_20
  2874   000812                     i1u11_21:
  2875   000812  EFF6  F003         	goto	i1l990
  2876   000816                     i1u11_20:
  2877   000816                     
  2878                           ;setting_hardaware/uart.c: 59:     lenStr = 0;
  2879   000816  0E00               	movlw	0
  2880   000818  6E1C               	movwf	(_lenStr+1)^0,c
  2881   00081A  0E00               	movlw	0
  2882   00081C  6E1B               	movwf	_lenStr^0,c
  2883   00081E  0012               	return		;funcret
  2884   000820                     __end_of_ClearBuffer:
  2885                           	callstack 0
  2886                           
  2887 ;; *************** function _Hi_ISR *****************
  2888 ;; Defined at:
  2889 ;;		line 91 in file "main.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;		None
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1    wreg      void 
  2896 ;; Registers used:
  2897 ;;		None
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2903 ;;      Params:         0       0       0       0       0       0       0
  2904 ;;      Locals:         0       0       0       0       0       0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0
  2906 ;;      Totals:         0       0       0       0       0       0       0
  2907 ;;Total ram usage:        0 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		Interrupt level 2
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	intcode
  2917   000008                     __pintcode:
  2918                           	callstack 0
  2919   000008                     _Hi_ISR:
  2920                           	callstack 24
  2921                           
  2922                           ;incstack = 0
  2923   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2924   00000A  EDAD  F004         	call	int_func,f	;refresh shadow registers
  2925                           
  2926                           	psect	intcode_body
  2927   00095A                     __pintcode_body:
  2928                           	callstack 24
  2929   00095A                     int_func:
  2930                           	callstack 24
  2931   00095A  0006               	pop		; remove dummy address from shadow register refresh
  2932   00095C  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2933   00095E  0011               	retfie		f
  2934   000960                     __end_of_Hi_ISR:
  2935                           	callstack 0
  2936                           
  2937                           	psect	rparam
  2938   000001                     ___rparam_used  equ	1
  2939   000000                     ___param_bank   equ	0
  2940   000000                     __Lparam        equ	__Lrparam
  2941   000000                     __Hparam        equ	__Hrparam
  2942                           
  2943                           	psect	temp
  2944   00005A                     btemp:
  2945                           	callstack 0
  2946   00005A                     	ds	1
  2947   00005A                     int$flags       set	btemp
  2948   00005B                     wtemp8          set	btemp+1
  2949   00005B                     ttemp5          set	btemp+1
  2950   00005E                     ttemp6          set	btemp+4
  2951   000062                     ttemp7          set	btemp+8
  2952                           
  2953                           	psect	idloc
  2954                           
  2955                           ;Config register IDLOC0 @ 0x200000
  2956                           ;	unspecified, using default values
  2957   200000                     	org	2097152
  2958   200000  FF                 	db	255
  2959                           
  2960                           ;Config register IDLOC1 @ 0x200001
  2961                           ;	unspecified, using default values
  2962   200001                     	org	2097153
  2963   200001  FF                 	db	255
  2964                           
  2965                           ;Config register IDLOC2 @ 0x200002
  2966                           ;	unspecified, using default values
  2967   200002                     	org	2097154
  2968   200002  FF                 	db	255
  2969                           
  2970                           ;Config register IDLOC3 @ 0x200003
  2971                           ;	unspecified, using default values
  2972   200003                     	org	2097155
  2973   200003  FF                 	db	255
  2974                           
  2975                           ;Config register IDLOC4 @ 0x200004
  2976                           ;	unspecified, using default values
  2977   200004                     	org	2097156
  2978   200004  FF                 	db	255
  2979                           
  2980                           ;Config register IDLOC5 @ 0x200005
  2981                           ;	unspecified, using default values
  2982   200005                     	org	2097157
  2983   200005  FF                 	db	255
  2984                           
  2985                           ;Config register IDLOC6 @ 0x200006
  2986                           ;	unspecified, using default values
  2987   200006                     	org	2097158
  2988   200006  FF                 	db	255
  2989                           
  2990                           ;Config register IDLOC7 @ 0x200007
  2991                           ;	unspecified, using default values
  2992   200007                     	org	2097159
  2993   200007  FF                 	db	255
  2994                           
  2995                           	psect	config
  2996                           
  2997                           ; Padding undefined space
  2998   300000                     	org	3145728
  2999   300000  FF                 	db	255
  3000                           
  3001                           ;Config register CONFIG1H @ 0x300001
  3002                           ;	Oscillator Selection bits
  3003                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  3004                           ;	Fail-Safe Clock Monitor Enable bit
  3005                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3006                           ;	Internal/External Oscillator Switchover bit
  3007                           ;	IESO = ON, Oscillator Switchover mode enabled
  3008   300001                     	org	3145729
  3009   300001  88                 	db	136
  3010                           
  3011                           ;Config register CONFIG2L @ 0x300002
  3012                           ;	Power-up Timer Enable bit
  3013                           ;	PWRT = OFF, PWRT disabled
  3014                           ;	Brown-out Reset Enable bits
  3015                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3016                           ;	Brown Out Reset Voltage bits
  3017                           ;	BORV = 3, Minimum setting
  3018   300002                     	org	3145730
  3019   300002  1F                 	db	31
  3020                           
  3021                           ;Config register CONFIG2H @ 0x300003
  3022                           ;	Watchdog Timer Enable bit
  3023                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3024                           ;	Watchdog Timer Postscale Select bits
  3025                           ;	WDTPS = 1, 1:1
  3026   300003                     	org	3145731
  3027   300003  00                 	db	0
  3028                           
  3029                           ; Padding undefined space
  3030   300004                     	org	3145732
  3031   300004  FF                 	db	255
  3032                           
  3033                           ;Config register CONFIG3H @ 0x300005
  3034                           ;	CCP2 MUX bit
  3035                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3036                           ;	PORTB A/D Enable bit
  3037                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3038                           ;	Low-Power Timer1 Oscillator Enable bit
  3039                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3040                           ;	MCLR Pin Enable bit
  3041                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3042   300005                     	org	3145733
  3043   300005  83                 	db	131
  3044                           
  3045                           ;Config register CONFIG4L @ 0x300006
  3046                           ;	Stack Full/Underflow Reset Enable bit
  3047                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3048                           ;	Single-Supply ICSP Enable bit
  3049                           ;	LVP = OFF, Single-Supply ICSP disabled
  3050                           ;	Extended Instruction Set Enable bit
  3051                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3052                           ;	Background Debugger Enable bit
  3053                           ;	DEBUG = 0x1, unprogrammed default
  3054   300006                     	org	3145734
  3055   300006  81                 	db	129
  3056                           
  3057                           ; Padding undefined space
  3058   300007                     	org	3145735
  3059   300007  FF                 	db	255
  3060                           
  3061                           ;Config register CONFIG5L @ 0x300008
  3062                           ;	Code Protection bit
  3063                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3064                           ;	Code Protection bit
  3065                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3066                           ;	Code Protection bit
  3067                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3068                           ;	Code Protection bit
  3069                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3070   300008                     	org	3145736
  3071   300008  0F                 	db	15
  3072                           
  3073                           ;Config register CONFIG5H @ 0x300009
  3074                           ;	Boot Block Code Protection bit
  3075                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3076                           ;	Data EEPROM Code Protection bit
  3077                           ;	CPD = OFF, Data EEPROM not code-protected
  3078   300009                     	org	3145737
  3079   300009  C0                 	db	192
  3080                           
  3081                           ;Config register CONFIG6L @ 0x30000A
  3082                           ;	Write Protection bit
  3083                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3084                           ;	Write Protection bit
  3085                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3086                           ;	Write Protection bit
  3087                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3088                           ;	Write Protection bit
  3089                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3090   30000A                     	org	3145738
  3091   30000A  0F                 	db	15
  3092                           
  3093                           ;Config register CONFIG6H @ 0x30000B
  3094                           ;	Configuration Register Write Protection bit
  3095                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3096                           ;	Boot Block Write Protection bit
  3097                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3098                           ;	Data EEPROM Write Protection bit
  3099                           ;	WRTD = OFF, Data EEPROM not write-protected
  3100   30000B                     	org	3145739
  3101   30000B  E0                 	db	224
  3102                           
  3103                           ;Config register CONFIG7L @ 0x30000C
  3104                           ;	Table Read Protection bit
  3105                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3106                           ;	Table Read Protection bit
  3107                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3108                           ;	Table Read Protection bit
  3109                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3110                           ;	Table Read Protection bit
  3111                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3112   30000C                     	org	3145740
  3113   30000C  0F                 	db	15
  3114                           
  3115                           ;Config register CONFIG7H @ 0x30000D
  3116                           ;	Boot Block Table Read Protection bit
  3117                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3118   30000D                     	org	3145741
  3119   30000D  40                 	db	64
  3120                           tosu	equ	0xFFF
  3121                           tosh	equ	0xFFE
  3122                           tosl	equ	0xFFD
  3123                           stkptr	equ	0xFFC
  3124                           pclatu	equ	0xFFB
  3125                           pclath	equ	0xFFA
  3126                           pcl	equ	0xFF9
  3127                           tblptru	equ	0xFF8
  3128                           tblptrh	equ	0xFF7
  3129                           tblptrl	equ	0xFF6
  3130                           tablat	equ	0xFF5
  3131                           prodh	equ	0xFF4
  3132                           prodl	equ	0xFF3
  3133                           indf0	equ	0xFEF
  3134                           postinc0	equ	0xFEE
  3135                           postdec0	equ	0xFED
  3136                           preinc0	equ	0xFEC
  3137                           plusw0	equ	0xFEB
  3138                           fsr0h	equ	0xFEA
  3139                           fsr0l	equ	0xFE9
  3140                           wreg	equ	0xFE8
  3141                           indf1	equ	0xFE7
  3142                           postinc1	equ	0xFE6
  3143                           postdec1	equ	0xFE5
  3144                           preinc1	equ	0xFE4
  3145                           plusw1	equ	0xFE3
  3146                           fsr1h	equ	0xFE2
  3147                           fsr1l	equ	0xFE1
  3148                           bsr	equ	0xFE0
  3149                           indf2	equ	0xFDF
  3150                           postinc2	equ	0xFDE
  3151                           postdec2	equ	0xFDD
  3152                           preinc2	equ	0xFDC
  3153                           plusw2	equ	0xFDB
  3154                           fsr2h	equ	0xFDA
  3155                           fsr2l	equ	0xFD9
  3156                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     41      89
    BANK0           128      7       7
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    sp__GetString	PTR unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), STR_2(CODE[1]), STR_3(CODE[1]), STR_4(CODE[1]), 
		 -> STR_5(CODE[1]), STR_6(CODE[1]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_strcpy
    _strcpy->_GetString
    _MyusartRead->_UART_Write_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ledLeftOn
    _main->_ledOff
    _main->_ledRightOn
    _ledRightOn->_displayBinary
    _ledOff->_displayBinary
    _ledLeftOn->_displayBinary

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     682
                                              5 BANK0      2     2      0
                  _SYSTEM_Initialize
                      _displayBinary
                       _initialState
                          _ledLeftOn
                             _ledOff
                         _ledRightOn
 ---------------------------------------------------------------------------------
 (1) _ledRightOn                                           2     0      2     179
                                              3 BANK0      2     0      2
                      _displayBinary
 ---------------------------------------------------------------------------------
 (1) _ledOff                                               2     0      2     179
                                              3 BANK0      2     0      2
                      _displayBinary
 ---------------------------------------------------------------------------------
 (1) _ledLeftOn                                            2     0      2     179
                                              3 BANK0      2     0      2
                      _displayBinary
 ---------------------------------------------------------------------------------
 (2) _displayBinary                                        3     1      2     145
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _initialState                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _TMR2_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                              33    33      0     929
                                              8 COMRAM    33    33      0
                        _ClearBuffer
                          _GetString
                        _MyusartRead
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               3     1      2      95
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     3      3      85
                                              2 COMRAM     6     3      3
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          1     1      0     188
                                              5 COMRAM     1     1      0
                         _UART_Write
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (5) _UART_Write_Text                                      4     3      1     106
                                              1 COMRAM     4     3      1
                         _UART_Write
 ---------------------------------------------------------------------------------
 (6) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _GetString                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ClearBuffer                                          2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Hi_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _TMR2_Initialize
     _UART_Initialize
   _displayBinary
   _initialState
   _ledLeftOn
     _displayBinary
   _ledOff
     _displayBinary
   _ledRightOn
     _displayBinary

 _Lo_ISR (ROOT)
   _ClearBuffer
   _GetString
   _MyusartRead
     _UART_Write
     _UART_Write_Text
       _UART_Write
   _strcpy
     _GetString (ARG)
   _strlen

 _Hi_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1523      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK5           244      0       0      0.0%
BANK5              244      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      7       7      5.5%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     41      89     70.6%
BITBIGSFR_1h        38      0       0      0.0%
BITBIGSFRh          18      0       0      0.0%
BITBIGSFR_1lh       14      0       0      0.0%
BITBIGSFR_5h        10      0       0      0.0%
BITBIGSFRl           9      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_5l         2      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      96      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Jan 15 00:05:31 2025

                           l47 08F4                             l80 0950                             l74 0944  
                           l77 0958                             bsr 0FE0                            l107 08A8  
                          l171 0964                            l180 0932                            l174 090A  
                          l168 074C                            l192 066A                            l177 08DC  
                          _PR2 0FCB                            u900 06F2                            u901 06EA  
                          u920 0716                            u921 070E                            u940 073C  
                          u941 0734                            u918 06F6                            u880 06D0  
                          u881 06C8                            u938 071A                            u958 0740  
                          u898 06D4                            _dir 0017                            _str 0001  
              _TMR2_Initialize 0946                 ?_displayBinary 0080                            wreg 0FE8  
                         l1510 0616                           l1440 08EC                           l1432 08DE  
                         l1520 0658                           l1512 0626                           l1442 08EE  
                         l1434 08E4                           l1450 0946                           l1522 0664  
                         l1514 0636                           l1506 0606                           l1444 08F0  
                         l1436 08E8                           l1460 089A                           l1452 0888  
                         l1516 0646                           l1508 060E                           l1446 08F2  
                         l1438 08EA                           l1470 08A4                           l1462 089C  
                         l1454 0892                           l1518 0652                           l1526 066A  
                         l1448 0952                           l1472 08A6                           l1464 089E  
                         l1456 0896                           l1480 0940                           l1466 08A0  
                         l1458 0898                           l1474 06BC                           l1490 08D8  
                         l1482 08F6                           l1468 08A2                           l1476 0934  
                         l1492 08DA                           l1484 0902                           l1564 0682  
                         l1478 093C                           l1494 0922                           l1486 08C4  
                         l1496 0926                           l1488 08CC                           _ADFM 7E07  
                         STR_1 0601                           STR_2 0603                           STR_3 0603  
                         STR_4 0603                           STR_5 0603                           STR_6 0603  
                         _CREN 7D5C                           _LATA 0F89                           _RCIF 7CF5  
                         _main 0606                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf1 0FE7                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005A                           start 0398  
                 ___param_bank 0000        __end_of_UART_Write_Text 07E4               ?_UART_Initialize 0031  
__end_of_OSCILLATOR_Initialize 095A                          ?_main 0031                          _T2CON 0FCA  
                        _IRCF0 7E9C                          _IRCF1 7E9D                          _IRCF2 7E9E  
                        i1l110 090E                          i1l113 0920                          i1l131 0962  
                        i1l124 081E                          i1l213 02C4                          i1l222 02C0  
                        i1l119 07E2                          i1l128 0858                          i1l219 0368  
                        i2l208 095C                          i1l920 0886                          i1l922 090E  
                        i1l914 0798                          i1l924 091C                          i1l990 07EC  
                        i1l992 07F6                          i1l984 07E4                          i1l994 07FA  
                        i1l996 0816                          _RCREG 0FAE                          _SPBRG 0FAF  
                        _TRISA 0F92                          _TXREG 0FAD                    ?_UART_Write 0031  
                        _state 0019                    _ClearBuffer 07E4                          tablat 0FF5  
                        ttemp5 005B                          ttemp6 005E                          ttemp7 0062  
                        status 0FD8                          wtemp8 005B                __initialization 08AA  
                 __end_of_main 06BC        __end_of_TMR2_Initialize 0952                         ??_main 0085  
              ??_displayBinary 0082                  __activetblptr 0002                 _postpostscaler 0015  
                       _ADCON1 0FC1                         _ADRESH 0FC4                         _ADRESL 0FC3  
                       i1l1230 07C0                         i1l1224 079A                         i1l1320 0054  
                       i1l1250 0960                         i1l1226 07A6                         i1l1242 0842  
                       i1l1234 0820                         i1l1410 02A4                         i1l1402 025C  
                       i1l1330 0090                         i1l1322 0062                         i1l1228 07BC  
                       i1l1244 084E                         i1l1236 0824                         i1l1420 02FA  
                       i1l1412 02A8                         i1l1404 026E                         i1l1340 00DE  
                       i1l1332 00A4                         i1l1324 0068                         i1l1246 0852  
                       i1l1238 0836                         i1l1270 074E                         i1l1422 030E  
                       i1l1406 0280                         i1l1342 00FA                         i1l1334 00A8  
                       i1l1326 006C                         i1l1318 0046                         i1l1272 0752  
                       i1l1280 087A                         i1l1424 0334                         i1l1416 02D2  
                       i1l1408 029C                         i1l1360 0166                         i1l1344 0102  
                       i1l1336 00BA                         i1l1352 011E                         i1l1328 007E  
                       i1l1274 085A                         i1l1426 0346                         i1l1418 02D4  
                       i1l1370 0194                         i1l1362 016A                         i1l1354 0130  
                       i1l1346 0106                         i1l1338 00CC                         i1l1276 0862  
                       i1l1380 01E0                         i1l1372 01A6                         i1l1356 0142  
                       i1l1278 0864                         i1l1390 021C                         i1l1374 01B8  
                       i1l1358 015E                         i1l1392 0238                         i1l1376 01D4  
                       i1l1368 0182                         i1l1394 0240                         i1l1378 01DC  
                       i1l1386 01F8                         i1l1396 0244                         i1l1388 020A  
                       _TMR2IF 7CF1                         i1u1_20 091C                         i1u1_21 0918  
                       _Hi_ISR 0008                  ?_initialState 0031                         _Lo_ISR 0018  
             ?_UART_Write_Text 0032                         _ledOff 08C4                         _lenStr 001B  
                       clear_0 08B0                         isa$std 0001                         _strcpy 074E  
                       _strlen 085A                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8              _SYSTEM_Initialize 0934  
                   __accesstop 0080        __end_of__initialization 08B6                 ??_initialState 0080  
           ?_SYSTEM_Initialize 0031                  ___rparam_used 0001              __end_of_GetString 0964  
               __pcstackCOMRAM 0031            ??_SYSTEM_Initialize 0080               ?_TMR2_Initialize 0031  
                ??_MyusartRead 0036      __end_of_SYSTEM_Initialize 0946                        ?_Hi_ISR 0031  
                      ?_Lo_ISR 0031                        ?_ledOff 0083                        _CCP1CON 0FBD  
                      ?_strcpy 0033                        ?_strlen 0031                     _ledRightOn 08F6  
                      i1u11_20 0816                        i1u11_21 0812                   ??_UART_Write 0031  
                      i1u60_20 0062                        i1u60_21 005E                        i1u61_20 007E  
                      i1u61_21 007A                        i1u46_20 07E2                        i1u70_20 0194  
                      i1u62_20 0090                        i1u46_21 07DE                        i1u70_21 0190  
                      i1u62_21 008C                        i1u55_20 0836                        i1u71_20 01A6  
                      i1u63_20 00BA                        i1u55_21 0832                        i1u71_21 01A2  
                      i1u63_21 00B6                        i1u56_20 0786                        i1u80_20 02D2  
                      i1u72_20 01B8                        i1u64_20 00CC                        i1u80_21 02CE  
                      i1u72_21 01B4                        i1u64_21 00C8                        i1u56_27 077C  
                      i1u57_20 0798                        i1u81_20 02FA                        i1u73_20 01D4  
                      i1u65_20 00DE                        i1u57_21 0794                        i1u81_21 02F6  
                      i1u73_21 01D0                        i1u65_21 00DA                        i1u58_20 087A  
                      i1u82_20 030E                        i1u74_20 020A                        i1u66_20 00FA  
                      i1u58_21 0876                        i1u82_21 030A                        i1u74_21 0206  
                      i1u66_21 00F6                        i1u83_20 0320                        i1u75_20 021C  
                      i1u67_20 0130                        i1u59_20 0054                        i1u83_21 0318  
                      i1u75_21 0218                        i1u67_21 012C                        i1u59_21 0050  
                      i1u76_20 0238                        i1u68_20 0142                        i1u76_21 0234  
                      i1u68_21 013E                        i1u85_20 0346                        i1u84_28 0322  
                      i1u77_20 026E                        i1u69_20 015E                        i1u85_21 0342  
                      i1u77_21 026A                        i1u69_21 015A                        i1u86_20 0358  
                      i1u78_20 0280                        i1u86_21 0350                        i1u78_21 027C  
                      i1u79_20 029C                        i1u79_21 0298                        i1u87_28 035A  
                 ?_ClearBuffer 0031            __end_of_MyusartRead 085A              __end_of_ledLeftOn 0934  
                      __Hparam 0000                        __Lparam 0000             __end_of_UART_Write 0922  
                 __psmallconst 0600                        __pcinit 08AA                        __ramtop 0600  
                      __ptext0 0606                        __ptext1 08F6                        __ptext2 08C4  
                      __ptext3 0922                        __ptext4 06BC                        __ptext5 0964  
                      __ptext6 0934                        __ptext7 0888                        __ptext8 0946  
                      __ptext9 0952          _OSCILLATOR_Initialize 0952           __end_of_initialState 0966  
               __pintcode_body 095A           end_of_initialization 08B6                  __Lmediumconst 0000  
                      int_func 095A                      _RCSTAbits 0FAB                        postinc0 0FEE  
                      strcpy@d 0038                        strlen@a 0033                        strlen@s 0031  
               UART_Write@data 0031                    ?_ledRightOn 0083          __end_of_displayBinary 074E  
                    _TRISAbits 0F92                      _TRISCbits 0F94                    _MyusartRead 0820  
                    _TXSTAbits 0FAC                 __end_of_Hi_ISR 0960                 __end_of_Lo_ISR 0398  
 __end_of_INTERRUPT_Initialize 08F6                      _GetString 0960                    _BAUDCONbits 0FB8  
               __end_of_ledOff 08DE         ?_OSCILLATOR_Initialize 0031                 __end_of_strcpy 079A  
               __end_of_strlen 0888            start_initialization 08AA                   ClearBuffer@i 0031  
            ??_UART_Initialize 0080                       ??_Hi_ISR 0031                       ??_Lo_ISR 0039  
                     ??_ledOff 0085                     ?_GetString 0031                       ??_strcpy 0036  
                     ??_strlen 0033               displayBinary@num 0080                    __pbssCOMRAM 0001  
                __pcstackBANK0 0080                   _initialState 0964                  Lo_ISR@command 0046  
                    __pintcode 0008                      _ledLeftOn 0922                    __pintcodelo 0018  
                  __smallconst 0600              ??_UART_Write_Text 0033           _INTERRUPT_Initialize 08DE  
                     _LATAbits 0F89                       _IPR1bits 0F9F                       _PIE1bits 0F9D  
                     _PIR1bits 0F9E                       _RCONbits 0FD0                      ledOff@num 0083  
                   ?_ledLeftOn 0083                    ??_GetString 0033                     _ADCON0bits 0FC2  
                   _ADCON2bits 0FC0                   ??_ledRightOn 0085        MyusartRead@receivedData 0036  
                 ?_MyusartRead 0031          ?_INTERRUPT_Initialize 0031              ??_TMR2_Initialize 0080  
                     __Hrparam 0000             __end_of_ledRightOn 090C                       __Lrparam 0000  
      ??_OSCILLATOR_Initialize 0080                _UART_Initialize 0888                       __ptext10 08DE  
                     __ptext12 085A                       __ptext13 074E                       __ptext14 0820  
                     __ptext15 079A                       __ptext16 090C                       __ptext17 0960  
                     __ptext18 07E4                     strcpy@dest 0033            UART_Write_Text@text 0032  
                     isa$xinst 0000                       int$flags 005A                    ??_ledLeftOn 0085  
                     _mystring 001D                     _INTCONbits 0FF2         ??_INTERRUPT_Initialize 0080  
                ??_ClearBuffer 0031                       intlevel1 0000                       intlevel2 0000  
                    strcpy@src 0034                   ledLeftOn@num 0083        __end_of_UART_Initialize 08AA  
              _UART_Write_Text 079A                  _displayBinary 06BC                     _UART_Write 090C  
             UART_Write_Text@i 0034            __end_of_ClearBuffer 0820                  ledRightOn@num 0083  
