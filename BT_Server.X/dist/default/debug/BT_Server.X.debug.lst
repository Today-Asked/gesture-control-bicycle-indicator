

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Jan 14 00:04:16 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=1
    40                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=3
    42                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=3
    43                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    44                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=2
    45                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=3
    50                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=3
    51                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Generated 25/07/2024 GMT
    67                           ; 
    68                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F4520 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000FE0                     bsr             equ	4064
   101   000FE9                     fsr0            equ	4073
   102   000FEA                     fsr0h           equ	4074
   103   000FE9                     fsr0l           equ	4073
   104   000FE1                     fsr1            equ	4065
   105   000FE2                     fsr1h           equ	4066
   106   000FE1                     fsr1l           equ	4065
   107   000FD9                     fsr2            equ	4057
   108   000FDA                     fsr2h           equ	4058
   109   000FD9                     fsr2l           equ	4057
   110   000FEF                     indf0           equ	4079
   111   000FE7                     indf1           equ	4071
   112   000FDF                     indf2           equ	4063
   113   000FF2                     intcon          equ	4082
   114   000000                     nvmcon          equ	0
   115   000FF9                     pcl             equ	4089
   116   000FFA                     pclath          equ	4090
   117   000FFB                     pclatu          equ	4091
   118   000FEB                     plusw0          equ	4075
   119   000FE3                     plusw1          equ	4067
   120   000FDB                     plusw2          equ	4059
   121   000FED                     postdec0        equ	4077
   122   000FE5                     postdec1        equ	4069
   123   000FDD                     postdec2        equ	4061
   124   000FEE                     postinc0        equ	4078
   125   000FE6                     postinc1        equ	4070
   126   000FDE                     postinc2        equ	4062
   127   000FEC                     preinc0         equ	4076
   128   000FE4                     preinc1         equ	4068
   129   000FDC                     preinc2         equ	4060
   130   000FF3                     prod            equ	4083
   131   000FF4                     prodh           equ	4084
   132   000FF3                     prodl           equ	4083
   133   000FD8                     status          equ	4056
   134   000FF5                     tablat          equ	4085
   135   000FF6                     tblptr          equ	4086
   136   000FF7                     tblptrh         equ	4087
   137   000FF6                     tblptrl         equ	4086
   138   000FF8                     tblptru         equ	4088
   139   000FFD                     tosl            equ	4093
   140   000FE8                     wreg            equ	4072
   141   000F80                     PORTA           equ	3968	;# 
   142   000F81                     PORTB           equ	3969	;# 
   143   000F82                     PORTC           equ	3970	;# 
   144   000F83                     PORTD           equ	3971	;# 
   145   000F84                     PORTE           equ	3972	;# 
   146   000F89                     LATA            equ	3977	;# 
   147   000F8A                     LATB            equ	3978	;# 
   148   000F8B                     LATC            equ	3979	;# 
   149   000F8C                     LATD            equ	3980	;# 
   150   000F8D                     LATE            equ	3981	;# 
   151   000F92                     TRISA           equ	3986	;# 
   152   000F92                     DDRA            equ	3986	;# 
   153   000F93                     TRISB           equ	3987	;# 
   154   000F93                     DDRB            equ	3987	;# 
   155   000F94                     TRISC           equ	3988	;# 
   156   000F94                     DDRC            equ	3988	;# 
   157   000F95                     TRISD           equ	3989	;# 
   158   000F95                     DDRD            equ	3989	;# 
   159   000F96                     TRISE           equ	3990	;# 
   160   000F96                     DDRE            equ	3990	;# 
   161   000F9B                     OSCTUNE         equ	3995	;# 
   162   000F9D                     PIE1            equ	3997	;# 
   163   000F9E                     PIR1            equ	3998	;# 
   164   000F9F                     IPR1            equ	3999	;# 
   165   000FA0                     PIE2            equ	4000	;# 
   166   000FA1                     PIR2            equ	4001	;# 
   167   000FA2                     IPR2            equ	4002	;# 
   168   000FA6                     EECON1          equ	4006	;# 
   169   000FA7                     EECON2          equ	4007	;# 
   170   000FA8                     EEDATA          equ	4008	;# 
   171   000FA9                     EEADR           equ	4009	;# 
   172   000FAB                     RCSTA           equ	4011	;# 
   173   000FAB                     RCSTA1          equ	4011	;# 
   174   000FAC                     TXSTA           equ	4012	;# 
   175   000FAC                     TXSTA1          equ	4012	;# 
   176   000FAD                     TXREG           equ	4013	;# 
   177   000FAD                     TXREG1          equ	4013	;# 
   178   000FAE                     RCREG           equ	4014	;# 
   179   000FAE                     RCREG1          equ	4014	;# 
   180   000FAF                     SPBRG           equ	4015	;# 
   181   000FAF                     SPBRG1          equ	4015	;# 
   182   000FB0                     SPBRGH          equ	4016	;# 
   183   000FB1                     T3CON           equ	4017	;# 
   184   000FB2                     TMR3            equ	4018	;# 
   185   000FB2                     TMR3L           equ	4018	;# 
   186   000FB3                     TMR3H           equ	4019	;# 
   187   000FB4                     CMCON           equ	4020	;# 
   188   000FB5                     CVRCON          equ	4021	;# 
   189   000FB6                     ECCP1AS         equ	4022	;# 
   190   000FB6                     ECCPAS          equ	4022	;# 
   191   000FB7                     PWM1CON         equ	4023	;# 
   192   000FB7                     ECCP1DEL        equ	4023	;# 
   193   000FB8                     BAUDCON         equ	4024	;# 
   194   000FB8                     BAUDCTL         equ	4024	;# 
   195   000FBA                     CCP2CON         equ	4026	;# 
   196   000FBB                     CCPR2           equ	4027	;# 
   197   000FBB                     CCPR2L          equ	4027	;# 
   198   000FBC                     CCPR2H          equ	4028	;# 
   199   000FBD                     CCP1CON         equ	4029	;# 
   200   000FBE                     CCPR1           equ	4030	;# 
   201   000FBE                     CCPR1L          equ	4030	;# 
   202   000FBF                     CCPR1H          equ	4031	;# 
   203   000FC0                     ADCON2          equ	4032	;# 
   204   000FC1                     ADCON1          equ	4033	;# 
   205   000FC2                     ADCON0          equ	4034	;# 
   206   000FC3                     ADRES           equ	4035	;# 
   207   000FC3                     ADRESL          equ	4035	;# 
   208   000FC4                     ADRESH          equ	4036	;# 
   209   000FC5                     SSPCON2         equ	4037	;# 
   210   000FC6                     SSPCON1         equ	4038	;# 
   211   000FC7                     SSPSTAT         equ	4039	;# 
   212   000FC8                     SSPADD          equ	4040	;# 
   213   000FC9                     SSPBUF          equ	4041	;# 
   214   000FCA                     T2CON           equ	4042	;# 
   215   000FCB                     PR2             equ	4043	;# 
   216   000FCB                     MEMCON          equ	4043	;# 
   217   000FCC                     TMR2            equ	4044	;# 
   218   000FCD                     T1CON           equ	4045	;# 
   219   000FCE                     TMR1            equ	4046	;# 
   220   000FCE                     TMR1L           equ	4046	;# 
   221   000FCF                     TMR1H           equ	4047	;# 
   222   000FD0                     RCON            equ	4048	;# 
   223   000FD1                     WDTCON          equ	4049	;# 
   224   000FD2                     HLVDCON         equ	4050	;# 
   225   000FD2                     LVDCON          equ	4050	;# 
   226   000FD3                     OSCCON          equ	4051	;# 
   227   000FD5                     T0CON           equ	4053	;# 
   228   000FD6                     TMR0            equ	4054	;# 
   229   000FD6                     TMR0L           equ	4054	;# 
   230   000FD7                     TMR0H           equ	4055	;# 
   231   000FD8                     STATUS          equ	4056	;# 
   232   000FD9                     FSR2            equ	4057	;# 
   233   000FD9                     FSR2L           equ	4057	;# 
   234   000FDA                     FSR2H           equ	4058	;# 
   235   000FDB                     PLUSW2          equ	4059	;# 
   236   000FDC                     PREINC2         equ	4060	;# 
   237   000FDD                     POSTDEC2        equ	4061	;# 
   238   000FDE                     POSTINC2        equ	4062	;# 
   239   000FDF                     INDF2           equ	4063	;# 
   240   000FE0                     BSR             equ	4064	;# 
   241   000FE1                     FSR1            equ	4065	;# 
   242   000FE1                     FSR1L           equ	4065	;# 
   243   000FE2                     FSR1H           equ	4066	;# 
   244   000FE3                     PLUSW1          equ	4067	;# 
   245   000FE4                     PREINC1         equ	4068	;# 
   246   000FE5                     POSTDEC1        equ	4069	;# 
   247   000FE6                     POSTINC1        equ	4070	;# 
   248   000FE7                     INDF1           equ	4071	;# 
   249   000FE8                     WREG            equ	4072	;# 
   250   000FE9                     FSR0            equ	4073	;# 
   251   000FE9                     FSR0L           equ	4073	;# 
   252   000FEA                     FSR0H           equ	4074	;# 
   253   000FEB                     PLUSW0          equ	4075	;# 
   254   000FEC                     PREINC0         equ	4076	;# 
   255   000FED                     POSTDEC0        equ	4077	;# 
   256   000FEE                     POSTINC0        equ	4078	;# 
   257   000FEF                     INDF0           equ	4079	;# 
   258   000FF0                     INTCON3         equ	4080	;# 
   259   000FF1                     INTCON2         equ	4081	;# 
   260   000FF2                     INTCON          equ	4082	;# 
   261   000FF3                     PROD            equ	4083	;# 
   262   000FF3                     PRODL           equ	4083	;# 
   263   000FF4                     PRODH           equ	4084	;# 
   264   000FF5                     TABLAT          equ	4085	;# 
   265   000FF6                     TBLPTR          equ	4086	;# 
   266   000FF6                     TBLPTRL         equ	4086	;# 
   267   000FF7                     TBLPTRH         equ	4087	;# 
   268   000FF8                     TBLPTRU         equ	4088	;# 
   269   000FF9                     PCLAT           equ	4089	;# 
   270   000FF9                     PC              equ	4089	;# 
   271   000FF9                     PCL             equ	4089	;# 
   272   000FFA                     PCLATH          equ	4090	;# 
   273   000FFB                     PCLATU          equ	4091	;# 
   274   000FFC                     STKPTR          equ	4092	;# 
   275   000FFD                     TOS             equ	4093	;# 
   276   000FFD                     TOSL            equ	4093	;# 
   277   000FFE                     TOSH            equ	4094	;# 
   278   000FFF                     TOSU            equ	4095	;# 
   279   000F80                     PORTA           equ	3968	;# 
   280   000F81                     PORTB           equ	3969	;# 
   281   000F82                     PORTC           equ	3970	;# 
   282   000F83                     PORTD           equ	3971	;# 
   283   000F84                     PORTE           equ	3972	;# 
   284   000F89                     LATA            equ	3977	;# 
   285   000F8A                     LATB            equ	3978	;# 
   286   000F8B                     LATC            equ	3979	;# 
   287   000F8C                     LATD            equ	3980	;# 
   288   000F8D                     LATE            equ	3981	;# 
   289   000F92                     TRISA           equ	3986	;# 
   290   000F92                     DDRA            equ	3986	;# 
   291   000F93                     TRISB           equ	3987	;# 
   292   000F93                     DDRB            equ	3987	;# 
   293   000F94                     TRISC           equ	3988	;# 
   294   000F94                     DDRC            equ	3988	;# 
   295   000F95                     TRISD           equ	3989	;# 
   296   000F95                     DDRD            equ	3989	;# 
   297   000F96                     TRISE           equ	3990	;# 
   298   000F96                     DDRE            equ	3990	;# 
   299   000F9B                     OSCTUNE         equ	3995	;# 
   300   000F9D                     PIE1            equ	3997	;# 
   301   000F9E                     PIR1            equ	3998	;# 
   302   000F9F                     IPR1            equ	3999	;# 
   303   000FA0                     PIE2            equ	4000	;# 
   304   000FA1                     PIR2            equ	4001	;# 
   305   000FA2                     IPR2            equ	4002	;# 
   306   000FA6                     EECON1          equ	4006	;# 
   307   000FA7                     EECON2          equ	4007	;# 
   308   000FA8                     EEDATA          equ	4008	;# 
   309   000FA9                     EEADR           equ	4009	;# 
   310   000FAB                     RCSTA           equ	4011	;# 
   311   000FAB                     RCSTA1          equ	4011	;# 
   312   000FAC                     TXSTA           equ	4012	;# 
   313   000FAC                     TXSTA1          equ	4012	;# 
   314   000FAD                     TXREG           equ	4013	;# 
   315   000FAD                     TXREG1          equ	4013	;# 
   316   000FAE                     RCREG           equ	4014	;# 
   317   000FAE                     RCREG1          equ	4014	;# 
   318   000FAF                     SPBRG           equ	4015	;# 
   319   000FAF                     SPBRG1          equ	4015	;# 
   320   000FB0                     SPBRGH          equ	4016	;# 
   321   000FB1                     T3CON           equ	4017	;# 
   322   000FB2                     TMR3            equ	4018	;# 
   323   000FB2                     TMR3L           equ	4018	;# 
   324   000FB3                     TMR3H           equ	4019	;# 
   325   000FB4                     CMCON           equ	4020	;# 
   326   000FB5                     CVRCON          equ	4021	;# 
   327   000FB6                     ECCP1AS         equ	4022	;# 
   328   000FB6                     ECCPAS          equ	4022	;# 
   329   000FB7                     PWM1CON         equ	4023	;# 
   330   000FB7                     ECCP1DEL        equ	4023	;# 
   331   000FB8                     BAUDCON         equ	4024	;# 
   332   000FB8                     BAUDCTL         equ	4024	;# 
   333   000FBA                     CCP2CON         equ	4026	;# 
   334   000FBB                     CCPR2           equ	4027	;# 
   335   000FBB                     CCPR2L          equ	4027	;# 
   336   000FBC                     CCPR2H          equ	4028	;# 
   337   000FBD                     CCP1CON         equ	4029	;# 
   338   000FBE                     CCPR1           equ	4030	;# 
   339   000FBE                     CCPR1L          equ	4030	;# 
   340   000FBF                     CCPR1H          equ	4031	;# 
   341   000FC0                     ADCON2          equ	4032	;# 
   342   000FC1                     ADCON1          equ	4033	;# 
   343   000FC2                     ADCON0          equ	4034	;# 
   344   000FC3                     ADRES           equ	4035	;# 
   345   000FC3                     ADRESL          equ	4035	;# 
   346   000FC4                     ADRESH          equ	4036	;# 
   347   000FC5                     SSPCON2         equ	4037	;# 
   348   000FC6                     SSPCON1         equ	4038	;# 
   349   000FC7                     SSPSTAT         equ	4039	;# 
   350   000FC8                     SSPADD          equ	4040	;# 
   351   000FC9                     SSPBUF          equ	4041	;# 
   352   000FCA                     T2CON           equ	4042	;# 
   353   000FCB                     PR2             equ	4043	;# 
   354   000FCB                     MEMCON          equ	4043	;# 
   355   000FCC                     TMR2            equ	4044	;# 
   356   000FCD                     T1CON           equ	4045	;# 
   357   000FCE                     TMR1            equ	4046	;# 
   358   000FCE                     TMR1L           equ	4046	;# 
   359   000FCF                     TMR1H           equ	4047	;# 
   360   000FD0                     RCON            equ	4048	;# 
   361   000FD1                     WDTCON          equ	4049	;# 
   362   000FD2                     HLVDCON         equ	4050	;# 
   363   000FD2                     LVDCON          equ	4050	;# 
   364   000FD3                     OSCCON          equ	4051	;# 
   365   000FD5                     T0CON           equ	4053	;# 
   366   000FD6                     TMR0            equ	4054	;# 
   367   000FD6                     TMR0L           equ	4054	;# 
   368   000FD7                     TMR0H           equ	4055	;# 
   369   000FD8                     STATUS          equ	4056	;# 
   370   000FD9                     FSR2            equ	4057	;# 
   371   000FD9                     FSR2L           equ	4057	;# 
   372   000FDA                     FSR2H           equ	4058	;# 
   373   000FDB                     PLUSW2          equ	4059	;# 
   374   000FDC                     PREINC2         equ	4060	;# 
   375   000FDD                     POSTDEC2        equ	4061	;# 
   376   000FDE                     POSTINC2        equ	4062	;# 
   377   000FDF                     INDF2           equ	4063	;# 
   378   000FE0                     BSR             equ	4064	;# 
   379   000FE1                     FSR1            equ	4065	;# 
   380   000FE1                     FSR1L           equ	4065	;# 
   381   000FE2                     FSR1H           equ	4066	;# 
   382   000FE3                     PLUSW1          equ	4067	;# 
   383   000FE4                     PREINC1         equ	4068	;# 
   384   000FE5                     POSTDEC1        equ	4069	;# 
   385   000FE6                     POSTINC1        equ	4070	;# 
   386   000FE7                     INDF1           equ	4071	;# 
   387   000FE8                     WREG            equ	4072	;# 
   388   000FE9                     FSR0            equ	4073	;# 
   389   000FE9                     FSR0L           equ	4073	;# 
   390   000FEA                     FSR0H           equ	4074	;# 
   391   000FEB                     PLUSW0          equ	4075	;# 
   392   000FEC                     PREINC0         equ	4076	;# 
   393   000FED                     POSTDEC0        equ	4077	;# 
   394   000FEE                     POSTINC0        equ	4078	;# 
   395   000FEF                     INDF0           equ	4079	;# 
   396   000FF0                     INTCON3         equ	4080	;# 
   397   000FF1                     INTCON2         equ	4081	;# 
   398   000FF2                     INTCON          equ	4082	;# 
   399   000FF3                     PROD            equ	4083	;# 
   400   000FF3                     PRODL           equ	4083	;# 
   401   000FF4                     PRODH           equ	4084	;# 
   402   000FF5                     TABLAT          equ	4085	;# 
   403   000FF6                     TBLPTR          equ	4086	;# 
   404   000FF6                     TBLPTRL         equ	4086	;# 
   405   000FF7                     TBLPTRH         equ	4087	;# 
   406   000FF8                     TBLPTRU         equ	4088	;# 
   407   000FF9                     PCLAT           equ	4089	;# 
   408   000FF9                     PC              equ	4089	;# 
   409   000FF9                     PCL             equ	4089	;# 
   410   000FFA                     PCLATH          equ	4090	;# 
   411   000FFB                     PCLATU          equ	4091	;# 
   412   000FFC                     STKPTR          equ	4092	;# 
   413   000FFD                     TOS             equ	4093	;# 
   414   000FFD                     TOSL            equ	4093	;# 
   415   000FFE                     TOSH            equ	4094	;# 
   416   000FFF                     TOSU            equ	4095	;# 
   417   000F80                     PORTA           equ	3968	;# 
   418   000F81                     PORTB           equ	3969	;# 
   419   000F82                     PORTC           equ	3970	;# 
   420   000F83                     PORTD           equ	3971	;# 
   421   000F84                     PORTE           equ	3972	;# 
   422   000F89                     LATA            equ	3977	;# 
   423   000F8A                     LATB            equ	3978	;# 
   424   000F8B                     LATC            equ	3979	;# 
   425   000F8C                     LATD            equ	3980	;# 
   426   000F8D                     LATE            equ	3981	;# 
   427   000F92                     TRISA           equ	3986	;# 
   428   000F92                     DDRA            equ	3986	;# 
   429   000F93                     TRISB           equ	3987	;# 
   430   000F93                     DDRB            equ	3987	;# 
   431   000F94                     TRISC           equ	3988	;# 
   432   000F94                     DDRC            equ	3988	;# 
   433   000F95                     TRISD           equ	3989	;# 
   434   000F95                     DDRD            equ	3989	;# 
   435   000F96                     TRISE           equ	3990	;# 
   436   000F96                     DDRE            equ	3990	;# 
   437   000F9B                     OSCTUNE         equ	3995	;# 
   438   000F9D                     PIE1            equ	3997	;# 
   439   000F9E                     PIR1            equ	3998	;# 
   440   000F9F                     IPR1            equ	3999	;# 
   441   000FA0                     PIE2            equ	4000	;# 
   442   000FA1                     PIR2            equ	4001	;# 
   443   000FA2                     IPR2            equ	4002	;# 
   444   000FA6                     EECON1          equ	4006	;# 
   445   000FA7                     EECON2          equ	4007	;# 
   446   000FA8                     EEDATA          equ	4008	;# 
   447   000FA9                     EEADR           equ	4009	;# 
   448   000FAB                     RCSTA           equ	4011	;# 
   449   000FAB                     RCSTA1          equ	4011	;# 
   450   000FAC                     TXSTA           equ	4012	;# 
   451   000FAC                     TXSTA1          equ	4012	;# 
   452   000FAD                     TXREG           equ	4013	;# 
   453   000FAD                     TXREG1          equ	4013	;# 
   454   000FAE                     RCREG           equ	4014	;# 
   455   000FAE                     RCREG1          equ	4014	;# 
   456   000FAF                     SPBRG           equ	4015	;# 
   457   000FAF                     SPBRG1          equ	4015	;# 
   458   000FB0                     SPBRGH          equ	4016	;# 
   459   000FB1                     T3CON           equ	4017	;# 
   460   000FB2                     TMR3            equ	4018	;# 
   461   000FB2                     TMR3L           equ	4018	;# 
   462   000FB3                     TMR3H           equ	4019	;# 
   463   000FB4                     CMCON           equ	4020	;# 
   464   000FB5                     CVRCON          equ	4021	;# 
   465   000FB6                     ECCP1AS         equ	4022	;# 
   466   000FB6                     ECCPAS          equ	4022	;# 
   467   000FB7                     PWM1CON         equ	4023	;# 
   468   000FB7                     ECCP1DEL        equ	4023	;# 
   469   000FB8                     BAUDCON         equ	4024	;# 
   470   000FB8                     BAUDCTL         equ	4024	;# 
   471   000FBA                     CCP2CON         equ	4026	;# 
   472   000FBB                     CCPR2           equ	4027	;# 
   473   000FBB                     CCPR2L          equ	4027	;# 
   474   000FBC                     CCPR2H          equ	4028	;# 
   475   000FBD                     CCP1CON         equ	4029	;# 
   476   000FBE                     CCPR1           equ	4030	;# 
   477   000FBE                     CCPR1L          equ	4030	;# 
   478   000FBF                     CCPR1H          equ	4031	;# 
   479   000FC0                     ADCON2          equ	4032	;# 
   480   000FC1                     ADCON1          equ	4033	;# 
   481   000FC2                     ADCON0          equ	4034	;# 
   482   000FC3                     ADRES           equ	4035	;# 
   483   000FC3                     ADRESL          equ	4035	;# 
   484   000FC4                     ADRESH          equ	4036	;# 
   485   000FC5                     SSPCON2         equ	4037	;# 
   486   000FC6                     SSPCON1         equ	4038	;# 
   487   000FC7                     SSPSTAT         equ	4039	;# 
   488   000FC8                     SSPADD          equ	4040	;# 
   489   000FC9                     SSPBUF          equ	4041	;# 
   490   000FCA                     T2CON           equ	4042	;# 
   491   000FCB                     PR2             equ	4043	;# 
   492   000FCB                     MEMCON          equ	4043	;# 
   493   000FCC                     TMR2            equ	4044	;# 
   494   000FCD                     T1CON           equ	4045	;# 
   495   000FCE                     TMR1            equ	4046	;# 
   496   000FCE                     TMR1L           equ	4046	;# 
   497   000FCF                     TMR1H           equ	4047	;# 
   498   000FD0                     RCON            equ	4048	;# 
   499   000FD1                     WDTCON          equ	4049	;# 
   500   000FD2                     HLVDCON         equ	4050	;# 
   501   000FD2                     LVDCON          equ	4050	;# 
   502   000FD3                     OSCCON          equ	4051	;# 
   503   000FD5                     T0CON           equ	4053	;# 
   504   000FD6                     TMR0            equ	4054	;# 
   505   000FD6                     TMR0L           equ	4054	;# 
   506   000FD7                     TMR0H           equ	4055	;# 
   507   000FD8                     STATUS          equ	4056	;# 
   508   000FD9                     FSR2            equ	4057	;# 
   509   000FD9                     FSR2L           equ	4057	;# 
   510   000FDA                     FSR2H           equ	4058	;# 
   511   000FDB                     PLUSW2          equ	4059	;# 
   512   000FDC                     PREINC2         equ	4060	;# 
   513   000FDD                     POSTDEC2        equ	4061	;# 
   514   000FDE                     POSTINC2        equ	4062	;# 
   515   000FDF                     INDF2           equ	4063	;# 
   516   000FE0                     BSR             equ	4064	;# 
   517   000FE1                     FSR1            equ	4065	;# 
   518   000FE1                     FSR1L           equ	4065	;# 
   519   000FE2                     FSR1H           equ	4066	;# 
   520   000FE3                     PLUSW1          equ	4067	;# 
   521   000FE4                     PREINC1         equ	4068	;# 
   522   000FE5                     POSTDEC1        equ	4069	;# 
   523   000FE6                     POSTINC1        equ	4070	;# 
   524   000FE7                     INDF1           equ	4071	;# 
   525   000FE8                     WREG            equ	4072	;# 
   526   000FE9                     FSR0            equ	4073	;# 
   527   000FE9                     FSR0L           equ	4073	;# 
   528   000FEA                     FSR0H           equ	4074	;# 
   529   000FEB                     PLUSW0          equ	4075	;# 
   530   000FEC                     PREINC0         equ	4076	;# 
   531   000FED                     POSTDEC0        equ	4077	;# 
   532   000FEE                     POSTINC0        equ	4078	;# 
   533   000FEF                     INDF0           equ	4079	;# 
   534   000FF0                     INTCON3         equ	4080	;# 
   535   000FF1                     INTCON2         equ	4081	;# 
   536   000FF2                     INTCON          equ	4082	;# 
   537   000FF3                     PROD            equ	4083	;# 
   538   000FF3                     PRODL           equ	4083	;# 
   539   000FF4                     PRODH           equ	4084	;# 
   540   000FF5                     TABLAT          equ	4085	;# 
   541   000FF6                     TBLPTR          equ	4086	;# 
   542   000FF6                     TBLPTRL         equ	4086	;# 
   543   000FF7                     TBLPTRH         equ	4087	;# 
   544   000FF8                     TBLPTRU         equ	4088	;# 
   545   000FF9                     PCLAT           equ	4089	;# 
   546   000FF9                     PC              equ	4089	;# 
   547   000FF9                     PCL             equ	4089	;# 
   548   000FFA                     PCLATH          equ	4090	;# 
   549   000FFB                     PCLATU          equ	4091	;# 
   550   000FFC                     STKPTR          equ	4092	;# 
   551   000FFD                     TOS             equ	4093	;# 
   552   000FFD                     TOSL            equ	4093	;# 
   553   000FFE                     TOSH            equ	4094	;# 
   554   000FFF                     TOSU            equ	4095	;# 
   555   000F80                     PORTA           equ	3968	;# 
   556   000F81                     PORTB           equ	3969	;# 
   557   000F82                     PORTC           equ	3970	;# 
   558   000F83                     PORTD           equ	3971	;# 
   559   000F84                     PORTE           equ	3972	;# 
   560   000F89                     LATA            equ	3977	;# 
   561   000F8A                     LATB            equ	3978	;# 
   562   000F8B                     LATC            equ	3979	;# 
   563   000F8C                     LATD            equ	3980	;# 
   564   000F8D                     LATE            equ	3981	;# 
   565   000F92                     TRISA           equ	3986	;# 
   566   000F92                     DDRA            equ	3986	;# 
   567   000F93                     TRISB           equ	3987	;# 
   568   000F93                     DDRB            equ	3987	;# 
   569   000F94                     TRISC           equ	3988	;# 
   570   000F94                     DDRC            equ	3988	;# 
   571   000F95                     TRISD           equ	3989	;# 
   572   000F95                     DDRD            equ	3989	;# 
   573   000F96                     TRISE           equ	3990	;# 
   574   000F96                     DDRE            equ	3990	;# 
   575   000F9B                     OSCTUNE         equ	3995	;# 
   576   000F9D                     PIE1            equ	3997	;# 
   577   000F9E                     PIR1            equ	3998	;# 
   578   000F9F                     IPR1            equ	3999	;# 
   579   000FA0                     PIE2            equ	4000	;# 
   580   000FA1                     PIR2            equ	4001	;# 
   581   000FA2                     IPR2            equ	4002	;# 
   582   000FA6                     EECON1          equ	4006	;# 
   583   000FA7                     EECON2          equ	4007	;# 
   584   000FA8                     EEDATA          equ	4008	;# 
   585   000FA9                     EEADR           equ	4009	;# 
   586   000FAB                     RCSTA           equ	4011	;# 
   587   000FAB                     RCSTA1          equ	4011	;# 
   588   000FAC                     TXSTA           equ	4012	;# 
   589   000FAC                     TXSTA1          equ	4012	;# 
   590   000FAD                     TXREG           equ	4013	;# 
   591   000FAD                     TXREG1          equ	4013	;# 
   592   000FAE                     RCREG           equ	4014	;# 
   593   000FAE                     RCREG1          equ	4014	;# 
   594   000FAF                     SPBRG           equ	4015	;# 
   595   000FAF                     SPBRG1          equ	4015	;# 
   596   000FB0                     SPBRGH          equ	4016	;# 
   597   000FB1                     T3CON           equ	4017	;# 
   598   000FB2                     TMR3            equ	4018	;# 
   599   000FB2                     TMR3L           equ	4018	;# 
   600   000FB3                     TMR3H           equ	4019	;# 
   601   000FB4                     CMCON           equ	4020	;# 
   602   000FB5                     CVRCON          equ	4021	;# 
   603   000FB6                     ECCP1AS         equ	4022	;# 
   604   000FB6                     ECCPAS          equ	4022	;# 
   605   000FB7                     PWM1CON         equ	4023	;# 
   606   000FB7                     ECCP1DEL        equ	4023	;# 
   607   000FB8                     BAUDCON         equ	4024	;# 
   608   000FB8                     BAUDCTL         equ	4024	;# 
   609   000FBA                     CCP2CON         equ	4026	;# 
   610   000FBB                     CCPR2           equ	4027	;# 
   611   000FBB                     CCPR2L          equ	4027	;# 
   612   000FBC                     CCPR2H          equ	4028	;# 
   613   000FBD                     CCP1CON         equ	4029	;# 
   614   000FBE                     CCPR1           equ	4030	;# 
   615   000FBE                     CCPR1L          equ	4030	;# 
   616   000FBF                     CCPR1H          equ	4031	;# 
   617   000FC0                     ADCON2          equ	4032	;# 
   618   000FC1                     ADCON1          equ	4033	;# 
   619   000FC2                     ADCON0          equ	4034	;# 
   620   000FC3                     ADRES           equ	4035	;# 
   621   000FC3                     ADRESL          equ	4035	;# 
   622   000FC4                     ADRESH          equ	4036	;# 
   623   000FC5                     SSPCON2         equ	4037	;# 
   624   000FC6                     SSPCON1         equ	4038	;# 
   625   000FC7                     SSPSTAT         equ	4039	;# 
   626   000FC8                     SSPADD          equ	4040	;# 
   627   000FC9                     SSPBUF          equ	4041	;# 
   628   000FCA                     T2CON           equ	4042	;# 
   629   000FCB                     PR2             equ	4043	;# 
   630   000FCB                     MEMCON          equ	4043	;# 
   631   000FCC                     TMR2            equ	4044	;# 
   632   000FCD                     T1CON           equ	4045	;# 
   633   000FCE                     TMR1            equ	4046	;# 
   634   000FCE                     TMR1L           equ	4046	;# 
   635   000FCF                     TMR1H           equ	4047	;# 
   636   000FD0                     RCON            equ	4048	;# 
   637   000FD1                     WDTCON          equ	4049	;# 
   638   000FD2                     HLVDCON         equ	4050	;# 
   639   000FD2                     LVDCON          equ	4050	;# 
   640   000FD3                     OSCCON          equ	4051	;# 
   641   000FD5                     T0CON           equ	4053	;# 
   642   000FD6                     TMR0            equ	4054	;# 
   643   000FD6                     TMR0L           equ	4054	;# 
   644   000FD7                     TMR0H           equ	4055	;# 
   645   000FD8                     STATUS          equ	4056	;# 
   646   000FD9                     FSR2            equ	4057	;# 
   647   000FD9                     FSR2L           equ	4057	;# 
   648   000FDA                     FSR2H           equ	4058	;# 
   649   000FDB                     PLUSW2          equ	4059	;# 
   650   000FDC                     PREINC2         equ	4060	;# 
   651   000FDD                     POSTDEC2        equ	4061	;# 
   652   000FDE                     POSTINC2        equ	4062	;# 
   653   000FDF                     INDF2           equ	4063	;# 
   654   000FE0                     BSR             equ	4064	;# 
   655   000FE1                     FSR1            equ	4065	;# 
   656   000FE1                     FSR1L           equ	4065	;# 
   657   000FE2                     FSR1H           equ	4066	;# 
   658   000FE3                     PLUSW1          equ	4067	;# 
   659   000FE4                     PREINC1         equ	4068	;# 
   660   000FE5                     POSTDEC1        equ	4069	;# 
   661   000FE6                     POSTINC1        equ	4070	;# 
   662   000FE7                     INDF1           equ	4071	;# 
   663   000FE8                     WREG            equ	4072	;# 
   664   000FE9                     FSR0            equ	4073	;# 
   665   000FE9                     FSR0L           equ	4073	;# 
   666   000FEA                     FSR0H           equ	4074	;# 
   667   000FEB                     PLUSW0          equ	4075	;# 
   668   000FEC                     PREINC0         equ	4076	;# 
   669   000FED                     POSTDEC0        equ	4077	;# 
   670   000FEE                     POSTINC0        equ	4078	;# 
   671   000FEF                     INDF0           equ	4079	;# 
   672   000FF0                     INTCON3         equ	4080	;# 
   673   000FF1                     INTCON2         equ	4081	;# 
   674   000FF2                     INTCON          equ	4082	;# 
   675   000FF3                     PROD            equ	4083	;# 
   676   000FF3                     PRODL           equ	4083	;# 
   677   000FF4                     PRODH           equ	4084	;# 
   678   000FF5                     TABLAT          equ	4085	;# 
   679   000FF6                     TBLPTR          equ	4086	;# 
   680   000FF6                     TBLPTRL         equ	4086	;# 
   681   000FF7                     TBLPTRH         equ	4087	;# 
   682   000FF8                     TBLPTRU         equ	4088	;# 
   683   000FF9                     PCLAT           equ	4089	;# 
   684   000FF9                     PC              equ	4089	;# 
   685   000FF9                     PCL             equ	4089	;# 
   686   000FFA                     PCLATH          equ	4090	;# 
   687   000FFB                     PCLATU          equ	4091	;# 
   688   000FFC                     STKPTR          equ	4092	;# 
   689   000FFD                     TOS             equ	4093	;# 
   690   000FFD                     TOSL            equ	4093	;# 
   691   000FFE                     TOSH            equ	4094	;# 
   692   000FFF                     TOSU            equ	4095	;# 
   693   000F80                     PORTA           equ	3968	;# 
   694   000F81                     PORTB           equ	3969	;# 
   695   000F82                     PORTC           equ	3970	;# 
   696   000F83                     PORTD           equ	3971	;# 
   697   000F84                     PORTE           equ	3972	;# 
   698   000F89                     LATA            equ	3977	;# 
   699   000F8A                     LATB            equ	3978	;# 
   700   000F8B                     LATC            equ	3979	;# 
   701   000F8C                     LATD            equ	3980	;# 
   702   000F8D                     LATE            equ	3981	;# 
   703   000F92                     TRISA           equ	3986	;# 
   704   000F92                     DDRA            equ	3986	;# 
   705   000F93                     TRISB           equ	3987	;# 
   706   000F93                     DDRB            equ	3987	;# 
   707   000F94                     TRISC           equ	3988	;# 
   708   000F94                     DDRC            equ	3988	;# 
   709   000F95                     TRISD           equ	3989	;# 
   710   000F95                     DDRD            equ	3989	;# 
   711   000F96                     TRISE           equ	3990	;# 
   712   000F96                     DDRE            equ	3990	;# 
   713   000F9B                     OSCTUNE         equ	3995	;# 
   714   000F9D                     PIE1            equ	3997	;# 
   715   000F9E                     PIR1            equ	3998	;# 
   716   000F9F                     IPR1            equ	3999	;# 
   717   000FA0                     PIE2            equ	4000	;# 
   718   000FA1                     PIR2            equ	4001	;# 
   719   000FA2                     IPR2            equ	4002	;# 
   720   000FA6                     EECON1          equ	4006	;# 
   721   000FA7                     EECON2          equ	4007	;# 
   722   000FA8                     EEDATA          equ	4008	;# 
   723   000FA9                     EEADR           equ	4009	;# 
   724   000FAB                     RCSTA           equ	4011	;# 
   725   000FAB                     RCSTA1          equ	4011	;# 
   726   000FAC                     TXSTA           equ	4012	;# 
   727   000FAC                     TXSTA1          equ	4012	;# 
   728   000FAD                     TXREG           equ	4013	;# 
   729   000FAD                     TXREG1          equ	4013	;# 
   730   000FAE                     RCREG           equ	4014	;# 
   731   000FAE                     RCREG1          equ	4014	;# 
   732   000FAF                     SPBRG           equ	4015	;# 
   733   000FAF                     SPBRG1          equ	4015	;# 
   734   000FB0                     SPBRGH          equ	4016	;# 
   735   000FB1                     T3CON           equ	4017	;# 
   736   000FB2                     TMR3            equ	4018	;# 
   737   000FB2                     TMR3L           equ	4018	;# 
   738   000FB3                     TMR3H           equ	4019	;# 
   739   000FB4                     CMCON           equ	4020	;# 
   740   000FB5                     CVRCON          equ	4021	;# 
   741   000FB6                     ECCP1AS         equ	4022	;# 
   742   000FB6                     ECCPAS          equ	4022	;# 
   743   000FB7                     PWM1CON         equ	4023	;# 
   744   000FB7                     ECCP1DEL        equ	4023	;# 
   745   000FB8                     BAUDCON         equ	4024	;# 
   746   000FB8                     BAUDCTL         equ	4024	;# 
   747   000FBA                     CCP2CON         equ	4026	;# 
   748   000FBB                     CCPR2           equ	4027	;# 
   749   000FBB                     CCPR2L          equ	4027	;# 
   750   000FBC                     CCPR2H          equ	4028	;# 
   751   000FBD                     CCP1CON         equ	4029	;# 
   752   000FBE                     CCPR1           equ	4030	;# 
   753   000FBE                     CCPR1L          equ	4030	;# 
   754   000FBF                     CCPR1H          equ	4031	;# 
   755   000FC0                     ADCON2          equ	4032	;# 
   756   000FC1                     ADCON1          equ	4033	;# 
   757   000FC2                     ADCON0          equ	4034	;# 
   758   000FC3                     ADRES           equ	4035	;# 
   759   000FC3                     ADRESL          equ	4035	;# 
   760   000FC4                     ADRESH          equ	4036	;# 
   761   000FC5                     SSPCON2         equ	4037	;# 
   762   000FC6                     SSPCON1         equ	4038	;# 
   763   000FC7                     SSPSTAT         equ	4039	;# 
   764   000FC8                     SSPADD          equ	4040	;# 
   765   000FC9                     SSPBUF          equ	4041	;# 
   766   000FCA                     T2CON           equ	4042	;# 
   767   000FCB                     PR2             equ	4043	;# 
   768   000FCB                     MEMCON          equ	4043	;# 
   769   000FCC                     TMR2            equ	4044	;# 
   770   000FCD                     T1CON           equ	4045	;# 
   771   000FCE                     TMR1            equ	4046	;# 
   772   000FCE                     TMR1L           equ	4046	;# 
   773   000FCF                     TMR1H           equ	4047	;# 
   774   000FD0                     RCON            equ	4048	;# 
   775   000FD1                     WDTCON          equ	4049	;# 
   776   000FD2                     HLVDCON         equ	4050	;# 
   777   000FD2                     LVDCON          equ	4050	;# 
   778   000FD3                     OSCCON          equ	4051	;# 
   779   000FD5                     T0CON           equ	4053	;# 
   780   000FD6                     TMR0            equ	4054	;# 
   781   000FD6                     TMR0L           equ	4054	;# 
   782   000FD7                     TMR0H           equ	4055	;# 
   783   000FD8                     STATUS          equ	4056	;# 
   784   000FD9                     FSR2            equ	4057	;# 
   785   000FD9                     FSR2L           equ	4057	;# 
   786   000FDA                     FSR2H           equ	4058	;# 
   787   000FDB                     PLUSW2          equ	4059	;# 
   788   000FDC                     PREINC2         equ	4060	;# 
   789   000FDD                     POSTDEC2        equ	4061	;# 
   790   000FDE                     POSTINC2        equ	4062	;# 
   791   000FDF                     INDF2           equ	4063	;# 
   792   000FE0                     BSR             equ	4064	;# 
   793   000FE1                     FSR1            equ	4065	;# 
   794   000FE1                     FSR1L           equ	4065	;# 
   795   000FE2                     FSR1H           equ	4066	;# 
   796   000FE3                     PLUSW1          equ	4067	;# 
   797   000FE4                     PREINC1         equ	4068	;# 
   798   000FE5                     POSTDEC1        equ	4069	;# 
   799   000FE6                     POSTINC1        equ	4070	;# 
   800   000FE7                     INDF1           equ	4071	;# 
   801   000FE8                     WREG            equ	4072	;# 
   802   000FE9                     FSR0            equ	4073	;# 
   803   000FE9                     FSR0L           equ	4073	;# 
   804   000FEA                     FSR0H           equ	4074	;# 
   805   000FEB                     PLUSW0          equ	4075	;# 
   806   000FEC                     PREINC0         equ	4076	;# 
   807   000FED                     POSTDEC0        equ	4077	;# 
   808   000FEE                     POSTINC0        equ	4078	;# 
   809   000FEF                     INDF0           equ	4079	;# 
   810   000FF0                     INTCON3         equ	4080	;# 
   811   000FF1                     INTCON2         equ	4081	;# 
   812   000FF2                     INTCON          equ	4082	;# 
   813   000FF3                     PROD            equ	4083	;# 
   814   000FF3                     PRODL           equ	4083	;# 
   815   000FF4                     PRODH           equ	4084	;# 
   816   000FF5                     TABLAT          equ	4085	;# 
   817   000FF6                     TBLPTR          equ	4086	;# 
   818   000FF6                     TBLPTRL         equ	4086	;# 
   819   000FF7                     TBLPTRH         equ	4087	;# 
   820   000FF8                     TBLPTRU         equ	4088	;# 
   821   000FF9                     PCLAT           equ	4089	;# 
   822   000FF9                     PC              equ	4089	;# 
   823   000FF9                     PCL             equ	4089	;# 
   824   000FFA                     PCLATH          equ	4090	;# 
   825   000FFB                     PCLATU          equ	4091	;# 
   826   000FFC                     STKPTR          equ	4092	;# 
   827   000FFD                     TOS             equ	4093	;# 
   828   000FFD                     TOSL            equ	4093	;# 
   829   000FFE                     TOSH            equ	4094	;# 
   830   000FFF                     TOSU            equ	4095	;# 
   831   000F80                     PORTA           equ	3968	;# 
   832   000F81                     PORTB           equ	3969	;# 
   833   000F82                     PORTC           equ	3970	;# 
   834   000F83                     PORTD           equ	3971	;# 
   835   000F84                     PORTE           equ	3972	;# 
   836   000F89                     LATA            equ	3977	;# 
   837   000F8A                     LATB            equ	3978	;# 
   838   000F8B                     LATC            equ	3979	;# 
   839   000F8C                     LATD            equ	3980	;# 
   840   000F8D                     LATE            equ	3981	;# 
   841   000F92                     TRISA           equ	3986	;# 
   842   000F92                     DDRA            equ	3986	;# 
   843   000F93                     TRISB           equ	3987	;# 
   844   000F93                     DDRB            equ	3987	;# 
   845   000F94                     TRISC           equ	3988	;# 
   846   000F94                     DDRC            equ	3988	;# 
   847   000F95                     TRISD           equ	3989	;# 
   848   000F95                     DDRD            equ	3989	;# 
   849   000F96                     TRISE           equ	3990	;# 
   850   000F96                     DDRE            equ	3990	;# 
   851   000F9B                     OSCTUNE         equ	3995	;# 
   852   000F9D                     PIE1            equ	3997	;# 
   853   000F9E                     PIR1            equ	3998	;# 
   854   000F9F                     IPR1            equ	3999	;# 
   855   000FA0                     PIE2            equ	4000	;# 
   856   000FA1                     PIR2            equ	4001	;# 
   857   000FA2                     IPR2            equ	4002	;# 
   858   000FA6                     EECON1          equ	4006	;# 
   859   000FA7                     EECON2          equ	4007	;# 
   860   000FA8                     EEDATA          equ	4008	;# 
   861   000FA9                     EEADR           equ	4009	;# 
   862   000FAB                     RCSTA           equ	4011	;# 
   863   000FAB                     RCSTA1          equ	4011	;# 
   864   000FAC                     TXSTA           equ	4012	;# 
   865   000FAC                     TXSTA1          equ	4012	;# 
   866   000FAD                     TXREG           equ	4013	;# 
   867   000FAD                     TXREG1          equ	4013	;# 
   868   000FAE                     RCREG           equ	4014	;# 
   869   000FAE                     RCREG1          equ	4014	;# 
   870   000FAF                     SPBRG           equ	4015	;# 
   871   000FAF                     SPBRG1          equ	4015	;# 
   872   000FB0                     SPBRGH          equ	4016	;# 
   873   000FB1                     T3CON           equ	4017	;# 
   874   000FB2                     TMR3            equ	4018	;# 
   875   000FB2                     TMR3L           equ	4018	;# 
   876   000FB3                     TMR3H           equ	4019	;# 
   877   000FB4                     CMCON           equ	4020	;# 
   878   000FB5                     CVRCON          equ	4021	;# 
   879   000FB6                     ECCP1AS         equ	4022	;# 
   880   000FB6                     ECCPAS          equ	4022	;# 
   881   000FB7                     PWM1CON         equ	4023	;# 
   882   000FB7                     ECCP1DEL        equ	4023	;# 
   883   000FB8                     BAUDCON         equ	4024	;# 
   884   000FB8                     BAUDCTL         equ	4024	;# 
   885   000FBA                     CCP2CON         equ	4026	;# 
   886   000FBB                     CCPR2           equ	4027	;# 
   887   000FBB                     CCPR2L          equ	4027	;# 
   888   000FBC                     CCPR2H          equ	4028	;# 
   889   000FBD                     CCP1CON         equ	4029	;# 
   890   000FBE                     CCPR1           equ	4030	;# 
   891   000FBE                     CCPR1L          equ	4030	;# 
   892   000FBF                     CCPR1H          equ	4031	;# 
   893   000FC0                     ADCON2          equ	4032	;# 
   894   000FC1                     ADCON1          equ	4033	;# 
   895   000FC2                     ADCON0          equ	4034	;# 
   896   000FC3                     ADRES           equ	4035	;# 
   897   000FC3                     ADRESL          equ	4035	;# 
   898   000FC4                     ADRESH          equ	4036	;# 
   899   000FC5                     SSPCON2         equ	4037	;# 
   900   000FC6                     SSPCON1         equ	4038	;# 
   901   000FC7                     SSPSTAT         equ	4039	;# 
   902   000FC8                     SSPADD          equ	4040	;# 
   903   000FC9                     SSPBUF          equ	4041	;# 
   904   000FCA                     T2CON           equ	4042	;# 
   905   000FCB                     PR2             equ	4043	;# 
   906   000FCB                     MEMCON          equ	4043	;# 
   907   000FCC                     TMR2            equ	4044	;# 
   908   000FCD                     T1CON           equ	4045	;# 
   909   000FCE                     TMR1            equ	4046	;# 
   910   000FCE                     TMR1L           equ	4046	;# 
   911   000FCF                     TMR1H           equ	4047	;# 
   912   000FD0                     RCON            equ	4048	;# 
   913   000FD1                     WDTCON          equ	4049	;# 
   914   000FD2                     HLVDCON         equ	4050	;# 
   915   000FD2                     LVDCON          equ	4050	;# 
   916   000FD3                     OSCCON          equ	4051	;# 
   917   000FD5                     T0CON           equ	4053	;# 
   918   000FD6                     TMR0            equ	4054	;# 
   919   000FD6                     TMR0L           equ	4054	;# 
   920   000FD7                     TMR0H           equ	4055	;# 
   921   000FD8                     STATUS          equ	4056	;# 
   922   000FD9                     FSR2            equ	4057	;# 
   923   000FD9                     FSR2L           equ	4057	;# 
   924   000FDA                     FSR2H           equ	4058	;# 
   925   000FDB                     PLUSW2          equ	4059	;# 
   926   000FDC                     PREINC2         equ	4060	;# 
   927   000FDD                     POSTDEC2        equ	4061	;# 
   928   000FDE                     POSTINC2        equ	4062	;# 
   929   000FDF                     INDF2           equ	4063	;# 
   930   000FE0                     BSR             equ	4064	;# 
   931   000FE1                     FSR1            equ	4065	;# 
   932   000FE1                     FSR1L           equ	4065	;# 
   933   000FE2                     FSR1H           equ	4066	;# 
   934   000FE3                     PLUSW1          equ	4067	;# 
   935   000FE4                     PREINC1         equ	4068	;# 
   936   000FE5                     POSTDEC1        equ	4069	;# 
   937   000FE6                     POSTINC1        equ	4070	;# 
   938   000FE7                     INDF1           equ	4071	;# 
   939   000FE8                     WREG            equ	4072	;# 
   940   000FE9                     FSR0            equ	4073	;# 
   941   000FE9                     FSR0L           equ	4073	;# 
   942   000FEA                     FSR0H           equ	4074	;# 
   943   000FEB                     PLUSW0          equ	4075	;# 
   944   000FEC                     PREINC0         equ	4076	;# 
   945   000FED                     POSTDEC0        equ	4077	;# 
   946   000FEE                     POSTINC0        equ	4078	;# 
   947   000FEF                     INDF0           equ	4079	;# 
   948   000FF0                     INTCON3         equ	4080	;# 
   949   000FF1                     INTCON2         equ	4081	;# 
   950   000FF2                     INTCON          equ	4082	;# 
   951   000FF3                     PROD            equ	4083	;# 
   952   000FF3                     PRODL           equ	4083	;# 
   953   000FF4                     PRODH           equ	4084	;# 
   954   000FF5                     TABLAT          equ	4085	;# 
   955   000FF6                     TBLPTR          equ	4086	;# 
   956   000FF6                     TBLPTRL         equ	4086	;# 
   957   000FF7                     TBLPTRH         equ	4087	;# 
   958   000FF8                     TBLPTRU         equ	4088	;# 
   959   000FF9                     PCLAT           equ	4089	;# 
   960   000FF9                     PC              equ	4089	;# 
   961   000FF9                     PCL             equ	4089	;# 
   962   000FFA                     PCLATH          equ	4090	;# 
   963   000FFB                     PCLATU          equ	4091	;# 
   964   000FFC                     STKPTR          equ	4092	;# 
   965   000FFD                     TOS             equ	4093	;# 
   966   000FFD                     TOSL            equ	4093	;# 
   967   000FFE                     TOSH            equ	4094	;# 
   968   000FFF                     TOSU            equ	4095	;# 
   969   000F80                     PORTA           equ	3968	;# 
   970   000F81                     PORTB           equ	3969	;# 
   971   000F82                     PORTC           equ	3970	;# 
   972   000F83                     PORTD           equ	3971	;# 
   973   000F84                     PORTE           equ	3972	;# 
   974   000F89                     LATA            equ	3977	;# 
   975   000F8A                     LATB            equ	3978	;# 
   976   000F8B                     LATC            equ	3979	;# 
   977   000F8C                     LATD            equ	3980	;# 
   978   000F8D                     LATE            equ	3981	;# 
   979   000F92                     TRISA           equ	3986	;# 
   980   000F92                     DDRA            equ	3986	;# 
   981   000F93                     TRISB           equ	3987	;# 
   982   000F93                     DDRB            equ	3987	;# 
   983   000F94                     TRISC           equ	3988	;# 
   984   000F94                     DDRC            equ	3988	;# 
   985   000F95                     TRISD           equ	3989	;# 
   986   000F95                     DDRD            equ	3989	;# 
   987   000F96                     TRISE           equ	3990	;# 
   988   000F96                     DDRE            equ	3990	;# 
   989   000F9B                     OSCTUNE         equ	3995	;# 
   990   000F9D                     PIE1            equ	3997	;# 
   991   000F9E                     PIR1            equ	3998	;# 
   992   000F9F                     IPR1            equ	3999	;# 
   993   000FA0                     PIE2            equ	4000	;# 
   994   000FA1                     PIR2            equ	4001	;# 
   995   000FA2                     IPR2            equ	4002	;# 
   996   000FA6                     EECON1          equ	4006	;# 
   997   000FA7                     EECON2          equ	4007	;# 
   998   000FA8                     EEDATA          equ	4008	;# 
   999   000FA9                     EEADR           equ	4009	;# 
  1000   000FAB                     RCSTA           equ	4011	;# 
  1001   000FAB                     RCSTA1          equ	4011	;# 
  1002   000FAC                     TXSTA           equ	4012	;# 
  1003   000FAC                     TXSTA1          equ	4012	;# 
  1004   000FAD                     TXREG           equ	4013	;# 
  1005   000FAD                     TXREG1          equ	4013	;# 
  1006   000FAE                     RCREG           equ	4014	;# 
  1007   000FAE                     RCREG1          equ	4014	;# 
  1008   000FAF                     SPBRG           equ	4015	;# 
  1009   000FAF                     SPBRG1          equ	4015	;# 
  1010   000FB0                     SPBRGH          equ	4016	;# 
  1011   000FB1                     T3CON           equ	4017	;# 
  1012   000FB2                     TMR3            equ	4018	;# 
  1013   000FB2                     TMR3L           equ	4018	;# 
  1014   000FB3                     TMR3H           equ	4019	;# 
  1015   000FB4                     CMCON           equ	4020	;# 
  1016   000FB5                     CVRCON          equ	4021	;# 
  1017   000FB6                     ECCP1AS         equ	4022	;# 
  1018   000FB6                     ECCPAS          equ	4022	;# 
  1019   000FB7                     PWM1CON         equ	4023	;# 
  1020   000FB7                     ECCP1DEL        equ	4023	;# 
  1021   000FB8                     BAUDCON         equ	4024	;# 
  1022   000FB8                     BAUDCTL         equ	4024	;# 
  1023   000FBA                     CCP2CON         equ	4026	;# 
  1024   000FBB                     CCPR2           equ	4027	;# 
  1025   000FBB                     CCPR2L          equ	4027	;# 
  1026   000FBC                     CCPR2H          equ	4028	;# 
  1027   000FBD                     CCP1CON         equ	4029	;# 
  1028   000FBE                     CCPR1           equ	4030	;# 
  1029   000FBE                     CCPR1L          equ	4030	;# 
  1030   000FBF                     CCPR1H          equ	4031	;# 
  1031   000FC0                     ADCON2          equ	4032	;# 
  1032   000FC1                     ADCON1          equ	4033	;# 
  1033   000FC2                     ADCON0          equ	4034	;# 
  1034   000FC3                     ADRES           equ	4035	;# 
  1035   000FC3                     ADRESL          equ	4035	;# 
  1036   000FC4                     ADRESH          equ	4036	;# 
  1037   000FC5                     SSPCON2         equ	4037	;# 
  1038   000FC6                     SSPCON1         equ	4038	;# 
  1039   000FC7                     SSPSTAT         equ	4039	;# 
  1040   000FC8                     SSPADD          equ	4040	;# 
  1041   000FC9                     SSPBUF          equ	4041	;# 
  1042   000FCA                     T2CON           equ	4042	;# 
  1043   000FCB                     PR2             equ	4043	;# 
  1044   000FCB                     MEMCON          equ	4043	;# 
  1045   000FCC                     TMR2            equ	4044	;# 
  1046   000FCD                     T1CON           equ	4045	;# 
  1047   000FCE                     TMR1            equ	4046	;# 
  1048   000FCE                     TMR1L           equ	4046	;# 
  1049   000FCF                     TMR1H           equ	4047	;# 
  1050   000FD0                     RCON            equ	4048	;# 
  1051   000FD1                     WDTCON          equ	4049	;# 
  1052   000FD2                     HLVDCON         equ	4050	;# 
  1053   000FD2                     LVDCON          equ	4050	;# 
  1054   000FD3                     OSCCON          equ	4051	;# 
  1055   000FD5                     T0CON           equ	4053	;# 
  1056   000FD6                     TMR0            equ	4054	;# 
  1057   000FD6                     TMR0L           equ	4054	;# 
  1058   000FD7                     TMR0H           equ	4055	;# 
  1059   000FD8                     STATUS          equ	4056	;# 
  1060   000FD9                     FSR2            equ	4057	;# 
  1061   000FD9                     FSR2L           equ	4057	;# 
  1062   000FDA                     FSR2H           equ	4058	;# 
  1063   000FDB                     PLUSW2          equ	4059	;# 
  1064   000FDC                     PREINC2         equ	4060	;# 
  1065   000FDD                     POSTDEC2        equ	4061	;# 
  1066   000FDE                     POSTINC2        equ	4062	;# 
  1067   000FDF                     INDF2           equ	4063	;# 
  1068   000FE0                     BSR             equ	4064	;# 
  1069   000FE1                     FSR1            equ	4065	;# 
  1070   000FE1                     FSR1L           equ	4065	;# 
  1071   000FE2                     FSR1H           equ	4066	;# 
  1072   000FE3                     PLUSW1          equ	4067	;# 
  1073   000FE4                     PREINC1         equ	4068	;# 
  1074   000FE5                     POSTDEC1        equ	4069	;# 
  1075   000FE6                     POSTINC1        equ	4070	;# 
  1076   000FE7                     INDF1           equ	4071	;# 
  1077   000FE8                     WREG            equ	4072	;# 
  1078   000FE9                     FSR0            equ	4073	;# 
  1079   000FE9                     FSR0L           equ	4073	;# 
  1080   000FEA                     FSR0H           equ	4074	;# 
  1081   000FEB                     PLUSW0          equ	4075	;# 
  1082   000FEC                     PREINC0         equ	4076	;# 
  1083   000FED                     POSTDEC0        equ	4077	;# 
  1084   000FEE                     POSTINC0        equ	4078	;# 
  1085   000FEF                     INDF0           equ	4079	;# 
  1086   000FF0                     INTCON3         equ	4080	;# 
  1087   000FF1                     INTCON2         equ	4081	;# 
  1088   000FF2                     INTCON          equ	4082	;# 
  1089   000FF3                     PROD            equ	4083	;# 
  1090   000FF3                     PRODL           equ	4083	;# 
  1091   000FF4                     PRODH           equ	4084	;# 
  1092   000FF5                     TABLAT          equ	4085	;# 
  1093   000FF6                     TBLPTR          equ	4086	;# 
  1094   000FF6                     TBLPTRL         equ	4086	;# 
  1095   000FF7                     TBLPTRH         equ	4087	;# 
  1096   000FF8                     TBLPTRU         equ	4088	;# 
  1097   000FF9                     PCLAT           equ	4089	;# 
  1098   000FF9                     PC              equ	4089	;# 
  1099   000FF9                     PCL             equ	4089	;# 
  1100   000FFA                     PCLATH          equ	4090	;# 
  1101   000FFB                     PCLATU          equ	4091	;# 
  1102   000FFC                     STKPTR          equ	4092	;# 
  1103   000FFD                     TOS             equ	4093	;# 
  1104   000FFD                     TOSL            equ	4093	;# 
  1105   000FFE                     TOSH            equ	4094	;# 
  1106   000FFF                     TOSU            equ	4095	;# 
  1107                           
  1108                           	psect	mediumconst
  1109   007CBE                     __pmediumconst:
  1110                           	callstack 0
  1111   007CBE  00                 	db	0
  1112   007CBF                     _atanlo:
  1113                           	callstack 0
  1114   007CBF  3769               	dw	14185
  1115   007CC1  31AC               	dw	12716
  1116   007CC3  2168               	dw	8552
  1117   007CC5  3322               	dw	13090
  1118   007CC7  0FB4               	dw	4020
  1119   007CC9  3314               	dw	13076
  1120   007CCB  2168               	dw	8552
  1121   007CCD  33A2               	dw	13218
  1122   007CCF                     __end_of_atanlo:
  1123                           	callstack 0
  1124   007CCF                     _atanhi:
  1125                           	callstack 0
  1126   007CCF  6338               	dw	25400
  1127   007CD1  3EED               	dw	16109
  1128   007CD3  0FDA               	dw	4058
  1129   007CD5  3F49               	dw	16201
  1130   007CD7  985E               	dw	39006
  1131   007CD9  3F7B               	dw	16251
  1132   007CDB  0FDA               	dw	4058
  1133   007CDD  3FC9               	dw	16329
  1134   007CDF                     __end_of_atanhi:
  1135                           	callstack 0
  1136   007CDF  AC25               	dw	44069
  1137   007CE1  3D7C               	dw	15740
  1138   007CE3                     __end_of_aT4:
  1139                           	callstack 0
  1140   007CE3  1247               	dw	4679
  1141   007CE5  BDDA               	dw	48602
  1142   007CE7                     __end_of_aT3:
  1143                           	callstack 0
  1144   007CE7  F50D               	dw	62733
  1145   007CE9  3E11               	dw	15889
  1146   007CEB                     __end_of_aT2:
  1147                           	callstack 0
  1148   007CEB  CA98               	dw	51864
  1149   007CED  BE4C               	dw	48716
  1150   007CEF                     __end_of_aT1:
  1151                           	callstack 0
  1152   007CEF  AAA9               	dw	43689
  1153   007CF1  3EAA               	dw	16042
  1154   007CF3                     __end_of_aT0:
  1155                           	callstack 0
  1156   007CF3  BD2E               	dw	48430
  1157   007CF5  B3BB               	dw	46011
  1158   007CF7                     __end_of_pi_lo:
  1159                           	callstack 0
  1160   007CF7  0FDB               	dw	4059
  1161   007CF9  4049               	dw	16457
  1162   007CFB                     __end_of_pi:
  1163                           	callstack 0
  1164   007E2C                     _ACKEN          set	32300
  1165   007E2D                     _ACKDT          set	32301
  1166   007E2B                     _RCEN           set	32299
  1167   007E38                     _BF             set	32312
  1168   007E2A                     _PEN            set	32298
  1169   007E28                     _SEN            set	32296
  1170   007D5C                     _CREN           set	32092
  1171   007CF5                     _RCIF           set	31989
  1172   007E9C                     _IRCF0          set	32412
  1173   007E9D                     _IRCF1          set	32413
  1174   007E9E                     _IRCF2          set	32414
  1175   007E07                     _ADFM           set	32263
  1176   000F92                     _TRISA          set	3986
  1177   000F8A                     _LATBbits       set	3978
  1178   000F93                     _TRISB          set	3987
  1179   000F89                     _LATAbits       set	3977
  1180   000F89                     _LATA           set	3977
  1181   000F94                     _TRISCbits      set	3988
  1182   000F92                     _TRISAbits      set	3986
  1183   000FC5                     _SSPCON2bits    set	4037
  1184   000FC9                     _SSPBUF         set	4041
  1185   000FC7                     _SSPSTAT        set	4039
  1186   000FC8                     _SSPADD         set	4040
  1187   000FC5                     _SSPCON2        set	4037
  1188   000FC6                     _SSPCON1        set	4038
  1189   000FD3                     _OSCCON         set	4051
  1190   000FAE                     _RCREG          set	4014
  1191   000FAD                     _TXREG          set	4013
  1192   000F9D                     _PIE1bits       set	3997
  1193   000FAB                     _RCSTAbits      set	4011
  1194   000FAF                     _SPBRG          set	4015
  1195   000FB8                     _BAUDCONbits    set	4024
  1196   000FAC                     _TXSTAbits      set	4012
  1197   000FD0                     _RCONbits       set	4048
  1198   000F9F                     _IPR1bits       set	3999
  1199   000F9E                     _PIR1bits       set	3998
  1200   000FBD                     _CCP1CON        set	4029
  1201   000FC2                     _ADCON0bits     set	4034
  1202   000FC3                     _ADRESL         set	4035
  1203   000FC4                     _ADRESH         set	4036
  1204   000FC0                     _ADCON2bits     set	4032
  1205   000FC1                     _ADCON1         set	4033
  1206   000FF2                     _INTCONbits     set	4082
  1207   007CFB                     STR_8:
  1208   007CFB  41                 	db	65	;'A'
  1209   007CFC  54                 	db	84	;'T'
  1210   007CFD  2B                 	db	43
  1211   007CFE  43                 	db	67	;'C'
  1212   007CFF  4F                 	db	79	;'O'
  1213   007D00  4E                 	db	78	;'N'
  1214   007D01  4E                 	db	78	;'N'
  1215   007D02  31                 	db	49	;'1'
  1216   007D03  0D                 	db	13
  1217   007D04  0A                 	db	10
  1218   007D05  00                 	db	0
  1219   007D06                     STR_7:
  1220   007D06  41                 	db	65	;'A'
  1221   007D07  54                 	db	84	;'T'
  1222   007D08  2B                 	db	43
  1223   007D09  49                 	db	73	;'I'
  1224   007D0A  4E                 	db	78	;'N'
  1225   007D0B  51                 	db	81	;'Q'
  1226   007D0C  0D                 	db	13
  1227   007D0D  0A                 	db	10
  1228   007D0E  00                 	db	0
  1229   007D0F                     STR_12:
  1230   007D0F  4C                 	db	76	;'L'
  1231   007D10  4C                 	db	76	;'L'
  1232   007D11  4E                 	db	78	;'N'
  1233   007D12  0D                 	db	13
  1234   007D13  0A                 	db	10
  1235   007D14  00                 	db	0
  1236   007D15                     STR_5:
  1237   007D15  4C                 	db	76	;'L'
  1238   007D16  52                 	db	82	;'R'
  1239   007D17  4E                 	db	78	;'N'
  1240   007D18  0D                 	db	13
  1241   007D19  0A                 	db	10
  1242   007D1A  00                 	db	0
  1243   007D1B                     STR_6:
  1244   007D1B  41                 	db	65	;'A'
  1245   007D1C  54                 	db	84	;'T'
  1246   007D1D  0D                 	db	13
  1247   007D1E  0A                 	db	10
  1248   007D1F  00                 	db	0
  1249   007D20                     STR_3:
  1250   007D20  42                 	db	66	;'B'
  1251   007D21  46                 	db	70	;'F'
  1252   007D22  0D                 	db	13
  1253   007D23  0A                 	db	10
  1254   007D24  00                 	db	0
  1255   007D25                     STR_2:
  1256   007D25  42                 	db	66	;'B'
  1257   007D26  4E                 	db	78	;'N'
  1258   007D27  0D                 	db	13
  1259   007D28  0A                 	db	10
  1260   007D29  00                 	db	0
  1261   007D2A                     STR_1:
  1262   007D2A  25                 	db	37
  1263   007D2B  64                 	db	100	;'d'
  1264   007D2C  0D                 	db	13
  1265   007D2D  0A                 	db	10
  1266   007D2E  00                 	db	0
  1267   007D15                     STR_13          equ	STR_5
  1268   007D03                     STR_4           equ	STR_8+8
  1269   007D05                     STR_9           equ	STR_8+10
  1270   007D05                     STR_10          equ	STR_8+10
  1271   007D05                     STR_11          equ	STR_8+10
  1272   007D2F  00                 	db	0	; dummy byte at the end
  1273   000002                     __activetblptr  equ	2
  1274                           
  1275                           ; #config settings
  1276                           
  1277                           	psect	cinit
  1278   002D76                     __pcinit:
  1279                           	callstack 0
  1280   002D76                     start_initialization:
  1281                           	callstack 0
  1282   002D76                     __initialization:
  1283                           	callstack 0
  1284                           
  1285                           ; Clear objects allocated to BANK1 (68 bytes)
  1286   002D76  EE01  F045         	lfsr	0,__pbssBANK1
  1287   002D7A  0E44               	movlw	68
  1288   002D7C                     clear_0:
  1289   002D7C  6AEE               	clrf	postinc0,c
  1290   002D7E  06E8               	decf	wreg,f,c
  1291   002D80  E1FD               	bnz	clear_0
  1292                           
  1293                           ; Clear objects allocated to COMRAM (41 bytes)
  1294   002D82  EE00  F037         	lfsr	0,__pbssCOMRAM
  1295   002D86  0E29               	movlw	41
  1296   002D88                     clear_1:
  1297   002D88  6AEE               	clrf	postinc0,c
  1298   002D8A  06E8               	decf	wreg,f,c
  1299   002D8C  E1FD               	bnz	clear_1
  1300   002D8E                     end_of_initialization:
  1301                           	callstack 0
  1302   002D8E                     __end_of__initialization:
  1303                           	callstack 0
  1304   002D8E  9060               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1305   002D90  9260               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1306   002D92  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1307   002D94  6EF8               	movwf	tblptru,c
  1308   002D96  0100               	movlb	0
  1309   002D98  EF32  F014         	goto	_main	;jump to C main() function
  1310                           
  1311                           	psect	bssCOMRAM
  1312   000037                     __pbssCOMRAM:
  1313                           	callstack 0
  1314   000037                     fabsf@F465:
  1315                           	callstack 0
  1316   000037                     	ds	4
  1317   00003B                     ___fpclassifyf@F465:
  1318                           	callstack 0
  1319   00003B                     	ds	4
  1320   00003F                     _pitch_offset:
  1321                           	callstack 0
  1322   00003F                     	ds	4
  1323   000043                     _width:
  1324                           	callstack 0
  1325   000043                     	ds	2
  1326   000045                     _prec:
  1327                           	callstack 0
  1328   000045                     	ds	2
  1329   000047                     _count:
  1330                           	callstack 0
  1331   000047                     	ds	2
  1332   000049                     _lenStr:
  1333                           	callstack 0
  1334   000049                     	ds	2
  1335   00004B                     _flags:
  1336                           	callstack 0
  1337   00004B                     	ds	1
  1338   00004C                     _mystring:
  1339                           	callstack 0
  1340   00004C                     	ds	20
  1341                           
  1342                           	psect	bssBANK1
  1343   000145                     __pbssBANK1:
  1344                           	callstack 0
  1345   000145                     _dbuf:
  1346                           	callstack 0
  1347   000145                     	ds	32
  1348   000165                     _str:
  1349                           	callstack 0
  1350   000165                     	ds	20
  1351   000179                     _angle:
  1352                           	callstack 0
  1353   000179                     	ds	4
  1354   00017D                     _accZ:
  1355                           	callstack 0
  1356   00017D                     	ds	2
  1357   00017F                     _accX:
  1358                           	callstack 0
  1359   00017F                     	ds	2
  1360   000181                     _needSendMsg:
  1361                           	callstack 0
  1362   000181                     	ds	2
  1363   000183                     _isConnected:
  1364                           	callstack 0
  1365   000183                     	ds	2
  1366   000185                     _accZ_low:
  1367                           	callstack 0
  1368   000185                     	ds	1
  1369   000186                     _accZ_high:
  1370                           	callstack 0
  1371   000186                     	ds	1
  1372   000187                     _accX_low:
  1373                           	callstack 0
  1374   000187                     	ds	1
  1375   000188                     _accX_high:
  1376                           	callstack 0
  1377   000188                     	ds	1
  1378                           
  1379                           	psect	cstackBANK1
  1380   000100                     __pcstackBANK1:
  1381                           	callstack 0
  1382   000100                     _atanf$2071:
  1383                           	callstack 0
  1384                           
  1385                           ; 4 bytes @ 0x0
  1386   000100                     	ds	4
  1387   000104                     _atanf$2073:
  1388                           	callstack 0
  1389                           
  1390                           ; 4 bytes @ 0x4
  1391   000104                     	ds	4
  1392   000108                     _atanf$2074:
  1393                           	callstack 0
  1394                           
  1395                           ; 4 bytes @ 0x8
  1396   000108                     	ds	4
  1397   00010C                     atanf@s1:
  1398                           	callstack 0
  1399                           
  1400                           ; 4 bytes @ 0xC
  1401   00010C                     	ds	4
  1402   000110                     atanf@s2:
  1403                           	callstack 0
  1404                           
  1405                           ; 4 bytes @ 0x10
  1406   000110                     	ds	4
  1407   000114                     _atanf$2070:
  1408                           	callstack 0
  1409                           
  1410                           ; 4 bytes @ 0x14
  1411   000114                     	ds	4
  1412   000118                     _atanf$2072:
  1413                           	callstack 0
  1414                           
  1415                           ; 4 bytes @ 0x18
  1416   000118                     	ds	4
  1417   00011C                     atanf@sign:
  1418                           	callstack 0
  1419                           
  1420                           ; 1 bytes @ 0x1C
  1421   00011C                     	ds	1
  1422   00011D                     atanf@w:
  1423                           	callstack 0
  1424                           
  1425                           ; 4 bytes @ 0x1D
  1426   00011D                     	ds	4
  1427   000121                     atanf@id:
  1428                           	callstack 0
  1429                           
  1430                           ; 1 bytes @ 0x21
  1431   000121                     	ds	1
  1432   000122                     atanf@z:
  1433                           	callstack 0
  1434                           
  1435                           ; 4 bytes @ 0x22
  1436   000122                     	ds	4
  1437   000126                     atanf@ix:
  1438                           	callstack 0
  1439                           
  1440                           ; 4 bytes @ 0x26
  1441   000126                     	ds	4
  1442   00012A                     _atan2f$2067:
  1443                           	callstack 0
  1444                           
  1445                           ; 4 bytes @ 0x2A
  1446   00012A                     	ds	4
  1447   00012E                     _atan2f$2068:
  1448                           	callstack 0
  1449                           
  1450                           ; 4 bytes @ 0x2E
  1451   00012E                     	ds	4
  1452   000132                     _atan2f$2069:
  1453                           	callstack 0
  1454                           
  1455                           ; 4 bytes @ 0x32
  1456   000132                     	ds	4
  1457   000136                     atan2f@z:
  1458                           	callstack 0
  1459                           
  1460                           ; 4 bytes @ 0x36
  1461   000136                     	ds	4
  1462   00013A                     atan2f@ix:
  1463                           	callstack 0
  1464                           
  1465                           ; 4 bytes @ 0x3A
  1466   00013A                     	ds	4
  1467   00013E                     atan2f@iy:
  1468                           	callstack 0
  1469                           
  1470                           ; 4 bytes @ 0x3E
  1471   00013E                     	ds	4
  1472   000142                     atan2f@m:
  1473                           	callstack 0
  1474                           
  1475                           ; 1 bytes @ 0x42
  1476   000142                     	ds	1
  1477   000143                     Check_Gyroscope@blinker_dir:
  1478                           	callstack 0
  1479                           
  1480                           ; 2 bytes @ 0x43
  1481   000143                     	ds	2
  1482                           
  1483                           	psect	cstackBANK0
  1484   000080                     __pcstackBANK0:
  1485                           	callstack 0
  1486   000080                     ?___fpclassifyf:
  1487                           	callstack 0
  1488   000080                     ?_ADC_Read:
  1489                           	callstack 0
  1490   000080                     ?___awdiv:
  1491                           	callstack 0
  1492   000080                     ?___awmod:
  1493                           	callstack 0
  1494   000080                     ?___flneg:
  1495                           	callstack 0
  1496   000080                     ?___xxtofl:
  1497                           	callstack 0
  1498   000080                     UART_Write@data:
  1499                           	callstack 0
  1500   000080                     I2C_Write@data:
  1501                           	callstack 0
  1502   000080                     I2C_Read@ack:
  1503                           	callstack 0
  1504   000080                     ADC_Read@channel:
  1505                           	callstack 0
  1506   000080                     displayBinary@num:
  1507                           	callstack 0
  1508   000080                     ___awdiv@dividend:
  1509                           	callstack 0
  1510   000080                     ___awmod@dividend:
  1511                           	callstack 0
  1512   000080                     fputc@c:
  1513                           	callstack 0
  1514   000080                     ___flge@ff1:
  1515                           	callstack 0
  1516   000080                     ___flneg@f1:
  1517                           	callstack 0
  1518   000080                     ___xxtofl@val:
  1519                           	callstack 0
  1520   000080                     ___fpclassifyf@x:
  1521                           	callstack 0
  1522   000080                     
  1523                           ; 1 bytes @ 0x0
  1524   000080                     	ds	1
  1525   000081                     I2C_Read@data:
  1526                           	callstack 0
  1527   000081                     UART_Write_Text@text:
  1528                           	callstack 0
  1529                           
  1530                           ; 2 bytes @ 0x1
  1531   000081                     	ds	1
  1532   000082                     fputc@fp:
  1533                           	callstack 0
  1534   000082                     ___awdiv@divisor:
  1535                           	callstack 0
  1536   000082                     ___awmod@divisor:
  1537                           	callstack 0
  1538   000082                     ??_ADC_Read:
  1539   000082                     ??_displayBinary:
  1540                           
  1541                           ; 1 bytes @ 0x2
  1542   000082                     	ds	1
  1543   000083                     ??_UART_Write_Text:
  1544   000083                     ??_fputc:
  1545                           
  1546                           ; 1 bytes @ 0x3
  1547   000083                     	ds	1
  1548   000084                     ___awdiv@counter:
  1549                           	callstack 0
  1550   000084                     ___awmod@counter:
  1551                           	callstack 0
  1552   000084                     ADC_Read@digital:
  1553                           	callstack 0
  1554   000084                     ___flge@ff2:
  1555                           	callstack 0
  1556   000084                     ??___fpclassifyf:
  1557   000084                     ??___xxtofl:
  1558                           
  1559                           ; 1 bytes @ 0x4
  1560   000084                     	ds	1
  1561   000085                     ___awdiv@sign:
  1562                           	callstack 0
  1563   000085                     ___awmod@sign:
  1564                           	callstack 0
  1565   000085                     UART_Write_Text@i:
  1566                           	callstack 0
  1567                           
  1568                           ; 2 bytes @ 0x5
  1569   000085                     	ds	1
  1570   000086                     ?_abs:
  1571                           	callstack 0
  1572   000086                     ___awdiv@quotient:
  1573                           	callstack 0
  1574   000086                     abs@a:
  1575                           	callstack 0
  1576                           
  1577                           ; 2 bytes @ 0x6
  1578   000086                     	ds	2
  1579   000088                     ___xxtofl@sign:
  1580                           	callstack 0
  1581   000088                     ___fpclassifyf@e:
  1582                           	callstack 0
  1583   000088                     ??_abs:
  1584   000088                     ??___flge:
  1585                           
  1586                           ; 1 bytes @ 0x8
  1587   000088                     	ds	1
  1588   000089                     ___xxtofl@exp:
  1589                           	callstack 0
  1590                           
  1591                           ; 1 bytes @ 0x9
  1592   000089                     	ds	1
  1593   00008A                     vfpfcnvrt@fp:
  1594                           	callstack 0
  1595   00008A                     ___xxtofl@arg:
  1596                           	callstack 0
  1597   00008A                     ___fpclassifyf@u:
  1598                           	callstack 0
  1599                           
  1600                           ; 4 bytes @ 0xA
  1601   00008A                     	ds	1
  1602   00008B                     vfpfcnvrt@fmt:
  1603                           	callstack 0
  1604                           
  1605                           ; 1 bytes @ 0xB
  1606   00008B                     	ds	1
  1607   00008C                     vfpfcnvrt@ap:
  1608                           	callstack 0
  1609                           
  1610                           ; 1 bytes @ 0xC
  1611   00008C                     	ds	1
  1612   00008D                     ??_vfpfcnvrt:
  1613                           
  1614                           ; 1 bytes @ 0xD
  1615   00008D                     	ds	1
  1616   00008E                     ?___flmul:
  1617                           	callstack 0
  1618   00008E                     ___flmul@b:
  1619                           	callstack 0
  1620                           
  1621                           ; 4 bytes @ 0xE
  1622   00008E                     	ds	1
  1623   00008F                     vfpfcnvrt@done:
  1624                           	callstack 0
  1625                           
  1626                           ; 1 bytes @ 0xF
  1627   00008F                     	ds	1
  1628   000090                     vfpfcnvrt@cp:
  1629                           	callstack 0
  1630                           
  1631                           ; 2 bytes @ 0x10
  1632   000090                     	ds	2
  1633   000092                     ___flmul@a:
  1634                           	callstack 0
  1635   000092                     vfpfcnvrt@convarg:
  1636                           	callstack 0
  1637                           
  1638                           ; 4 bytes @ 0x12
  1639   000092                     	ds	4
  1640   000096                     vfpfcnvrt@c:
  1641                           	callstack 0
  1642   000096                     ??___flmul:
  1643                           
  1644                           ; 1 bytes @ 0x16
  1645   000096                     	ds	1
  1646   000097                     ?_vfprintf:
  1647                           	callstack 0
  1648   000097                     vfprintf@fp:
  1649                           	callstack 0
  1650                           
  1651                           ; 1 bytes @ 0x17
  1652   000097                     	ds	1
  1653   000098                     vfprintf@fmt:
  1654                           	callstack 0
  1655                           
  1656                           ; 2 bytes @ 0x18
  1657   000098                     	ds	2
  1658   00009A                     ___flmul@sign:
  1659                           	callstack 0
  1660   00009A                     vfprintf@ap:
  1661                           	callstack 0
  1662                           
  1663                           ; 1 bytes @ 0x1A
  1664   00009A                     	ds	1
  1665   00009B                     ___flmul@aexp:
  1666                           	callstack 0
  1667   00009B                     vfprintf@cfmt:
  1668                           	callstack 0
  1669   00009B                     
  1670                           ; 1 bytes @ 0x1B
  1671   00009B                     	ds	1
  1672   00009C                     ___flmul@grs:
  1673                           	callstack 0
  1674                           
  1675                           ; 4 bytes @ 0x1C
  1676   00009C                     	ds	1
  1677   00009D                     ?_sprintf:
  1678                           	callstack 0
  1679   00009D                     sprintf@s:
  1680                           	callstack 0
  1681                           
  1682                           ; 1 bytes @ 0x1D
  1683   00009D                     	ds	1
  1684   00009E                     sprintf@fmt:
  1685                           	callstack 0
  1686                           
  1687                           ; 2 bytes @ 0x1E
  1688   00009E                     	ds	2
  1689   0000A0                     ___flmul@bexp:
  1690                           	callstack 0
  1691                           
  1692                           ; 1 bytes @ 0x20
  1693   0000A0                     	ds	1
  1694   0000A1                     ___flmul@prod:
  1695                           	callstack 0
  1696                           
  1697                           ; 4 bytes @ 0x21
  1698   0000A1                     	ds	1
  1699   0000A2                     sprintf@ap:
  1700                           	callstack 0
  1701   0000A2                     
  1702                           ; 1 bytes @ 0x22
  1703   0000A2                     	ds	1
  1704   0000A3                     sprintf@f:
  1705                           	callstack 0
  1706                           
  1707                           ; 11 bytes @ 0x23
  1708   0000A3                     	ds	2
  1709   0000A5                     ___flmul@temp:
  1710                           	callstack 0
  1711                           
  1712                           ; 2 bytes @ 0x25
  1713   0000A5                     	ds	2
  1714   0000A7                     ?___fladd:
  1715                           	callstack 0
  1716   0000A7                     ___fladd@b:
  1717                           	callstack 0
  1718                           
  1719                           ; 4 bytes @ 0x27
  1720   0000A7                     	ds	4
  1721   0000AB                     ___fladd@a:
  1722                           	callstack 0
  1723                           
  1724                           ; 4 bytes @ 0x2B
  1725   0000AB                     	ds	3
  1726   0000AE                     Check_ADC@prev_sensor_val:
  1727                           	callstack 0
  1728                           
  1729                           ; 2 bytes @ 0x2E
  1730   0000AE                     	ds	1
  1731   0000AF                     ??___fladd:
  1732                           
  1733                           ; 1 bytes @ 0x2F
  1734   0000AF                     	ds	1
  1735   0000B0                     ??_Check_ADC:
  1736                           
  1737                           ; 1 bytes @ 0x30
  1738   0000B0                     	ds	3
  1739   0000B3                     ___fladd@signs:
  1740                           	callstack 0
  1741   0000B3                     Check_ADC@tmp:
  1742                           	callstack 0
  1743                           
  1744                           ; 10 bytes @ 0x33
  1745   0000B3                     	ds	1
  1746   0000B4                     ___fladd@aexp:
  1747                           	callstack 0
  1748                           
  1749                           ; 1 bytes @ 0x34
  1750   0000B4                     	ds	1
  1751   0000B5                     ___fladd@bexp:
  1752                           	callstack 0
  1753                           
  1754                           ; 1 bytes @ 0x35
  1755   0000B5                     	ds	1
  1756   0000B6                     ___fladd@grs:
  1757                           	callstack 0
  1758                           
  1759                           ; 1 bytes @ 0x36
  1760   0000B6                     	ds	1
  1761   0000B7                     ?___fldiv:
  1762                           	callstack 0
  1763   0000B7                     ?___flsub:
  1764                           	callstack 0
  1765   0000B7                     ___flsub@b:
  1766                           	callstack 0
  1767   0000B7                     ___fldiv@b:
  1768                           	callstack 0
  1769                           
  1770                           ; 4 bytes @ 0x37
  1771   0000B7                     	ds	4
  1772   0000BB                     ___flsub@a:
  1773                           	callstack 0
  1774   0000BB                     ___fldiv@a:
  1775                           	callstack 0
  1776                           
  1777                           ; 4 bytes @ 0x3B
  1778   0000BB                     	ds	2
  1779   0000BD                     Check_ADC@bend_sensor_val:
  1780                           	callstack 0
  1781                           
  1782                           ; 2 bytes @ 0x3D
  1783   0000BD                     	ds	2
  1784   0000BF                     ??___fldiv:
  1785   0000BF                     
  1786                           ; 1 bytes @ 0x3F
  1787   0000BF                     	ds	4
  1788   0000C3                     ___fldiv@rem:
  1789                           	callstack 0
  1790                           
  1791                           ; 4 bytes @ 0x43
  1792   0000C3                     	ds	4
  1793   0000C7                     ___fldiv@sign:
  1794                           	callstack 0
  1795                           
  1796                           ; 1 bytes @ 0x47
  1797   0000C7                     	ds	1
  1798   0000C8                     ___fldiv@new_exp:
  1799                           	callstack 0
  1800                           
  1801                           ; 2 bytes @ 0x48
  1802   0000C8                     	ds	2
  1803   0000CA                     ___fldiv@grs:
  1804                           	callstack 0
  1805                           
  1806                           ; 4 bytes @ 0x4A
  1807   0000CA                     	ds	4
  1808   0000CE                     ___fldiv@bexp:
  1809                           	callstack 0
  1810                           
  1811                           ; 1 bytes @ 0x4E
  1812   0000CE                     	ds	1
  1813   0000CF                     ___fldiv@aexp:
  1814                           	callstack 0
  1815                           
  1816                           ; 1 bytes @ 0x4F
  1817   0000CF                     	ds	1
  1818   0000D0                     ?_fabsf:
  1819                           	callstack 0
  1820   0000D0                     fabsf@x:
  1821                           	callstack 0
  1822                           
  1823                           ; 4 bytes @ 0x50
  1824   0000D0                     	ds	4
  1825   0000D4                     fabsf@u:
  1826                           	callstack 0
  1827   0000D4                     
  1828                           ; 1 bytes @ 0x54
  1829   0000D4                     	ds	4
  1830   0000D8                     ?_atanf:
  1831                           	callstack 0
  1832   0000D8                     atanf@x:
  1833                           	callstack 0
  1834                           
  1835                           ; 4 bytes @ 0x58
  1836   0000D8                     	ds	4
  1837   0000DC                     ?_atan2f:
  1838                           	callstack 0
  1839   0000DC                     atan2f@y:
  1840                           	callstack 0
  1841   0000DC                     
  1842                           ; 1 bytes @ 0x5C
  1843   0000DC                     	ds	4
  1844   0000E0                     atan2f@x:
  1845                           	callstack 0
  1846                           
  1847                           ; 4 bytes @ 0x60
  1848   0000E0                     	ds	4
  1849   0000E4                     ??_atan2f:
  1850                           
  1851                           ; 1 bytes @ 0x64
  1852   0000E4                     	ds	8
  1853   0000EC                     ?_calculate_angle:
  1854                           	callstack 0
  1855   0000EC                     calculate_angle@accX:
  1856                           	callstack 0
  1857                           
  1858                           ; 2 bytes @ 0x6C
  1859   0000EC                     	ds	2
  1860   0000EE                     calculate_angle@accZ:
  1861                           	callstack 0
  1862                           
  1863                           ; 2 bytes @ 0x6E
  1864   0000EE                     	ds	2
  1865   0000F0                     _calculate_angle$2065:
  1866                           	callstack 0
  1867   0000F0                     
  1868                           ; 1 bytes @ 0x70
  1869   0000F0                     	ds	4
  1870   0000F4                     ??_Check_Gyroscope:
  1871                           
  1872                           ; 1 bytes @ 0x74
  1873   0000F4                     	ds	2
  1874   0000F6                     _Check_Gyroscope$2064:
  1875                           	callstack 0
  1876                           
  1877                           ; 4 bytes @ 0x76
  1878   0000F6                     	ds	4
  1879   0000FA                     ??_main:
  1880                           
  1881                           ; 1 bytes @ 0x7A
  1882   0000FA                     	ds	1
  1883   0000FB                     main@prev_bend_sensor_val:
  1884                           	callstack 0
  1885                           
  1886                           ; 2 bytes @ 0x7B
  1887   0000FB                     	ds	2
  1888   0000FD                     main@blinker_dir:
  1889                           	callstack 0
  1890                           
  1891                           ; 2 bytes @ 0x7D
  1892   0000FD                     	ds	2
  1893                           
  1894                           	psect	cstackCOMRAM
  1895   000001                     __pcstackCOMRAM:
  1896                           	callstack 0
  1897   000001                     i2UART_Write@data:
  1898                           	callstack 0
  1899   000001                     
  1900                           ; 1 bytes @ 0x0
  1901   000001                     	ds	1
  1902   000002                     i2UART_Write_Text@text:
  1903                           	callstack 0
  1904                           
  1905                           ; 2 bytes @ 0x1
  1906   000002                     	ds	2
  1907   000004                     ??i2_UART_Write_Text:
  1908                           
  1909                           ; 1 bytes @ 0x3
  1910   000004                     	ds	2
  1911   000006                     i2UART_Write_Text@i:
  1912                           	callstack 0
  1913                           
  1914                           ; 2 bytes @ 0x5
  1915   000006                     	ds	2
  1916   000008                     ??_Hi_ISR:
  1917                           
  1918                           ; 1 bytes @ 0x7
  1919   000008                     	ds	7
  1920   00000F                     ?_strlen:
  1921                           	callstack 0
  1922   00000F                     strlen@s:
  1923                           	callstack 0
  1924   00000F                     i1UART_Write@data:
  1925                           	callstack 0
  1926   00000F                     ClearBuffer@i:
  1927                           	callstack 0
  1928   00000F                     
  1929                           ; 1 bytes @ 0xE
  1930   00000F                     	ds	1
  1931   000010                     i1UART_Write_Text@text:
  1932                           	callstack 0
  1933                           
  1934                           ; 2 bytes @ 0xF
  1935   000010                     	ds	1
  1936   000011                     strcpy@dest:
  1937                           	callstack 0
  1938   000011                     strlen@a:
  1939                           	callstack 0
  1940   000011                     
  1941                           ; 1 bytes @ 0x10
  1942   000011                     	ds	1
  1943   000012                     strcpy@src:
  1944                           	callstack 0
  1945   000012                     ??i1_UART_Write_Text:
  1946                           
  1947                           ; 1 bytes @ 0x11
  1948   000012                     	ds	2
  1949   000014                     i1UART_Write_Text@i:
  1950                           	callstack 0
  1951   000014                     ??_strcpy:
  1952                           
  1953                           ; 1 bytes @ 0x13
  1954   000014                     	ds	2
  1955   000016                     MyusartRead@receivedData:
  1956                           	callstack 0
  1957   000016                     strcpy@d:
  1958                           	callstack 0
  1959   000016                     
  1960                           ; 1 bytes @ 0x15
  1961   000016                     	ds	1
  1962   000017                     ??_Lo_ISR:
  1963                           
  1964                           ; 1 bytes @ 0x16
  1965   000017                     	ds	12
  1966   000023                     Lo_ISR@command:
  1967                           	callstack 0
  1968                           
  1969                           ; 20 bytes @ 0x22
  1970   000023                     	ds	20
  1971                           
  1972 ;;
  1973 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1974 ;;
  1975 ;; *************** function _main *****************
  1976 ;; Defined at:
  1977 ;;		line 22 in file "main.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;		None
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  blinker_dir     2  125[BANK0 ] int 
  1982 ;;  prev_bend_se    2  123[BANK0 ] int 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1992 ;;      Params:         0       0       0       0       0       0       0
  1993 ;;      Locals:         0       4       0       0       0       0       0
  1994 ;;      Temps:          0       1       0       0       0       0       0
  1995 ;;      Totals:         0       5       0       0       0       0       0
  1996 ;;Total ram usage:        5 bytes
  1997 ;; Hardware stack levels required when called: 13
  1998 ;; This function calls:
  1999 ;;		_Check_ADC
  2000 ;;		_Check_Gyroscope
  2001 ;;		_SYSTEM_Initialize
  2002 ;;		_UART_Write_Text
  2003 ;;		_displayBinary
  2004 ;; This function is called by:
  2005 ;;		Startup code after reset
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text0
  2010   002864                     __ptext0:
  2011                           	callstack 0
  2012   002864                     _main:
  2013                           	callstack 18
  2014   002864                     
  2015                           ;main.c: 25:     SYSTEM_Initialize() ;
  2016   002864  EC21  F017         	call	_SYSTEM_Initialize	;wreg free
  2017   002868                     
  2018                           ;main.c: 27:     int blinker_dir = 0;
  2019   002868  0E00               	movlw	0
  2020   00286A  0100               	movlb	0	; () banked
  2021   00286C  6FFE               	movwf	(main@blinker_dir+1)& (0+255),b
  2022   00286E  0E00               	movlw	0
  2023   002870  6FFD               	movwf	main@blinker_dir& (0+255),b
  2024   002872                     l5053:
  2025                           
  2026                           ;main.c: 31:         if(isConnected == 1 && needSendMsg == 1){
  2027   002872  0101               	movlb	1	; () banked
  2028   002874  0583               	decf	_isConnected& (0+255),w,b
  2029   002876  1184               	iorwf	(_isConnected+1)& (0+255),w,b
  2030   002878  A4D8               	btfss	status,2,c
  2031   00287A  EF41  F014         	goto	u6261
  2032   00287E  EF43  F014         	goto	u6260
  2033   002882                     u6261:
  2034   002882  EF5F  F014         	goto	l5063
  2035   002886                     u6260:
  2036   002886                     
  2037                           ; BSR set to: 1
  2038   002886  0581               	decf	_needSendMsg& (0+255),w,b
  2039   002888  1182               	iorwf	(_needSendMsg+1)& (0+255),w,b
  2040   00288A  A4D8               	btfss	status,2,c
  2041   00288C  EF4A  F014         	goto	u6271
  2042   002890  EF4C  F014         	goto	u6270
  2043   002894                     u6271:
  2044   002894  EF5F  F014         	goto	l5063
  2045   002898                     u6270:
  2046   002898                     
  2047                           ; BSR set to: 1
  2048                           ;main.c: 32:             displayBinary(0);
  2049   002898  0E00               	movlw	0
  2050   00289A  0100               	movlb	0	; () banked
  2051   00289C  6F81               	movwf	(displayBinary@num+1)& (0+255),b
  2052   00289E  0E00               	movlw	0
  2053   0028A0  6F80               	movwf	displayBinary@num& (0+255),b
  2054   0028A2  ECE9  F013         	call	_displayBinary	;wreg free
  2055   0028A6                     
  2056                           ;main.c: 33:             UART_Write_Text("LRN\r\n");
  2057   0028A6  0E15               	movlw	low STR_5
  2058   0028A8  0100               	movlb	0	; () banked
  2059   0028AA  6F81               	movwf	UART_Write_Text@text& (0+255),b
  2060   0028AC  0E7D               	movlw	high STR_5
  2061   0028AE  6F82               	movwf	(UART_Write_Text@text+1)& (0+255),b
  2062   0028B0  EC78  F014         	call	_UART_Write_Text	;wreg free
  2063   0028B4                     
  2064                           ;main.c: 34:             needSendMsg = 0;
  2065   0028B4  0E00               	movlw	0
  2066   0028B6  0101               	movlb	1	; () banked
  2067   0028B8  6F82               	movwf	(_needSendMsg+1)& (0+255),b
  2068   0028BA  0E00               	movlw	0
  2069   0028BC  6F81               	movwf	_needSendMsg& (0+255),b
  2070   0028BE                     l5063:
  2071                           
  2072                           ; BSR set to: 1
  2073                           ;main.c: 37:         Check_ADC(prev_bend_sensor_val);
  2074   0028BE  C0FB  F0AE         	movff	main@prev_bend_sensor_val,Check_ADC@prev_sensor_val
  2075   0028C2  C0FC  F0AF         	movff	main@prev_bend_sensor_val+1,Check_ADC@prev_sensor_val+1
  2076   0028C6  ECAD  F011         	call	_Check_ADC	;wreg free
  2077   0028CA                     
  2078                           ;main.c: 39:         Check_Gyroscope(blinker_dir);
  2079   0028CA  C0FD  F143         	movff	main@blinker_dir,Check_Gyroscope@blinker_dir
  2080   0028CE  C0FE  F144         	movff	main@blinker_dir+1,Check_Gyroscope@blinker_dir+1
  2081   0028D2  ECEF  F00F         	call	_Check_Gyroscope	;wreg free
  2082   0028D6                     
  2083                           ;main.c: 40:         _delay((unsigned long)((20)*(4000000/4000.0)));
  2084   0028D6  0E1A               	movlw	26
  2085   0028D8  0100               	movlb	0	; () banked
  2086   0028DA  6FFA               	movwf	??_main& (0+255),b
  2087   0028DC  0EF8               	movlw	248
  2088   0028DE                     u6287:
  2089   0028DE  2EE8               	decfsz	wreg,f,c
  2090   0028E0  D7FE               	bra	u6287
  2091   0028E2  2FFA               	decfsz	??_main& (0+255),f,b
  2092   0028E4  D7FC               	bra	u6287
  2093   0028E6  0000               	nop	
  2094   0028E8  EF39  F014         	goto	l5053
  2095   0028EC  EF0E  F001         	goto	start
  2096   0028F0                     __end_of_main:
  2097                           	callstack 0
  2098                           
  2099 ;; *************** function _displayBinary *****************
  2100 ;; Defined at:
  2101 ;;		line 14 in file "main.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  num             2    0[BANK0 ] int 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg, status,2, status,0
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2115 ;;      Params:         0       2       0       0       0       0       0
  2116 ;;      Locals:         0       0       0       0       0       0       0
  2117 ;;      Temps:          0       1       0       0       0       0       0
  2118 ;;      Totals:         0       3       0       0       0       0       0
  2119 ;;Total ram usage:        3 bytes
  2120 ;; Hardware stack levels used: 1
  2121 ;; Hardware stack levels required when called: 7
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_main
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text1
  2130   0027D2                     __ptext1:
  2131                           	callstack 0
  2132   0027D2                     _displayBinary:
  2133                           	callstack 23
  2134   0027D2                     
  2135                           ;main.c: 16:     LATAbits.LATA1 = (num & 0x01) ? 1 : 0;
  2136   0027D2  0100               	movlb	0	; () banked
  2137   0027D4  B180               	btfsc	displayBinary@num& (0+255),0,b
  2138   0027D6  EFEF  F013         	goto	u6161
  2139   0027DA  EFF3  F013         	goto	u6160
  2140   0027DE                     u6161:
  2141   0027DE  6B82               	clrf	??_displayBinary& (0+255),b
  2142   0027E0  2B82               	incf	??_displayBinary& (0+255),f,b
  2143   0027E2  EFF5  F013         	goto	u6178
  2144   0027E6                     u6160:
  2145   0027E6  0100               	movlb	0	; () banked
  2146   0027E8  6B82               	clrf	??_displayBinary& (0+255),b
  2147   0027EA                     u6178:
  2148   0027EA  4782               	rlncf	??_displayBinary& (0+255),f,b
  2149   0027EC  5089               	movf	137,w,c	;volatile
  2150   0027EE  1982               	xorwf	??_displayBinary& (0+255),w,b
  2151   0027F0  0BFD               	andlw	-3
  2152   0027F2  1982               	xorwf	??_displayBinary& (0+255),w,b
  2153   0027F4  6E89               	movwf	137,c	;volatile
  2154                           
  2155                           ;main.c: 17:     LATAbits.LATA2 = (num & 0x02) ? 1 : 0;
  2156   0027F6  B380               	btfsc	displayBinary@num& (0+255),1,b
  2157   0027F8  EF00  F014         	goto	u6181
  2158   0027FC  EF04  F014         	goto	u6180
  2159   002800                     u6181:
  2160   002800  6B82               	clrf	??_displayBinary& (0+255),b
  2161   002802  2B82               	incf	??_displayBinary& (0+255),f,b
  2162   002804  EF06  F014         	goto	u6198
  2163   002808                     u6180:
  2164   002808  0100               	movlb	0	; () banked
  2165   00280A  6B82               	clrf	??_displayBinary& (0+255),b
  2166   00280C                     u6198:
  2167   00280C  4782               	rlncf	??_displayBinary& (0+255),f,b
  2168   00280E  4782               	rlncf	??_displayBinary& (0+255),f,b
  2169   002810  5089               	movf	137,w,c	;volatile
  2170   002812  1982               	xorwf	??_displayBinary& (0+255),w,b
  2171   002814  0BFB               	andlw	-5
  2172   002816  1982               	xorwf	??_displayBinary& (0+255),w,b
  2173   002818  6E89               	movwf	137,c	;volatile
  2174                           
  2175                           ;main.c: 18:     LATAbits.LATA3 = (num & 0x04) ? 1 : 0;
  2176   00281A  B580               	btfsc	displayBinary@num& (0+255),2,b
  2177   00281C  EF12  F014         	goto	u6201
  2178   002820  EF16  F014         	goto	u6200
  2179   002824                     u6201:
  2180   002824  6B82               	clrf	??_displayBinary& (0+255),b
  2181   002826  2B82               	incf	??_displayBinary& (0+255),f,b
  2182   002828  EF18  F014         	goto	u6218
  2183   00282C                     u6200:
  2184   00282C  0100               	movlb	0	; () banked
  2185   00282E  6B82               	clrf	??_displayBinary& (0+255),b
  2186   002830                     u6218:
  2187   002830  4782               	rlncf	??_displayBinary& (0+255),f,b
  2188   002832  4782               	rlncf	??_displayBinary& (0+255),f,b
  2189   002834  4782               	rlncf	??_displayBinary& (0+255),f,b
  2190   002836  5089               	movf	137,w,c	;volatile
  2191   002838  1982               	xorwf	??_displayBinary& (0+255),w,b
  2192   00283A  0BF7               	andlw	-9
  2193   00283C  1982               	xorwf	??_displayBinary& (0+255),w,b
  2194   00283E  6E89               	movwf	137,c	;volatile
  2195                           
  2196                           ;main.c: 19:     LATAbits.LATA4 = (num & 0x08) ? 1 : 0;
  2197   002840  B780               	btfsc	displayBinary@num& (0+255),3,b
  2198   002842  EF25  F014         	goto	u6221
  2199   002846  EF29  F014         	goto	u6220
  2200   00284A                     u6221:
  2201   00284A  6B82               	clrf	??_displayBinary& (0+255),b
  2202   00284C  2B82               	incf	??_displayBinary& (0+255),f,b
  2203   00284E  EF2B  F014         	goto	u6238
  2204   002852                     u6220:
  2205   002852  0100               	movlb	0	; () banked
  2206   002854  6B82               	clrf	??_displayBinary& (0+255),b
  2207   002856                     u6238:
  2208   002856  3B82               	swapf	??_displayBinary& (0+255),f,b
  2209   002858  5089               	movf	137,w,c	;volatile
  2210   00285A  1982               	xorwf	??_displayBinary& (0+255),w,b
  2211   00285C  0BEF               	andlw	-17
  2212   00285E  1982               	xorwf	??_displayBinary& (0+255),w,b
  2213   002860  6E89               	movwf	137,c	;volatile
  2214   002862                     
  2215                           ; BSR set to: 0
  2216   002862  0012               	return		;funcret
  2217   002864                     __end_of_displayBinary:
  2218                           	callstack 0
  2219                           
  2220 ;; *************** function _SYSTEM_Initialize *****************
  2221 ;; Defined at:
  2222 ;;		line 60 in file "setting_hardaware/setting.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg, status,2, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2236 ;;      Params:         0       0       0       0       0       0       0
  2237 ;;      Locals:         0       0       0       0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0       0       0
  2239 ;;      Totals:         0       0       0       0       0       0       0
  2240 ;;Total ram usage:        0 bytes
  2241 ;; Hardware stack levels used: 1
  2242 ;; Hardware stack levels required when called: 8
  2243 ;; This function calls:
  2244 ;;		_ADC_Initialize
  2245 ;;		_INTERRUPT_Initialize
  2246 ;;		_OSCILLATOR_Initialize
  2247 ;;		_UART_Initialize
  2248 ;; This function is called by:
  2249 ;;		_main
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text2
  2254   002E42                     __ptext2:
  2255                           	callstack 0
  2256   002E42                     _SYSTEM_Initialize:
  2257                           	callstack 22
  2258   002E42                     
  2259                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
  2260   002E42  EC3C  F017         	call	_OSCILLATOR_Initialize	;wreg free
  2261   002E46                     
  2262                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  2263   002E46  ECA6  F016         	call	_INTERRUPT_Initialize	;wreg free
  2264   002E4A                     
  2265                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
  2266   002E4A  ECE1  F016         	call	_UART_Initialize	;wreg free
  2267   002E4E                     
  2268                           ;setting_hardaware/setting.c: 70:     ADC_Initialize();
  2269   002E4E  ECF2  F016         	call	_ADC_Initialize	;wreg free
  2270   002E52  0012               	return		;funcret
  2271   002E54                     __end_of_SYSTEM_Initialize:
  2272                           	callstack 0
  2273                           
  2274 ;; *************** function _UART_Initialize *****************
  2275 ;; Defined at:
  2276 ;;		line 10 in file "setting_hardaware/uart.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2290 ;;      Params:         0       0       0       0       0       0       0
  2291 ;;      Locals:         0       0       0       0       0       0       0
  2292 ;;      Temps:          0       0       0       0       0       0       0
  2293 ;;      Totals:         0       0       0       0       0       0       0
  2294 ;;Total ram usage:        0 bytes
  2295 ;; Hardware stack levels used: 1
  2296 ;; Hardware stack levels required when called: 7
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_SYSTEM_Initialize
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text3
  2305   002DC2                     __ptext3:
  2306                           	callstack 0
  2307   002DC2                     _UART_Initialize:
  2308                           	callstack 22
  2309   002DC2                     
  2310                           ;setting_hardaware/uart.c: 21:     TRISCbits.TRISC6 = 1;
  2311   002DC2  8C94               	bsf	148,6,c	;volatile
  2312                           
  2313                           ;setting_hardaware/uart.c: 22:     TRISCbits.TRISC7 = 1;
  2314   002DC4  8E94               	bsf	148,7,c	;volatile
  2315                           
  2316                           ;setting_hardaware/uart.c: 25:     TXSTAbits.SYNC = 0;
  2317   002DC6  98AC               	bcf	172,4,c	;volatile
  2318                           
  2319                           ;setting_hardaware/uart.c: 26:     BAUDCONbits.BRG16 = 0;
  2320   002DC8  96B8               	bcf	184,3,c	;volatile
  2321                           
  2322                           ;setting_hardaware/uart.c: 27:     TXSTAbits.BRGH = 1;
  2323   002DCA  84AC               	bsf	172,2,c	;volatile
  2324   002DCC                     
  2325                           ;setting_hardaware/uart.c: 28:     SPBRG = 25;
  2326   002DCC  0E19               	movlw	25
  2327   002DCE  6EAF               	movwf	175,c	;volatile
  2328   002DD0                     
  2329                           ;setting_hardaware/uart.c: 31:     RCSTAbits.SPEN = 1;
  2330   002DD0  8EAB               	bsf	171,7,c	;volatile
  2331   002DD2                     
  2332                           ;setting_hardaware/uart.c: 32:     PIR1bits.TXIF = 0;
  2333   002DD2  989E               	bcf	158,4,c	;volatile
  2334   002DD4                     
  2335                           ;setting_hardaware/uart.c: 33:     PIR1bits.RCIF = 1;
  2336   002DD4  8A9E               	bsf	158,5,c	;volatile
  2337   002DD6                     
  2338                           ;setting_hardaware/uart.c: 34:     TXSTAbits.TXEN = 1;
  2339   002DD6  8AAC               	bsf	172,5,c	;volatile
  2340   002DD8                     
  2341                           ;setting_hardaware/uart.c: 35:     RCSTAbits.CREN = 1;
  2342   002DD8  88AB               	bsf	171,4,c	;volatile
  2343   002DDA                     
  2344                           ;setting_hardaware/uart.c: 36:     PIE1bits.TXIE = 0;
  2345   002DDA  989D               	bcf	157,4,c	;volatile
  2346   002DDC                     
  2347                           ;setting_hardaware/uart.c: 37:     IPR1bits.TXIP = 0;
  2348   002DDC  989F               	bcf	159,4,c	;volatile
  2349   002DDE                     
  2350                           ;setting_hardaware/uart.c: 38:     PIE1bits.RCIE = 1;
  2351   002DDE  8A9D               	bsf	157,5,c	;volatile
  2352   002DE0                     
  2353                           ;setting_hardaware/uart.c: 39:     IPR1bits.RCIP = 0;
  2354   002DE0  9A9F               	bcf	159,5,c	;volatile
  2355   002DE2  0012               	return		;funcret
  2356   002DE4                     __end_of_UART_Initialize:
  2357                           	callstack 0
  2358                           
  2359 ;; *************** function _OSCILLATOR_Initialize *****************
  2360 ;; Defined at:
  2361 ;;		line 74 in file "setting_hardaware/setting.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;		None
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;		None
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  1    wreg      void 
  2368 ;; Registers used:
  2369 ;;		None
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2375 ;;      Params:         0       0       0       0       0       0       0
  2376 ;;      Locals:         0       0       0       0       0       0       0
  2377 ;;      Temps:          0       0       0       0       0       0       0
  2378 ;;      Totals:         0       0       0       0       0       0       0
  2379 ;;Total ram usage:        0 bytes
  2380 ;; Hardware stack levels used: 1
  2381 ;; Hardware stack levels required when called: 7
  2382 ;; This function calls:
  2383 ;;		Nothing
  2384 ;; This function is called by:
  2385 ;;		_SYSTEM_Initialize
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           	psect	text4
  2390   002E78                     __ptext4:
  2391                           	callstack 0
  2392   002E78                     _OSCILLATOR_Initialize:
  2393                           	callstack 22
  2394   002E78                     
  2395                           ;setting_hardaware/setting.c: 76:     IRCF2 = 1;
  2396   002E78  8CD3               	bsf	4051,6,c	;volatile
  2397                           
  2398                           ;setting_hardaware/setting.c: 77:     IRCF1 = 1;
  2399   002E7A  8AD3               	bsf	4051,5,c	;volatile
  2400                           
  2401                           ;setting_hardaware/setting.c: 78:     IRCF0 = 0;
  2402   002E7C  98D3               	bcf	4051,4,c	;volatile
  2403   002E7E  0012               	return		;funcret
  2404   002E80                     __end_of_OSCILLATOR_Initialize:
  2405                           	callstack 0
  2406                           
  2407 ;; *************** function _INTERRUPT_Initialize *****************
  2408 ;; Defined at:
  2409 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;		None
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      void 
  2416 ;; Registers used:
  2417 ;;		wreg, status,2
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2423 ;;      Params:         0       0       0       0       0       0       0
  2424 ;;      Locals:         0       0       0       0       0       0       0
  2425 ;;      Temps:          0       0       0       0       0       0       0
  2426 ;;      Totals:         0       0       0       0       0       0       0
  2427 ;;Total ram usage:        0 bytes
  2428 ;; Hardware stack levels used: 1
  2429 ;; Hardware stack levels required when called: 7
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_SYSTEM_Initialize
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text5
  2438   002D4C                     __ptext5:
  2439                           	callstack 0
  2440   002D4C                     _INTERRUPT_Initialize:
  2441                           	callstack 22
  2442   002D4C                     
  2443                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
  2444   002D4C  8ED0               	bsf	208,7,c	;volatile
  2445                           
  2446                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
  2447   002D4E  8EF2               	bsf	242,7,c	;volatile
  2448                           
  2449                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
  2450   002D50  8CF2               	bsf	242,6,c	;volatile
  2451   002D52                     
  2452                           ;setting_hardaware/interrupt_manager.c: 10:     ADCON1 = 0x0f;
  2453   002D52  0E0F               	movlw	15
  2454   002D54  6EC1               	movwf	193,c	;volatile
  2455   002D56                     
  2456                           ;setting_hardaware/interrupt_manager.c: 11:     LATA = 0x00;
  2457   002D56  6A89               	clrf	137,c	;volatile
  2458   002D58                     
  2459                           ;setting_hardaware/interrupt_manager.c: 12:     TRISAbits.TRISA0 = 1;
  2460   002D58  8092               	bsf	146,0,c	;volatile
  2461   002D5A                     
  2462                           ;setting_hardaware/interrupt_manager.c: 13:     TRISAbits.TRISA1 = 0;
  2463   002D5A  9292               	bcf	146,1,c	;volatile
  2464   002D5C                     
  2465                           ;setting_hardaware/interrupt_manager.c: 14:     TRISAbits.TRISA2 = 0;
  2466   002D5C  9492               	bcf	146,2,c	;volatile
  2467   002D5E                     
  2468                           ;setting_hardaware/interrupt_manager.c: 15:     TRISAbits.TRISA3 = 0;
  2469   002D5E  9692               	bcf	146,3,c	;volatile
  2470   002D60                     
  2471                           ;setting_hardaware/interrupt_manager.c: 16:     TRISAbits.TRISA4 = 0;
  2472   002D60  9892               	bcf	146,4,c	;volatile
  2473   002D62                     
  2474                           ;setting_hardaware/interrupt_manager.c: 17:     LATAbits.LATA1 = 0;
  2475   002D62  9289               	bcf	137,1,c	;volatile
  2476   002D64                     
  2477                           ;setting_hardaware/interrupt_manager.c: 18:     LATAbits.LATA2 = 0;
  2478   002D64  9489               	bcf	137,2,c	;volatile
  2479   002D66                     
  2480                           ;setting_hardaware/interrupt_manager.c: 19:     LATAbits.LATA3 = 0;
  2481   002D66  9689               	bcf	137,3,c	;volatile
  2482   002D68                     
  2483                           ;setting_hardaware/interrupt_manager.c: 20:     LATAbits.LATA4 = 0;
  2484   002D68  9889               	bcf	137,4,c	;volatile
  2485                           
  2486                           ;setting_hardaware/interrupt_manager.c: 23:     TRISB = 0x01;
  2487   002D6A  0E01               	movlw	1
  2488   002D6C  6E93               	movwf	147,c	;volatile
  2489   002D6E                     
  2490                           ;setting_hardaware/interrupt_manager.c: 24:     LATBbits.LATB0 = 0;
  2491   002D6E  908A               	bcf	138,0,c	;volatile
  2492   002D70                     
  2493                           ;setting_hardaware/interrupt_manager.c: 26:     INTCONbits.INT0IE = 1;
  2494   002D70  88F2               	bsf	242,4,c	;volatile
  2495   002D72                     
  2496                           ;setting_hardaware/interrupt_manager.c: 27:     INTCONbits.INT0IF = 0;
  2497   002D72  92F2               	bcf	242,1,c	;volatile
  2498   002D74  0012               	return		;funcret
  2499   002D76                     __end_of_INTERRUPT_Initialize:
  2500                           	callstack 0
  2501                           
  2502 ;; *************** function _ADC_Initialize *****************
  2503 ;; Defined at:
  2504 ;;		line 5 in file "setting_hardaware/adc.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;		None
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;		None
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      void 
  2511 ;; Registers used:
  2512 ;;		wreg, status,2
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2518 ;;      Params:         0       0       0       0       0       0       0
  2519 ;;      Locals:         0       0       0       0       0       0       0
  2520 ;;      Temps:          0       0       0       0       0       0       0
  2521 ;;      Totals:         0       0       0       0       0       0       0
  2522 ;;Total ram usage:        0 bytes
  2523 ;; Hardware stack levels used: 1
  2524 ;; Hardware stack levels required when called: 7
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_SYSTEM_Initialize
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text6
  2533   002DE4                     __ptext6:
  2534                           	callstack 0
  2535   002DE4                     _ADC_Initialize:
  2536                           	callstack 22
  2537   002DE4                     
  2538                           ;setting_hardaware/adc.c: 7:     TRISAbits.RA0 = 1;
  2539   002DE4  8092               	bsf	146,0,c	;volatile
  2540   002DE6                     
  2541                           ;setting_hardaware/adc.c: 9:     ADCON1 = 0x0e;
  2542   002DE6  0E0E               	movlw	14
  2543   002DE8  6EC1               	movwf	193,c	;volatile
  2544   002DEA                     
  2545                           ;setting_hardaware/adc.c: 11:     ADFM = 1 ;
  2546   002DEA  8EC0               	bsf	4032,7,c	;volatile
  2547                           
  2548                           ;setting_hardaware/adc.c: 12:     ADCON2bits.ADCS = 7;
  2549   002DEC  0E07               	movlw	7
  2550   002DEE  12C0               	iorwf	192,f,c	;volatile
  2551                           
  2552                           ;setting_hardaware/adc.c: 13:     ADCON2bits.ACQT = 0b001;
  2553   002DF0  50C0               	movf	192,w,c	;volatile
  2554   002DF2  0BC7               	andlw	-57
  2555   002DF4  0908               	iorlw	8
  2556   002DF6  6EC0               	movwf	192,c	;volatile
  2557   002DF8                     
  2558                           ;setting_hardaware/adc.c: 15:     ADRESH=0;
  2559   002DF8  6AC4               	clrf	196,c	;volatile
  2560   002DFA                     
  2561                           ;setting_hardaware/adc.c: 16:     ADRESL=0;
  2562   002DFA  6AC3               	clrf	195,c	;volatile
  2563   002DFC  0012               	return		;funcret
  2564   002DFE                     __end_of_ADC_Initialize:
  2565                           	callstack 0
  2566                           
  2567 ;; *************** function _Check_Gyroscope *****************
  2568 ;; Defined at:
  2569 ;;		line 45 in file "setting_hardaware/gyroscope.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  blinker_dir     2   67[BANK1 ] int 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;		None
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      void 
  2576 ;; Registers used:
  2577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2583 ;;      Params:         0       0       2       0       0       0       0
  2584 ;;      Locals:         0       4       0       0       0       0       0
  2585 ;;      Temps:          0       2       0       0       0       0       0
  2586 ;;      Totals:         0       6       2       0       0       0       0
  2587 ;;Total ram usage:        8 bytes
  2588 ;; Hardware stack levels used: 1
  2589 ;; Hardware stack levels required when called: 12
  2590 ;; This function calls:
  2591 ;;		_I2C_Read
  2592 ;;		_I2C_Start
  2593 ;;		_I2C_Stop
  2594 ;;		_I2C_Write
  2595 ;;		_UART_Write_Text
  2596 ;;		___flge
  2597 ;;		___flsub
  2598 ;;		_calculate_angle
  2599 ;; This function is called by:
  2600 ;;		_main
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text7
  2605   001FDE                     __ptext7:
  2606                           	callstack 0
  2607   001FDE                     _Check_Gyroscope:
  2608                           	callstack 18
  2609   001FDE                     
  2610                           ;setting_hardaware/gyroscope.c: 46:     I2C_Start();
  2611   001FDE  EC33  F017         	call	_I2C_Start	;wreg free
  2612   001FE2                     
  2613                           ;setting_hardaware/gyroscope.c: 47:     I2C_Write(0x68 << 1);
  2614   001FE2  0ED0               	movlw	208
  2615   001FE4  ECCE  F016         	call	_I2C_Write
  2616   001FE8                     
  2617                           ;setting_hardaware/gyroscope.c: 48:     I2C_Write(0x3B);
  2618   001FE8  0E3B               	movlw	59
  2619   001FEA  ECCE  F016         	call	_I2C_Write
  2620                           
  2621                           ;setting_hardaware/gyroscope.c: 49:     I2C_Start();
  2622   001FEE  EC33  F017         	call	_I2C_Start	;wreg free
  2623   001FF2                     
  2624                           ;setting_hardaware/gyroscope.c: 50:     I2C_Write((0x68 << 1) | 1);
  2625   001FF2  0ED1               	movlw	209
  2626   001FF4  ECCE  F016         	call	_I2C_Write
  2627   001FF8                     
  2628                           ;setting_hardaware/gyroscope.c: 52:     accX_high = I2C_Read(1);
  2629   001FF8  0E01               	movlw	1
  2630   001FFA  ECA5  F015         	call	_I2C_Read
  2631   001FFE  0101               	movlb	1	; () banked
  2632   002000  6F88               	movwf	_accX_high& (0+255),b
  2633   002002                     
  2634                           ; BSR set to: 1
  2635                           ;setting_hardaware/gyroscope.c: 53:     accX_low = I2C_Read(1);
  2636   002002  0E01               	movlw	1
  2637   002004  ECA5  F015         	call	_I2C_Read
  2638   002008  0101               	movlb	1	; () banked
  2639   00200A  6F87               	movwf	_accX_low& (0+255),b
  2640   00200C                     
  2641                           ; BSR set to: 1
  2642                           ;setting_hardaware/gyroscope.c: 54:     accZ_high = I2C_Read(1);
  2643   00200C  0E01               	movlw	1
  2644   00200E  ECA5  F015         	call	_I2C_Read
  2645   002012  0101               	movlb	1	; () banked
  2646   002014  6F86               	movwf	_accZ_high& (0+255),b
  2647   002016                     
  2648                           ; BSR set to: 1
  2649                           ;setting_hardaware/gyroscope.c: 55:     accZ_low = I2C_Read(0);
  2650   002016  0E00               	movlw	0
  2651   002018  ECA5  F015         	call	_I2C_Read
  2652   00201C  0101               	movlb	1	; () banked
  2653   00201E  6F85               	movwf	_accZ_low& (0+255),b
  2654   002020                     
  2655                           ; BSR set to: 1
  2656                           ;setting_hardaware/gyroscope.c: 56:     I2C_Stop();
  2657   002020  EC2A  F017         	call	_I2C_Stop	;wreg free
  2658   002024                     
  2659                           ;setting_hardaware/gyroscope.c: 59:     accX = (accX_high << 8) | accX_low;
  2660   002024  0101               	movlb	1	; () banked
  2661   002026  5187               	movf	_accX_low& (0+255),w,b
  2662   002028  C188  F0F4         	movff	_accX_high,??_Check_Gyroscope
  2663   00202C  0100               	movlb	0	; () banked
  2664   00202E  6BF5               	clrf	(??_Check_Gyroscope+1)& (0+255),b
  2665   002030  C0F4  F0F5         	movff	??_Check_Gyroscope,??_Check_Gyroscope+1
  2666   002034  6BF4               	clrf	??_Check_Gyroscope& (0+255),b
  2667   002036  11F4               	iorwf	??_Check_Gyroscope& (0+255),w,b
  2668   002038  0101               	movlb	1	; () banked
  2669   00203A  6F7F               	movwf	_accX& (0+255),b
  2670   00203C  0100               	movlb	0	; () banked
  2671   00203E  51F5               	movf	(??_Check_Gyroscope+1)& (0+255),w,b
  2672   002040  0101               	movlb	1	; () banked
  2673   002042  6F80               	movwf	(_accX+1)& (0+255),b
  2674   002044                     
  2675                           ; BSR set to: 1
  2676                           ;setting_hardaware/gyroscope.c: 60:     accZ = (accZ_high << 8) | accZ_low;
  2677   002044  5185               	movf	_accZ_low& (0+255),w,b
  2678   002046  C186  F0F4         	movff	_accZ_high,??_Check_Gyroscope
  2679   00204A  0100               	movlb	0	; () banked
  2680   00204C  6BF5               	clrf	(??_Check_Gyroscope+1)& (0+255),b
  2681   00204E  C0F4  F0F5         	movff	??_Check_Gyroscope,??_Check_Gyroscope+1
  2682   002052  6BF4               	clrf	??_Check_Gyroscope& (0+255),b
  2683   002054  11F4               	iorwf	??_Check_Gyroscope& (0+255),w,b
  2684   002056  0101               	movlb	1	; () banked
  2685   002058  6F7D               	movwf	_accZ& (0+255),b
  2686   00205A  0100               	movlb	0	; () banked
  2687   00205C  51F5               	movf	(??_Check_Gyroscope+1)& (0+255),w,b
  2688   00205E  0101               	movlb	1	; () banked
  2689   002060  6F7E               	movwf	(_accZ+1)& (0+255),b
  2690   002062                     
  2691                           ; BSR set to: 1
  2692                           ;setting_hardaware/gyroscope.c: 63:     angle = calculate_angle(accX, accZ) - pitch_offs
      +                          et;
  2693   002062  C17D  F0EE         	movff	_accZ,calculate_angle@accZ
  2694   002066  C17E  F0EF         	movff	_accZ+1,calculate_angle@accZ+1
  2695   00206A  C17F  F0EC         	movff	_accX,calculate_angle@accX
  2696   00206E  C180  F0ED         	movff	_accX+1,calculate_angle@accX+1
  2697   002072  EC16  F012         	call	_calculate_angle	;wreg free
  2698   002076  C0EC  F0F6         	movff	?_calculate_angle,_Check_Gyroscope$2064
  2699   00207A  C0ED  F0F7         	movff	?_calculate_angle+1,_Check_Gyroscope$2064+1
  2700   00207E  C0EE  F0F8         	movff	?_calculate_angle+2,_Check_Gyroscope$2064+2
  2701   002082  C0EF  F0F9         	movff	?_calculate_angle+3,_Check_Gyroscope$2064+3
  2702   002086                     
  2703                           ;setting_hardaware/gyroscope.c: 63:     angle = calculate_angle(accX, accZ) - pitch_offs
      +                          et;
  2704   002086  C0F6  F0B7         	movff	_Check_Gyroscope$2064,___flsub@b
  2705   00208A  C0F7  F0B8         	movff	_Check_Gyroscope$2064+1,___flsub@b+1
  2706   00208E  C0F8  F0B9         	movff	_Check_Gyroscope$2064+2,___flsub@b+2
  2707   002092  C0F9  F0BA         	movff	_Check_Gyroscope$2064+3,___flsub@b+3
  2708   002096  C03F  F0BB         	movff	_pitch_offset,___flsub@a
  2709   00209A  C040  F0BC         	movff	_pitch_offset+1,___flsub@a+1
  2710   00209E  C041  F0BD         	movff	_pitch_offset+2,___flsub@a+2
  2711   0020A2  C042  F0BE         	movff	_pitch_offset+3,___flsub@a+3
  2712   0020A6  EC5E  F015         	call	___flsub	;wreg free
  2713   0020AA  C0B7  F179         	movff	?___flsub,_angle
  2714   0020AE  C0B8  F17A         	movff	?___flsub+1,_angle+1
  2715   0020B2  C0B9  F17B         	movff	?___flsub+2,_angle+2
  2716   0020B6  C0BA  F17C         	movff	?___flsub+3,_angle+3
  2717   0020BA                     
  2718                           ;setting_hardaware/gyroscope.c: 66:     if (angle > 45.0) {
  2719   0020BA  0E00               	movlw	0
  2720   0020BC  0100               	movlb	0	; () banked
  2721   0020BE  6F80               	movwf	___flge@ff1& (0+255),b
  2722   0020C0  0E00               	movlw	0
  2723   0020C2  6F81               	movwf	(___flge@ff1+1)& (0+255),b
  2724   0020C4  0E34               	movlw	52
  2725   0020C6  6F82               	movwf	(___flge@ff1+2)& (0+255),b
  2726   0020C8  0E42               	movlw	66
  2727   0020CA  6F83               	movwf	(___flge@ff1+3)& (0+255),b
  2728   0020CC  C179  F084         	movff	_angle,___flge@ff2
  2729   0020D0  C17A  F085         	movff	_angle+1,___flge@ff2+1
  2730   0020D4  C17B  F086         	movff	_angle+2,___flge@ff2+2
  2731   0020D8  C17C  F087         	movff	_angle+3,___flge@ff2+3
  2732   0020DC  ECAA  F010         	call	___flge	;wreg free
  2733   0020E0  0100               	movlb	0	; () banked
  2734   0020E2  B0D8               	btfsc	status,0,c
  2735   0020E4  EF76  F010         	goto	u6241
  2736   0020E8  EF78  F010         	goto	u6240
  2737   0020EC                     u6241:
  2738   0020EC  EF80  F010         	goto	l5043
  2739   0020F0                     u6240:
  2740   0020F0                     
  2741                           ; BSR set to: 0
  2742                           ;setting_hardaware/gyroscope.c: 67:         UART_Write_Text("LLN\r\n");
  2743   0020F0  0E0F               	movlw	low STR_12
  2744   0020F2  6F81               	movwf	UART_Write_Text@text& (0+255),b
  2745   0020F4  0E7D               	movlw	high STR_12
  2746   0020F6  6F82               	movwf	(UART_Write_Text@text+1)& (0+255),b
  2747   0020F8  EC78  F014         	call	_UART_Write_Text	;wreg free
  2748                           
  2749                           ;setting_hardaware/gyroscope.c: 68:     } else if (angle < -45.0) {
  2750   0020FC  EFA0  F010         	goto	l5047
  2751   002100                     l5043:
  2752                           
  2753                           ; BSR set to: 0
  2754   002100  C179  F080         	movff	_angle,___flge@ff1
  2755   002104  C17A  F081         	movff	_angle+1,___flge@ff1+1
  2756   002108  C17B  F082         	movff	_angle+2,___flge@ff1+2
  2757   00210C  C17C  F083         	movff	_angle+3,___flge@ff1+3
  2758   002110  0E00               	movlw	0
  2759   002112  6F84               	movwf	___flge@ff2& (0+255),b
  2760   002114  0E00               	movlw	0
  2761   002116  6F85               	movwf	(___flge@ff2+1)& (0+255),b
  2762   002118  0E34               	movlw	52
  2763   00211A  6F86               	movwf	(___flge@ff2+2)& (0+255),b
  2764   00211C  0EC2               	movlw	194
  2765   00211E  6F87               	movwf	(___flge@ff2+3)& (0+255),b
  2766   002120  ECAA  F010         	call	___flge	;wreg free
  2767   002124  0100               	movlb	0	; () banked
  2768   002126  B0D8               	btfsc	status,0,c
  2769   002128  EF98  F010         	goto	u6251
  2770   00212C  EF9A  F010         	goto	u6250
  2771   002130                     u6251:
  2772   002130  EFA0  F010         	goto	l5047
  2773   002134                     u6250:
  2774   002134                     
  2775                           ; BSR set to: 0
  2776                           ;setting_hardaware/gyroscope.c: 69:         UART_Write_Text("LRN\r\n");
  2777   002134  0E15               	movlw	low STR_5
  2778   002136  6F81               	movwf	UART_Write_Text@text& (0+255),b
  2779   002138  0E7D               	movlw	high STR_5
  2780   00213A  6F82               	movwf	(UART_Write_Text@text+1)& (0+255),b
  2781   00213C  EC78  F014         	call	_UART_Write_Text	;wreg free
  2782   002140                     l5047:
  2783                           
  2784                           ;setting_hardaware/gyroscope.c: 74:     _delay((unsigned long)((100)*(4000000/4000.0)));
  2785   002140  0E82               	movlw	130
  2786   002142  0100               	movlb	0	; () banked
  2787   002144  6FF4               	movwf	??_Check_Gyroscope& (0+255),b
  2788   002146  0EDD               	movlw	221
  2789   002148                     u6297:
  2790   002148  2EE8               	decfsz	wreg,f,c
  2791   00214A  D7FE               	bra	u6297
  2792   00214C  2FF4               	decfsz	??_Check_Gyroscope& (0+255),f,b
  2793   00214E  D7FC               	bra	u6297
  2794   002150  D000               	nop2	
  2795   002152  0012               	return		;funcret
  2796   002154                     __end_of_Check_Gyroscope:
  2797                           	callstack 0
  2798                           
  2799 ;; *************** function _calculate_angle *****************
  2800 ;; Defined at:
  2801 ;;		line 77 in file "setting_hardaware/gyroscope.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  accX            2  108[BANK0 ] short 
  2804 ;;  accZ            2  110[BANK0 ] short 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  4  108[BANK0 ] float 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2816 ;;      Params:         0       4       0       0       0       0       0
  2817 ;;      Locals:         0       4       0       0       0       0       0
  2818 ;;      Temps:          0       0       0       0       0       0       0
  2819 ;;      Totals:         0       8       0       0       0       0       0
  2820 ;;Total ram usage:        8 bytes
  2821 ;; Hardware stack levels used: 1
  2822 ;; Hardware stack levels required when called: 11
  2823 ;; This function calls:
  2824 ;;		___fldiv
  2825 ;;		___flmul
  2826 ;;		___xxtofl
  2827 ;;		_atan2f
  2828 ;; This function is called by:
  2829 ;;		_Check_Gyroscope
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text8
  2834   00242C                     __ptext8:
  2835                           	callstack 0
  2836   00242C                     _calculate_angle:
  2837                           	callstack 18
  2838   00242C                     
  2839                           ;setting_hardaware/gyroscope.c: 78:     return atan2f((float)(accX - 0),(float)(accZ - 0
      +                          )) * 180.0 / 3.14159265358979323846;
  2840   00242C  C0EE  F080         	movff	calculate_angle@accZ,___xxtofl@val
  2841   002430  C0EF  F081         	movff	calculate_angle@accZ+1,___xxtofl@val+1
  2842   002434  0100               	movlb	0	; () banked
  2843   002436  0E00               	movlw	0
  2844   002438  BF81               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2845   00243A  0EFF               	movlw	-1
  2846   00243C  6F82               	movwf	(___xxtofl@val+2)& (0+255),b
  2847   00243E  6F83               	movwf	(___xxtofl@val+3)& (0+255),b
  2848   002440  0E01               	movlw	1
  2849   002442  EC13  F00F         	call	___xxtofl
  2850   002446  C080  F0E0         	movff	?___xxtofl,atan2f@x
  2851   00244A  C081  F0E1         	movff	?___xxtofl+1,atan2f@x+1
  2852   00244E  C082  F0E2         	movff	?___xxtofl+2,atan2f@x+2
  2853   002452  C083  F0E3         	movff	?___xxtofl+3,atan2f@x+3
  2854   002456  C0EC  F080         	movff	calculate_angle@accX,___xxtofl@val
  2855   00245A  C0ED  F081         	movff	calculate_angle@accX+1,___xxtofl@val+1
  2856   00245E  0100               	movlb	0	; () banked
  2857   002460  0E00               	movlw	0
  2858   002462  BF81               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2859   002464  0EFF               	movlw	-1
  2860   002466  6F82               	movwf	(___xxtofl@val+2)& (0+255),b
  2861   002468  6F83               	movwf	(___xxtofl@val+3)& (0+255),b
  2862   00246A  0E01               	movlw	1
  2863   00246C  EC13  F00F         	call	___xxtofl
  2864   002470  C080  F0DC         	movff	?___xxtofl,atan2f@y
  2865   002474  C081  F0DD         	movff	?___xxtofl+1,atan2f@y+1
  2866   002478  C082  F0DE         	movff	?___xxtofl+2,atan2f@y+2
  2867   00247C  C083  F0DF         	movff	?___xxtofl+3,atan2f@y+3
  2868   002480  ECD0  F004         	call	_atan2f	;wreg free
  2869   002484  C0DC  F0F0         	movff	?_atan2f,_calculate_angle$2065
  2870   002488  C0DD  F0F1         	movff	?_atan2f+1,_calculate_angle$2065+1
  2871   00248C  C0DE  F0F2         	movff	?_atan2f+2,_calculate_angle$2065+2
  2872   002490  C0DF  F0F3         	movff	?_atan2f+3,_calculate_angle$2065+3
  2873   002494                     
  2874                           ;setting_hardaware/gyroscope.c: 78:     return atan2f((float)(accX - 0),(float)(accZ - 0
      +                          )) * 180.0 / 3.14159265358979323846;
  2875   002494  0E00               	movlw	0
  2876   002496  0100               	movlb	0	; () banked
  2877   002498  6F92               	movwf	___flmul@a& (0+255),b
  2878   00249A  0E00               	movlw	0
  2879   00249C  6F93               	movwf	(___flmul@a+1)& (0+255),b
  2880   00249E  0E34               	movlw	52
  2881   0024A0  6F94               	movwf	(___flmul@a+2)& (0+255),b
  2882   0024A2  0E43               	movlw	67
  2883   0024A4  6F95               	movwf	(___flmul@a+3)& (0+255),b
  2884   0024A6  C0F0  F08E         	movff	_calculate_angle$2065,___flmul@b
  2885   0024AA  C0F1  F08F         	movff	_calculate_angle$2065+1,___flmul@b+1
  2886   0024AE  C0F2  F090         	movff	_calculate_angle$2065+2,___flmul@b+2
  2887   0024B2  C0F3  F091         	movff	_calculate_angle$2065+3,___flmul@b+3
  2888   0024B6  EC41  F00A         	call	___flmul	;wreg free
  2889   0024BA  C08E  F0B7         	movff	?___flmul,___fldiv@b
  2890   0024BE  C08F  F0B8         	movff	?___flmul+1,___fldiv@b+1
  2891   0024C2  C090  F0B9         	movff	?___flmul+2,___fldiv@b+2
  2892   0024C6  C091  F0BA         	movff	?___flmul+3,___fldiv@b+3
  2893   0024CA  0EDB               	movlw	219
  2894   0024CC  0100               	movlb	0	; () banked
  2895   0024CE  6FBB               	movwf	___fldiv@a& (0+255),b
  2896   0024D0  0E0F               	movlw	15
  2897   0024D2  6FBC               	movwf	(___fldiv@a+1)& (0+255),b
  2898   0024D4  0E49               	movlw	73
  2899   0024D6  6FBD               	movwf	(___fldiv@a+2)& (0+255),b
  2900   0024D8  0E40               	movlw	64
  2901   0024DA  6FBE               	movwf	(___fldiv@a+3)& (0+255),b
  2902   0024DC  EC55  F00C         	call	___fldiv	;wreg free
  2903   0024E0  C0B7  F0EC         	movff	?___fldiv,?_calculate_angle
  2904   0024E4  C0B8  F0ED         	movff	?___fldiv+1,?_calculate_angle+1
  2905   0024E8  C0B9  F0EE         	movff	?___fldiv+2,?_calculate_angle+2
  2906   0024EC  C0BA  F0EF         	movff	?___fldiv+3,?_calculate_angle+3
  2907   0024F0  0012               	return		;funcret
  2908   0024F2                     __end_of_calculate_angle:
  2909                           	callstack 0
  2910                           
  2911 ;; *************** function _atan2f *****************
  2912 ;; Defined at:
  2913 ;;		line 22 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\atan2f.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  y               4   92[BANK0 ] float 
  2916 ;;  x               4   96[BANK0 ] float 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  iy              4   62[BANK1 ] struct .
  2919 ;;  ix              4   58[BANK1 ] struct .
  2920 ;;  z               4   54[BANK1 ] float 
  2921 ;;  m               1   66[BANK1 ] unsigned char 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  4   92[BANK0 ] float 
  2924 ;; Registers used:
  2925 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2931 ;;      Params:         0       8       0       0       0       0       0
  2932 ;;      Locals:         0       0      25       0       0       0       0
  2933 ;;      Temps:          0       8       0       0       0       0       0
  2934 ;;      Totals:         0      16      25       0       0       0       0
  2935 ;;Total ram usage:       41 bytes
  2936 ;; Hardware stack levels used: 1
  2937 ;; Hardware stack levels required when called: 10
  2938 ;; This function calls:
  2939 ;;		___fladd
  2940 ;;		___fldiv
  2941 ;;		___flneg
  2942 ;;		___flsub
  2943 ;;		___fpclassifyf
  2944 ;;		_atanf
  2945 ;;		_fabsf
  2946 ;; This function is called by:
  2947 ;;		_calculate_angle
  2948 ;;		_Calibration
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text9
  2953   0009A0                     __ptext9:
  2954                           	callstack 0
  2955   0009A0                     _atan2f:
  2956                           	callstack 18
  2957   0009A0  C0E0  F080         	movff	atan2f@x,___fpclassifyf@x
  2958   0009A4  C0E1  F081         	movff	atan2f@x+1,___fpclassifyf@x+1
  2959   0009A8  C0E2  F082         	movff	atan2f@x+2,___fpclassifyf@x+2
  2960   0009AC  C0E3  F083         	movff	atan2f@x+3,___fpclassifyf@x+3
  2961   0009B0  EC2D  F011         	call	___fpclassifyf	;wreg free
  2962   0009B4  0100               	movlb	0	; () banked
  2963   0009B6  5180               	movf	?___fpclassifyf& (0+255),w,b
  2964   0009B8  1181               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2965   0009BA  B4D8               	btfsc	status,2,c
  2966   0009BC  EFE2  F004         	goto	u5701
  2967   0009C0  EFE4  F004         	goto	u5700
  2968   0009C4                     u5701:
  2969   0009C4  EFF8  F004         	goto	l4679
  2970   0009C8                     u5700:
  2971   0009C8                     
  2972                           ; BSR set to: 0
  2973   0009C8  C0DC  F080         	movff	atan2f@y,___fpclassifyf@x
  2974   0009CC  C0DD  F081         	movff	atan2f@y+1,___fpclassifyf@x+1
  2975   0009D0  C0DE  F082         	movff	atan2f@y+2,___fpclassifyf@x+2
  2976   0009D4  C0DF  F083         	movff	atan2f@y+3,___fpclassifyf@x+3
  2977   0009D8  EC2D  F011         	call	___fpclassifyf	;wreg free
  2978   0009DC  0100               	movlb	0	; () banked
  2979   0009DE  5180               	movf	?___fpclassifyf& (0+255),w,b
  2980   0009E0  1181               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2981   0009E2  A4D8               	btfss	status,2,c
  2982   0009E4  EFF6  F004         	goto	u5711
  2983   0009E8  EFF8  F004         	goto	u5710
  2984   0009EC                     u5711:
  2985   0009EC  EF14  F005         	goto	l1020
  2986   0009F0                     u5710:
  2987   0009F0                     l4679:
  2988                           
  2989                           ; BSR set to: 0
  2990   0009F0  C0E0  F0A7         	movff	atan2f@x,___fladd@b
  2991   0009F4  C0E1  F0A8         	movff	atan2f@x+1,___fladd@b+1
  2992   0009F8  C0E2  F0A9         	movff	atan2f@x+2,___fladd@b+2
  2993   0009FC  C0E3  F0AA         	movff	atan2f@x+3,___fladd@b+3
  2994   000A00  C0DC  F0AB         	movff	atan2f@y,___fladd@a
  2995   000A04  C0DD  F0AC         	movff	atan2f@y+1,___fladd@a+1
  2996   000A08  C0DE  F0AD         	movff	atan2f@y+2,___fladd@a+2
  2997   000A0C  C0DF  F0AE         	movff	atan2f@y+3,___fladd@a+3
  2998   000A10  ECE5  F007         	call	___fladd	;wreg free
  2999   000A14  C0A7  F0DC         	movff	?___fladd,?_atan2f
  3000   000A18  C0A8  F0DD         	movff	?___fladd+1,?_atan2f+1
  3001   000A1C  C0A9  F0DE         	movff	?___fladd+2,?_atan2f+2
  3002   000A20  C0AA  F0DF         	movff	?___fladd+3,?_atan2f+3
  3003   000A24  EFE4  F007         	goto	l1023
  3004   000A28                     l1020:
  3005                           
  3006                           ; BSR set to: 0
  3007   000A28  C0E0  F13A         	movff	atan2f@x,atan2f@ix
  3008   000A2C  C0E1  F13B         	movff	atan2f@x+1,atan2f@ix+1
  3009   000A30  C0E2  F13C         	movff	atan2f@x+2,atan2f@ix+2
  3010   000A34  C0E3  F13D         	movff	atan2f@x+3,atan2f@ix+3
  3011   000A38  C0DC  F13E         	movff	atan2f@y,atan2f@iy
  3012   000A3C  C0DD  F13F         	movff	atan2f@y+1,atan2f@iy+1
  3013   000A40  C0DE  F140         	movff	atan2f@y+2,atan2f@iy+2
  3014   000A44  C0DF  F141         	movff	atan2f@y+3,atan2f@iy+3
  3015   000A48                     
  3016                           ; BSR set to: 0
  3017   000A48  0E80               	movlw	128
  3018   000A4A  0101               	movlb	1	; () banked
  3019   000A4C  193C               	xorwf	(atan2f@ix+2)& (0+255),w,b
  3020   000A4E  E109               	bnz	u5721
  3021   000A50  0E3F               	movlw	63
  3022   000A52  193D               	xorwf	(atan2f@ix+3)& (0+255),w,b
  3023   000A54  113A               	iorwf	atan2f@ix& (0+255),w,b
  3024   000A56  113B               	iorwf	(atan2f@ix+1)& (0+255),w,b
  3025   000A58  A4D8               	btfss	status,2,c
  3026   000A5A  EF31  F005         	goto	u5721
  3027   000A5E  EF33  F005         	goto	u5720
  3028   000A62                     u5721:
  3029   000A62  EF47  F005         	goto	l4689
  3030   000A66                     u5720:
  3031   000A66                     
  3032                           ; BSR set to: 1
  3033   000A66  C0DC  F0D8         	movff	atan2f@y,atanf@x
  3034   000A6A  C0DD  F0D9         	movff	atan2f@y+1,atanf@x+1
  3035   000A6E  C0DE  F0DA         	movff	atan2f@y+2,atanf@x+2
  3036   000A72  C0DF  F0DB         	movff	atan2f@y+3,atanf@x+3
  3037   000A76  EC10  F001         	call	_atanf	;wreg free
  3038   000A7A  C0D8  F0DC         	movff	?_atanf,?_atan2f
  3039   000A7E  C0D9  F0DD         	movff	?_atanf+1,?_atan2f+1
  3040   000A82  C0DA  F0DE         	movff	?_atanf+2,?_atan2f+2
  3041   000A86  C0DB  F0DF         	movff	?_atanf+3,?_atan2f+3
  3042   000A8A  EFE4  F007         	goto	l1023
  3043   000A8E                     l4689:
  3044                           
  3045                           ; BSR set to: 1
  3046   000A8E  C13A  F0E4         	movff	atan2f@ix,??_atan2f
  3047   000A92  C13B  F0E5         	movff	atan2f@ix+1,??_atan2f+1
  3048   000A96  C13C  F0E6         	movff	atan2f@ix+2,??_atan2f+2
  3049   000A9A  C13D  F0E7         	movff	atan2f@ix+3,??_atan2f+3
  3050   000A9E  0E1F               	movlw	31
  3051   000AA0  EF58  F005         	goto	u5730
  3052   000AA4                     u5735:
  3053   000AA4  0100               	movlb	0	; () banked
  3054   000AA6  90D8               	bcf	status,0,c
  3055   000AA8  33E7               	rrcf	(??_atan2f+3)& (0+255),f,b
  3056   000AAA  33E6               	rrcf	(??_atan2f+2)& (0+255),f,b
  3057   000AAC  33E5               	rrcf	(??_atan2f+1)& (0+255),f,b
  3058   000AAE  33E4               	rrcf	??_atan2f& (0+255),f,b
  3059   000AB0                     u5730:
  3060   000AB0  2EE8               	decfsz	wreg,f,c
  3061   000AB2  EF52  F005         	goto	u5735
  3062   000AB6  0E02               	movlw	2
  3063   000AB8  17E4               	andwf	??_atan2f& (0+255),f,b
  3064   000ABA  C13E  F0E8         	movff	atan2f@iy,??_atan2f+4
  3065   000ABE  C13F  F0E9         	movff	atan2f@iy+1,??_atan2f+5
  3066   000AC2  C140  F0EA         	movff	atan2f@iy+2,??_atan2f+6
  3067   000AC6  C141  F0EB         	movff	atan2f@iy+3,??_atan2f+7
  3068   000ACA  0E20               	movlw	32
  3069   000ACC  EF6D  F005         	goto	u5740
  3070   000AD0                     u5745:
  3071   000AD0  90D8               	bcf	status,0,c
  3072   000AD2  33EB               	rrcf	(??_atan2f+7)& (0+255),f,b
  3073   000AD4  33EA               	rrcf	(??_atan2f+6)& (0+255),f,b
  3074   000AD6  33E9               	rrcf	(??_atan2f+5)& (0+255),f,b
  3075   000AD8  33E8               	rrcf	(??_atan2f+4)& (0+255),f,b
  3076   000ADA                     u5740:
  3077   000ADA  2EE8               	decfsz	wreg,f,c
  3078   000ADC  EF68  F005         	goto	u5745
  3079   000AE0  51E8               	movf	(??_atan2f+4)& (0+255),w,b
  3080   000AE2  0B01               	andlw	1
  3081   000AE4  11E4               	iorwf	??_atan2f& (0+255),w,b
  3082   000AE6  0101               	movlb	1	; () banked
  3083   000AE8  6F42               	movwf	atan2f@m& (0+255),b
  3084   000AEA                     
  3085                           ; BSR set to: 1
  3086   000AEA  9F3D               	bcf	(atan2f@ix+3)& (0+255),7,b
  3087   000AEC                     
  3088                           ; BSR set to: 1
  3089   000AEC  9F41               	bcf	(atan2f@iy+3)& (0+255),7,b
  3090   000AEE  513E               	movf	atan2f@iy& (0+255),w,b
  3091   000AF0  113F               	iorwf	(atan2f@iy+1)& (0+255),w,b
  3092   000AF2  1140               	iorwf	(atan2f@iy+2)& (0+255),w,b
  3093   000AF4  1141               	iorwf	(atan2f@iy+3)& (0+255),w,b
  3094   000AF6  A4D8               	btfss	status,2,c
  3095   000AF8  EF80  F005         	goto	u5751
  3096   000AFC  EF82  F005         	goto	u5750
  3097   000B00                     u5751:
  3098   000B00  EFB7  F005         	goto	l4709
  3099   000B04                     u5750:
  3100   000B04  EFA4  F005         	goto	l4707
  3101   000B08                     l1028:
  3102                           
  3103                           ; BSR set to: 1
  3104   000B08  C0DC  F0DC         	movff	atan2f@y,?_atan2f
  3105   000B0C  C0DD  F0DD         	movff	atan2f@y+1,?_atan2f+1
  3106   000B10  C0DE  F0DE         	movff	atan2f@y+2,?_atan2f+2
  3107   000B14  C0DF  F0DF         	movff	atan2f@y+3,?_atan2f+3
  3108   000B18  EFE4  F007         	goto	l1023
  3109   000B1C                     l4697:
  3110                           
  3111                           ; BSR set to: 1
  3112   000B1C  0EDB               	movlw	219
  3113   000B1E  0100               	movlb	0	; () banked
  3114   000B20  6FDC               	movwf	?_atan2f& (0+255),b
  3115   000B22  0E0F               	movlw	15
  3116   000B24  6FDD               	movwf	(?_atan2f+1)& (0+255),b
  3117   000B26  0E49               	movlw	73
  3118   000B28  6FDE               	movwf	(?_atan2f+2)& (0+255),b
  3119   000B2A  0E40               	movlw	64
  3120   000B2C  6FDF               	movwf	(?_atan2f+3)& (0+255),b
  3121   000B2E  EFE4  F007         	goto	l1023
  3122   000B32                     l4701:
  3123                           
  3124                           ; BSR set to: 1
  3125   000B32  0EDB               	movlw	219
  3126   000B34  0100               	movlb	0	; () banked
  3127   000B36  6FDC               	movwf	?_atan2f& (0+255),b
  3128   000B38  0E0F               	movlw	15
  3129   000B3A  6FDD               	movwf	(?_atan2f+1)& (0+255),b
  3130   000B3C  0E49               	movlw	73
  3131   000B3E  6FDE               	movwf	(?_atan2f+2)& (0+255),b
  3132   000B40  0EC0               	movlw	192
  3133   000B42  6FDF               	movwf	(?_atan2f+3)& (0+255),b
  3134   000B44  EFE4  F007         	goto	l1023
  3135   000B48                     l4707:
  3136                           
  3137                           ; BSR set to: 1
  3138   000B48  5142               	movf	atan2f@m& (0+255),w,b
  3139                           
  3140                           ; Switch size 1, requested type "simple"
  3141                           ; Number of cases is 4, Range of values is 0 to 3
  3142                           ; switch strategies available:
  3143                           ; Name         Instructions Cycles
  3144                           ; simple_byte           13     7 (average)
  3145                           ;	Chosen strategy is simple_byte
  3146   000B4A  0A00               	xorlw	0	; case 0
  3147   000B4C  B4D8               	btfsc	status,2,c
  3148   000B4E  EF84  F005         	goto	l1028
  3149   000B52  0A01               	xorlw	1	; case 1
  3150   000B54  B4D8               	btfsc	status,2,c
  3151   000B56  EF84  F005         	goto	l1028
  3152   000B5A  0A03               	xorlw	3	; case 2
  3153   000B5C  B4D8               	btfsc	status,2,c
  3154   000B5E  EF8E  F005         	goto	l4697
  3155   000B62  0A01               	xorlw	1	; case 3
  3156   000B64  B4D8               	btfsc	status,2,c
  3157   000B66  EF99  F005         	goto	l4701
  3158   000B6A  EFB7  F005         	goto	l4709
  3159   000B6E                     l4709:
  3160                           
  3161                           ; BSR set to: 1
  3162   000B6E  513A               	movf	atan2f@ix& (0+255),w,b
  3163   000B70  113B               	iorwf	(atan2f@ix+1)& (0+255),w,b
  3164   000B72  113C               	iorwf	(atan2f@ix+2)& (0+255),w,b
  3165   000B74  113D               	iorwf	(atan2f@ix+3)& (0+255),w,b
  3166   000B76  A4D8               	btfss	status,2,c
  3167   000B78  EFC0  F005         	goto	u5761
  3168   000B7C  EFC2  F005         	goto	u5760
  3169   000B80                     u5761:
  3170   000B80  EFDF  F005         	goto	l4719
  3171   000B84                     u5760:
  3172   000B84                     
  3173                           ; BSR set to: 1
  3174   000B84  B142               	btfsc	atan2f@m& (0+255),0,b
  3175   000B86  EFC7  F005         	goto	u5771
  3176   000B8A  EFC9  F005         	goto	u5770
  3177   000B8E                     u5771:
  3178   000B8E  EFD4  F005         	goto	l4715
  3179   000B92                     u5770:
  3180   000B92                     
  3181                           ; BSR set to: 1
  3182   000B92  0EDB               	movlw	219
  3183   000B94  0100               	movlb	0	; () banked
  3184   000B96  6FDC               	movwf	?_atan2f& (0+255),b
  3185   000B98  0E0F               	movlw	15
  3186   000B9A  6FDD               	movwf	(?_atan2f+1)& (0+255),b
  3187   000B9C  0EC9               	movlw	201
  3188   000B9E  6FDE               	movwf	(?_atan2f+2)& (0+255),b
  3189   000BA0  0E3F               	movlw	63
  3190   000BA2  6FDF               	movwf	(?_atan2f+3)& (0+255),b
  3191   000BA4  EFE4  F007         	goto	l1023
  3192   000BA8                     l4715:
  3193                           
  3194                           ; BSR set to: 1
  3195   000BA8  0EDB               	movlw	219
  3196   000BAA  0100               	movlb	0	; () banked
  3197   000BAC  6FDC               	movwf	?_atan2f& (0+255),b
  3198   000BAE  0E0F               	movlw	15
  3199   000BB0  6FDD               	movwf	(?_atan2f+1)& (0+255),b
  3200   000BB2  0EC9               	movlw	201
  3201   000BB4  6FDE               	movwf	(?_atan2f+2)& (0+255),b
  3202   000BB6  0EBF               	movlw	191
  3203   000BB8  6FDF               	movwf	(?_atan2f+3)& (0+255),b
  3204   000BBA  EFE4  F007         	goto	l1023
  3205   000BBE                     l4719:
  3206                           
  3207                           ; BSR set to: 1
  3208   000BBE  0E80               	movlw	128
  3209   000BC0  193C               	xorwf	(atan2f@ix+2)& (0+255),w,b
  3210   000BC2  E109               	bnz	u5781
  3211   000BC4  0E7F               	movlw	127
  3212   000BC6  193D               	xorwf	(atan2f@ix+3)& (0+255),w,b
  3213   000BC8  113A               	iorwf	atan2f@ix& (0+255),w,b
  3214   000BCA  113B               	iorwf	(atan2f@ix+1)& (0+255),w,b
  3215   000BCC  A4D8               	btfss	status,2,c
  3216   000BCE  EFEB  F005         	goto	u5781
  3217   000BD2  EFED  F005         	goto	u5780
  3218   000BD6                     u5781:
  3219   000BD6  EF7B  F006         	goto	l4765
  3220   000BDA                     u5780:
  3221   000BDA                     
  3222                           ; BSR set to: 1
  3223   000BDA  0E80               	movlw	128
  3224   000BDC  1940               	xorwf	(atan2f@iy+2)& (0+255),w,b
  3225   000BDE  E109               	bnz	u5791
  3226   000BE0  0E7F               	movlw	127
  3227   000BE2  1941               	xorwf	(atan2f@iy+3)& (0+255),w,b
  3228   000BE4  113E               	iorwf	atan2f@iy& (0+255),w,b
  3229   000BE6  113F               	iorwf	(atan2f@iy+1)& (0+255),w,b
  3230   000BE8  A4D8               	btfss	status,2,c
  3231   000BEA  EFF9  F005         	goto	u5791
  3232   000BEE  EFFB  F005         	goto	u5790
  3233   000BF2                     u5791:
  3234   000BF2  EF68  F006         	goto	l4763
  3235   000BF6                     u5790:
  3236   000BF6  EF29  F006         	goto	l4743
  3237   000BFA                     l4725:
  3238                           
  3239                           ; BSR set to: 1
  3240   000BFA  0EDB               	movlw	219
  3241   000BFC  0100               	movlb	0	; () banked
  3242   000BFE  6FDC               	movwf	?_atan2f& (0+255),b
  3243   000C00  0E0F               	movlw	15
  3244   000C02  6FDD               	movwf	(?_atan2f+1)& (0+255),b
  3245   000C04  0E49               	movlw	73
  3246   000C06  6FDE               	movwf	(?_atan2f+2)& (0+255),b
  3247   000C08  0E3F               	movlw	63
  3248   000C0A  6FDF               	movwf	(?_atan2f+3)& (0+255),b
  3249   000C0C  EFE4  F007         	goto	l1023
  3250   000C10                     l4729:
  3251                           
  3252                           ; BSR set to: 1
  3253   000C10  0EDB               	movlw	219
  3254   000C12  0100               	movlb	0	; () banked
  3255   000C14  6FDC               	movwf	?_atan2f& (0+255),b
  3256   000C16  0E0F               	movlw	15
  3257   000C18  6FDD               	movwf	(?_atan2f+1)& (0+255),b
  3258   000C1A  0E49               	movlw	73
  3259   000C1C  6FDE               	movwf	(?_atan2f+2)& (0+255),b
  3260   000C1E  0EBF               	movlw	191
  3261   000C20  6FDF               	movwf	(?_atan2f+3)& (0+255),b
  3262   000C22  EFE4  F007         	goto	l1023
  3263   000C26                     l4733:
  3264                           
  3265                           ; BSR set to: 1
  3266   000C26  0EE4               	movlw	228
  3267   000C28  0100               	movlb	0	; () banked
  3268   000C2A  6FDC               	movwf	?_atan2f& (0+255),b
  3269   000C2C  0ECB               	movlw	203
  3270   000C2E  6FDD               	movwf	(?_atan2f+1)& (0+255),b
  3271   000C30  0E16               	movlw	22
  3272   000C32  6FDE               	movwf	(?_atan2f+2)& (0+255),b
  3273   000C34  0E40               	movlw	64
  3274   000C36  6FDF               	movwf	(?_atan2f+3)& (0+255),b
  3275   000C38  EFE4  F007         	goto	l1023
  3276   000C3C                     l4737:
  3277                           
  3278                           ; BSR set to: 1
  3279   000C3C  0EE4               	movlw	228
  3280   000C3E  0100               	movlb	0	; () banked
  3281   000C40  6FDC               	movwf	?_atan2f& (0+255),b
  3282   000C42  0ECB               	movlw	203
  3283   000C44  6FDD               	movwf	(?_atan2f+1)& (0+255),b
  3284   000C46  0E16               	movlw	22
  3285   000C48  6FDE               	movwf	(?_atan2f+2)& (0+255),b
  3286   000C4A  0EC0               	movlw	192
  3287   000C4C  6FDF               	movwf	(?_atan2f+3)& (0+255),b
  3288   000C4E  EFE4  F007         	goto	l1023
  3289   000C52                     l4743:
  3290                           
  3291                           ; BSR set to: 1
  3292   000C52  5142               	movf	atan2f@m& (0+255),w,b
  3293                           
  3294                           ; Switch size 1, requested type "simple"
  3295                           ; Number of cases is 4, Range of values is 0 to 3
  3296                           ; switch strategies available:
  3297                           ; Name         Instructions Cycles
  3298                           ; simple_byte           13     7 (average)
  3299                           ;	Chosen strategy is simple_byte
  3300   000C54  0A00               	xorlw	0	; case 0
  3301   000C56  B4D8               	btfsc	status,2,c
  3302   000C58  EFFD  F005         	goto	l4725
  3303   000C5C  0A01               	xorlw	1	; case 1
  3304   000C5E  B4D8               	btfsc	status,2,c
  3305   000C60  EF08  F006         	goto	l4729
  3306   000C64  0A03               	xorlw	3	; case 2
  3307   000C66  B4D8               	btfsc	status,2,c
  3308   000C68  EF13  F006         	goto	l4733
  3309   000C6C  0A01               	xorlw	1	; case 3
  3310   000C6E  B4D8               	btfsc	status,2,c
  3311   000C70  EF1E  F006         	goto	l4737
  3312   000C74  EF7B  F006         	goto	l4765
  3313   000C78                     l4745:
  3314                           
  3315                           ; BSR set to: 1
  3316   000C78  0E00               	movlw	0
  3317   000C7A  0100               	movlb	0	; () banked
  3318   000C7C  6FDC               	movwf	?_atan2f& (0+255),b
  3319   000C7E  0E00               	movlw	0
  3320   000C80  6FDD               	movwf	(?_atan2f+1)& (0+255),b
  3321   000C82  0E00               	movlw	0
  3322   000C84  6FDE               	movwf	(?_atan2f+2)& (0+255),b
  3323   000C86  0E00               	movlw	0
  3324   000C88  6FDF               	movwf	(?_atan2f+3)& (0+255),b
  3325   000C8A  EFE4  F007         	goto	l1023
  3326   000C8E                     l4749:
  3327                           
  3328                           ; BSR set to: 1
  3329   000C8E  0E00               	movlw	0
  3330   000C90  0100               	movlb	0	; () banked
  3331   000C92  6FDC               	movwf	?_atan2f& (0+255),b
  3332   000C94  0E00               	movlw	0
  3333   000C96  6FDD               	movwf	(?_atan2f+1)& (0+255),b
  3334   000C98  0E00               	movlw	0
  3335   000C9A  6FDE               	movwf	(?_atan2f+2)& (0+255),b
  3336   000C9C  0E80               	movlw	128
  3337   000C9E  6FDF               	movwf	(?_atan2f+3)& (0+255),b
  3338   000CA0  EFE4  F007         	goto	l1023
  3339   000CA4                     l4753:
  3340                           
  3341                           ; BSR set to: 1
  3342   000CA4  0EDB               	movlw	219
  3343   000CA6  0100               	movlb	0	; () banked
  3344   000CA8  6FDC               	movwf	?_atan2f& (0+255),b
  3345   000CAA  0E0F               	movlw	15
  3346   000CAC  6FDD               	movwf	(?_atan2f+1)& (0+255),b
  3347   000CAE  0E49               	movlw	73
  3348   000CB0  6FDE               	movwf	(?_atan2f+2)& (0+255),b
  3349   000CB2  0E40               	movlw	64
  3350   000CB4  6FDF               	movwf	(?_atan2f+3)& (0+255),b
  3351   000CB6  EFE4  F007         	goto	l1023
  3352   000CBA                     l4757:
  3353                           
  3354                           ; BSR set to: 1
  3355   000CBA  0EDB               	movlw	219
  3356   000CBC  0100               	movlb	0	; () banked
  3357   000CBE  6FDC               	movwf	?_atan2f& (0+255),b
  3358   000CC0  0E0F               	movlw	15
  3359   000CC2  6FDD               	movwf	(?_atan2f+1)& (0+255),b
  3360   000CC4  0E49               	movlw	73
  3361   000CC6  6FDE               	movwf	(?_atan2f+2)& (0+255),b
  3362   000CC8  0EC0               	movlw	192
  3363   000CCA  6FDF               	movwf	(?_atan2f+3)& (0+255),b
  3364   000CCC  EFE4  F007         	goto	l1023
  3365   000CD0                     l4763:
  3366                           
  3367                           ; BSR set to: 1
  3368   000CD0  5142               	movf	atan2f@m& (0+255),w,b
  3369                           
  3370                           ; Switch size 1, requested type "simple"
  3371                           ; Number of cases is 4, Range of values is 0 to 3
  3372                           ; switch strategies available:
  3373                           ; Name         Instructions Cycles
  3374                           ; simple_byte           13     7 (average)
  3375                           ;	Chosen strategy is simple_byte
  3376   000CD2  0A00               	xorlw	0	; case 0
  3377   000CD4  B4D8               	btfsc	status,2,c
  3378   000CD6  EF3C  F006         	goto	l4745
  3379   000CDA  0A01               	xorlw	1	; case 1
  3380   000CDC  B4D8               	btfsc	status,2,c
  3381   000CDE  EF47  F006         	goto	l4749
  3382   000CE2  0A03               	xorlw	3	; case 2
  3383   000CE4  B4D8               	btfsc	status,2,c
  3384   000CE6  EF52  F006         	goto	l4753
  3385   000CEA  0A01               	xorlw	1	; case 3
  3386   000CEC  B4D8               	btfsc	status,2,c
  3387   000CEE  EF5D  F006         	goto	l4757
  3388   000CF2  EF7B  F006         	goto	l4765
  3389   000CF6                     l4765:
  3390                           
  3391                           ; BSR set to: 1
  3392   000CF6  0E00               	movlw	0
  3393   000CF8  253A               	addwf	atan2f@ix& (0+255),w,b
  3394   000CFA  0100               	movlb	0	; () banked
  3395   000CFC  6FE4               	movwf	??_atan2f& (0+255),b
  3396   000CFE  0E00               	movlw	0
  3397   000D00  0101               	movlb	1	; () banked
  3398   000D02  213B               	addwfc	(atan2f@ix+1)& (0+255),w,b
  3399   000D04  0100               	movlb	0	; () banked
  3400   000D06  6FE5               	movwf	(??_atan2f+1)& (0+255),b
  3401   000D08  0E00               	movlw	0
  3402   000D0A  0101               	movlb	1	; () banked
  3403   000D0C  213C               	addwfc	(atan2f@ix+2)& (0+255),w,b
  3404   000D0E  0100               	movlb	0	; () banked
  3405   000D10  6FE6               	movwf	(??_atan2f+2)& (0+255),b
  3406   000D12  0E0D               	movlw	13
  3407   000D14  0101               	movlb	1	; () banked
  3408   000D16  213D               	addwfc	(atan2f@ix+3)& (0+255),w,b
  3409   000D18  0100               	movlb	0	; () banked
  3410   000D1A  6FE7               	movwf	(??_atan2f+3)& (0+255),b
  3411   000D1C  0101               	movlb	1	; () banked
  3412   000D1E  513E               	movf	atan2f@iy& (0+255),w,b
  3413   000D20  0100               	movlb	0	; () banked
  3414   000D22  5DE4               	subwf	??_atan2f& (0+255),w,b
  3415   000D24  0101               	movlb	1	; () banked
  3416   000D26  513F               	movf	(atan2f@iy+1)& (0+255),w,b
  3417   000D28  0100               	movlb	0	; () banked
  3418   000D2A  59E5               	subwfb	(??_atan2f+1)& (0+255),w,b
  3419   000D2C  0101               	movlb	1	; () banked
  3420   000D2E  5140               	movf	(atan2f@iy+2)& (0+255),w,b
  3421   000D30  0100               	movlb	0	; () banked
  3422   000D32  59E6               	subwfb	(??_atan2f+2)& (0+255),w,b
  3423   000D34  0101               	movlb	1	; () banked
  3424   000D36  5141               	movf	(atan2f@iy+3)& (0+255),w,b
  3425   000D38  0100               	movlb	0	; () banked
  3426   000D3A  59E7               	subwfb	(??_atan2f+3)& (0+255),w,b
  3427   000D3C  A0D8               	btfss	status,0,c
  3428   000D3E  EFA3  F006         	goto	u5801
  3429   000D42  EFA5  F006         	goto	u5800
  3430   000D46                     u5801:
  3431   000D46  EFB4  F006         	goto	l1054
  3432   000D4A                     u5800:
  3433   000D4A                     
  3434                           ; BSR set to: 0
  3435   000D4A  0E80               	movlw	128
  3436   000D4C  0101               	movlb	1	; () banked
  3437   000D4E  1940               	xorwf	(atan2f@iy+2)& (0+255),w,b
  3438   000D50  E109               	bnz	u5811
  3439   000D52  0E7F               	movlw	127
  3440   000D54  1941               	xorwf	(atan2f@iy+3)& (0+255),w,b
  3441   000D56  113E               	iorwf	atan2f@iy& (0+255),w,b
  3442   000D58  113F               	iorwf	(atan2f@iy+1)& (0+255),w,b
  3443   000D5A  A4D8               	btfss	status,2,c
  3444   000D5C  EFB2  F006         	goto	u5811
  3445   000D60  EFB4  F006         	goto	u5810
  3446   000D64                     u5811:
  3447   000D64  EFD2  F006         	goto	l1052
  3448   000D68                     u5810:
  3449   000D68                     l1054:
  3450   000D68  0101               	movlb	1	; () banked
  3451   000D6A  B142               	btfsc	atan2f@m& (0+255),0,b
  3452   000D6C  EFBA  F006         	goto	u5821
  3453   000D70  EFBC  F006         	goto	u5820
  3454   000D74                     u5821:
  3455   000D74  EFC7  F006         	goto	l4771
  3456   000D78                     u5820:
  3457   000D78                     
  3458                           ; BSR set to: 1
  3459   000D78  0EDB               	movlw	219
  3460   000D7A  0100               	movlb	0	; () banked
  3461   000D7C  6FDC               	movwf	?_atan2f& (0+255),b
  3462   000D7E  0E0F               	movlw	15
  3463   000D80  6FDD               	movwf	(?_atan2f+1)& (0+255),b
  3464   000D82  0EC9               	movlw	201
  3465   000D84  6FDE               	movwf	(?_atan2f+2)& (0+255),b
  3466   000D86  0E3F               	movlw	63
  3467   000D88  6FDF               	movwf	(?_atan2f+3)& (0+255),b
  3468   000D8A  EFE4  F007         	goto	l1023
  3469   000D8E                     l4771:
  3470                           
  3471                           ; BSR set to: 1
  3472   000D8E  0EDB               	movlw	219
  3473   000D90  0100               	movlb	0	; () banked
  3474   000D92  6FDC               	movwf	?_atan2f& (0+255),b
  3475   000D94  0E0F               	movlw	15
  3476   000D96  6FDD               	movwf	(?_atan2f+1)& (0+255),b
  3477   000D98  0EC9               	movlw	201
  3478   000D9A  6FDE               	movwf	(?_atan2f+2)& (0+255),b
  3479   000D9C  0EBF               	movlw	191
  3480   000D9E  6FDF               	movwf	(?_atan2f+3)& (0+255),b
  3481   000DA0  EFE4  F007         	goto	l1023
  3482   000DA4                     l1052:
  3483                           
  3484                           ; BSR set to: 1
  3485   000DA4  A342               	btfss	atan2f@m& (0+255),1,b
  3486   000DA6  EFD7  F006         	goto	u5831
  3487   000DAA  EFD9  F006         	goto	u5830
  3488   000DAE                     u5831:
  3489   000DAE  EF0E  F007         	goto	l4779
  3490   000DB2                     u5830:
  3491   000DB2                     
  3492                           ; BSR set to: 1
  3493   000DB2  0E00               	movlw	0
  3494   000DB4  253E               	addwf	atan2f@iy& (0+255),w,b
  3495   000DB6  0100               	movlb	0	; () banked
  3496   000DB8  6FE4               	movwf	??_atan2f& (0+255),b
  3497   000DBA  0E00               	movlw	0
  3498   000DBC  0101               	movlb	1	; () banked
  3499   000DBE  213F               	addwfc	(atan2f@iy+1)& (0+255),w,b
  3500   000DC0  0100               	movlb	0	; () banked
  3501   000DC2  6FE5               	movwf	(??_atan2f+1)& (0+255),b
  3502   000DC4  0E00               	movlw	0
  3503   000DC6  0101               	movlb	1	; () banked
  3504   000DC8  2140               	addwfc	(atan2f@iy+2)& (0+255),w,b
  3505   000DCA  0100               	movlb	0	; () banked
  3506   000DCC  6FE6               	movwf	(??_atan2f+2)& (0+255),b
  3507   000DCE  0E0D               	movlw	13
  3508   000DD0  0101               	movlb	1	; () banked
  3509   000DD2  2141               	addwfc	(atan2f@iy+3)& (0+255),w,b
  3510   000DD4  0100               	movlb	0	; () banked
  3511   000DD6  6FE7               	movwf	(??_atan2f+3)& (0+255),b
  3512   000DD8  0101               	movlb	1	; () banked
  3513   000DDA  513A               	movf	atan2f@ix& (0+255),w,b
  3514   000DDC  0100               	movlb	0	; () banked
  3515   000DDE  5DE4               	subwf	??_atan2f& (0+255),w,b
  3516   000DE0  0101               	movlb	1	; () banked
  3517   000DE2  513B               	movf	(atan2f@ix+1)& (0+255),w,b
  3518   000DE4  0100               	movlb	0	; () banked
  3519   000DE6  59E5               	subwfb	(??_atan2f+1)& (0+255),w,b
  3520   000DE8  0101               	movlb	1	; () banked
  3521   000DEA  513C               	movf	(atan2f@ix+2)& (0+255),w,b
  3522   000DEC  0100               	movlb	0	; () banked
  3523   000DEE  59E6               	subwfb	(??_atan2f+2)& (0+255),w,b
  3524   000DF0  0101               	movlb	1	; () banked
  3525   000DF2  513D               	movf	(atan2f@ix+3)& (0+255),w,b
  3526   000DF4  0100               	movlb	0	; () banked
  3527   000DF6  59E7               	subwfb	(??_atan2f+3)& (0+255),w,b
  3528   000DF8  B0D8               	btfsc	status,0,c
  3529   000DFA  EF01  F007         	goto	u5841
  3530   000DFE  EF03  F007         	goto	u5840
  3531   000E02                     u5841:
  3532   000E02  EF0E  F007         	goto	l4779
  3533   000E06                     u5840:
  3534   000E06                     
  3535                           ; BSR set to: 0
  3536   000E06  0E00               	movlw	0
  3537   000E08  0101               	movlb	1	; () banked
  3538   000E0A  6F36               	movwf	atan2f@z& (0+255),b
  3539   000E0C  0E00               	movlw	0
  3540   000E0E  6F37               	movwf	(atan2f@z+1)& (0+255),b
  3541   000E10  0E00               	movlw	0
  3542   000E12  6F38               	movwf	(atan2f@z+2)& (0+255),b
  3543   000E14  0E00               	movlw	0
  3544   000E16  6F39               	movwf	(atan2f@z+3)& (0+255),b
  3545   000E18  EFD4  F007         	goto	l4797
  3546   000E1C                     l4779:
  3547   000E1C  C0DC  F0B7         	movff	atan2f@y,___fldiv@b
  3548   000E20  C0DD  F0B8         	movff	atan2f@y+1,___fldiv@b+1
  3549   000E24  C0DE  F0B9         	movff	atan2f@y+2,___fldiv@b+2
  3550   000E28  C0DF  F0BA         	movff	atan2f@y+3,___fldiv@b+3
  3551   000E2C  C0E0  F0BB         	movff	atan2f@x,___fldiv@a
  3552   000E30  C0E1  F0BC         	movff	atan2f@x+1,___fldiv@a+1
  3553   000E34  C0E2  F0BD         	movff	atan2f@x+2,___fldiv@a+2
  3554   000E38  C0E3  F0BE         	movff	atan2f@x+3,___fldiv@a+3
  3555   000E3C  EC55  F00C         	call	___fldiv	;wreg free
  3556   000E40  C0B7  F0D0         	movff	?___fldiv,fabsf@x
  3557   000E44  C0B8  F0D1         	movff	?___fldiv+1,fabsf@x+1
  3558   000E48  C0B9  F0D2         	movff	?___fldiv+2,fabsf@x+2
  3559   000E4C  C0BA  F0D3         	movff	?___fldiv+3,fabsf@x+3
  3560   000E50  EC3F  F016         	call	_fabsf	;wreg free
  3561   000E54  C0D0  F12A         	movff	?_fabsf,_atan2f$2067
  3562   000E58  C0D1  F12B         	movff	?_fabsf+1,_atan2f$2067+1
  3563   000E5C  C0D2  F12C         	movff	?_fabsf+2,_atan2f$2067+2
  3564   000E60  C0D3  F12D         	movff	?_fabsf+3,_atan2f$2067+3
  3565   000E64  C12A  F0D8         	movff	_atan2f$2067,atanf@x
  3566   000E68  C12B  F0D9         	movff	_atan2f$2067+1,atanf@x+1
  3567   000E6C  C12C  F0DA         	movff	_atan2f$2067+2,atanf@x+2
  3568   000E70  C12D  F0DB         	movff	_atan2f$2067+3,atanf@x+3
  3569   000E74  EC10  F001         	call	_atanf	;wreg free
  3570   000E78  C0D8  F136         	movff	?_atanf,atan2f@z
  3571   000E7C  C0D9  F137         	movff	?_atanf+1,atan2f@z+1
  3572   000E80  C0DA  F138         	movff	?_atanf+2,atan2f@z+2
  3573   000E84  C0DB  F139         	movff	?_atanf+3,atan2f@z+3
  3574   000E88  EFD4  F007         	goto	l4797
  3575   000E8C                     l1062:
  3576                           
  3577                           ; BSR set to: 1
  3578   000E8C  C136  F0DC         	movff	atan2f@z,?_atan2f
  3579   000E90  C137  F0DD         	movff	atan2f@z+1,?_atan2f+1
  3580   000E94  C138  F0DE         	movff	atan2f@z+2,?_atan2f+2
  3581   000E98  C139  F0DF         	movff	atan2f@z+3,?_atan2f+3
  3582   000E9C  EFE4  F007         	goto	l1023
  3583   000EA0                     l4783:
  3584                           
  3585                           ; BSR set to: 1
  3586   000EA0  C136  F080         	movff	atan2f@z,___flneg@f1
  3587   000EA4  C137  F081         	movff	atan2f@z+1,___flneg@f1+1
  3588   000EA8  C138  F082         	movff	atan2f@z+2,___flneg@f1+2
  3589   000EAC  C139  F083         	movff	atan2f@z+3,___flneg@f1+3
  3590   000EB0  EC22  F016         	call	___flneg	;wreg free
  3591   000EB4  C080  F0DC         	movff	?___flneg,?_atan2f
  3592   000EB8  C081  F0DD         	movff	?___flneg+1,?_atan2f+1
  3593   000EBC  C082  F0DE         	movff	?___flneg+2,?_atan2f+2
  3594   000EC0  C083  F0DF         	movff	?___flneg+3,?_atan2f+3
  3595   000EC4  EFE4  F007         	goto	l1023
  3596   000EC8                     l4787:
  3597                           
  3598                           ; BSR set to: 1
  3599   000EC8  0E2E               	movlw	46
  3600   000ECA  0100               	movlb	0	; () banked
  3601   000ECC  6FAB               	movwf	___fladd@a& (0+255),b
  3602   000ECE  0EBD               	movlw	189
  3603   000ED0  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  3604   000ED2  0EBB               	movlw	187
  3605   000ED4  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  3606   000ED6  0E33               	movlw	51
  3607   000ED8  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  3608   000EDA  C136  F0A7         	movff	atan2f@z,___fladd@b
  3609   000EDE  C137  F0A8         	movff	atan2f@z+1,___fladd@b+1
  3610   000EE2  C138  F0A9         	movff	atan2f@z+2,___fladd@b+2
  3611   000EE6  C139  F0AA         	movff	atan2f@z+3,___fladd@b+3
  3612   000EEA  ECE5  F007         	call	___fladd	;wreg free
  3613   000EEE  C0A7  F12E         	movff	?___fladd,_atan2f$2068
  3614   000EF2  C0A8  F12F         	movff	?___fladd+1,_atan2f$2068+1
  3615   000EF6  C0A9  F130         	movff	?___fladd+2,_atan2f$2068+2
  3616   000EFA  C0AA  F131         	movff	?___fladd+3,_atan2f$2068+3
  3617   000EFE  0EDB               	movlw	219
  3618   000F00  0100               	movlb	0	; () banked
  3619   000F02  6FB7               	movwf	___flsub@b& (0+255),b
  3620   000F04  0E0F               	movlw	15
  3621   000F06  6FB8               	movwf	(___flsub@b+1)& (0+255),b
  3622   000F08  0E49               	movlw	73
  3623   000F0A  6FB9               	movwf	(___flsub@b+2)& (0+255),b
  3624   000F0C  0E40               	movlw	64
  3625   000F0E  6FBA               	movwf	(___flsub@b+3)& (0+255),b
  3626   000F10  C12E  F0BB         	movff	_atan2f$2068,___flsub@a
  3627   000F14  C12F  F0BC         	movff	_atan2f$2068+1,___flsub@a+1
  3628   000F18  C130  F0BD         	movff	_atan2f$2068+2,___flsub@a+2
  3629   000F1C  C131  F0BE         	movff	_atan2f$2068+3,___flsub@a+3
  3630   000F20  EC5E  F015         	call	___flsub	;wreg free
  3631   000F24  C0B7  F0DC         	movff	?___flsub,?_atan2f
  3632   000F28  C0B8  F0DD         	movff	?___flsub+1,?_atan2f+1
  3633   000F2C  C0B9  F0DE         	movff	?___flsub+2,?_atan2f+2
  3634   000F30  C0BA  F0DF         	movff	?___flsub+3,?_atan2f+3
  3635   000F34  EFE4  F007         	goto	l1023
  3636   000F38                     l4791:
  3637                           
  3638                           ; BSR set to: 1
  3639   000F38  0E2E               	movlw	46
  3640   000F3A  0100               	movlb	0	; () banked
  3641   000F3C  6FAB               	movwf	___fladd@a& (0+255),b
  3642   000F3E  0EBD               	movlw	189
  3643   000F40  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  3644   000F42  0EBB               	movlw	187
  3645   000F44  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  3646   000F46  0E33               	movlw	51
  3647   000F48  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  3648   000F4A  C136  F0A7         	movff	atan2f@z,___fladd@b
  3649   000F4E  C137  F0A8         	movff	atan2f@z+1,___fladd@b+1
  3650   000F52  C138  F0A9         	movff	atan2f@z+2,___fladd@b+2
  3651   000F56  C139  F0AA         	movff	atan2f@z+3,___fladd@b+3
  3652   000F5A  ECE5  F007         	call	___fladd	;wreg free
  3653   000F5E  C0A7  F132         	movff	?___fladd,_atan2f$2069
  3654   000F62  C0A8  F133         	movff	?___fladd+1,_atan2f$2069+1
  3655   000F66  C0A9  F134         	movff	?___fladd+2,_atan2f$2069+2
  3656   000F6A  C0AA  F135         	movff	?___fladd+3,_atan2f$2069+3
  3657   000F6E  C132  F0A7         	movff	_atan2f$2069,___fladd@b
  3658   000F72  C133  F0A8         	movff	_atan2f$2069+1,___fladd@b+1
  3659   000F76  C134  F0A9         	movff	_atan2f$2069+2,___fladd@b+2
  3660   000F7A  C135  F0AA         	movff	_atan2f$2069+3,___fladd@b+3
  3661   000F7E  0EDB               	movlw	219
  3662   000F80  0100               	movlb	0	; () banked
  3663   000F82  6FAB               	movwf	___fladd@a& (0+255),b
  3664   000F84  0E0F               	movlw	15
  3665   000F86  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  3666   000F88  0E49               	movlw	73
  3667   000F8A  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  3668   000F8C  0EC0               	movlw	192
  3669   000F8E  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  3670   000F90  ECE5  F007         	call	___fladd	;wreg free
  3671   000F94  C0A7  F0DC         	movff	?___fladd,?_atan2f
  3672   000F98  C0A8  F0DD         	movff	?___fladd+1,?_atan2f+1
  3673   000F9C  C0A9  F0DE         	movff	?___fladd+2,?_atan2f+2
  3674   000FA0  C0AA  F0DF         	movff	?___fladd+3,?_atan2f+3
  3675   000FA4  EFE4  F007         	goto	l1023
  3676   000FA8                     l4797:
  3677   000FA8  0101               	movlb	1	; () banked
  3678   000FAA  5142               	movf	atan2f@m& (0+255),w,b
  3679                           
  3680                           ; Switch size 1, requested type "simple"
  3681                           ; Number of cases is 3, Range of values is 0 to 2
  3682                           ; switch strategies available:
  3683                           ; Name         Instructions Cycles
  3684                           ; simple_byte           10     6 (average)
  3685                           ;	Chosen strategy is simple_byte
  3686   000FAC  0A00               	xorlw	0	; case 0
  3687   000FAE  B4D8               	btfsc	status,2,c
  3688   000FB0  EF46  F007         	goto	l1062
  3689   000FB4  0A01               	xorlw	1	; case 1
  3690   000FB6  B4D8               	btfsc	status,2,c
  3691   000FB8  EF50  F007         	goto	l4783
  3692   000FBC  0A03               	xorlw	3	; case 2
  3693   000FBE  B4D8               	btfsc	status,2,c
  3694   000FC0  EF64  F007         	goto	l4787
  3695   000FC4  EF9C  F007         	goto	l4791
  3696   000FC8                     l1023:
  3697   000FC8  0012               	return		;funcret
  3698   000FCA                     __end_of_atan2f:
  3699                           	callstack 0
  3700                           
  3701 ;; *************** function _atanf *****************
  3702 ;; Defined at:
  3703 ;;		line 40 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\atanf.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;  x               4   88[BANK0 ] float 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  ix              4   38[BANK1 ] struct .
  3708 ;;  z               4   34[BANK1 ] float 
  3709 ;;  w               4   29[BANK1 ] float 
  3710 ;;  s2              4   16[BANK1 ] float 
  3711 ;;  s1              4   12[BANK1 ] float 
  3712 ;;  id              1   33[BANK1 ] char 
  3713 ;;  sign            1   28[BANK1 ] _Bool 
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  4   88[BANK0 ] float 
  3716 ;; Registers used:
  3717 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3723 ;;      Params:         0       4       0       0       0       0       0
  3724 ;;      Locals:         0       0      42       0       0       0       0
  3725 ;;      Temps:          0       0       0       0       0       0       0
  3726 ;;      Totals:         0       4      42       0       0       0       0
  3727 ;;Total ram usage:       46 bytes
  3728 ;; Hardware stack levels used: 1
  3729 ;; Hardware stack levels required when called: 9
  3730 ;; This function calls:
  3731 ;;		___fladd
  3732 ;;		___fldiv
  3733 ;;		___flmul
  3734 ;;		___flneg
  3735 ;;		___flsub
  3736 ;;		___fpclassifyf
  3737 ;;		_fabsf
  3738 ;; This function is called by:
  3739 ;;		_atan2f
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text10
  3744   000220                     __ptext10:
  3745                           	callstack 0
  3746   000220                     _atanf:
  3747                           	callstack 18
  3748   000220  C0D8  F126         	movff	atanf@x,atanf@ix
  3749   000224  C0D9  F127         	movff	atanf@x+1,atanf@ix+1
  3750   000228  C0DA  F128         	movff	atanf@x+2,atanf@ix+2
  3751   00022C  C0DB  F129         	movff	atanf@x+3,atanf@ix+3
  3752   000230  0101               	movlb	1	; () banked
  3753   000232  BF29               	btfsc	(atanf@ix+3)& (0+255),7,b
  3754   000234  EF1E  F001         	goto	u5471
  3755   000238  EF21  F001         	goto	u5470
  3756   00023C                     u5471:
  3757   00023C  0E01               	movlw	1
  3758   00023E  EF22  F001         	goto	u5480
  3759   000242                     u5470:
  3760   000242  0E00               	movlw	0
  3761   000244                     u5480:
  3762   000244  6F1C               	movwf	atanf@sign& (0+255),b
  3763   000246                     
  3764                           ; BSR set to: 1
  3765   000246  9F29               	bcf	(atanf@ix+3)& (0+255),7,b
  3766   000248                     
  3767                           ; BSR set to: 1
  3768   000248  0E80               	movlw	128
  3769   00024A  5D28               	subwf	(atanf@ix+2)& (0+255),w,b
  3770   00024C  0E4C               	movlw	76
  3771   00024E  5929               	subwfb	(atanf@ix+3)& (0+255),w,b
  3772   000250  A0D8               	btfss	status,0,c
  3773   000252  EF2D  F001         	goto	u5491
  3774   000256  EF2F  F001         	goto	u5490
  3775   00025A                     u5491:
  3776   00025A  EF96  F001         	goto	l4553
  3777   00025E                     u5490:
  3778   00025E                     
  3779                           ; BSR set to: 1
  3780   00025E  C0D8  F080         	movff	atanf@x,___fpclassifyf@x
  3781   000262  C0D9  F081         	movff	atanf@x+1,___fpclassifyf@x+1
  3782   000266  C0DA  F082         	movff	atanf@x+2,___fpclassifyf@x+2
  3783   00026A  C0DB  F083         	movff	atanf@x+3,___fpclassifyf@x+3
  3784   00026E  EC2D  F011         	call	___fpclassifyf	;wreg free
  3785   000272  0100               	movlb	0	; () banked
  3786   000274  5180               	movf	?___fpclassifyf& (0+255),w,b
  3787   000276  1181               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  3788   000278  A4D8               	btfss	status,2,c
  3789   00027A  EF41  F001         	goto	u5501
  3790   00027E  EF43  F001         	goto	u5500
  3791   000282                     u5501:
  3792   000282  EF4D  F001         	goto	l4543
  3793   000286                     u5500:
  3794   000286                     l4541:
  3795   000286  C0D8  F0D8         	movff	atanf@x,?_atanf
  3796   00028A  C0D9  F0D9         	movff	atanf@x+1,?_atanf+1
  3797   00028E  C0DA  F0DA         	movff	atanf@x+2,?_atanf+2
  3798   000292  C0DB  F0DB         	movff	atanf@x+3,?_atanf+3
  3799   000296  EFCF  F004         	goto	l1100
  3800   00029A                     l4543:
  3801                           
  3802                           ; BSR set to: 0
  3803   00029A  0EDB               	movlw	low (_atanhi+12)
  3804   00029C  6EF6               	movwf	tblptrl,c
  3805   00029E  0E7C               	movlw	high (_atanhi+12)
  3806   0002A0  6EF7               	movwf	tblptrh,c
  3807   0002A2                     	if	0	;tblptru may be non-zero
  3808   0002A2                     	endif
  3809   0002A2                     	if	0	;tblptru may be non-zero
  3810   0002A2                     	endif
  3811   0002A2  0009               	tblrd		*+
  3812   0002A4  CFF5 F0A7          	movff	tablat,___fladd@b
  3813   0002A8  0009               	tblrd		*+
  3814   0002AA  CFF5 F0A8          	movff	tablat,___fladd@b+1
  3815   0002AE  0009               	tblrd		*+
  3816   0002B0  CFF5 F0A9          	movff	tablat,___fladd@b+2
  3817   0002B4  000A               	tblrd		*-
  3818   0002B6  CFF5 F0AA          	movff	tablat,___fladd@b+3
  3819   0002BA  0E00               	movlw	0
  3820   0002BC  6FAB               	movwf	___fladd@a& (0+255),b
  3821   0002BE  0E00               	movlw	0
  3822   0002C0  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  3823   0002C2  0E80               	movlw	128
  3824   0002C4  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  3825   0002C6  0E03               	movlw	3
  3826   0002C8  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  3827   0002CA  ECE5  F007         	call	___fladd	;wreg free
  3828   0002CE  C0A7  F122         	movff	?___fladd,atanf@z
  3829   0002D2  C0A8  F123         	movff	?___fladd+1,atanf@z+1
  3830   0002D6  C0A9  F124         	movff	?___fladd+2,atanf@z+2
  3831   0002DA  C0AA  F125         	movff	?___fladd+3,atanf@z+3
  3832   0002DE  0101               	movlb	1	; () banked
  3833   0002E0  511C               	movf	atanf@sign& (0+255),w,b
  3834   0002E2  A4D8               	btfss	status,2,c
  3835   0002E4  EF76  F001         	goto	u5511
  3836   0002E8  EF78  F001         	goto	u5510
  3837   0002EC                     u5511:
  3838   0002EC  EF82  F001         	goto	l4549
  3839   0002F0                     u5510:
  3840   0002F0                     l4547:
  3841                           
  3842                           ; BSR set to: 1
  3843   0002F0  C122  F0D8         	movff	atanf@z,?_atanf
  3844   0002F4  C123  F0D9         	movff	atanf@z+1,?_atanf+1
  3845   0002F8  C124  F0DA         	movff	atanf@z+2,?_atanf+2
  3846   0002FC  C125  F0DB         	movff	atanf@z+3,?_atanf+3
  3847   000300  EFCF  F004         	goto	l1100
  3848   000304                     l4549:
  3849                           
  3850                           ; BSR set to: 1
  3851   000304  C122  F080         	movff	atanf@z,___flneg@f1
  3852   000308  C123  F081         	movff	atanf@z+1,___flneg@f1+1
  3853   00030C  C124  F082         	movff	atanf@z+2,___flneg@f1+2
  3854   000310  C125  F083         	movff	atanf@z+3,___flneg@f1+3
  3855   000314  EC22  F016         	call	___flneg	;wreg free
  3856   000318  C080  F0D8         	movff	?___flneg,?_atanf
  3857   00031C  C081  F0D9         	movff	?___flneg+1,?_atanf+1
  3858   000320  C082  F0DA         	movff	?___flneg+2,?_atanf+2
  3859   000324  C083  F0DB         	movff	?___flneg+3,?_atanf+3
  3860   000328  EFCF  F004         	goto	l1100
  3861   00032C                     l4553:
  3862                           
  3863                           ; BSR set to: 1
  3864   00032C  0EE0               	movlw	224
  3865   00032E  5D28               	subwf	(atanf@ix+2)& (0+255),w,b
  3866   000330  0E3E               	movlw	62
  3867   000332  5929               	subwfb	(atanf@ix+3)& (0+255),w,b
  3868   000334  B0D8               	btfsc	status,0,c
  3869   000336  EF9F  F001         	goto	u5521
  3870   00033A  EFA1  F001         	goto	u5520
  3871   00033E                     u5521:
  3872   00033E  EFB1  F001         	goto	l4559
  3873   000342                     u5520:
  3874   000342                     
  3875                           ; BSR set to: 1
  3876   000342  0E80               	movlw	128
  3877   000344  5D28               	subwf	(atanf@ix+2)& (0+255),w,b
  3878   000346  0E39               	movlw	57
  3879   000348  5929               	subwfb	(atanf@ix+3)& (0+255),w,b
  3880   00034A  B0D8               	btfsc	status,0,c
  3881   00034C  EFAA  F001         	goto	u5531
  3882   000350  EFAC  F001         	goto	u5530
  3883   000354                     u5531:
  3884   000354  EFAE  F001         	goto	l1106
  3885   000358                     u5530:
  3886   000358  EF43  F001         	goto	l4541
  3887   00035C                     l1106:
  3888                           
  3889                           ; BSR set to: 1
  3890   00035C  6921               	setf	atanf@id& (0+255),b
  3891   00035E  EFF1  F002         	goto	l4583
  3892   000362                     l4559:
  3893                           
  3894                           ; BSR set to: 1
  3895   000362  C0D8  F0D0         	movff	atanf@x,fabsf@x
  3896   000366  C0D9  F0D1         	movff	atanf@x+1,fabsf@x+1
  3897   00036A  C0DA  F0D2         	movff	atanf@x+2,fabsf@x+2
  3898   00036E  C0DB  F0D3         	movff	atanf@x+3,fabsf@x+3
  3899   000372  EC3F  F016         	call	_fabsf	;wreg free
  3900   000376  C0D0  F0D8         	movff	?_fabsf,atanf@x
  3901   00037A  C0D1  F0D9         	movff	?_fabsf+1,atanf@x+1
  3902   00037E  C0D2  F0DA         	movff	?_fabsf+2,atanf@x+2
  3903   000382  C0D3  F0DB         	movff	?_fabsf+3,atanf@x+3
  3904   000386  0E98               	movlw	152
  3905   000388  0101               	movlb	1	; () banked
  3906   00038A  5D28               	subwf	(atanf@ix+2)& (0+255),w,b
  3907   00038C  0E3F               	movlw	63
  3908   00038E  5929               	subwfb	(atanf@ix+3)& (0+255),w,b
  3909   000390  B0D8               	btfsc	status,0,c
  3910   000392  EFCD  F001         	goto	u5541
  3911   000396  EFCF  F001         	goto	u5540
  3912   00039A                     u5541:
  3913   00039A  EF73  F002         	goto	l4573
  3914   00039E                     u5540:
  3915   00039E                     
  3916                           ; BSR set to: 1
  3917   00039E  0E30               	movlw	48
  3918   0003A0  5D28               	subwf	(atanf@ix+2)& (0+255),w,b
  3919   0003A2  0E3F               	movlw	63
  3920   0003A4  5929               	subwfb	(atanf@ix+3)& (0+255),w,b
  3921   0003A6  B0D8               	btfsc	status,0,c
  3922   0003A8  EFD8  F001         	goto	u5551
  3923   0003AC  EFDA  F001         	goto	u5550
  3924   0003B0                     u5551:
  3925   0003B0  EF2F  F002         	goto	l4569
  3926   0003B4                     u5550:
  3927   0003B4                     
  3928                           ; BSR set to: 1
  3929   0003B4  6B21               	clrf	atanf@id& (0+255),b
  3930   0003B6                     
  3931                           ; BSR set to: 1
  3932   0003B6  0E00               	movlw	0
  3933   0003B8  0100               	movlb	0	; () banked
  3934   0003BA  6FAB               	movwf	___fladd@a& (0+255),b
  3935   0003BC  0E00               	movlw	0
  3936   0003BE  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  3937   0003C0  0E80               	movlw	128
  3938   0003C2  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  3939   0003C4  0EBF               	movlw	191
  3940   0003C6  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  3941   0003C8  0E00               	movlw	0
  3942   0003CA  6F92               	movwf	___flmul@a& (0+255),b
  3943   0003CC  0E00               	movlw	0
  3944   0003CE  6F93               	movwf	(___flmul@a+1)& (0+255),b
  3945   0003D0  0E00               	movlw	0
  3946   0003D2  6F94               	movwf	(___flmul@a+2)& (0+255),b
  3947   0003D4  0E40               	movlw	64
  3948   0003D6  6F95               	movwf	(___flmul@a+3)& (0+255),b
  3949   0003D8  C0D8  F08E         	movff	atanf@x,___flmul@b
  3950   0003DC  C0D9  F08F         	movff	atanf@x+1,___flmul@b+1
  3951   0003E0  C0DA  F090         	movff	atanf@x+2,___flmul@b+2
  3952   0003E4  C0DB  F091         	movff	atanf@x+3,___flmul@b+3
  3953   0003E8  EC41  F00A         	call	___flmul	;wreg free
  3954   0003EC  C08E  F0A7         	movff	?___flmul,___fladd@b
  3955   0003F0  C08F  F0A8         	movff	?___flmul+1,___fladd@b+1
  3956   0003F4  C090  F0A9         	movff	?___flmul+2,___fladd@b+2
  3957   0003F8  C091  F0AA         	movff	?___flmul+3,___fladd@b+3
  3958   0003FC  ECE5  F007         	call	___fladd	;wreg free
  3959   000400  C0A7  F0B7         	movff	?___fladd,___fldiv@b
  3960   000404  C0A8  F0B8         	movff	?___fladd+1,___fldiv@b+1
  3961   000408  C0A9  F0B9         	movff	?___fladd+2,___fldiv@b+2
  3962   00040C  C0AA  F0BA         	movff	?___fladd+3,___fldiv@b+3
  3963   000410  0E00               	movlw	0
  3964   000412  0100               	movlb	0	; () banked
  3965   000414  6FAB               	movwf	___fladd@a& (0+255),b
  3966   000416  0E00               	movlw	0
  3967   000418  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  3968   00041A  0E00               	movlw	0
  3969   00041C  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  3970   00041E  0E40               	movlw	64
  3971   000420  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  3972   000422  C0D8  F0A7         	movff	atanf@x,___fladd@b
  3973   000426  C0D9  F0A8         	movff	atanf@x+1,___fladd@b+1
  3974   00042A  C0DA  F0A9         	movff	atanf@x+2,___fladd@b+2
  3975   00042E  C0DB  F0AA         	movff	atanf@x+3,___fladd@b+3
  3976   000432  ECE5  F007         	call	___fladd	;wreg free
  3977   000436  C0A7  F0BB         	movff	?___fladd,___fldiv@a
  3978   00043A  C0A8  F0BC         	movff	?___fladd+1,___fldiv@a+1
  3979   00043E  C0A9  F0BD         	movff	?___fladd+2,___fldiv@a+2
  3980   000442  C0AA  F0BE         	movff	?___fladd+3,___fldiv@a+3
  3981   000446  EC55  F00C         	call	___fldiv	;wreg free
  3982   00044A  C0B7  F0D8         	movff	?___fldiv,atanf@x
  3983   00044E  C0B8  F0D9         	movff	?___fldiv+1,atanf@x+1
  3984   000452  C0B9  F0DA         	movff	?___fldiv+2,atanf@x+2
  3985   000456  C0BA  F0DB         	movff	?___fldiv+3,atanf@x+3
  3986   00045A  EFF1  F002         	goto	l4583
  3987   00045E                     l4569:
  3988                           
  3989                           ; BSR set to: 1
  3990   00045E  0E01               	movlw	1
  3991   000460  6F21               	movwf	atanf@id& (0+255),b
  3992   000462                     
  3993                           ; BSR set to: 1
  3994   000462  0E00               	movlw	0
  3995   000464  0100               	movlb	0	; () banked
  3996   000466  6FAB               	movwf	___fladd@a& (0+255),b
  3997   000468  0E00               	movlw	0
  3998   00046A  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  3999   00046C  0E80               	movlw	128
  4000   00046E  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  4001   000470  0EBF               	movlw	191
  4002   000472  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  4003   000474  C0D8  F0A7         	movff	atanf@x,___fladd@b
  4004   000478  C0D9  F0A8         	movff	atanf@x+1,___fladd@b+1
  4005   00047C  C0DA  F0A9         	movff	atanf@x+2,___fladd@b+2
  4006   000480  C0DB  F0AA         	movff	atanf@x+3,___fladd@b+3
  4007   000484  ECE5  F007         	call	___fladd	;wreg free
  4008   000488  C0A7  F0B7         	movff	?___fladd,___fldiv@b
  4009   00048C  C0A8  F0B8         	movff	?___fladd+1,___fldiv@b+1
  4010   000490  C0A9  F0B9         	movff	?___fladd+2,___fldiv@b+2
  4011   000494  C0AA  F0BA         	movff	?___fladd+3,___fldiv@b+3
  4012   000498  0E00               	movlw	0
  4013   00049A  0100               	movlb	0	; () banked
  4014   00049C  6FAB               	movwf	___fladd@a& (0+255),b
  4015   00049E  0E00               	movlw	0
  4016   0004A0  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  4017   0004A2  0E80               	movlw	128
  4018   0004A4  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  4019   0004A6  0E3F               	movlw	63
  4020   0004A8  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  4021   0004AA  C0D8  F0A7         	movff	atanf@x,___fladd@b
  4022   0004AE  C0D9  F0A8         	movff	atanf@x+1,___fladd@b+1
  4023   0004B2  C0DA  F0A9         	movff	atanf@x+2,___fladd@b+2
  4024   0004B6  C0DB  F0AA         	movff	atanf@x+3,___fladd@b+3
  4025   0004BA  ECE5  F007         	call	___fladd	;wreg free
  4026   0004BE  C0A7  F0BB         	movff	?___fladd,___fldiv@a
  4027   0004C2  C0A8  F0BC         	movff	?___fladd+1,___fldiv@a+1
  4028   0004C6  C0A9  F0BD         	movff	?___fladd+2,___fldiv@a+2
  4029   0004CA  C0AA  F0BE         	movff	?___fladd+3,___fldiv@a+3
  4030   0004CE  EC55  F00C         	call	___fldiv	;wreg free
  4031   0004D2  C0B7  F0D8         	movff	?___fldiv,atanf@x
  4032   0004D6  C0B8  F0D9         	movff	?___fldiv+1,atanf@x+1
  4033   0004DA  C0B9  F0DA         	movff	?___fldiv+2,atanf@x+2
  4034   0004DE  C0BA  F0DB         	movff	?___fldiv+3,atanf@x+3
  4035   0004E2  EFF1  F002         	goto	l4583
  4036   0004E6                     l4573:
  4037                           
  4038                           ; BSR set to: 1
  4039   0004E6  0E1C               	movlw	28
  4040   0004E8  5D28               	subwf	(atanf@ix+2)& (0+255),w,b
  4041   0004EA  0E40               	movlw	64
  4042   0004EC  5929               	subwfb	(atanf@ix+3)& (0+255),w,b
  4043   0004EE  B0D8               	btfsc	status,0,c
  4044   0004F0  EF7C  F002         	goto	u5561
  4045   0004F4  EF7E  F002         	goto	u5560
  4046   0004F8                     u5561:
  4047   0004F8  EFD4  F002         	goto	l4579
  4048   0004FC                     u5560:
  4049   0004FC                     
  4050                           ; BSR set to: 1
  4051   0004FC  0E02               	movlw	2
  4052   0004FE  6F21               	movwf	atanf@id& (0+255),b
  4053   000500                     
  4054                           ; BSR set to: 1
  4055   000500  0E00               	movlw	0
  4056   000502  0100               	movlb	0	; () banked
  4057   000504  6FAB               	movwf	___fladd@a& (0+255),b
  4058   000506  0E00               	movlw	0
  4059   000508  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  4060   00050A  0EC0               	movlw	192
  4061   00050C  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  4062   00050E  0EBF               	movlw	191
  4063   000510  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  4064   000512  C0D8  F0A7         	movff	atanf@x,___fladd@b
  4065   000516  C0D9  F0A8         	movff	atanf@x+1,___fladd@b+1
  4066   00051A  C0DA  F0A9         	movff	atanf@x+2,___fladd@b+2
  4067   00051E  C0DB  F0AA         	movff	atanf@x+3,___fladd@b+3
  4068   000522  ECE5  F007         	call	___fladd	;wreg free
  4069   000526  C0A7  F0B7         	movff	?___fladd,___fldiv@b
  4070   00052A  C0A8  F0B8         	movff	?___fladd+1,___fldiv@b+1
  4071   00052E  C0A9  F0B9         	movff	?___fladd+2,___fldiv@b+2
  4072   000532  C0AA  F0BA         	movff	?___fladd+3,___fldiv@b+3
  4073   000536  0E00               	movlw	0
  4074   000538  0100               	movlb	0	; () banked
  4075   00053A  6FAB               	movwf	___fladd@a& (0+255),b
  4076   00053C  0E00               	movlw	0
  4077   00053E  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  4078   000540  0E80               	movlw	128
  4079   000542  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  4080   000544  0E3F               	movlw	63
  4081   000546  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  4082   000548  0E00               	movlw	0
  4083   00054A  6F92               	movwf	___flmul@a& (0+255),b
  4084   00054C  0E00               	movlw	0
  4085   00054E  6F93               	movwf	(___flmul@a+1)& (0+255),b
  4086   000550  0EC0               	movlw	192
  4087   000552  6F94               	movwf	(___flmul@a+2)& (0+255),b
  4088   000554  0E3F               	movlw	63
  4089   000556  6F95               	movwf	(___flmul@a+3)& (0+255),b
  4090   000558  C0D8  F08E         	movff	atanf@x,___flmul@b
  4091   00055C  C0D9  F08F         	movff	atanf@x+1,___flmul@b+1
  4092   000560  C0DA  F090         	movff	atanf@x+2,___flmul@b+2
  4093   000564  C0DB  F091         	movff	atanf@x+3,___flmul@b+3
  4094   000568  EC41  F00A         	call	___flmul	;wreg free
  4095   00056C  C08E  F0A7         	movff	?___flmul,___fladd@b
  4096   000570  C08F  F0A8         	movff	?___flmul+1,___fladd@b+1
  4097   000574  C090  F0A9         	movff	?___flmul+2,___fladd@b+2
  4098   000578  C091  F0AA         	movff	?___flmul+3,___fladd@b+3
  4099   00057C  ECE5  F007         	call	___fladd	;wreg free
  4100   000580  C0A7  F0BB         	movff	?___fladd,___fldiv@a
  4101   000584  C0A8  F0BC         	movff	?___fladd+1,___fldiv@a+1
  4102   000588  C0A9  F0BD         	movff	?___fladd+2,___fldiv@a+2
  4103   00058C  C0AA  F0BE         	movff	?___fladd+3,___fldiv@a+3
  4104   000590  EC55  F00C         	call	___fldiv	;wreg free
  4105   000594  C0B7  F0D8         	movff	?___fldiv,atanf@x
  4106   000598  C0B8  F0D9         	movff	?___fldiv+1,atanf@x+1
  4107   00059C  C0B9  F0DA         	movff	?___fldiv+2,atanf@x+2
  4108   0005A0  C0BA  F0DB         	movff	?___fldiv+3,atanf@x+3
  4109   0005A4  EFF1  F002         	goto	l4583
  4110   0005A8                     l4579:
  4111                           
  4112                           ; BSR set to: 1
  4113   0005A8  0E03               	movlw	3
  4114   0005AA  6F21               	movwf	atanf@id& (0+255),b
  4115   0005AC                     
  4116                           ; BSR set to: 1
  4117   0005AC  0E00               	movlw	0
  4118   0005AE  0100               	movlb	0	; () banked
  4119   0005B0  6FB7               	movwf	___fldiv@b& (0+255),b
  4120   0005B2  0E00               	movlw	0
  4121   0005B4  6FB8               	movwf	(___fldiv@b+1)& (0+255),b
  4122   0005B6  0E80               	movlw	128
  4123   0005B8  6FB9               	movwf	(___fldiv@b+2)& (0+255),b
  4124   0005BA  0EBF               	movlw	191
  4125   0005BC  6FBA               	movwf	(___fldiv@b+3)& (0+255),b
  4126   0005BE  C0D8  F0BB         	movff	atanf@x,___fldiv@a
  4127   0005C2  C0D9  F0BC         	movff	atanf@x+1,___fldiv@a+1
  4128   0005C6  C0DA  F0BD         	movff	atanf@x+2,___fldiv@a+2
  4129   0005CA  C0DB  F0BE         	movff	atanf@x+3,___fldiv@a+3
  4130   0005CE  EC55  F00C         	call	___fldiv	;wreg free
  4131   0005D2  C0B7  F0D8         	movff	?___fldiv,atanf@x
  4132   0005D6  C0B8  F0D9         	movff	?___fldiv+1,atanf@x+1
  4133   0005DA  C0B9  F0DA         	movff	?___fldiv+2,atanf@x+2
  4134   0005DE  C0BA  F0DB         	movff	?___fldiv+3,atanf@x+3
  4135   0005E2                     l4583:
  4136   0005E2  C0D8  F08E         	movff	atanf@x,___flmul@b
  4137   0005E6  C0D9  F08F         	movff	atanf@x+1,___flmul@b+1
  4138   0005EA  C0DA  F090         	movff	atanf@x+2,___flmul@b+2
  4139   0005EE  C0DB  F091         	movff	atanf@x+3,___flmul@b+3
  4140   0005F2  C0D8  F092         	movff	atanf@x,___flmul@a
  4141   0005F6  C0D9  F093         	movff	atanf@x+1,___flmul@a+1
  4142   0005FA  C0DA  F094         	movff	atanf@x+2,___flmul@a+2
  4143   0005FE  C0DB  F095         	movff	atanf@x+3,___flmul@a+3
  4144   000602  EC41  F00A         	call	___flmul	;wreg free
  4145   000606  C08E  F122         	movff	?___flmul,atanf@z
  4146   00060A  C08F  F123         	movff	?___flmul+1,atanf@z+1
  4147   00060E  C090  F124         	movff	?___flmul+2,atanf@z+2
  4148   000612  C091  F125         	movff	?___flmul+3,atanf@z+3
  4149   000616  C122  F08E         	movff	atanf@z,___flmul@b
  4150   00061A  C123  F08F         	movff	atanf@z+1,___flmul@b+1
  4151   00061E  C124  F090         	movff	atanf@z+2,___flmul@b+2
  4152   000622  C125  F091         	movff	atanf@z+3,___flmul@b+3
  4153   000626  C122  F092         	movff	atanf@z,___flmul@a
  4154   00062A  C123  F093         	movff	atanf@z+1,___flmul@a+1
  4155   00062E  C124  F094         	movff	atanf@z+2,___flmul@a+2
  4156   000632  C125  F095         	movff	atanf@z+3,___flmul@a+3
  4157   000636  EC41  F00A         	call	___flmul	;wreg free
  4158   00063A  C08E  F11D         	movff	?___flmul,atanf@w
  4159   00063E  C08F  F11E         	movff	?___flmul+1,atanf@w+1
  4160   000642  C090  F11F         	movff	?___flmul+2,atanf@w+2
  4161   000646  C091  F120         	movff	?___flmul+3,atanf@w+3
  4162   00064A  0E0D               	movlw	13
  4163   00064C  0100               	movlb	0	; () banked
  4164   00064E  6FAB               	movwf	___fladd@a& (0+255),b
  4165   000650  0EF5               	movlw	245
  4166   000652  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  4167   000654  0E11               	movlw	17
  4168   000656  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  4169   000658  0E3E               	movlw	62
  4170   00065A  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  4171   00065C  0E25               	movlw	37
  4172   00065E  6F92               	movwf	___flmul@a& (0+255),b
  4173   000660  0EAC               	movlw	172
  4174   000662  6F93               	movwf	(___flmul@a+1)& (0+255),b
  4175   000664  0E7C               	movlw	124
  4176   000666  6F94               	movwf	(___flmul@a+2)& (0+255),b
  4177   000668  0E3D               	movlw	61
  4178   00066A  6F95               	movwf	(___flmul@a+3)& (0+255),b
  4179   00066C  C11D  F08E         	movff	atanf@w,___flmul@b
  4180   000670  C11E  F08F         	movff	atanf@w+1,___flmul@b+1
  4181   000674  C11F  F090         	movff	atanf@w+2,___flmul@b+2
  4182   000678  C120  F091         	movff	atanf@w+3,___flmul@b+3
  4183   00067C  EC41  F00A         	call	___flmul	;wreg free
  4184   000680  C08E  F0A7         	movff	?___flmul,___fladd@b
  4185   000684  C08F  F0A8         	movff	?___flmul+1,___fladd@b+1
  4186   000688  C090  F0A9         	movff	?___flmul+2,___fladd@b+2
  4187   00068C  C091  F0AA         	movff	?___flmul+3,___fladd@b+3
  4188   000690  ECE5  F007         	call	___fladd	;wreg free
  4189   000694  C0A7  F114         	movff	?___fladd,_atanf$2070
  4190   000698  C0A8  F115         	movff	?___fladd+1,_atanf$2070+1
  4191   00069C  C0A9  F116         	movff	?___fladd+2,_atanf$2070+2
  4192   0006A0  C0AA  F117         	movff	?___fladd+3,_atanf$2070+3
  4193   0006A4  0EA9               	movlw	169
  4194   0006A6  0100               	movlb	0	; () banked
  4195   0006A8  6FAB               	movwf	___fladd@a& (0+255),b
  4196   0006AA  0EAA               	movlw	170
  4197   0006AC  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  4198   0006AE  0EAA               	movlw	170
  4199   0006B0  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  4200   0006B2  0E3E               	movlw	62
  4201   0006B4  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  4202   0006B6  C11D  F092         	movff	atanf@w,___flmul@a
  4203   0006BA  C11E  F093         	movff	atanf@w+1,___flmul@a+1
  4204   0006BE  C11F  F094         	movff	atanf@w+2,___flmul@a+2
  4205   0006C2  C120  F095         	movff	atanf@w+3,___flmul@a+3
  4206   0006C6  C114  F08E         	movff	_atanf$2070,___flmul@b
  4207   0006CA  C115  F08F         	movff	_atanf$2070+1,___flmul@b+1
  4208   0006CE  C116  F090         	movff	_atanf$2070+2,___flmul@b+2
  4209   0006D2  C117  F091         	movff	_atanf$2070+3,___flmul@b+3
  4210   0006D6  EC41  F00A         	call	___flmul	;wreg free
  4211   0006DA  C08E  F0A7         	movff	?___flmul,___fladd@b
  4212   0006DE  C08F  F0A8         	movff	?___flmul+1,___fladd@b+1
  4213   0006E2  C090  F0A9         	movff	?___flmul+2,___fladd@b+2
  4214   0006E6  C091  F0AA         	movff	?___flmul+3,___fladd@b+3
  4215   0006EA  ECE5  F007         	call	___fladd	;wreg free
  4216   0006EE  C0A7  F100         	movff	?___fladd,_atanf$2071
  4217   0006F2  C0A8  F101         	movff	?___fladd+1,_atanf$2071+1
  4218   0006F6  C0A9  F102         	movff	?___fladd+2,_atanf$2071+2
  4219   0006FA  C0AA  F103         	movff	?___fladd+3,_atanf$2071+3
  4220   0006FE  C100  F08E         	movff	_atanf$2071,___flmul@b
  4221   000702  C101  F08F         	movff	_atanf$2071+1,___flmul@b+1
  4222   000706  C102  F090         	movff	_atanf$2071+2,___flmul@b+2
  4223   00070A  C103  F091         	movff	_atanf$2071+3,___flmul@b+3
  4224   00070E  C122  F092         	movff	atanf@z,___flmul@a
  4225   000712  C123  F093         	movff	atanf@z+1,___flmul@a+1
  4226   000716  C124  F094         	movff	atanf@z+2,___flmul@a+2
  4227   00071A  C125  F095         	movff	atanf@z+3,___flmul@a+3
  4228   00071E  EC41  F00A         	call	___flmul	;wreg free
  4229   000722  C08E  F10C         	movff	?___flmul,atanf@s1
  4230   000726  C08F  F10D         	movff	?___flmul+1,atanf@s1+1
  4231   00072A  C090  F10E         	movff	?___flmul+2,atanf@s1+2
  4232   00072E  C091  F10F         	movff	?___flmul+3,atanf@s1+3
  4233   000732  0E98               	movlw	152
  4234   000734  0100               	movlb	0	; () banked
  4235   000736  6FAB               	movwf	___fladd@a& (0+255),b
  4236   000738  0ECA               	movlw	202
  4237   00073A  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  4238   00073C  0E4C               	movlw	76
  4239   00073E  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  4240   000740  0EBE               	movlw	190
  4241   000742  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  4242   000744  0E47               	movlw	71
  4243   000746  6F92               	movwf	___flmul@a& (0+255),b
  4244   000748  0E12               	movlw	18
  4245   00074A  6F93               	movwf	(___flmul@a+1)& (0+255),b
  4246   00074C  0EDA               	movlw	218
  4247   00074E  6F94               	movwf	(___flmul@a+2)& (0+255),b
  4248   000750  0EBD               	movlw	189
  4249   000752  6F95               	movwf	(___flmul@a+3)& (0+255),b
  4250   000754  C11D  F08E         	movff	atanf@w,___flmul@b
  4251   000758  C11E  F08F         	movff	atanf@w+1,___flmul@b+1
  4252   00075C  C11F  F090         	movff	atanf@w+2,___flmul@b+2
  4253   000760  C120  F091         	movff	atanf@w+3,___flmul@b+3
  4254   000764  EC41  F00A         	call	___flmul	;wreg free
  4255   000768  C08E  F0A7         	movff	?___flmul,___fladd@b
  4256   00076C  C08F  F0A8         	movff	?___flmul+1,___fladd@b+1
  4257   000770  C090  F0A9         	movff	?___flmul+2,___fladd@b+2
  4258   000774  C091  F0AA         	movff	?___flmul+3,___fladd@b+3
  4259   000778  ECE5  F007         	call	___fladd	;wreg free
  4260   00077C  C0A7  F114         	movff	?___fladd,_atanf$2070
  4261   000780  C0A8  F115         	movff	?___fladd+1,_atanf$2070+1
  4262   000784  C0A9  F116         	movff	?___fladd+2,_atanf$2070+2
  4263   000788  C0AA  F117         	movff	?___fladd+3,_atanf$2070+3
  4264   00078C  C114  F08E         	movff	_atanf$2070,___flmul@b
  4265   000790  C115  F08F         	movff	_atanf$2070+1,___flmul@b+1
  4266   000794  C116  F090         	movff	_atanf$2070+2,___flmul@b+2
  4267   000798  C117  F091         	movff	_atanf$2070+3,___flmul@b+3
  4268   00079C  C11D  F092         	movff	atanf@w,___flmul@a
  4269   0007A0  C11E  F093         	movff	atanf@w+1,___flmul@a+1
  4270   0007A4  C11F  F094         	movff	atanf@w+2,___flmul@a+2
  4271   0007A8  C120  F095         	movff	atanf@w+3,___flmul@a+3
  4272   0007AC  EC41  F00A         	call	___flmul	;wreg free
  4273   0007B0  C08E  F110         	movff	?___flmul,atanf@s2
  4274   0007B4  C08F  F111         	movff	?___flmul+1,atanf@s2+1
  4275   0007B8  C090  F112         	movff	?___flmul+2,atanf@s2+2
  4276   0007BC  C091  F113         	movff	?___flmul+3,atanf@s2+3
  4277   0007C0  0101               	movlb	1	; () banked
  4278   0007C2  BF21               	btfsc	atanf@id& (0+255),7,b
  4279   0007C4  EFE8  F003         	goto	u5570
  4280   0007C8  EFE6  F003         	goto	u5571
  4281   0007CC                     u5571:
  4282   0007CC  EF30  F004         	goto	l4605
  4283   0007D0                     u5570:
  4284   0007D0                     
  4285                           ; BSR set to: 1
  4286   0007D0  C0D8  F092         	movff	atanf@x,___flmul@a
  4287   0007D4  C0D9  F093         	movff	atanf@x+1,___flmul@a+1
  4288   0007D8  C0DA  F094         	movff	atanf@x+2,___flmul@a+2
  4289   0007DC  C0DB  F095         	movff	atanf@x+3,___flmul@a+3
  4290   0007E0  C110  F0AB         	movff	atanf@s2,___fladd@a
  4291   0007E4  C111  F0AC         	movff	atanf@s2+1,___fladd@a+1
  4292   0007E8  C112  F0AD         	movff	atanf@s2+2,___fladd@a+2
  4293   0007EC  C113  F0AE         	movff	atanf@s2+3,___fladd@a+3
  4294   0007F0  C10C  F0A7         	movff	atanf@s1,___fladd@b
  4295   0007F4  C10D  F0A8         	movff	atanf@s1+1,___fladd@b+1
  4296   0007F8  C10E  F0A9         	movff	atanf@s1+2,___fladd@b+2
  4297   0007FC  C10F  F0AA         	movff	atanf@s1+3,___fladd@b+3
  4298   000800  ECE5  F007         	call	___fladd	;wreg free
  4299   000804  C0A7  F08E         	movff	?___fladd,___flmul@b
  4300   000808  C0A8  F08F         	movff	?___fladd+1,___flmul@b+1
  4301   00080C  C0A9  F090         	movff	?___fladd+2,___flmul@b+2
  4302   000810  C0AA  F091         	movff	?___fladd+3,___flmul@b+3
  4303   000814  EC41  F00A         	call	___flmul	;wreg free
  4304   000818  C08E  F118         	movff	?___flmul,_atanf$2072
  4305   00081C  C08F  F119         	movff	?___flmul+1,_atanf$2072+1
  4306   000820  C090  F11A         	movff	?___flmul+2,_atanf$2072+2
  4307   000824  C091  F11B         	movff	?___flmul+3,_atanf$2072+3
  4308   000828  C0D8  F0B7         	movff	atanf@x,___flsub@b
  4309   00082C  C0D9  F0B8         	movff	atanf@x+1,___flsub@b+1
  4310   000830  C0DA  F0B9         	movff	atanf@x+2,___flsub@b+2
  4311   000834  C0DB  F0BA         	movff	atanf@x+3,___flsub@b+3
  4312   000838  C118  F0BB         	movff	_atanf$2072,___flsub@a
  4313   00083C  C119  F0BC         	movff	_atanf$2072+1,___flsub@a+1
  4314   000840  C11A  F0BD         	movff	_atanf$2072+2,___flsub@a+2
  4315   000844  C11B  F0BE         	movff	_atanf$2072+3,___flsub@a+3
  4316   000848  EC5E  F015         	call	___flsub	;wreg free
  4317   00084C  C0B7  F0D8         	movff	?___flsub,?_atanf
  4318   000850  C0B8  F0D9         	movff	?___flsub+1,?_atanf+1
  4319   000854  C0B9  F0DA         	movff	?___flsub+2,?_atanf+2
  4320   000858  C0BA  F0DB         	movff	?___flsub+3,?_atanf+3
  4321   00085C  EFCF  F004         	goto	l1100
  4322   000860                     l4605:
  4323                           
  4324                           ; BSR set to: 1
  4325   000860  C0D8  F092         	movff	atanf@x,___flmul@a
  4326   000864  C0D9  F093         	movff	atanf@x+1,___flmul@a+1
  4327   000868  C0DA  F094         	movff	atanf@x+2,___flmul@a+2
  4328   00086C  C0DB  F095         	movff	atanf@x+3,___flmul@a+3
  4329   000870  C110  F0AB         	movff	atanf@s2,___fladd@a
  4330   000874  C111  F0AC         	movff	atanf@s2+1,___fladd@a+1
  4331   000878  C112  F0AD         	movff	atanf@s2+2,___fladd@a+2
  4332   00087C  C113  F0AE         	movff	atanf@s2+3,___fladd@a+3
  4333   000880  C10C  F0A7         	movff	atanf@s1,___fladd@b
  4334   000884  C10D  F0A8         	movff	atanf@s1+1,___fladd@b+1
  4335   000888  C10E  F0A9         	movff	atanf@s1+2,___fladd@b+2
  4336   00088C  C10F  F0AA         	movff	atanf@s1+3,___fladd@b+3
  4337   000890  ECE5  F007         	call	___fladd	;wreg free
  4338   000894  C0A7  F08E         	movff	?___fladd,___flmul@b
  4339   000898  C0A8  F08F         	movff	?___fladd+1,___flmul@b+1
  4340   00089C  C0A9  F090         	movff	?___fladd+2,___flmul@b+2
  4341   0008A0  C0AA  F091         	movff	?___fladd+3,___flmul@b+3
  4342   0008A4  EC41  F00A         	call	___flmul	;wreg free
  4343   0008A8  C08E  F118         	movff	?___flmul,_atanf$2072
  4344   0008AC  C08F  F119         	movff	?___flmul+1,_atanf$2072+1
  4345   0008B0  C090  F11A         	movff	?___flmul+2,_atanf$2072+2
  4346   0008B4  C091  F11B         	movff	?___flmul+3,_atanf$2072+3
  4347   0008B8  0101               	movlb	1	; () banked
  4348   0008BA  5121               	movf	atanf@id& (0+255),w,b
  4349   0008BC  0D04               	mullw	4
  4350   0008BE  0EBF               	movlw	low _atanlo
  4351   0008C0  24F3               	addwf	243,w,c
  4352   0008C2  6EF6               	movwf	tblptrl,c
  4353   0008C4  0E7C               	movlw	high _atanlo
  4354   0008C6  20F4               	addwfc	244,w,c
  4355   0008C8  6EF7               	movwf	tblptrh,c
  4356   0008CA                     	if	0	;There are less than 3 active tblptr bytes
  4357   0008CA                     	endif
  4358   0008CA  0009               	tblrd		*+
  4359   0008CC  CFF5 F0BB          	movff	tablat,___flsub@a
  4360   0008D0  0009               	tblrd		*+
  4361   0008D2  CFF5 F0BC          	movff	tablat,___flsub@a+1
  4362   0008D6  0009               	tblrd		*+
  4363   0008D8  CFF5 F0BD          	movff	tablat,___flsub@a+2
  4364   0008DC  000A               	tblrd		*-
  4365   0008DE  CFF5 F0BE          	movff	tablat,___flsub@a+3
  4366   0008E2  C118  F0B7         	movff	_atanf$2072,___flsub@b
  4367   0008E6  C119  F0B8         	movff	_atanf$2072+1,___flsub@b+1
  4368   0008EA  C11A  F0B9         	movff	_atanf$2072+2,___flsub@b+2
  4369   0008EE  C11B  F0BA         	movff	_atanf$2072+3,___flsub@b+3
  4370   0008F2  EC5E  F015         	call	___flsub	;wreg free
  4371   0008F6  C0B7  F104         	movff	?___flsub,_atanf$2073
  4372   0008FA  C0B8  F105         	movff	?___flsub+1,_atanf$2073+1
  4373   0008FE  C0B9  F106         	movff	?___flsub+2,_atanf$2073+2
  4374   000902  C0BA  F107         	movff	?___flsub+3,_atanf$2073+3
  4375   000906  C0D8  F0BB         	movff	atanf@x,___flsub@a
  4376   00090A  C0D9  F0BC         	movff	atanf@x+1,___flsub@a+1
  4377   00090E  C0DA  F0BD         	movff	atanf@x+2,___flsub@a+2
  4378   000912  C0DB  F0BE         	movff	atanf@x+3,___flsub@a+3
  4379   000916  C104  F0B7         	movff	_atanf$2073,___flsub@b
  4380   00091A  C105  F0B8         	movff	_atanf$2073+1,___flsub@b+1
  4381   00091E  C106  F0B9         	movff	_atanf$2073+2,___flsub@b+2
  4382   000922  C107  F0BA         	movff	_atanf$2073+3,___flsub@b+3
  4383   000926  EC5E  F015         	call	___flsub	;wreg free
  4384   00092A  C0B7  F108         	movff	?___flsub,_atanf$2074
  4385   00092E  C0B8  F109         	movff	?___flsub+1,_atanf$2074+1
  4386   000932  C0B9  F10A         	movff	?___flsub+2,_atanf$2074+2
  4387   000936  C0BA  F10B         	movff	?___flsub+3,_atanf$2074+3
  4388   00093A  0101               	movlb	1	; () banked
  4389   00093C  5121               	movf	atanf@id& (0+255),w,b
  4390   00093E  0D04               	mullw	4
  4391   000940  0ECF               	movlw	low _atanhi
  4392   000942  24F3               	addwf	243,w,c
  4393   000944  6EF6               	movwf	tblptrl,c
  4394   000946  0E7C               	movlw	high _atanhi
  4395   000948  20F4               	addwfc	244,w,c
  4396   00094A  6EF7               	movwf	tblptrh,c
  4397   00094C                     	if	0	;There are less than 3 active tblptr bytes
  4398   00094C                     	endif
  4399   00094C  0009               	tblrd		*+
  4400   00094E  CFF5 F0B7          	movff	tablat,___flsub@b
  4401   000952  0009               	tblrd		*+
  4402   000954  CFF5 F0B8          	movff	tablat,___flsub@b+1
  4403   000958  0009               	tblrd		*+
  4404   00095A  CFF5 F0B9          	movff	tablat,___flsub@b+2
  4405   00095E  000A               	tblrd		*-
  4406   000960  CFF5 F0BA          	movff	tablat,___flsub@b+3
  4407   000964  C108  F0BB         	movff	_atanf$2074,___flsub@a
  4408   000968  C109  F0BC         	movff	_atanf$2074+1,___flsub@a+1
  4409   00096C  C10A  F0BD         	movff	_atanf$2074+2,___flsub@a+2
  4410   000970  C10B  F0BE         	movff	_atanf$2074+3,___flsub@a+3
  4411   000974  EC5E  F015         	call	___flsub	;wreg free
  4412   000978  C0B7  F122         	movff	?___flsub,atanf@z
  4413   00097C  C0B8  F123         	movff	?___flsub+1,atanf@z+1
  4414   000980  C0B9  F124         	movff	?___flsub+2,atanf@z+2
  4415   000984  C0BA  F125         	movff	?___flsub+3,atanf@z+3
  4416   000988  0101               	movlb	1	; () banked
  4417   00098A  511C               	movf	atanf@sign& (0+255),w,b
  4418   00098C  A4D8               	btfss	status,2,c
  4419   00098E  EFCB  F004         	goto	u5581
  4420   000992  EFCD  F004         	goto	u5580
  4421   000996                     u5581:
  4422   000996  EF82  F001         	goto	l4549
  4423   00099A                     u5580:
  4424   00099A  EF78  F001         	goto	l4547
  4425   00099E                     l1100:
  4426   00099E  0012               	return		;funcret
  4427   0009A0                     __end_of_atanf:
  4428                           	callstack 0
  4429                           
  4430 ;; *************** function _fabsf *****************
  4431 ;; Defined at:
  4432 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fabsf.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  x               4   80[BANK0 ] float 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;  u               4   84[BANK0 ] struct .
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  4   80[BANK0 ] float 
  4439 ;; Registers used:
  4440 ;;		status,2, status,0
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4446 ;;      Params:         0       4       0       0       0       0       0
  4447 ;;      Locals:         0       4       0       0       0       0       0
  4448 ;;      Temps:          0       0       0       0       0       0       0
  4449 ;;      Totals:         0       8       0       0       0       0       0
  4450 ;;Total ram usage:        8 bytes
  4451 ;; Hardware stack levels used: 1
  4452 ;; Hardware stack levels required when called: 7
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_atan2f
  4457 ;;		_atanf
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           	psect	text11
  4462   002C7E                     __ptext11:
  4463                           	callstack 0
  4464   002C7E                     _fabsf:
  4465                           	callstack 20
  4466   002C7E  C037  F0D4         	movff	fabsf@F465,fabsf@u
  4467   002C82  C038  F0D5         	movff	fabsf@F465+1,fabsf@u+1
  4468   002C86  C039  F0D6         	movff	fabsf@F465+2,fabsf@u+2
  4469   002C8A  C03A  F0D7         	movff	fabsf@F465+3,fabsf@u+3
  4470   002C8E  C0D0  F0D4         	movff	fabsf@x,fabsf@u
  4471   002C92  C0D1  F0D5         	movff	fabsf@x+1,fabsf@u+1
  4472   002C96  C0D2  F0D6         	movff	fabsf@x+2,fabsf@u+2
  4473   002C9A  C0D3  F0D7         	movff	fabsf@x+3,fabsf@u+3
  4474   002C9E  0100               	movlb	0	; () banked
  4475   002CA0  9FD7               	bcf	(fabsf@u+3)& (0+255),7,b
  4476   002CA2                     
  4477                           ; BSR set to: 0
  4478   002CA2  C0D4  F0D0         	movff	fabsf@u,?_fabsf
  4479   002CA6  C0D5  F0D1         	movff	fabsf@u+1,?_fabsf+1
  4480   002CAA  C0D6  F0D2         	movff	fabsf@u+2,?_fabsf+2
  4481   002CAE  C0D7  F0D3         	movff	fabsf@u+3,?_fabsf+3
  4482   002CB2                     
  4483                           ; BSR set to: 0
  4484   002CB2  0012               	return		;funcret
  4485   002CB4                     __end_of_fabsf:
  4486                           	callstack 0
  4487                           
  4488 ;; *************** function ___fpclassifyf *****************
  4489 ;; Defined at:
  4490 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__fpclassifyf.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;  x               4    0[BANK0 ] float 
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;  u               4   10[BANK0 ] struct .
  4495 ;;  e               2    8[BANK0 ] int 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  2    0[BANK0 ] int 
  4498 ;; Registers used:
  4499 ;;		wreg, status,2, status,0
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4505 ;;      Params:         0       4       0       0       0       0       0
  4506 ;;      Locals:         0       6       0       0       0       0       0
  4507 ;;      Temps:          0       4       0       0       0       0       0
  4508 ;;      Totals:         0      14       0       0       0       0       0
  4509 ;;Total ram usage:       14 bytes
  4510 ;; Hardware stack levels used: 1
  4511 ;; Hardware stack levels required when called: 7
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_atan2f
  4516 ;;		_atanf
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           	psect	text12
  4521   00225A                     __ptext12:
  4522                           	callstack 0
  4523   00225A                     ___fpclassifyf:
  4524                           	callstack 19
  4525   00225A  C03B  F08A         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4526   00225E  C03C  F08B         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4527   002262  C03D  F08C         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4528   002266  C03E  F08D         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4529   00226A  C080  F08A         	movff	___fpclassifyf@x,___fpclassifyf@u
  4530   00226E  C081  F08B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4531   002272  C082  F08C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4532   002276  C083  F08D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4533   00227A  C08A  F084         	movff	___fpclassifyf@u,??___fpclassifyf
  4534   00227E  C08B  F085         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4535   002282  C08C  F086         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4536   002286  C08D  F087         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4537   00228A  0E18               	movlw	24
  4538   00228C  EF4E  F011         	goto	u5350
  4539   002290                     u5355:
  4540   002290  0100               	movlb	0	; () banked
  4541   002292  90D8               	bcf	status,0,c
  4542   002294  3387               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  4543   002296  3386               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  4544   002298  3385               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  4545   00229A  3384               	rrcf	??___fpclassifyf& (0+255),f,b
  4546   00229C                     u5350:
  4547   00229C  2EE8               	decfsz	wreg,f,c
  4548   00229E  EF48  F011         	goto	u5355
  4549   0022A2  5184               	movf	??___fpclassifyf& (0+255),w,b
  4550   0022A4  6F88               	movwf	___fpclassifyf@e& (0+255),b
  4551   0022A6  6B89               	clrf	(___fpclassifyf@e+1)& (0+255),b
  4552   0022A8  5188               	movf	___fpclassifyf@e& (0+255),w,b
  4553   0022AA  1189               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  4554   0022AC  A4D8               	btfss	status,2,c
  4555   0022AE  EF5B  F011         	goto	u5361
  4556   0022B2  EF5D  F011         	goto	u5360
  4557   0022B6                     u5361:
  4558   0022B6  EF7D  F011         	goto	l4495
  4559   0022BA                     u5360:
  4560   0022BA                     
  4561                           ; BSR set to: 0
  4562   0022BA  90D8               	bcf	status,0,c
  4563   0022BC  358A               	rlcf	___fpclassifyf@u& (0+255),w,b
  4564   0022BE  6F84               	movwf	??___fpclassifyf& (0+255),b
  4565   0022C0  358B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  4566   0022C2  6F85               	movwf	(??___fpclassifyf+1)& (0+255),b
  4567   0022C4  358C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  4568   0022C6  6F86               	movwf	(??___fpclassifyf+2)& (0+255),b
  4569   0022C8  358D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  4570   0022CA  6F87               	movwf	(??___fpclassifyf+3)& (0+255),b
  4571   0022CC  5184               	movf	??___fpclassifyf& (0+255),w,b
  4572   0022CE  1185               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  4573   0022D0  1186               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  4574   0022D2  1187               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  4575   0022D4  A4D8               	btfss	status,2,c
  4576   0022D6  EF6F  F011         	goto	u5371
  4577   0022DA  EF71  F011         	goto	u5370
  4578   0022DE                     u5371:
  4579   0022DE  EF77  F011         	goto	l4491
  4580   0022E2                     u5370:
  4581   0022E2                     
  4582                           ; BSR set to: 0
  4583   0022E2  0E00               	movlw	0
  4584   0022E4  6F81               	movwf	(?___fpclassifyf+1)& (0+255),b
  4585   0022E6  0E02               	movlw	2
  4586   0022E8  6F80               	movwf	?___fpclassifyf& (0+255),b
  4587   0022EA  EFAC  F011         	goto	l1076
  4588   0022EE                     l4491:
  4589                           
  4590                           ; BSR set to: 0
  4591   0022EE  0E00               	movlw	0
  4592   0022F0  6F81               	movwf	(?___fpclassifyf+1)& (0+255),b
  4593   0022F2  0E03               	movlw	3
  4594   0022F4  6F80               	movwf	?___fpclassifyf& (0+255),b
  4595   0022F6  EFAC  F011         	goto	l1076
  4596   0022FA                     l4495:
  4597                           
  4598                           ; BSR set to: 0
  4599   0022FA  2988               	incf	___fpclassifyf@e& (0+255),w,b
  4600   0022FC  1189               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  4601   0022FE  A4D8               	btfss	status,2,c
  4602   002300  EF84  F011         	goto	u5381
  4603   002304  EF86  F011         	goto	u5380
  4604   002308                     u5381:
  4605   002308  EFA8  F011         	goto	l4501
  4606   00230C                     u5380:
  4607   00230C                     
  4608                           ; BSR set to: 0
  4609   00230C  C08A  F084         	movff	___fpclassifyf@u,??___fpclassifyf
  4610   002310  C08B  F085         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4611   002314  C08C  F086         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4612   002318  C08D  F087         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4613   00231C  0E09               	movlw	9
  4614   00231E                     u5395:
  4615   00231E  90D8               	bcf	status,0,c
  4616   002320  3784               	rlcf	??___fpclassifyf& (0+255),f,b
  4617   002322  3785               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  4618   002324  3786               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  4619   002326  3787               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  4620   002328  2EE8               	decfsz	wreg,f,c
  4621   00232A  EF8F  F011         	goto	u5395
  4622   00232E  5184               	movf	??___fpclassifyf& (0+255),w,b
  4623   002330  1185               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  4624   002332  1186               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  4625   002334  1187               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  4626   002336  B4D8               	btfsc	status,2,c
  4627   002338  EFA0  F011         	goto	u5401
  4628   00233C  EFA3  F011         	goto	u5400
  4629   002340                     u5401:
  4630   002340  0E01               	movlw	1
  4631   002342  EFA4  F011         	goto	u5410
  4632   002346                     u5400:
  4633   002346  0E00               	movlw	0
  4634   002348                     u5410:
  4635   002348  6F80               	movwf	?___fpclassifyf& (0+255),b
  4636   00234A  6B81               	clrf	(?___fpclassifyf+1)& (0+255),b
  4637   00234C  EFAC  F011         	goto	l1076
  4638   002350                     l4501:
  4639                           
  4640                           ; BSR set to: 0
  4641   002350  0E00               	movlw	0
  4642   002352  6F81               	movwf	(?___fpclassifyf+1)& (0+255),b
  4643   002354  0E04               	movlw	4
  4644   002356  6F80               	movwf	?___fpclassifyf& (0+255),b
  4645   002358                     l1076:
  4646                           
  4647                           ; BSR set to: 0
  4648   002358  0012               	return		;funcret
  4649   00235A                     __end_of___fpclassifyf:
  4650                           	callstack 0
  4651                           
  4652 ;; *************** function ___flsub *****************
  4653 ;; Defined at:
  4654 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  b               4   55[BANK0 ] int 
  4657 ;;  a               4   59[BANK0 ] int 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;		None
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  4   55[BANK0 ] int 
  4662 ;; Registers used:
  4663 ;;		wreg, status,2, status,0, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4669 ;;      Params:         0       8       0       0       0       0       0
  4670 ;;      Locals:         0       0       0       0       0       0       0
  4671 ;;      Temps:          0       0       0       0       0       0       0
  4672 ;;      Totals:         0       8       0       0       0       0       0
  4673 ;;Total ram usage:        8 bytes
  4674 ;; Hardware stack levels used: 1
  4675 ;; Hardware stack levels required when called: 8
  4676 ;; This function calls:
  4677 ;;		___fladd
  4678 ;; This function is called by:
  4679 ;;		_Check_Gyroscope
  4680 ;;		_atan2f
  4681 ;;		_atanf
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text13
  4686   002ABC                     __ptext13:
  4687                           	callstack 0
  4688   002ABC                     ___flsub:
  4689                           	callstack 18
  4690   002ABC  0E00               	movlw	0
  4691   002ABE  0100               	movlb	0	; () banked
  4692   002AC0  1BBB               	xorwf	___flsub@a& (0+255),f,b
  4693   002AC2  0E00               	movlw	0
  4694   002AC4  1BBC               	xorwf	(___flsub@a+1)& (0+255),f,b
  4695   002AC6  0E00               	movlw	0
  4696   002AC8  1BBD               	xorwf	(___flsub@a+2)& (0+255),f,b
  4697   002ACA  0E80               	movlw	128
  4698   002ACC  1BBE               	xorwf	(___flsub@a+3)& (0+255),f,b
  4699   002ACE                     
  4700                           ; BSR set to: 0
  4701   002ACE  C0B7  F0A7         	movff	___flsub@b,___fladd@b
  4702   002AD2  C0B8  F0A8         	movff	___flsub@b+1,___fladd@b+1
  4703   002AD6  C0B9  F0A9         	movff	___flsub@b+2,___fladd@b+2
  4704   002ADA  C0BA  F0AA         	movff	___flsub@b+3,___fladd@b+3
  4705   002ADE  C0BB  F0AB         	movff	___flsub@a,___fladd@a
  4706   002AE2  C0BC  F0AC         	movff	___flsub@a+1,___fladd@a+1
  4707   002AE6  C0BD  F0AD         	movff	___flsub@a+2,___fladd@a+2
  4708   002AEA  C0BE  F0AE         	movff	___flsub@a+3,___fladd@a+3
  4709   002AEE  ECE5  F007         	call	___fladd	;wreg free
  4710   002AF2  C0A7  F0B7         	movff	?___fladd,?___flsub
  4711   002AF6  C0A8  F0B8         	movff	?___fladd+1,?___flsub+1
  4712   002AFA  C0A9  F0B9         	movff	?___fladd+2,?___flsub+2
  4713   002AFE  C0AA  F0BA         	movff	?___fladd+3,?___flsub+3
  4714   002B02  0012               	return		;funcret
  4715   002B04                     __end_of___flsub:
  4716                           	callstack 0
  4717                           
  4718 ;; *************** function ___fladd *****************
  4719 ;; Defined at:
  4720 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  b               4   39[BANK0 ] int 
  4723 ;;  a               4   43[BANK0 ] int 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  grs             1   54[BANK0 ] unsigned char 
  4726 ;;  bexp            1   53[BANK0 ] unsigned char 
  4727 ;;  aexp            1   52[BANK0 ] unsigned char 
  4728 ;;  signs           1   51[BANK0 ] unsigned char 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  4   39[BANK0 ] unsigned char 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4738 ;;      Params:         0       8       0       0       0       0       0
  4739 ;;      Locals:         0       4       0       0       0       0       0
  4740 ;;      Temps:          0       4       0       0       0       0       0
  4741 ;;      Totals:         0      16       0       0       0       0       0
  4742 ;;Total ram usage:       16 bytes
  4743 ;; Hardware stack levels used: 1
  4744 ;; Hardware stack levels required when called: 7
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		___flsub
  4749 ;;		_atan2f
  4750 ;;		_atanf
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           	psect	text14
  4755   000FCA                     __ptext14:
  4756                           	callstack 0
  4757   000FCA                     ___fladd:
  4758                           	callstack 18
  4759   000FCA  0100               	movlb	0	; () banked
  4760   000FCC  51AA               	movf	(___fladd@b+3)& (0+255),w,b
  4761   000FCE  0B80               	andlw	128
  4762   000FD0  6FB3               	movwf	___fladd@signs& (0+255),b
  4763   000FD2  51AA               	movf	(___fladd@b+3)& (0+255),w,b
  4764   000FD4  25AA               	addwf	(___fladd@b+3)& (0+255),w,b
  4765   000FD6  6FB5               	movwf	___fladd@bexp& (0+255),b
  4766   000FD8                     
  4767                           ; BSR set to: 0
  4768   000FD8  AFA9               	btfss	(___fladd@b+2)& (0+255),7,b
  4769   000FDA  EFF1  F007         	goto	u4411
  4770   000FDE  EFF3  F007         	goto	u4410
  4771   000FE2                     u4411:
  4772   000FE2  EFF4  F007         	goto	l3937
  4773   000FE6                     u4410:
  4774   000FE6                     
  4775                           ; BSR set to: 0
  4776   000FE6  81B5               	bsf	___fladd@bexp& (0+255),0,b
  4777   000FE8                     l3937:
  4778                           
  4779                           ; BSR set to: 0
  4780   000FE8  51B5               	movf	___fladd@bexp& (0+255),w,b
  4781   000FEA  B4D8               	btfsc	status,2,c
  4782   000FEC  EFFA  F007         	goto	u4421
  4783   000FF0  EFFC  F007         	goto	u4420
  4784   000FF4                     u4421:
  4785   000FF4  EF10  F008         	goto	l3947
  4786   000FF8                     u4420:
  4787   000FF8                     
  4788                           ; BSR set to: 0
  4789   000FF8  29B5               	incf	___fladd@bexp& (0+255),w,b
  4790   000FFA  A4D8               	btfss	status,2,c
  4791   000FFC  EF02  F008         	goto	u4431
  4792   001000  EF04  F008         	goto	u4430
  4793   001004                     u4431:
  4794   001004  EF0C  F008         	goto	l3943
  4795   001008                     u4430:
  4796   001008                     
  4797                           ; BSR set to: 0
  4798   001008  0E00               	movlw	0
  4799   00100A  6FA7               	movwf	___fladd@b& (0+255),b
  4800   00100C  0E00               	movlw	0
  4801   00100E  6FA8               	movwf	(___fladd@b+1)& (0+255),b
  4802   001010  0E00               	movlw	0
  4803   001012  6FA9               	movwf	(___fladd@b+2)& (0+255),b
  4804   001014  0E00               	movlw	0
  4805   001016  6FAA               	movwf	(___fladd@b+3)& (0+255),b
  4806   001018                     l3943:
  4807                           
  4808                           ; BSR set to: 0
  4809   001018  8FA9               	bsf	(___fladd@b+2)& (0+255),7,b
  4810   00101A                     
  4811                           ; BSR set to: 0
  4812   00101A  6BAA               	clrf	(___fladd@b+3)& (0+255),b
  4813   00101C  EF18  F008         	goto	l3949
  4814   001020                     l3947:
  4815                           
  4816                           ; BSR set to: 0
  4817   001020  0E00               	movlw	0
  4818   001022  6FA7               	movwf	___fladd@b& (0+255),b
  4819   001024  0E00               	movlw	0
  4820   001026  6FA8               	movwf	(___fladd@b+1)& (0+255),b
  4821   001028  0E00               	movlw	0
  4822   00102A  6FA9               	movwf	(___fladd@b+2)& (0+255),b
  4823   00102C  0E00               	movlw	0
  4824   00102E  6FAA               	movwf	(___fladd@b+3)& (0+255),b
  4825   001030                     l3949:
  4826                           
  4827                           ; BSR set to: 0
  4828   001030  51AE               	movf	(___fladd@a+3)& (0+255),w,b
  4829   001032  0B80               	andlw	128
  4830   001034  6FB4               	movwf	___fladd@aexp& (0+255),b
  4831   001036                     
  4832                           ; BSR set to: 0
  4833   001036  51B3               	movf	___fladd@signs& (0+255),w,b
  4834   001038  19B4               	xorwf	___fladd@aexp& (0+255),w,b
  4835   00103A  B4D8               	btfsc	status,2,c
  4836   00103C  EF22  F008         	goto	u4441
  4837   001040  EF24  F008         	goto	u4440
  4838   001044                     u4441:
  4839   001044  EF25  F008         	goto	l3955
  4840   001048                     u4440:
  4841   001048                     
  4842                           ; BSR set to: 0
  4843   001048  8DB3               	bsf	___fladd@signs& (0+255),6,b
  4844   00104A                     l3955:
  4845                           
  4846                           ; BSR set to: 0
  4847   00104A  51AE               	movf	(___fladd@a+3)& (0+255),w,b
  4848   00104C  25AE               	addwf	(___fladd@a+3)& (0+255),w,b
  4849   00104E  6FB4               	movwf	___fladd@aexp& (0+255),b
  4850   001050                     
  4851                           ; BSR set to: 0
  4852   001050  AFAD               	btfss	(___fladd@a+2)& (0+255),7,b
  4853   001052  EF2D  F008         	goto	u4451
  4854   001056  EF2F  F008         	goto	u4450
  4855   00105A                     u4451:
  4856   00105A  EF30  F008         	goto	l3961
  4857   00105E                     u4450:
  4858   00105E                     
  4859                           ; BSR set to: 0
  4860   00105E  81B4               	bsf	___fladd@aexp& (0+255),0,b
  4861   001060                     l3961:
  4862                           
  4863                           ; BSR set to: 0
  4864   001060  51B4               	movf	___fladd@aexp& (0+255),w,b
  4865   001062  B4D8               	btfsc	status,2,c
  4866   001064  EF36  F008         	goto	u4461
  4867   001068  EF38  F008         	goto	u4460
  4868   00106C                     u4461:
  4869   00106C  EF4C  F008         	goto	l3971
  4870   001070                     u4460:
  4871   001070                     
  4872                           ; BSR set to: 0
  4873   001070  29B4               	incf	___fladd@aexp& (0+255),w,b
  4874   001072  A4D8               	btfss	status,2,c
  4875   001074  EF3E  F008         	goto	u4471
  4876   001078  EF40  F008         	goto	u4470
  4877   00107C                     u4471:
  4878   00107C  EF48  F008         	goto	l3967
  4879   001080                     u4470:
  4880   001080                     
  4881                           ; BSR set to: 0
  4882   001080  0E00               	movlw	0
  4883   001082  6FAB               	movwf	___fladd@a& (0+255),b
  4884   001084  0E00               	movlw	0
  4885   001086  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  4886   001088  0E00               	movlw	0
  4887   00108A  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  4888   00108C  0E00               	movlw	0
  4889   00108E  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  4890   001090                     l3967:
  4891                           
  4892                           ; BSR set to: 0
  4893   001090  8FAD               	bsf	(___fladd@a+2)& (0+255),7,b
  4894   001092                     
  4895                           ; BSR set to: 0
  4896   001092  6BAE               	clrf	(___fladd@a+3)& (0+255),b
  4897   001094  EF54  F008         	goto	l3973
  4898   001098                     l3971:
  4899                           
  4900                           ; BSR set to: 0
  4901   001098  0E00               	movlw	0
  4902   00109A  6FAB               	movwf	___fladd@a& (0+255),b
  4903   00109C  0E00               	movlw	0
  4904   00109E  6FAC               	movwf	(___fladd@a+1)& (0+255),b
  4905   0010A0  0E00               	movlw	0
  4906   0010A2  6FAD               	movwf	(___fladd@a+2)& (0+255),b
  4907   0010A4  0E00               	movlw	0
  4908   0010A6  6FAE               	movwf	(___fladd@a+3)& (0+255),b
  4909   0010A8                     l3973:
  4910                           
  4911                           ; BSR set to: 0
  4912   0010A8  51B5               	movf	___fladd@bexp& (0+255),w,b
  4913   0010AA  5DB4               	subwf	___fladd@aexp& (0+255),w,b
  4914   0010AC  B0D8               	btfsc	status,0,c
  4915   0010AE  EF5B  F008         	goto	u4481
  4916   0010B2  EF5D  F008         	goto	u4480
  4917   0010B6                     u4481:
  4918   0010B6  EF84  F008         	goto	l4009
  4919   0010BA                     u4480:
  4920   0010BA                     
  4921                           ; BSR set to: 0
  4922   0010BA  ADB3               	btfss	___fladd@signs& (0+255),6,b
  4923   0010BC  EF62  F008         	goto	u4491
  4924   0010C0  EF64  F008         	goto	u4490
  4925   0010C4                     u4491:
  4926   0010C4  EF66  F008         	goto	l3979
  4927   0010C8                     u4490:
  4928   0010C8                     
  4929                           ; BSR set to: 0
  4930   0010C8  0E80               	movlw	128
  4931   0010CA  1BB3               	xorwf	___fladd@signs& (0+255),f,b
  4932   0010CC                     l3979:
  4933                           
  4934                           ; BSR set to: 0
  4935   0010CC  C0B5  F0B6         	movff	___fladd@bexp,___fladd@grs
  4936   0010D0                     
  4937                           ; BSR set to: 0
  4938   0010D0  C0B4  F0B5         	movff	___fladd@aexp,___fladd@bexp
  4939   0010D4                     
  4940                           ; BSR set to: 0
  4941   0010D4  C0B6  F0B4         	movff	___fladd@grs,___fladd@aexp
  4942   0010D8                     
  4943                           ; BSR set to: 0
  4944   0010D8  C0A7  F0B6         	movff	___fladd@b,___fladd@grs
  4945   0010DC                     
  4946                           ; BSR set to: 0
  4947   0010DC  C0AB  F0A7         	movff	___fladd@a,___fladd@b
  4948   0010E0                     
  4949                           ; BSR set to: 0
  4950   0010E0  C0B6  F0AB         	movff	___fladd@grs,___fladd@a
  4951   0010E4                     
  4952                           ; BSR set to: 0
  4953   0010E4  C0A8  F0B6         	movff	___fladd@b+1,___fladd@grs
  4954   0010E8                     
  4955                           ; BSR set to: 0
  4956   0010E8  C0AC  F0A8         	movff	___fladd@a+1,___fladd@b+1
  4957   0010EC                     
  4958                           ; BSR set to: 0
  4959   0010EC  C0B6  F0AC         	movff	___fladd@grs,___fladd@a+1
  4960   0010F0                     
  4961                           ; BSR set to: 0
  4962   0010F0  C0A9  F0B6         	movff	___fladd@b+2,___fladd@grs
  4963   0010F4                     
  4964                           ; BSR set to: 0
  4965   0010F4  C0AD  F0A9         	movff	___fladd@a+2,___fladd@b+2
  4966   0010F8                     
  4967                           ; BSR set to: 0
  4968   0010F8  C0B6  F0AD         	movff	___fladd@grs,___fladd@a+2
  4969   0010FC                     
  4970                           ; BSR set to: 0
  4971   0010FC  C0AA  F0B6         	movff	___fladd@b+3,___fladd@grs
  4972   001100                     
  4973                           ; BSR set to: 0
  4974   001100  C0AE  F0AA         	movff	___fladd@a+3,___fladd@b+3
  4975   001104                     
  4976                           ; BSR set to: 0
  4977   001104  C0B6  F0AE         	movff	___fladd@grs,___fladd@a+3
  4978   001108                     l4009:
  4979                           
  4980                           ; BSR set to: 0
  4981   001108  6BB6               	clrf	___fladd@grs& (0+255),b
  4982   00110A  51B5               	movf	___fladd@bexp& (0+255),w,b
  4983   00110C  C0B4  F0AF         	movff	___fladd@aexp,??___fladd
  4984   001110  6BB0               	clrf	(??___fladd+1)& (0+255),b
  4985   001112  5FAF               	subwf	??___fladd& (0+255),f,b
  4986   001114  0E00               	movlw	0
  4987   001116  5BB0               	subwfb	(??___fladd+1)& (0+255),f,b
  4988   001118  BFB0               	btfsc	(??___fladd+1)& (0+255),7,b
  4989   00111A  EF98  F008         	goto	u4501
  4990   00111E  51B0               	movf	(??___fladd+1)& (0+255),w,b
  4991   001120  E109               	bnz	u4500
  4992   001122  0E1A               	movlw	26
  4993   001124  5DAF               	subwf	??___fladd& (0+255),w,b
  4994   001126  A0D8               	btfss	status,0,c
  4995   001128  EF98  F008         	goto	u4501
  4996   00112C  EF9A  F008         	goto	u4500
  4997   001130                     u4501:
  4998   001130  EFD1  F008         	goto	l865
  4999   001134                     u4500:
  5000   001134                     
  5001                           ; BSR set to: 0
  5002   001134  51A7               	movf	___fladd@b& (0+255),w,b
  5003   001136  11A8               	iorwf	(___fladd@b+1)& (0+255),w,b
  5004   001138  11A9               	iorwf	(___fladd@b+2)& (0+255),w,b
  5005   00113A  11AA               	iorwf	(___fladd@b+3)& (0+255),w,b
  5006   00113C  A4D8               	btfss	status,2,c
  5007   00113E  EFA3  F008         	goto	u4511
  5008   001142  EFA6  F008         	goto	u4510
  5009   001146                     u4511:
  5010   001146  0E01               	movlw	1
  5011   001148  EFA7  F008         	goto	u4520
  5012   00114C                     u4510:
  5013   00114C  0E00               	movlw	0
  5014   00114E                     u4520:
  5015   00114E  6FB6               	movwf	___fladd@grs& (0+255),b
  5016   001150                     
  5017                           ; BSR set to: 0
  5018   001150  0E00               	movlw	0
  5019   001152  6FA7               	movwf	___fladd@b& (0+255),b
  5020   001154  0E00               	movlw	0
  5021   001156  6FA8               	movwf	(___fladd@b+1)& (0+255),b
  5022   001158  0E00               	movlw	0
  5023   00115A  6FA9               	movwf	(___fladd@b+2)& (0+255),b
  5024   00115C  0E00               	movlw	0
  5025   00115E  6FAA               	movwf	(___fladd@b+3)& (0+255),b
  5026   001160                     
  5027                           ; BSR set to: 0
  5028   001160  C0B4  F0B5         	movff	___fladd@aexp,___fladd@bexp
  5029   001164  EFDA  F008         	goto	l864
  5030   001168                     l866:
  5031                           
  5032                           ; BSR set to: 0
  5033   001168  A1B6               	btfss	___fladd@grs& (0+255),0,b
  5034   00116A  EFB9  F008         	goto	u4531
  5035   00116E  EFBB  F008         	goto	u4530
  5036   001172                     u4531:
  5037   001172  EFC1  F008         	goto	l4019
  5038   001176                     u4530:
  5039   001176                     
  5040                           ; BSR set to: 0
  5041   001176  90D8               	bcf	status,0,c
  5042   001178  31B6               	rrcf	___fladd@grs& (0+255),w,b
  5043   00117A  0901               	iorlw	1
  5044   00117C  6FB6               	movwf	___fladd@grs& (0+255),b
  5045   00117E  EFC3  F008         	goto	l4021
  5046   001182                     l4019:
  5047                           
  5048                           ; BSR set to: 0
  5049   001182  90D8               	bcf	status,0,c
  5050   001184  33B6               	rrcf	___fladd@grs& (0+255),f,b
  5051   001186                     l4021:
  5052                           
  5053                           ; BSR set to: 0
  5054   001186  A1A7               	btfss	___fladd@b& (0+255),0,b
  5055   001188  EFC8  F008         	goto	u4541
  5056   00118C  EFCA  F008         	goto	u4540
  5057   001190                     u4541:
  5058   001190  EFCB  F008         	goto	l4025
  5059   001194                     u4540:
  5060   001194                     
  5061                           ; BSR set to: 0
  5062   001194  8FB6               	bsf	___fladd@grs& (0+255),7,b
  5063   001196                     l4025:
  5064                           
  5065                           ; BSR set to: 0
  5066   001196  35AA               	rlcf	(___fladd@b+3)& (0+255),w,b
  5067   001198  33AA               	rrcf	(___fladd@b+3)& (0+255),f,b
  5068   00119A  33A9               	rrcf	(___fladd@b+2)& (0+255),f,b
  5069   00119C  33A8               	rrcf	(___fladd@b+1)& (0+255),f,b
  5070   00119E  33A7               	rrcf	___fladd@b& (0+255),f,b
  5071   0011A0                     
  5072                           ; BSR set to: 0
  5073   0011A0  2BB5               	incf	___fladd@bexp& (0+255),f,b
  5074   0011A2                     l865:
  5075                           
  5076                           ; BSR set to: 0
  5077   0011A2  51B4               	movf	___fladd@aexp& (0+255),w,b
  5078   0011A4  5DB5               	subwf	___fladd@bexp& (0+255),w,b
  5079   0011A6  A0D8               	btfss	status,0,c
  5080   0011A8  EFD8  F008         	goto	u4551
  5081   0011AC  EFDA  F008         	goto	u4550
  5082   0011B0                     u4551:
  5083   0011B0  EFB4  F008         	goto	l866
  5084   0011B4                     u4550:
  5085   0011B4                     l864:
  5086                           
  5087                           ; BSR set to: 0
  5088   0011B4  BDB3               	btfsc	___fladd@signs& (0+255),6,b
  5089   0011B6  EFDF  F008         	goto	u4561
  5090   0011BA  EFE1  F008         	goto	u4560
  5091   0011BE                     u4561:
  5092   0011BE  EF21  F009         	goto	l4053
  5093   0011C2                     u4560:
  5094   0011C2                     
  5095                           ; BSR set to: 0
  5096   0011C2  51B5               	movf	___fladd@bexp& (0+255),w,b
  5097   0011C4  A4D8               	btfss	status,2,c
  5098   0011C6  EFE7  F008         	goto	u4571
  5099   0011CA  EFE9  F008         	goto	u4570
  5100   0011CE                     u4571:
  5101   0011CE  EFF3  F008         	goto	l4035
  5102   0011D2                     u4570:
  5103   0011D2                     
  5104                           ; BSR set to: 0
  5105   0011D2  0E00               	movlw	0
  5106   0011D4  6FA7               	movwf	?___fladd& (0+255),b
  5107   0011D6  0E00               	movlw	0
  5108   0011D8  6FA8               	movwf	(?___fladd+1)& (0+255),b
  5109   0011DA  0E00               	movlw	0
  5110   0011DC  6FA9               	movwf	(?___fladd+2)& (0+255),b
  5111   0011DE  0E00               	movlw	0
  5112   0011E0  6FAA               	movwf	(?___fladd+3)& (0+255),b
  5113   0011E2  EF40  F00A         	goto	l873
  5114   0011E6                     l4035:
  5115                           
  5116                           ; BSR set to: 0
  5117   0011E6  51AB               	movf	___fladd@a& (0+255),w,b
  5118   0011E8  27A7               	addwf	___fladd@b& (0+255),f,b
  5119   0011EA  51AC               	movf	(___fladd@a+1)& (0+255),w,b
  5120   0011EC  23A8               	addwfc	(___fladd@b+1)& (0+255),f,b
  5121   0011EE  51AD               	movf	(___fladd@a+2)& (0+255),w,b
  5122   0011F0  23A9               	addwfc	(___fladd@b+2)& (0+255),f,b
  5123   0011F2  51AE               	movf	(___fladd@a+3)& (0+255),w,b
  5124   0011F4  23AA               	addwfc	(___fladd@b+3)& (0+255),f,b
  5125   0011F6                     
  5126                           ; BSR set to: 0
  5127   0011F6  A1AA               	btfss	(___fladd@b+3)& (0+255),0,b
  5128   0011F8  EF00  F009         	goto	u4581
  5129   0011FC  EF02  F009         	goto	u4580
  5130   001200                     u4581:
  5131   001200  EFAE  F009         	goto	l878
  5132   001204                     u4580:
  5133   001204                     
  5134                           ; BSR set to: 0
  5135   001204  A1B6               	btfss	___fladd@grs& (0+255),0,b
  5136   001206  EF07  F009         	goto	u4591
  5137   00120A  EF09  F009         	goto	u4590
  5138   00120E                     u4591:
  5139   00120E  EF0F  F009         	goto	l4043
  5140   001212                     u4590:
  5141   001212                     
  5142                           ; BSR set to: 0
  5143   001212  90D8               	bcf	status,0,c
  5144   001214  31B6               	rrcf	___fladd@grs& (0+255),w,b
  5145   001216  0901               	iorlw	1
  5146   001218  6FB6               	movwf	___fladd@grs& (0+255),b
  5147   00121A  EF11  F009         	goto	l4045
  5148   00121E                     l4043:
  5149                           
  5150                           ; BSR set to: 0
  5151   00121E  90D8               	bcf	status,0,c
  5152   001220  33B6               	rrcf	___fladd@grs& (0+255),f,b
  5153   001222                     l4045:
  5154                           
  5155                           ; BSR set to: 0
  5156   001222  A1A7               	btfss	___fladd@b& (0+255),0,b
  5157   001224  EF16  F009         	goto	u4601
  5158   001228  EF18  F009         	goto	u4600
  5159   00122C                     u4601:
  5160   00122C  EF19  F009         	goto	l4049
  5161   001230                     u4600:
  5162   001230                     
  5163                           ; BSR set to: 0
  5164   001230  8FB6               	bsf	___fladd@grs& (0+255),7,b
  5165   001232                     l4049:
  5166                           
  5167                           ; BSR set to: 0
  5168   001232  35AA               	rlcf	(___fladd@b+3)& (0+255),w,b
  5169   001234  33AA               	rrcf	(___fladd@b+3)& (0+255),f,b
  5170   001236  33A9               	rrcf	(___fladd@b+2)& (0+255),f,b
  5171   001238  33A8               	rrcf	(___fladd@b+1)& (0+255),f,b
  5172   00123A  33A7               	rrcf	___fladd@b& (0+255),f,b
  5173   00123C                     
  5174                           ; BSR set to: 0
  5175   00123C  2BB5               	incf	___fladd@bexp& (0+255),f,b
  5176   00123E  EFAE  F009         	goto	l878
  5177   001242                     l4053:
  5178                           
  5179                           ; BSR set to: 0
  5180   001242  51AB               	movf	___fladd@a& (0+255),w,b
  5181   001244  5DA7               	subwf	___fladd@b& (0+255),w,b
  5182   001246  51AC               	movf	(___fladd@a+1)& (0+255),w,b
  5183   001248  59A8               	subwfb	(___fladd@b+1)& (0+255),w,b
  5184   00124A  51AD               	movf	(___fladd@a+2)& (0+255),w,b
  5185   00124C  59A9               	subwfb	(___fladd@b+2)& (0+255),w,b
  5186   00124E  51AA               	movf	(___fladd@b+3)& (0+255),w,b
  5187   001250  0A80               	xorlw	128
  5188   001252  6FAF               	movwf	??___fladd& (0+255),b
  5189   001254  51AE               	movf	(___fladd@a+3)& (0+255),w,b
  5190   001256  0A80               	xorlw	128
  5191   001258  59AF               	subwfb	??___fladd& (0+255),w,b
  5192   00125A  B0D8               	btfsc	status,0,c
  5193   00125C  EF32  F009         	goto	u4611
  5194   001260  EF34  F009         	goto	u4610
  5195   001264                     u4611:
  5196   001264  EF5F  F009         	goto	l4063
  5197   001268                     u4610:
  5198   001268                     
  5199                           ; BSR set to: 0
  5200   001268  51A7               	movf	___fladd@b& (0+255),w,b
  5201   00126A  5DAB               	subwf	___fladd@a& (0+255),w,b
  5202   00126C  6FAF               	movwf	??___fladd& (0+255),b
  5203   00126E  51A8               	movf	(___fladd@b+1)& (0+255),w,b
  5204   001270  59AC               	subwfb	(___fladd@a+1)& (0+255),w,b
  5205   001272  6FB0               	movwf	(??___fladd+1)& (0+255),b
  5206   001274  51A9               	movf	(___fladd@b+2)& (0+255),w,b
  5207   001276  59AD               	subwfb	(___fladd@a+2)& (0+255),w,b
  5208   001278  6FB1               	movwf	(??___fladd+2)& (0+255),b
  5209   00127A  51AA               	movf	(___fladd@b+3)& (0+255),w,b
  5210   00127C  59AE               	subwfb	(___fladd@a+3)& (0+255),w,b
  5211   00127E  6FB2               	movwf	(??___fladd+3)& (0+255),b
  5212   001280  0EFF               	movlw	255
  5213   001282  25AF               	addwf	??___fladd& (0+255),w,b
  5214   001284  6FA7               	movwf	___fladd@b& (0+255),b
  5215   001286  0EFF               	movlw	255
  5216   001288  21B0               	addwfc	(??___fladd+1)& (0+255),w,b
  5217   00128A  6FA8               	movwf	(___fladd@b+1)& (0+255),b
  5218   00128C  0EFF               	movlw	255
  5219   00128E  21B1               	addwfc	(??___fladd+2)& (0+255),w,b
  5220   001290  6FA9               	movwf	(___fladd@b+2)& (0+255),b
  5221   001292  0EFF               	movlw	255
  5222   001294  21B2               	addwfc	(??___fladd+3)& (0+255),w,b
  5223   001296  6FAA               	movwf	(___fladd@b+3)& (0+255),b
  5224   001298  0E80               	movlw	128
  5225   00129A  1BB3               	xorwf	___fladd@signs& (0+255),f,b
  5226   00129C                     
  5227                           ; BSR set to: 0
  5228   00129C  6DB6               	negf	___fladd@grs& (0+255),b
  5229   00129E                     
  5230                           ; BSR set to: 0
  5231   00129E  51B6               	movf	___fladd@grs& (0+255),w,b
  5232   0012A0  A4D8               	btfss	status,2,c
  5233   0012A2  EF55  F009         	goto	u4621
  5234   0012A6  EF57  F009         	goto	u4620
  5235   0012AA                     u4621:
  5236   0012AA  EF67  F009         	goto	l881
  5237   0012AE                     u4620:
  5238   0012AE                     
  5239                           ; BSR set to: 0
  5240   0012AE  0E01               	movlw	1
  5241   0012B0  27A7               	addwf	___fladd@b& (0+255),f,b
  5242   0012B2  0E00               	movlw	0
  5243   0012B4  23A8               	addwfc	(___fladd@b+1)& (0+255),f,b
  5244   0012B6  23A9               	addwfc	(___fladd@b+2)& (0+255),f,b
  5245   0012B8  23AA               	addwfc	(___fladd@b+3)& (0+255),f,b
  5246   0012BA  EF67  F009         	goto	l881
  5247   0012BE                     l4063:
  5248                           
  5249                           ; BSR set to: 0
  5250   0012BE  51AB               	movf	___fladd@a& (0+255),w,b
  5251   0012C0  5FA7               	subwf	___fladd@b& (0+255),f,b
  5252   0012C2  51AC               	movf	(___fladd@a+1)& (0+255),w,b
  5253   0012C4  5BA8               	subwfb	(___fladd@b+1)& (0+255),f,b
  5254   0012C6  51AD               	movf	(___fladd@a+2)& (0+255),w,b
  5255   0012C8  5BA9               	subwfb	(___fladd@b+2)& (0+255),f,b
  5256   0012CA  51AE               	movf	(___fladd@a+3)& (0+255),w,b
  5257   0012CC  5BAA               	subwfb	(___fladd@b+3)& (0+255),f,b
  5258   0012CE                     l881:
  5259                           
  5260                           ; BSR set to: 0
  5261   0012CE  51A7               	movf	___fladd@b& (0+255),w,b
  5262   0012D0  11A8               	iorwf	(___fladd@b+1)& (0+255),w,b
  5263   0012D2  11A9               	iorwf	(___fladd@b+2)& (0+255),w,b
  5264   0012D4  11AA               	iorwf	(___fladd@b+3)& (0+255),w,b
  5265   0012D6  A4D8               	btfss	status,2,c
  5266   0012D8  EF70  F009         	goto	u4631
  5267   0012DC  EF72  F009         	goto	u4630
  5268   0012E0                     u4631:
  5269   0012E0  EFA7  F009         	goto	l4087
  5270   0012E4                     u4630:
  5271   0012E4                     
  5272                           ; BSR set to: 0
  5273   0012E4  51B6               	movf	___fladd@grs& (0+255),w,b
  5274   0012E6  A4D8               	btfss	status,2,c
  5275   0012E8  EF78  F009         	goto	u4641
  5276   0012EC  EF7A  F009         	goto	u4640
  5277   0012F0                     u4641:
  5278   0012F0  EFA7  F009         	goto	l4087
  5279   0012F4                     u4640:
  5280   0012F4                     
  5281                           ; BSR set to: 0
  5282   0012F4  0E00               	movlw	0
  5283   0012F6  6FA7               	movwf	?___fladd& (0+255),b
  5284   0012F8  0E00               	movlw	0
  5285   0012FA  6FA8               	movwf	(?___fladd+1)& (0+255),b
  5286   0012FC  0E00               	movlw	0
  5287   0012FE  6FA9               	movwf	(?___fladd+2)& (0+255),b
  5288   001300  0E00               	movlw	0
  5289   001302  6FAA               	movwf	(?___fladd+3)& (0+255),b
  5290   001304  EF40  F00A         	goto	l873
  5291   001308                     l4071:
  5292                           
  5293                           ; BSR set to: 0
  5294   001308  90D8               	bcf	status,0,c
  5295   00130A  37A7               	rlcf	___fladd@b& (0+255),f,b
  5296   00130C  37A8               	rlcf	(___fladd@b+1)& (0+255),f,b
  5297   00130E  37A9               	rlcf	(___fladd@b+2)& (0+255),f,b
  5298   001310  37AA               	rlcf	(___fladd@b+3)& (0+255),f,b
  5299   001312                     
  5300                           ; BSR set to: 0
  5301   001312  AFB6               	btfss	___fladd@grs& (0+255),7,b
  5302   001314  EF8E  F009         	goto	u4651
  5303   001318  EF90  F009         	goto	u4650
  5304   00131C                     u4651:
  5305   00131C  EF91  F009         	goto	l4077
  5306   001320                     u4650:
  5307   001320                     
  5308                           ; BSR set to: 0
  5309   001320  81A7               	bsf	___fladd@b& (0+255),0,b
  5310   001322                     l4077:
  5311                           
  5312                           ; BSR set to: 0
  5313   001322  A1B6               	btfss	___fladd@grs& (0+255),0,b
  5314   001324  EF96  F009         	goto	u4661
  5315   001328  EF98  F009         	goto	u4660
  5316   00132C                     u4661:
  5317   00132C  EF9C  F009         	goto	l4081
  5318   001330                     u4660:
  5319   001330                     
  5320                           ; BSR set to: 0
  5321   001330  80D8               	bsf	status,0,c
  5322   001332  37B6               	rlcf	___fladd@grs& (0+255),f,b
  5323   001334  EF9E  F009         	goto	l4083
  5324   001338                     l4081:
  5325                           
  5326                           ; BSR set to: 0
  5327   001338  90D8               	bcf	status,0,c
  5328   00133A  37B6               	rlcf	___fladd@grs& (0+255),f,b
  5329   00133C                     l4083:
  5330                           
  5331                           ; BSR set to: 0
  5332   00133C  51B5               	movf	___fladd@bexp& (0+255),w,b
  5333   00133E  B4D8               	btfsc	status,2,c
  5334   001340  EFA4  F009         	goto	u4671
  5335   001344  EFA6  F009         	goto	u4670
  5336   001348                     u4671:
  5337   001348  EFA7  F009         	goto	l4087
  5338   00134C                     u4670:
  5339   00134C                     
  5340                           ; BSR set to: 0
  5341   00134C  07B5               	decf	___fladd@bexp& (0+255),f,b
  5342   00134E                     l4087:
  5343                           
  5344                           ; BSR set to: 0
  5345   00134E  AFA9               	btfss	(___fladd@b+2)& (0+255),7,b
  5346   001350  EFAC  F009         	goto	u4681
  5347   001354  EFAE  F009         	goto	u4680
  5348   001358                     u4681:
  5349   001358  EF84  F009         	goto	l4071
  5350   00135C                     u4680:
  5351   00135C                     l878:
  5352                           
  5353                           ; BSR set to: 0
  5354   00135C  6BB4               	clrf	___fladd@aexp& (0+255),b
  5355   00135E  AFB6               	btfss	___fladd@grs& (0+255),7,b
  5356   001360  EFB4  F009         	goto	u4691
  5357   001364  EFB6  F009         	goto	u4690
  5358   001368                     u4691:
  5359   001368  EFCE  F009         	goto	l890
  5360   00136C                     u4690:
  5361   00136C                     
  5362                           ; BSR set to: 0
  5363   00136C  C0B6  F0AF         	movff	___fladd@grs,??___fladd
  5364   001370  0E7F               	movlw	127
  5365   001372  17AF               	andwf	??___fladd& (0+255),f,b
  5366   001374  B4D8               	btfsc	status,2,c
  5367   001376  EFBF  F009         	goto	u4701
  5368   00137A  EFC1  F009         	goto	u4700
  5369   00137E                     u4701:
  5370   00137E  EFC5  F009         	goto	l891
  5371   001382                     u4700:
  5372   001382                     l4091:
  5373                           
  5374                           ; BSR set to: 0
  5375   001382  0E01               	movlw	1
  5376   001384  6FB4               	movwf	___fladd@aexp& (0+255),b
  5377   001386  EFCE  F009         	goto	l890
  5378   00138A                     l891:
  5379                           
  5380                           ; BSR set to: 0
  5381   00138A  A1A7               	btfss	___fladd@b& (0+255),0,b
  5382   00138C  EFCA  F009         	goto	u4711
  5383   001390  EFCC  F009         	goto	u4710
  5384   001394                     u4711:
  5385   001394  EFCE  F009         	goto	l890
  5386   001398                     u4710:
  5387   001398  EFC1  F009         	goto	l4091
  5388   00139C                     l890:
  5389                           
  5390                           ; BSR set to: 0
  5391   00139C  51B4               	movf	___fladd@aexp& (0+255),w,b
  5392   00139E  B4D8               	btfsc	status,2,c
  5393   0013A0  EFD4  F009         	goto	u4721
  5394   0013A4  EFD6  F009         	goto	u4720
  5395   0013A8                     u4721:
  5396   0013A8  EF01  F00A         	goto	l4103
  5397   0013AC                     u4720:
  5398   0013AC                     
  5399                           ; BSR set to: 0
  5400   0013AC  0E01               	movlw	1
  5401   0013AE  27A7               	addwf	___fladd@b& (0+255),f,b
  5402   0013B0  0E00               	movlw	0
  5403   0013B2  23A8               	addwfc	(___fladd@b+1)& (0+255),f,b
  5404   0013B4  23A9               	addwfc	(___fladd@b+2)& (0+255),f,b
  5405   0013B6  23AA               	addwfc	(___fladd@b+3)& (0+255),f,b
  5406   0013B8                     
  5407                           ; BSR set to: 0
  5408   0013B8  A1AA               	btfss	(___fladd@b+3)& (0+255),0,b
  5409   0013BA  EFE1  F009         	goto	u4731
  5410   0013BE  EFE3  F009         	goto	u4730
  5411   0013C2                     u4731:
  5412   0013C2  EF01  F00A         	goto	l4103
  5413   0013C6                     u4730:
  5414   0013C6                     
  5415                           ; BSR set to: 0
  5416   0013C6  C0A7  F0AF         	movff	___fladd@b,??___fladd
  5417   0013CA  C0A8  F0B0         	movff	___fladd@b+1,??___fladd+1
  5418   0013CE  C0A9  F0B1         	movff	___fladd@b+2,??___fladd+2
  5419   0013D2  C0AA  F0B2         	movff	___fladd@b+3,??___fladd+3
  5420   0013D6  35B2               	rlcf	(??___fladd+3)& (0+255),w,b
  5421   0013D8  33B2               	rrcf	(??___fladd+3)& (0+255),f,b
  5422   0013DA  33B1               	rrcf	(??___fladd+2)& (0+255),f,b
  5423   0013DC  33B0               	rrcf	(??___fladd+1)& (0+255),f,b
  5424   0013DE  33AF               	rrcf	??___fladd& (0+255),f,b
  5425   0013E0  C0AF  F0A7         	movff	??___fladd,___fladd@b
  5426   0013E4  C0B0  F0A8         	movff	??___fladd+1,___fladd@b+1
  5427   0013E8  C0B1  F0A9         	movff	??___fladd+2,___fladd@b+2
  5428   0013EC  C0B2  F0AA         	movff	??___fladd+3,___fladd@b+3
  5429   0013F0  29B5               	incf	___fladd@bexp& (0+255),w,b
  5430   0013F2  B4D8               	btfsc	status,2,c
  5431   0013F4  EFFE  F009         	goto	u4741
  5432   0013F8  EF00  F00A         	goto	u4740
  5433   0013FC                     u4741:
  5434   0013FC  EF01  F00A         	goto	l4103
  5435   001400                     u4740:
  5436   001400                     
  5437                           ; BSR set to: 0
  5438   001400  2BB5               	incf	___fladd@bexp& (0+255),f,b
  5439   001402                     l4103:
  5440                           
  5441                           ; BSR set to: 0
  5442   001402  29B5               	incf	___fladd@bexp& (0+255),w,b
  5443   001404  B4D8               	btfsc	status,2,c
  5444   001406  EF07  F00A         	goto	u4751
  5445   00140A  EF09  F00A         	goto	u4750
  5446   00140E                     u4751:
  5447   00140E  EF11  F00A         	goto	l4107
  5448   001412                     u4750:
  5449   001412                     
  5450                           ; BSR set to: 0
  5451   001412  51B5               	movf	___fladd@bexp& (0+255),w,b
  5452   001414  A4D8               	btfss	status,2,c
  5453   001416  EF0F  F00A         	goto	u4761
  5454   00141A  EF11  F00A         	goto	u4760
  5455   00141E                     u4761:
  5456   00141E  EF22  F00A         	goto	l897
  5457   001422                     u4760:
  5458   001422                     l4107:
  5459                           
  5460                           ; BSR set to: 0
  5461   001422  0E00               	movlw	0
  5462   001424  6FA7               	movwf	___fladd@b& (0+255),b
  5463   001426  0E00               	movlw	0
  5464   001428  6FA8               	movwf	(___fladd@b+1)& (0+255),b
  5465   00142A  0E00               	movlw	0
  5466   00142C  6FA9               	movwf	(___fladd@b+2)& (0+255),b
  5467   00142E  0E00               	movlw	0
  5468   001430  6FAA               	movwf	(___fladd@b+3)& (0+255),b
  5469   001432  51B5               	movf	___fladd@bexp& (0+255),w,b
  5470   001434  A4D8               	btfss	status,2,c
  5471   001436  EF1F  F00A         	goto	u4771
  5472   00143A  EF21  F00A         	goto	u4770
  5473   00143E                     u4771:
  5474   00143E  EF22  F00A         	goto	l897
  5475   001442                     u4770:
  5476   001442                     
  5477                           ; BSR set to: 0
  5478   001442  6BB3               	clrf	___fladd@signs& (0+255),b
  5479   001444                     l897:
  5480                           
  5481                           ; BSR set to: 0
  5482   001444  A1B5               	btfss	___fladd@bexp& (0+255),0,b
  5483   001446  EF27  F00A         	goto	u4781
  5484   00144A  EF29  F00A         	goto	u4780
  5485   00144E                     u4781:
  5486   00144E  EF2C  F00A         	goto	l4113
  5487   001452                     u4780:
  5488   001452                     
  5489                           ; BSR set to: 0
  5490   001452  8FA9               	bsf	(___fladd@b+2)& (0+255),7,b
  5491   001454  EF2D  F00A         	goto	l4115
  5492   001458                     l4113:
  5493                           
  5494                           ; BSR set to: 0
  5495   001458  9FA9               	bcf	(___fladd@b+2)& (0+255),7,b
  5496   00145A                     l4115:
  5497                           
  5498                           ; BSR set to: 0
  5499   00145A  90D8               	bcf	status,0,c
  5500   00145C  31B5               	rrcf	___fladd@bexp& (0+255),w,b
  5501   00145E  6FAA               	movwf	(___fladd@b+3)& (0+255),b
  5502   001460                     
  5503                           ; BSR set to: 0
  5504   001460  AFB3               	btfss	___fladd@signs& (0+255),7,b
  5505   001462  EF35  F00A         	goto	u4791
  5506   001466  EF37  F00A         	goto	u4790
  5507   00146A                     u4791:
  5508   00146A  EF38  F00A         	goto	l4121
  5509   00146E                     u4790:
  5510   00146E                     
  5511                           ; BSR set to: 0
  5512   00146E  8FAA               	bsf	(___fladd@b+3)& (0+255),7,b
  5513   001470                     l4121:
  5514                           
  5515                           ; BSR set to: 0
  5516   001470  C0A7  F0A7         	movff	___fladd@b,?___fladd
  5517   001474  C0A8  F0A8         	movff	___fladd@b+1,?___fladd+1
  5518   001478  C0A9  F0A9         	movff	___fladd@b+2,?___fladd+2
  5519   00147C  C0AA  F0AA         	movff	___fladd@b+3,?___fladd+3
  5520   001480                     l873:
  5521                           
  5522                           ; BSR set to: 0
  5523   001480  0012               	return		;funcret
  5524   001482                     __end_of___fladd:
  5525                           	callstack 0
  5526                           
  5527 ;; *************** function ___flneg *****************
  5528 ;; Defined at:
  5529 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flneg.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;  f1              4    0[BANK0 ] unsigned char 
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;		None
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  4    0[BANK0 ] unsigned char 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2, status,0
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5543 ;;      Params:         0       4       0       0       0       0       0
  5544 ;;      Locals:         0       0       0       0       0       0       0
  5545 ;;      Temps:          0       0       0       0       0       0       0
  5546 ;;      Totals:         0       4       0       0       0       0       0
  5547 ;;Total ram usage:        4 bytes
  5548 ;; Hardware stack levels used: 1
  5549 ;; Hardware stack levels required when called: 7
  5550 ;; This function calls:
  5551 ;;		Nothing
  5552 ;; This function is called by:
  5553 ;;		_atan2f
  5554 ;;		_atanf
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           	psect	text15
  5559   002C44                     __ptext15:
  5560                           	callstack 0
  5561   002C44                     ___flneg:
  5562                           	callstack 19
  5563   002C44  0100               	movlb	0	; () banked
  5564   002C46  5180               	movf	___flneg@f1& (0+255),w,b
  5565   002C48  1181               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5566   002C4A  1182               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5567   002C4C  1183               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5568   002C4E  B4D8               	btfsc	status,2,c
  5569   002C50  EF2C  F016         	goto	u5341
  5570   002C54  EF2E  F016         	goto	u5340
  5571   002C58                     u5341:
  5572   002C58  EF36  F016         	goto	l4479
  5573   002C5C                     u5340:
  5574   002C5C                     
  5575                           ; BSR set to: 0
  5576   002C5C  0E00               	movlw	0
  5577   002C5E  1B80               	xorwf	___flneg@f1& (0+255),f,b
  5578   002C60  0E00               	movlw	0
  5579   002C62  1B81               	xorwf	(___flneg@f1+1)& (0+255),f,b
  5580   002C64  0E00               	movlw	0
  5581   002C66  1B82               	xorwf	(___flneg@f1+2)& (0+255),f,b
  5582   002C68  0E80               	movlw	128
  5583   002C6A  1B83               	xorwf	(___flneg@f1+3)& (0+255),f,b
  5584   002C6C                     l4479:
  5585                           
  5586                           ; BSR set to: 0
  5587   002C6C  C080  F080         	movff	___flneg@f1,?___flneg
  5588   002C70  C081  F081         	movff	___flneg@f1+1,?___flneg+1
  5589   002C74  C082  F082         	movff	___flneg@f1+2,?___flneg+2
  5590   002C78  C083  F083         	movff	___flneg@f1+3,?___flneg+3
  5591   002C7C                     
  5592                           ; BSR set to: 0
  5593   002C7C  0012               	return		;funcret
  5594   002C7E                     __end_of___flneg:
  5595                           	callstack 0
  5596                           
  5597 ;; *************** function ___flmul *****************
  5598 ;; Defined at:
  5599 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcmul.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;  b               4   14[BANK0 ] unsigned char 
  5602 ;;  a               4   18[BANK0 ] unsigned char 
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;  prod            4   33[BANK0 ] struct .
  5605 ;;  grs             4   28[BANK0 ] unsigned long 
  5606 ;;  temp            2   37[BANK0 ] struct .
  5607 ;;  bexp            1   32[BANK0 ] unsigned char 
  5608 ;;  aexp            1   27[BANK0 ] unsigned char 
  5609 ;;  sign            1   26[BANK0 ] unsigned char 
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  4   14[BANK0 ] unsigned char 
  5612 ;; Registers used:
  5613 ;;		wreg, status,2, status,0, prodl, prodh
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5619 ;;      Params:         0       8       0       0       0       0       0
  5620 ;;      Locals:         0      13       0       0       0       0       0
  5621 ;;      Temps:          0       4       0       0       0       0       0
  5622 ;;      Totals:         0      25       0       0       0       0       0
  5623 ;;Total ram usage:       25 bytes
  5624 ;; Hardware stack levels used: 1
  5625 ;; Hardware stack levels required when called: 7
  5626 ;; This function calls:
  5627 ;;		Nothing
  5628 ;; This function is called by:
  5629 ;;		_calculate_angle
  5630 ;;		_atanf
  5631 ;;		_Calibration
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           	psect	text16
  5636   001482                     __ptext16:
  5637                           	callstack 0
  5638   001482                     ___flmul:
  5639                           	callstack 19
  5640   001482  0100               	movlb	0	; () banked
  5641   001484  5191               	movf	(___flmul@b+3)& (0+255),w,b
  5642   001486  0B80               	andlw	128
  5643   001488  6F9A               	movwf	___flmul@sign& (0+255),b
  5644   00148A  5191               	movf	(___flmul@b+3)& (0+255),w,b
  5645   00148C  2591               	addwf	(___flmul@b+3)& (0+255),w,b
  5646   00148E  6FA0               	movwf	___flmul@bexp& (0+255),b
  5647   001490                     
  5648                           ; BSR set to: 0
  5649   001490  AF90               	btfss	(___flmul@b+2)& (0+255),7,b
  5650   001492  EF4D  F00A         	goto	u5031
  5651   001496  EF4F  F00A         	goto	u5030
  5652   00149A                     u5031:
  5653   00149A  EF50  F00A         	goto	l4267
  5654   00149E                     u5030:
  5655   00149E                     
  5656                           ; BSR set to: 0
  5657   00149E  81A0               	bsf	___flmul@bexp& (0+255),0,b
  5658   0014A0                     l4267:
  5659                           
  5660                           ; BSR set to: 0
  5661   0014A0  51A0               	movf	___flmul@bexp& (0+255),w,b
  5662   0014A2  B4D8               	btfsc	status,2,c
  5663   0014A4  EF56  F00A         	goto	u5041
  5664   0014A8  EF58  F00A         	goto	u5040
  5665   0014AC                     u5041:
  5666   0014AC  EF6B  F00A         	goto	l4275
  5667   0014B0                     u5040:
  5668   0014B0                     
  5669                           ; BSR set to: 0
  5670   0014B0  29A0               	incf	___flmul@bexp& (0+255),w,b
  5671   0014B2  A4D8               	btfss	status,2,c
  5672   0014B4  EF5E  F00A         	goto	u5051
  5673   0014B8  EF60  F00A         	goto	u5050
  5674   0014BC                     u5051:
  5675   0014BC  EF68  F00A         	goto	l4273
  5676   0014C0                     u5050:
  5677   0014C0                     
  5678                           ; BSR set to: 0
  5679   0014C0  0E00               	movlw	0
  5680   0014C2  6F8E               	movwf	___flmul@b& (0+255),b
  5681   0014C4  0E00               	movlw	0
  5682   0014C6  6F8F               	movwf	(___flmul@b+1)& (0+255),b
  5683   0014C8  0E00               	movlw	0
  5684   0014CA  6F90               	movwf	(___flmul@b+2)& (0+255),b
  5685   0014CC  0E00               	movlw	0
  5686   0014CE  6F91               	movwf	(___flmul@b+3)& (0+255),b
  5687   0014D0                     l4273:
  5688                           
  5689                           ; BSR set to: 0
  5690   0014D0  8F90               	bsf	(___flmul@b+2)& (0+255),7,b
  5691   0014D2  EF73  F00A         	goto	l4277
  5692   0014D6                     l4275:
  5693                           
  5694                           ; BSR set to: 0
  5695   0014D6  0E00               	movlw	0
  5696   0014D8  6F8E               	movwf	___flmul@b& (0+255),b
  5697   0014DA  0E00               	movlw	0
  5698   0014DC  6F8F               	movwf	(___flmul@b+1)& (0+255),b
  5699   0014DE  0E00               	movlw	0
  5700   0014E0  6F90               	movwf	(___flmul@b+2)& (0+255),b
  5701   0014E2  0E00               	movlw	0
  5702   0014E4  6F91               	movwf	(___flmul@b+3)& (0+255),b
  5703   0014E6                     l4277:
  5704                           
  5705                           ; BSR set to: 0
  5706   0014E6  5195               	movf	(___flmul@a+3)& (0+255),w,b
  5707   0014E8  0B80               	andlw	128
  5708   0014EA  1B9A               	xorwf	___flmul@sign& (0+255),f,b
  5709   0014EC                     
  5710                           ; BSR set to: 0
  5711   0014EC  5195               	movf	(___flmul@a+3)& (0+255),w,b
  5712   0014EE  2595               	addwf	(___flmul@a+3)& (0+255),w,b
  5713   0014F0  6F9B               	movwf	___flmul@aexp& (0+255),b
  5714   0014F2                     
  5715                           ; BSR set to: 0
  5716   0014F2  AF94               	btfss	(___flmul@a+2)& (0+255),7,b
  5717   0014F4  EF7E  F00A         	goto	u5061
  5718   0014F8  EF80  F00A         	goto	u5060
  5719   0014FC                     u5061:
  5720   0014FC  EF81  F00A         	goto	l4285
  5721   001500                     u5060:
  5722   001500                     
  5723                           ; BSR set to: 0
  5724   001500  819B               	bsf	___flmul@aexp& (0+255),0,b
  5725   001502                     l4285:
  5726                           
  5727                           ; BSR set to: 0
  5728   001502  519B               	movf	___flmul@aexp& (0+255),w,b
  5729   001504  B4D8               	btfsc	status,2,c
  5730   001506  EF87  F00A         	goto	u5071
  5731   00150A  EF89  F00A         	goto	u5070
  5732   00150E                     u5071:
  5733   00150E  EF9C  F00A         	goto	l4293
  5734   001512                     u5070:
  5735   001512                     
  5736                           ; BSR set to: 0
  5737   001512  299B               	incf	___flmul@aexp& (0+255),w,b
  5738   001514  A4D8               	btfss	status,2,c
  5739   001516  EF8F  F00A         	goto	u5081
  5740   00151A  EF91  F00A         	goto	u5080
  5741   00151E                     u5081:
  5742   00151E  EF99  F00A         	goto	l4291
  5743   001522                     u5080:
  5744   001522                     
  5745                           ; BSR set to: 0
  5746   001522  0E00               	movlw	0
  5747   001524  6F92               	movwf	___flmul@a& (0+255),b
  5748   001526  0E00               	movlw	0
  5749   001528  6F93               	movwf	(___flmul@a+1)& (0+255),b
  5750   00152A  0E00               	movlw	0
  5751   00152C  6F94               	movwf	(___flmul@a+2)& (0+255),b
  5752   00152E  0E00               	movlw	0
  5753   001530  6F95               	movwf	(___flmul@a+3)& (0+255),b
  5754   001532                     l4291:
  5755                           
  5756                           ; BSR set to: 0
  5757   001532  8F94               	bsf	(___flmul@a+2)& (0+255),7,b
  5758   001534  EFA4  F00A         	goto	l950
  5759   001538                     l4293:
  5760                           
  5761                           ; BSR set to: 0
  5762   001538  0E00               	movlw	0
  5763   00153A  6F92               	movwf	___flmul@a& (0+255),b
  5764   00153C  0E00               	movlw	0
  5765   00153E  6F93               	movwf	(___flmul@a+1)& (0+255),b
  5766   001540  0E00               	movlw	0
  5767   001542  6F94               	movwf	(___flmul@a+2)& (0+255),b
  5768   001544  0E00               	movlw	0
  5769   001546  6F95               	movwf	(___flmul@a+3)& (0+255),b
  5770   001548                     l950:
  5771                           
  5772                           ; BSR set to: 0
  5773   001548  519B               	movf	___flmul@aexp& (0+255),w,b
  5774   00154A  B4D8               	btfsc	status,2,c
  5775   00154C  EFAA  F00A         	goto	u5091
  5776   001550  EFAC  F00A         	goto	u5090
  5777   001554                     u5091:
  5778   001554  EFB4  F00A         	goto	l4297
  5779   001558                     u5090:
  5780   001558                     
  5781                           ; BSR set to: 0
  5782   001558  51A0               	movf	___flmul@bexp& (0+255),w,b
  5783   00155A  A4D8               	btfss	status,2,c
  5784   00155C  EFB2  F00A         	goto	u5101
  5785   001560  EFB4  F00A         	goto	u5100
  5786   001564                     u5101:
  5787   001564  EFBE  F00A         	goto	l4301
  5788   001568                     u5100:
  5789   001568                     l4297:
  5790                           
  5791                           ; BSR set to: 0
  5792   001568  0E00               	movlw	0
  5793   00156A  6F8E               	movwf	?___flmul& (0+255),b
  5794   00156C  0E00               	movlw	0
  5795   00156E  6F8F               	movwf	(?___flmul+1)& (0+255),b
  5796   001570  0E00               	movlw	0
  5797   001572  6F90               	movwf	(?___flmul+2)& (0+255),b
  5798   001574  0E00               	movlw	0
  5799   001576  6F91               	movwf	(?___flmul+3)& (0+255),b
  5800   001578  EF54  F00C         	goto	l954
  5801   00157C                     l4301:
  5802                           
  5803                           ; BSR set to: 0
  5804   00157C  5194               	movf	(___flmul@a+2)& (0+255),w,b
  5805   00157E  038E               	mulwf	___flmul@b& (0+255),b
  5806   001580  CFF3 F0A5          	movff	prodl,___flmul@temp
  5807   001584  CFF4 F0A6          	movff	prodh,___flmul@temp+1
  5808   001588                     
  5809                           ; BSR set to: 0
  5810   001588  51A5               	movf	___flmul@temp& (0+255),w,b
  5811   00158A  6F9C               	movwf	___flmul@grs& (0+255),b
  5812   00158C  6B9D               	clrf	(___flmul@grs+1)& (0+255),b
  5813   00158E  6B9E               	clrf	(___flmul@grs+2)& (0+255),b
  5814   001590  6B9F               	clrf	(___flmul@grs+3)& (0+255),b
  5815   001592                     
  5816                           ; BSR set to: 0
  5817   001592  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
  5818   001594  6FA1               	movwf	___flmul@prod& (0+255),b
  5819   001596  6BA2               	clrf	(___flmul@prod+1)& (0+255),b
  5820   001598  6BA3               	clrf	(___flmul@prod+2)& (0+255),b
  5821   00159A  6BA4               	clrf	(___flmul@prod+3)& (0+255),b
  5822   00159C  5193               	movf	(___flmul@a+1)& (0+255),w,b
  5823   00159E  038F               	mulwf	(___flmul@b+1)& (0+255),b
  5824   0015A0  CFF3 F0A5          	movff	prodl,___flmul@temp
  5825   0015A4  CFF4 F0A6          	movff	prodh,___flmul@temp+1
  5826   0015A8                     
  5827                           ; BSR set to: 0
  5828   0015A8  51A5               	movf	___flmul@temp& (0+255),w,b
  5829   0015AA  279C               	addwf	___flmul@grs& (0+255),f,b
  5830   0015AC  0E00               	movlw	0
  5831   0015AE  239D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5832   0015B0  239E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5833   0015B2  239F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5834   0015B4                     
  5835                           ; BSR set to: 0
  5836   0015B4  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
  5837   0015B6  27A1               	addwf	___flmul@prod& (0+255),f,b
  5838   0015B8  0E00               	movlw	0
  5839   0015BA  23A2               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5840   0015BC  23A3               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5841   0015BE  23A4               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5842   0015C0  5192               	movf	___flmul@a& (0+255),w,b
  5843   0015C2  0390               	mulwf	(___flmul@b+2)& (0+255),b
  5844   0015C4  CFF3 F0A5          	movff	prodl,___flmul@temp
  5845   0015C8  CFF4 F0A6          	movff	prodh,___flmul@temp+1
  5846   0015CC                     
  5847                           ; BSR set to: 0
  5848   0015CC  51A5               	movf	___flmul@temp& (0+255),w,b
  5849   0015CE  279C               	addwf	___flmul@grs& (0+255),f,b
  5850   0015D0  0E00               	movlw	0
  5851   0015D2  239D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5852   0015D4  239E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5853   0015D6  239F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5854   0015D8                     
  5855                           ; BSR set to: 0
  5856   0015D8  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
  5857   0015DA  27A1               	addwf	___flmul@prod& (0+255),f,b
  5858   0015DC  0E00               	movlw	0
  5859   0015DE  23A2               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5860   0015E0  23A3               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5861   0015E2  23A4               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5862   0015E4                     
  5863                           ; BSR set to: 0
  5864   0015E4  C09E  F09F         	movff	___flmul@grs+2,___flmul@grs+3
  5865   0015E8  C09D  F09E         	movff	___flmul@grs+1,___flmul@grs+2
  5866   0015EC  C09C  F09D         	movff	___flmul@grs,___flmul@grs+1
  5867   0015F0  6B9C               	clrf	___flmul@grs& (0+255),b
  5868   0015F2                     
  5869                           ; BSR set to: 0
  5870   0015F2  5192               	movf	___flmul@a& (0+255),w,b
  5871   0015F4  038F               	mulwf	(___flmul@b+1)& (0+255),b
  5872   0015F6  CFF3 F0A5          	movff	prodl,___flmul@temp
  5873   0015FA  CFF4 F0A6          	movff	prodh,___flmul@temp+1
  5874   0015FE                     
  5875                           ; BSR set to: 0
  5876   0015FE  51A5               	movf	___flmul@temp& (0+255),w,b
  5877   001600  279C               	addwf	___flmul@grs& (0+255),f,b
  5878   001602  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
  5879   001604  239D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5880   001606  0E00               	movlw	0
  5881   001608  239E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5882   00160A  0E00               	movlw	0
  5883   00160C  239F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5884   00160E                     
  5885                           ; BSR set to: 0
  5886   00160E  5193               	movf	(___flmul@a+1)& (0+255),w,b
  5887   001610  038E               	mulwf	___flmul@b& (0+255),b
  5888   001612  CFF3 F0A5          	movff	prodl,___flmul@temp
  5889   001616  CFF4 F0A6          	movff	prodh,___flmul@temp+1
  5890   00161A                     
  5891                           ; BSR set to: 0
  5892   00161A  51A5               	movf	___flmul@temp& (0+255),w,b
  5893   00161C  279C               	addwf	___flmul@grs& (0+255),f,b
  5894   00161E  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
  5895   001620  239D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5896   001622  0E00               	movlw	0
  5897   001624  239E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5898   001626  0E00               	movlw	0
  5899   001628  239F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5900   00162A                     
  5901                           ; BSR set to: 0
  5902   00162A  C09E  F09F         	movff	___flmul@grs+2,___flmul@grs+3
  5903   00162E  C09D  F09E         	movff	___flmul@grs+1,___flmul@grs+2
  5904   001632  C09C  F09D         	movff	___flmul@grs,___flmul@grs+1
  5905   001636  6B9C               	clrf	___flmul@grs& (0+255),b
  5906   001638  5192               	movf	___flmul@a& (0+255),w,b
  5907   00163A  038E               	mulwf	___flmul@b& (0+255),b
  5908   00163C  CFF3 F0A5          	movff	prodl,___flmul@temp
  5909   001640  CFF4 F0A6          	movff	prodh,___flmul@temp+1
  5910   001644                     
  5911                           ; BSR set to: 0
  5912   001644  51A5               	movf	___flmul@temp& (0+255),w,b
  5913   001646  279C               	addwf	___flmul@grs& (0+255),f,b
  5914   001648  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
  5915   00164A  239D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5916   00164C  0E00               	movlw	0
  5917   00164E  239E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5918   001650  0E00               	movlw	0
  5919   001652  239F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5920   001654                     
  5921                           ; BSR set to: 0
  5922   001654  5194               	movf	(___flmul@a+2)& (0+255),w,b
  5923   001656  038F               	mulwf	(___flmul@b+1)& (0+255),b
  5924   001658  CFF3 F0A5          	movff	prodl,___flmul@temp
  5925   00165C  CFF4 F0A6          	movff	prodh,___flmul@temp+1
  5926   001660  51A5               	movf	___flmul@temp& (0+255),w,b
  5927   001662  27A1               	addwf	___flmul@prod& (0+255),f,b
  5928   001664  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
  5929   001666  23A2               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5930   001668  0E00               	movlw	0
  5931   00166A  23A3               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5932   00166C  0E00               	movlw	0
  5933   00166E  23A4               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5934   001670                     
  5935                           ; BSR set to: 0
  5936   001670  5193               	movf	(___flmul@a+1)& (0+255),w,b
  5937   001672  0390               	mulwf	(___flmul@b+2)& (0+255),b
  5938   001674  CFF3 F0A5          	movff	prodl,___flmul@temp
  5939   001678  CFF4 F0A6          	movff	prodh,___flmul@temp+1
  5940   00167C                     
  5941                           ; BSR set to: 0
  5942   00167C  51A5               	movf	___flmul@temp& (0+255),w,b
  5943   00167E  27A1               	addwf	___flmul@prod& (0+255),f,b
  5944   001680  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
  5945   001682  23A2               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5946   001684  0E00               	movlw	0
  5947   001686  23A3               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5948   001688  0E00               	movlw	0
  5949   00168A  23A4               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5950   00168C  5194               	movf	(___flmul@a+2)& (0+255),w,b
  5951   00168E  0390               	mulwf	(___flmul@b+2)& (0+255),b
  5952   001690  CFF3 F0A5          	movff	prodl,___flmul@temp
  5953   001694  CFF4 F0A6          	movff	prodh,___flmul@temp+1
  5954   001698                     
  5955                           ; BSR set to: 0
  5956   001698  51A5               	movf	___flmul@temp& (0+255),w,b
  5957   00169A  6F96               	movwf	??___flmul& (0+255),b
  5958   00169C  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
  5959   00169E  6F97               	movwf	(??___flmul+1)& (0+255),b
  5960   0016A0  6B98               	clrf	(??___flmul+2)& (0+255),b
  5961   0016A2  6B99               	clrf	(??___flmul+3)& (0+255),b
  5962   0016A4  C098  F099         	movff	??___flmul+2,??___flmul+3
  5963   0016A8  C097  F098         	movff	??___flmul+1,??___flmul+2
  5964   0016AC  C096  F097         	movff	??___flmul,??___flmul+1
  5965   0016B0  6B96               	clrf	??___flmul& (0+255),b
  5966   0016B2  5196               	movf	??___flmul& (0+255),w,b
  5967   0016B4  27A1               	addwf	___flmul@prod& (0+255),f,b
  5968   0016B6  5197               	movf	(??___flmul+1)& (0+255),w,b
  5969   0016B8  23A2               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5970   0016BA  5198               	movf	(??___flmul+2)& (0+255),w,b
  5971   0016BC  23A3               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5972   0016BE  5199               	movf	(??___flmul+3)& (0+255),w,b
  5973   0016C0  23A4               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5974   0016C2                     
  5975                           ; BSR set to: 0
  5976   0016C2  C09C  F096         	movff	___flmul@grs,??___flmul
  5977   0016C6  C09D  F097         	movff	___flmul@grs+1,??___flmul+1
  5978   0016CA  C09E  F098         	movff	___flmul@grs+2,??___flmul+2
  5979   0016CE  C09F  F099         	movff	___flmul@grs+3,??___flmul+3
  5980   0016D2  0E19               	movlw	25
  5981   0016D4  EF71  F00B         	goto	u5110
  5982   0016D8                     u5115:
  5983   0016D8  90D8               	bcf	status,0,c
  5984   0016DA  3399               	rrcf	(??___flmul+3)& (0+255),f,b
  5985   0016DC  3398               	rrcf	(??___flmul+2)& (0+255),f,b
  5986   0016DE  3397               	rrcf	(??___flmul+1)& (0+255),f,b
  5987   0016E0  3396               	rrcf	??___flmul& (0+255),f,b
  5988   0016E2                     u5110:
  5989   0016E2  2EE8               	decfsz	wreg,f,c
  5990   0016E4  EF6C  F00B         	goto	u5115
  5991   0016E8  5196               	movf	??___flmul& (0+255),w,b
  5992   0016EA  27A1               	addwf	___flmul@prod& (0+255),f,b
  5993   0016EC  5197               	movf	(??___flmul+1)& (0+255),w,b
  5994   0016EE  23A2               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5995   0016F0  5198               	movf	(??___flmul+2)& (0+255),w,b
  5996   0016F2  23A3               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5997   0016F4  5199               	movf	(??___flmul+3)& (0+255),w,b
  5998   0016F6  23A4               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5999   0016F8                     
  6000                           ; BSR set to: 0
  6001   0016F8  C09E  F09F         	movff	___flmul@grs+2,___flmul@grs+3
  6002   0016FC  C09D  F09E         	movff	___flmul@grs+1,___flmul@grs+2
  6003   001700  C09C  F09D         	movff	___flmul@grs,___flmul@grs+1
  6004   001704  6B9C               	clrf	___flmul@grs& (0+255),b
  6005   001706                     
  6006                           ; BSR set to: 0
  6007   001706  519B               	movf	___flmul@aexp& (0+255),w,b
  6008   001708  C0A0  F096         	movff	___flmul@bexp,??___flmul
  6009   00170C  6B97               	clrf	(??___flmul+1)& (0+255),b
  6010   00170E  2796               	addwf	??___flmul& (0+255),f,b
  6011   001710  0E00               	movlw	0
  6012   001712  2397               	addwfc	(??___flmul+1)& (0+255),f,b
  6013   001714  0E82               	movlw	130
  6014   001716  2596               	addwf	??___flmul& (0+255),w,b
  6015   001718  6FA5               	movwf	___flmul@temp& (0+255),b
  6016   00171A  0EFF               	movlw	255
  6017   00171C  2197               	addwfc	(??___flmul+1)& (0+255),w,b
  6018   00171E  6FA6               	movwf	(___flmul@temp+1)& (0+255),b
  6019   001720  EFA7  F00B         	goto	l4349
  6020   001724                     l4343:
  6021                           
  6022                           ; BSR set to: 0
  6023   001724  90D8               	bcf	status,0,c
  6024   001726  37A1               	rlcf	___flmul@prod& (0+255),f,b
  6025   001728  37A2               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6026   00172A  37A3               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6027   00172C  37A4               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6028   00172E                     
  6029                           ; BSR set to: 0
  6030   00172E  AF9F               	btfss	(___flmul@grs+3)& (0+255),7,b
  6031   001730  EF9C  F00B         	goto	u5121
  6032   001734  EF9E  F00B         	goto	u5120
  6033   001738                     u5121:
  6034   001738  EF9F  F00B         	goto	l957
  6035   00173C                     u5120:
  6036   00173C                     
  6037                           ; BSR set to: 0
  6038   00173C  81A1               	bsf	___flmul@prod& (0+255),0,b
  6039   00173E                     l957:
  6040                           
  6041                           ; BSR set to: 0
  6042   00173E  90D8               	bcf	status,0,c
  6043   001740  379C               	rlcf	___flmul@grs& (0+255),f,b
  6044   001742  379D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6045   001744  379E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6046   001746  379F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6047   001748  07A5               	decf	___flmul@temp& (0+255),f,b
  6048   00174A  A0D8               	btfss	status,0,c
  6049   00174C  07A6               	decf	(___flmul@temp+1)& (0+255),f,b
  6050   00174E                     l4349:
  6051                           
  6052                           ; BSR set to: 0
  6053   00174E  AFA3               	btfss	(___flmul@prod+2)& (0+255),7,b
  6054   001750  EFAC  F00B         	goto	u5131
  6055   001754  EFAE  F00B         	goto	u5130
  6056   001758                     u5131:
  6057   001758  EF92  F00B         	goto	l4343
  6058   00175C                     u5130:
  6059   00175C                     
  6060                           ; BSR set to: 0
  6061   00175C  6B9B               	clrf	___flmul@aexp& (0+255),b
  6062   00175E  AF9F               	btfss	(___flmul@grs+3)& (0+255),7,b
  6063   001760  EFB4  F00B         	goto	u5141
  6064   001764  EFB6  F00B         	goto	u5140
  6065   001768                     u5141:
  6066   001768  EFDA  F00B         	goto	l959
  6067   00176C                     u5140:
  6068   00176C                     
  6069                           ; BSR set to: 0
  6070   00176C  0EFF               	movlw	255
  6071   00176E  159C               	andwf	___flmul@grs& (0+255),w,b
  6072   001770  6F96               	movwf	??___flmul& (0+255),b
  6073   001772  0EFF               	movlw	255
  6074   001774  159D               	andwf	(___flmul@grs+1)& (0+255),w,b
  6075   001776  6F97               	movwf	(??___flmul+1)& (0+255),b
  6076   001778  0EFF               	movlw	255
  6077   00177A  159E               	andwf	(___flmul@grs+2)& (0+255),w,b
  6078   00177C  6F98               	movwf	(??___flmul+2)& (0+255),b
  6079   00177E  0E7F               	movlw	127
  6080   001780  159F               	andwf	(___flmul@grs+3)& (0+255),w,b
  6081   001782  6F99               	movwf	(??___flmul+3)& (0+255),b
  6082   001784  5196               	movf	??___flmul& (0+255),w,b
  6083   001786  1197               	iorwf	(??___flmul+1)& (0+255),w,b
  6084   001788  1198               	iorwf	(??___flmul+2)& (0+255),w,b
  6085   00178A  1199               	iorwf	(??___flmul+3)& (0+255),w,b
  6086   00178C  B4D8               	btfsc	status,2,c
  6087   00178E  EFCB  F00B         	goto	u5151
  6088   001792  EFCD  F00B         	goto	u5150
  6089   001796                     u5151:
  6090   001796  EFD1  F00B         	goto	l960
  6091   00179A                     u5150:
  6092   00179A                     l4353:
  6093                           
  6094                           ; BSR set to: 0
  6095   00179A  0E01               	movlw	1
  6096   00179C  6F9B               	movwf	___flmul@aexp& (0+255),b
  6097   00179E  EFDA  F00B         	goto	l959
  6098   0017A2                     l960:
  6099                           
  6100                           ; BSR set to: 0
  6101   0017A2  A1A1               	btfss	___flmul@prod& (0+255),0,b
  6102   0017A4  EFD6  F00B         	goto	u5161
  6103   0017A8  EFD8  F00B         	goto	u5160
  6104   0017AC                     u5161:
  6105   0017AC  EFDA  F00B         	goto	l959
  6106   0017B0                     u5160:
  6107   0017B0  EFCD  F00B         	goto	l4353
  6108   0017B4                     l959:
  6109                           
  6110                           ; BSR set to: 0
  6111   0017B4  519B               	movf	___flmul@aexp& (0+255),w,b
  6112   0017B6  B4D8               	btfsc	status,2,c
  6113   0017B8  EFE0  F00B         	goto	u5171
  6114   0017BC  EFE2  F00B         	goto	u5170
  6115   0017C0                     u5171:
  6116   0017C0  EF06  F00C         	goto	l4365
  6117   0017C4                     u5170:
  6118   0017C4                     
  6119                           ; BSR set to: 0
  6120   0017C4  0E01               	movlw	1
  6121   0017C6  27A1               	addwf	___flmul@prod& (0+255),f,b
  6122   0017C8  0E00               	movlw	0
  6123   0017CA  23A2               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6124   0017CC  23A3               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6125   0017CE  23A4               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6126   0017D0                     
  6127                           ; BSR set to: 0
  6128   0017D0  A1A4               	btfss	(___flmul@prod+3)& (0+255),0,b
  6129   0017D2  EFED  F00B         	goto	u5181
  6130   0017D6  EFEF  F00B         	goto	u5180
  6131   0017DA                     u5181:
  6132   0017DA  EF06  F00C         	goto	l4365
  6133   0017DE                     u5180:
  6134   0017DE                     
  6135                           ; BSR set to: 0
  6136   0017DE  C0A1  F096         	movff	___flmul@prod,??___flmul
  6137   0017E2  C0A2  F097         	movff	___flmul@prod+1,??___flmul+1
  6138   0017E6  C0A3  F098         	movff	___flmul@prod+2,??___flmul+2
  6139   0017EA  C0A4  F099         	movff	___flmul@prod+3,??___flmul+3
  6140   0017EE  3599               	rlcf	(??___flmul+3)& (0+255),w,b
  6141   0017F0  3399               	rrcf	(??___flmul+3)& (0+255),f,b
  6142   0017F2  3398               	rrcf	(??___flmul+2)& (0+255),f,b
  6143   0017F4  3397               	rrcf	(??___flmul+1)& (0+255),f,b
  6144   0017F6  3396               	rrcf	??___flmul& (0+255),f,b
  6145   0017F8  C096  F0A1         	movff	??___flmul,___flmul@prod
  6146   0017FC  C097  F0A2         	movff	??___flmul+1,___flmul@prod+1
  6147   001800  C098  F0A3         	movff	??___flmul+2,___flmul@prod+2
  6148   001804  C099  F0A4         	movff	??___flmul+3,___flmul@prod+3
  6149   001808                     
  6150                           ; BSR set to: 0
  6151   001808  4BA5               	infsnz	___flmul@temp& (0+255),f,b
  6152   00180A  2BA6               	incf	(___flmul@temp+1)& (0+255),f,b
  6153   00180C                     l4365:
  6154                           
  6155                           ; BSR set to: 0
  6156   00180C  BFA6               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6157   00180E  EF11  F00C         	goto	u5191
  6158   001812  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
  6159   001814  E108               	bnz	u5190
  6160   001816  29A5               	incf	___flmul@temp& (0+255),w,b
  6161   001818  A0D8               	btfss	status,0,c
  6162   00181A  EF11  F00C         	goto	u5191
  6163   00181E  EF13  F00C         	goto	u5190
  6164   001822                     u5191:
  6165   001822  EF1D  F00C         	goto	l4369
  6166   001826                     u5190:
  6167   001826                     
  6168                           ; BSR set to: 0
  6169   001826  0E00               	movlw	0
  6170   001828  6FA1               	movwf	___flmul@prod& (0+255),b
  6171   00182A  0E00               	movlw	0
  6172   00182C  6FA2               	movwf	(___flmul@prod+1)& (0+255),b
  6173   00182E  0E80               	movlw	128
  6174   001830  6FA3               	movwf	(___flmul@prod+2)& (0+255),b
  6175   001832  0E7F               	movlw	127
  6176   001834  6FA4               	movwf	(___flmul@prod+3)& (0+255),b
  6177   001836  EF4A  F00C         	goto	l4383
  6178   00183A                     l4369:
  6179                           
  6180                           ; BSR set to: 0
  6181   00183A  BFA6               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6182   00183C  EF2A  F00C         	goto	u5200
  6183   001840  51A6               	movf	(___flmul@temp+1)& (0+255),w,b
  6184   001842  E106               	bnz	u5201
  6185   001844  05A5               	decf	___flmul@temp& (0+255),w,b
  6186   001846  B0D8               	btfsc	status,0,c
  6187   001848  EF28  F00C         	goto	u5201
  6188   00184C  EF2A  F00C         	goto	u5200
  6189   001850                     u5201:
  6190   001850  EF35  F00C         	goto	l967
  6191   001854                     u5200:
  6192   001854                     
  6193                           ; BSR set to: 0
  6194   001854  0E00               	movlw	0
  6195   001856  6FA1               	movwf	___flmul@prod& (0+255),b
  6196   001858  0E00               	movlw	0
  6197   00185A  6FA2               	movwf	(___flmul@prod+1)& (0+255),b
  6198   00185C  0E00               	movlw	0
  6199   00185E  6FA3               	movwf	(___flmul@prod+2)& (0+255),b
  6200   001860  0E00               	movlw	0
  6201   001862  6FA4               	movwf	(___flmul@prod+3)& (0+255),b
  6202   001864                     
  6203                           ; BSR set to: 0
  6204   001864  6B9A               	clrf	___flmul@sign& (0+255),b
  6205   001866  EF4A  F00C         	goto	l4383
  6206   00186A                     l967:
  6207                           
  6208                           ; BSR set to: 0
  6209   00186A  C0A5  F0A0         	movff	___flmul@temp,___flmul@bexp
  6210   00186E                     
  6211                           ; BSR set to: 0
  6212   00186E  0EFF               	movlw	255
  6213   001870  17A1               	andwf	___flmul@prod& (0+255),f,b
  6214   001872  0EFF               	movlw	255
  6215   001874  17A2               	andwf	(___flmul@prod+1)& (0+255),f,b
  6216   001876  0E7F               	movlw	127
  6217   001878  17A3               	andwf	(___flmul@prod+2)& (0+255),f,b
  6218   00187A  0E00               	movlw	0
  6219   00187C  17A4               	andwf	(___flmul@prod+3)& (0+255),f,b
  6220   00187E                     
  6221                           ; BSR set to: 0
  6222   00187E  A1A0               	btfss	___flmul@bexp& (0+255),0,b
  6223   001880  EF44  F00C         	goto	u5211
  6224   001884  EF46  F00C         	goto	u5210
  6225   001888                     u5211:
  6226   001888  EF47  F00C         	goto	l4381
  6227   00188C                     u5210:
  6228   00188C                     
  6229                           ; BSR set to: 0
  6230   00188C  8FA3               	bsf	(___flmul@prod+2)& (0+255),7,b
  6231   00188E                     l4381:
  6232                           
  6233                           ; BSR set to: 0
  6234   00188E  90D8               	bcf	status,0,c
  6235   001890  31A0               	rrcf	___flmul@bexp& (0+255),w,b
  6236   001892  6FA4               	movwf	(___flmul@prod+3)& (0+255),b
  6237   001894                     l4383:
  6238                           
  6239                           ; BSR set to: 0
  6240   001894  519A               	movf	___flmul@sign& (0+255),w,b
  6241   001896  13A4               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6242   001898                     
  6243                           ; BSR set to: 0
  6244   001898  C0A1  F08E         	movff	___flmul@prod,?___flmul
  6245   00189C  C0A2  F08F         	movff	___flmul@prod+1,?___flmul+1
  6246   0018A0  C0A3  F090         	movff	___flmul@prod+2,?___flmul+2
  6247   0018A4  C0A4  F091         	movff	___flmul@prod+3,?___flmul+3
  6248   0018A8                     l954:
  6249                           
  6250                           ; BSR set to: 0
  6251   0018A8  0012               	return		;funcret
  6252   0018AA                     __end_of___flmul:
  6253                           	callstack 0
  6254                           
  6255 ;; *************** function ___fldiv *****************
  6256 ;; Defined at:
  6257 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;  b               4   55[BANK0 ] unsigned char 
  6260 ;;  a               4   59[BANK0 ] unsigned char 
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  grs             4   74[BANK0 ] unsigned long 
  6263 ;;  rem             4   67[BANK0 ] unsigned long 
  6264 ;;  new_exp         2   72[BANK0 ] short 
  6265 ;;  aexp            1   79[BANK0 ] unsigned char 
  6266 ;;  bexp            1   78[BANK0 ] unsigned char 
  6267 ;;  sign            1   71[BANK0 ] unsigned char 
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  4   55[BANK0 ] unsigned char 
  6270 ;; Registers used:
  6271 ;;		wreg, status,2, status,0
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6277 ;;      Params:         0       8       0       0       0       0       0
  6278 ;;      Locals:         0      13       0       0       0       0       0
  6279 ;;      Temps:          0       4       0       0       0       0       0
  6280 ;;      Totals:         0      25       0       0       0       0       0
  6281 ;;Total ram usage:       25 bytes
  6282 ;; Hardware stack levels used: 1
  6283 ;; Hardware stack levels required when called: 7
  6284 ;; This function calls:
  6285 ;;		Nothing
  6286 ;; This function is called by:
  6287 ;;		_calculate_angle
  6288 ;;		_atan2f
  6289 ;;		_atanf
  6290 ;;		_Calibration
  6291 ;; This function uses a non-reentrant model
  6292 ;;
  6293                           
  6294                           	psect	text17
  6295   0018AA                     __ptext17:
  6296                           	callstack 0
  6297   0018AA                     ___fldiv:
  6298                           	callstack 19
  6299   0018AA  0100               	movlb	0	; () banked
  6300   0018AC  51BA               	movf	(___fldiv@b+3)& (0+255),w,b
  6301   0018AE  0B80               	andlw	128
  6302   0018B0  6FC7               	movwf	___fldiv@sign& (0+255),b
  6303   0018B2  51BA               	movf	(___fldiv@b+3)& (0+255),w,b
  6304   0018B4  25BA               	addwf	(___fldiv@b+3)& (0+255),w,b
  6305   0018B6  6FCE               	movwf	___fldiv@bexp& (0+255),b
  6306   0018B8                     
  6307                           ; BSR set to: 0
  6308   0018B8  AFB9               	btfss	(___fldiv@b+2)& (0+255),7,b
  6309   0018BA  EF61  F00C         	goto	u4801
  6310   0018BE  EF63  F00C         	goto	u4800
  6311   0018C2                     u4801:
  6312   0018C2  EF64  F00C         	goto	l4131
  6313   0018C6                     u4800:
  6314   0018C6                     
  6315                           ; BSR set to: 0
  6316   0018C6  81CE               	bsf	___fldiv@bexp& (0+255),0,b
  6317   0018C8                     l4131:
  6318                           
  6319                           ; BSR set to: 0
  6320   0018C8  51CE               	movf	___fldiv@bexp& (0+255),w,b
  6321   0018CA  B4D8               	btfsc	status,2,c
  6322   0018CC  EF6A  F00C         	goto	u4811
  6323   0018D0  EF6C  F00C         	goto	u4810
  6324   0018D4                     u4811:
  6325   0018D4  EF80  F00C         	goto	l4141
  6326   0018D8                     u4810:
  6327   0018D8                     
  6328                           ; BSR set to: 0
  6329   0018D8  29CE               	incf	___fldiv@bexp& (0+255),w,b
  6330   0018DA  A4D8               	btfss	status,2,c
  6331   0018DC  EF72  F00C         	goto	u4821
  6332   0018E0  EF74  F00C         	goto	u4820
  6333   0018E4                     u4821:
  6334   0018E4  EF7C  F00C         	goto	l4137
  6335   0018E8                     u4820:
  6336   0018E8                     
  6337                           ; BSR set to: 0
  6338   0018E8  0E00               	movlw	0
  6339   0018EA  6FB7               	movwf	___fldiv@b& (0+255),b
  6340   0018EC  0E00               	movlw	0
  6341   0018EE  6FB8               	movwf	(___fldiv@b+1)& (0+255),b
  6342   0018F0  0E00               	movlw	0
  6343   0018F2  6FB9               	movwf	(___fldiv@b+2)& (0+255),b
  6344   0018F4  0E00               	movlw	0
  6345   0018F6  6FBA               	movwf	(___fldiv@b+3)& (0+255),b
  6346   0018F8                     l4137:
  6347                           
  6348                           ; BSR set to: 0
  6349   0018F8  8FB9               	bsf	(___fldiv@b+2)& (0+255),7,b
  6350   0018FA                     
  6351                           ; BSR set to: 0
  6352   0018FA  6BBA               	clrf	(___fldiv@b+3)& (0+255),b
  6353   0018FC  EF88  F00C         	goto	l4143
  6354   001900                     l4141:
  6355                           
  6356                           ; BSR set to: 0
  6357   001900  0E00               	movlw	0
  6358   001902  6FB7               	movwf	___fldiv@b& (0+255),b
  6359   001904  0E00               	movlw	0
  6360   001906  6FB8               	movwf	(___fldiv@b+1)& (0+255),b
  6361   001908  0E00               	movlw	0
  6362   00190A  6FB9               	movwf	(___fldiv@b+2)& (0+255),b
  6363   00190C  0E00               	movlw	0
  6364   00190E  6FBA               	movwf	(___fldiv@b+3)& (0+255),b
  6365   001910                     l4143:
  6366                           
  6367                           ; BSR set to: 0
  6368   001910  51BE               	movf	(___fldiv@a+3)& (0+255),w,b
  6369   001912  0B80               	andlw	128
  6370   001914  1BC7               	xorwf	___fldiv@sign& (0+255),f,b
  6371   001916                     
  6372                           ; BSR set to: 0
  6373   001916  51BE               	movf	(___fldiv@a+3)& (0+255),w,b
  6374   001918  25BE               	addwf	(___fldiv@a+3)& (0+255),w,b
  6375   00191A  6FCF               	movwf	___fldiv@aexp& (0+255),b
  6376   00191C                     
  6377                           ; BSR set to: 0
  6378   00191C  AFBD               	btfss	(___fldiv@a+2)& (0+255),7,b
  6379   00191E  EF93  F00C         	goto	u4831
  6380   001922  EF95  F00C         	goto	u4830
  6381   001926                     u4831:
  6382   001926  EF96  F00C         	goto	l4151
  6383   00192A                     u4830:
  6384   00192A                     
  6385                           ; BSR set to: 0
  6386   00192A  81CF               	bsf	___fldiv@aexp& (0+255),0,b
  6387   00192C                     l4151:
  6388                           
  6389                           ; BSR set to: 0
  6390   00192C  51CF               	movf	___fldiv@aexp& (0+255),w,b
  6391   00192E  B4D8               	btfsc	status,2,c
  6392   001930  EF9C  F00C         	goto	u4841
  6393   001934  EF9E  F00C         	goto	u4840
  6394   001938                     u4841:
  6395   001938  EFB2  F00C         	goto	l4161
  6396   00193C                     u4840:
  6397   00193C                     
  6398                           ; BSR set to: 0
  6399   00193C  29CF               	incf	___fldiv@aexp& (0+255),w,b
  6400   00193E  A4D8               	btfss	status,2,c
  6401   001940  EFA4  F00C         	goto	u4851
  6402   001944  EFA6  F00C         	goto	u4850
  6403   001948                     u4851:
  6404   001948  EFAE  F00C         	goto	l4157
  6405   00194C                     u4850:
  6406   00194C                     
  6407                           ; BSR set to: 0
  6408   00194C  0E00               	movlw	0
  6409   00194E  6FBB               	movwf	___fldiv@a& (0+255),b
  6410   001950  0E00               	movlw	0
  6411   001952  6FBC               	movwf	(___fldiv@a+1)& (0+255),b
  6412   001954  0E00               	movlw	0
  6413   001956  6FBD               	movwf	(___fldiv@a+2)& (0+255),b
  6414   001958  0E00               	movlw	0
  6415   00195A  6FBE               	movwf	(___fldiv@a+3)& (0+255),b
  6416   00195C                     l4157:
  6417                           
  6418                           ; BSR set to: 0
  6419   00195C  8FBD               	bsf	(___fldiv@a+2)& (0+255),7,b
  6420   00195E                     
  6421                           ; BSR set to: 0
  6422   00195E  6BBE               	clrf	(___fldiv@a+3)& (0+255),b
  6423   001960  EFBA  F00C         	goto	l4163
  6424   001964                     l4161:
  6425                           
  6426                           ; BSR set to: 0
  6427   001964  0E00               	movlw	0
  6428   001966  6FBB               	movwf	___fldiv@a& (0+255),b
  6429   001968  0E00               	movlw	0
  6430   00196A  6FBC               	movwf	(___fldiv@a+1)& (0+255),b
  6431   00196C  0E00               	movlw	0
  6432   00196E  6FBD               	movwf	(___fldiv@a+2)& (0+255),b
  6433   001970  0E00               	movlw	0
  6434   001972  6FBE               	movwf	(___fldiv@a+3)& (0+255),b
  6435   001974                     l4163:
  6436                           
  6437                           ; BSR set to: 0
  6438   001974  51BB               	movf	___fldiv@a& (0+255),w,b
  6439   001976  11BC               	iorwf	(___fldiv@a+1)& (0+255),w,b
  6440   001978  11BD               	iorwf	(___fldiv@a+2)& (0+255),w,b
  6441   00197A  11BE               	iorwf	(___fldiv@a+3)& (0+255),w,b
  6442   00197C  A4D8               	btfss	status,2,c
  6443   00197E  EFC3  F00C         	goto	u4861
  6444   001982  EFC5  F00C         	goto	u4860
  6445   001986                     u4861:
  6446   001986  EFDD  F00C         	goto	l4175
  6447   00198A                     u4860:
  6448   00198A                     
  6449                           ; BSR set to: 0
  6450   00198A  0E00               	movlw	0
  6451   00198C  6FB7               	movwf	___fldiv@b& (0+255),b
  6452   00198E  0E00               	movlw	0
  6453   001990  6FB8               	movwf	(___fldiv@b+1)& (0+255),b
  6454   001992  0E00               	movlw	0
  6455   001994  6FB9               	movwf	(___fldiv@b+2)& (0+255),b
  6456   001996  0E00               	movlw	0
  6457   001998  6FBA               	movwf	(___fldiv@b+3)& (0+255),b
  6458   00199A                     
  6459                           ; BSR set to: 0
  6460   00199A  0E80               	movlw	128
  6461   00199C  13B9               	iorwf	(___fldiv@b+2)& (0+255),f,b
  6462   00199E  0E7F               	movlw	127
  6463   0019A0  13BA               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6464   0019A2                     l4169:
  6465                           
  6466                           ; BSR set to: 0
  6467   0019A2  51C7               	movf	___fldiv@sign& (0+255),w,b
  6468   0019A4  13BA               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6469   0019A6                     
  6470                           ; BSR set to: 0
  6471   0019A6  C0B7  F0B7         	movff	___fldiv@b,?___fldiv
  6472   0019AA  C0B8  F0B8         	movff	___fldiv@b+1,?___fldiv+1
  6473   0019AE  C0B9  F0B9         	movff	___fldiv@b+2,?___fldiv+2
  6474   0019B2  C0BA  F0BA         	movff	___fldiv@b+3,?___fldiv+3
  6475   0019B6  EF1D  F00E         	goto	l918
  6476   0019BA                     l4175:
  6477                           
  6478                           ; BSR set to: 0
  6479   0019BA  51CE               	movf	___fldiv@bexp& (0+255),w,b
  6480   0019BC  A4D8               	btfss	status,2,c
  6481   0019BE  EFE3  F00C         	goto	u4871
  6482   0019C2  EFE5  F00C         	goto	u4870
  6483   0019C6                     u4871:
  6484   0019C6  EFEF  F00C         	goto	l4183
  6485   0019CA                     u4870:
  6486   0019CA                     
  6487                           ; BSR set to: 0
  6488   0019CA  0E00               	movlw	0
  6489   0019CC  6FB7               	movwf	?___fldiv& (0+255),b
  6490   0019CE  0E00               	movlw	0
  6491   0019D0  6FB8               	movwf	(?___fldiv+1)& (0+255),b
  6492   0019D2  0E00               	movlw	0
  6493   0019D4  6FB9               	movwf	(?___fldiv+2)& (0+255),b
  6494   0019D6  0E00               	movlw	0
  6495   0019D8  6FBA               	movwf	(?___fldiv+3)& (0+255),b
  6496   0019DA  EF1D  F00E         	goto	l918
  6497   0019DE                     l4183:
  6498                           
  6499                           ; BSR set to: 0
  6500   0019DE  51CF               	movf	___fldiv@aexp& (0+255),w,b
  6501   0019E0  C0CE  F0BF         	movff	___fldiv@bexp,??___fldiv
  6502   0019E4  6BC0               	clrf	(??___fldiv+1)& (0+255),b
  6503   0019E6  5FBF               	subwf	??___fldiv& (0+255),f,b
  6504   0019E8  0E00               	movlw	0
  6505   0019EA  5BC0               	subwfb	(??___fldiv+1)& (0+255),f,b
  6506   0019EC  0E7F               	movlw	127
  6507   0019EE  25BF               	addwf	??___fldiv& (0+255),w,b
  6508   0019F0  6FC8               	movwf	___fldiv@new_exp& (0+255),b
  6509   0019F2  0E00               	movlw	0
  6510   0019F4  21C0               	addwfc	(??___fldiv+1)& (0+255),w,b
  6511   0019F6  6FC9               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6512   0019F8                     
  6513                           ; BSR set to: 0
  6514   0019F8  C0B7  F0C3         	movff	___fldiv@b,___fldiv@rem
  6515   0019FC  C0B8  F0C4         	movff	___fldiv@b+1,___fldiv@rem+1
  6516   001A00  C0B9  F0C5         	movff	___fldiv@b+2,___fldiv@rem+2
  6517   001A04  C0BA  F0C6         	movff	___fldiv@b+3,___fldiv@rem+3
  6518   001A08                     
  6519                           ; BSR set to: 0
  6520   001A08  0E00               	movlw	0
  6521   001A0A  6FB7               	movwf	___fldiv@b& (0+255),b
  6522   001A0C  0E00               	movlw	0
  6523   001A0E  6FB8               	movwf	(___fldiv@b+1)& (0+255),b
  6524   001A10  0E00               	movlw	0
  6525   001A12  6FB9               	movwf	(___fldiv@b+2)& (0+255),b
  6526   001A14  0E00               	movlw	0
  6527   001A16  6FBA               	movwf	(___fldiv@b+3)& (0+255),b
  6528   001A18                     
  6529                           ; BSR set to: 0
  6530   001A18  0E00               	movlw	0
  6531   001A1A  6FCA               	movwf	___fldiv@grs& (0+255),b
  6532   001A1C  0E00               	movlw	0
  6533   001A1E  6FCB               	movwf	(___fldiv@grs+1)& (0+255),b
  6534   001A20  0E00               	movlw	0
  6535   001A22  6FCC               	movwf	(___fldiv@grs+2)& (0+255),b
  6536   001A24  0E00               	movlw	0
  6537   001A26  6FCD               	movwf	(___fldiv@grs+3)& (0+255),b
  6538   001A28                     
  6539                           ; BSR set to: 0
  6540   001A28  6BCF               	clrf	___fldiv@aexp& (0+255),b
  6541   001A2A  EF4F  F00D         	goto	l920
  6542   001A2E                     l4193:
  6543                           
  6544                           ; BSR set to: 0
  6545   001A2E  51CF               	movf	___fldiv@aexp& (0+255),w,b
  6546   001A30  B4D8               	btfsc	status,2,c
  6547   001A32  EF1D  F00D         	goto	u4881
  6548   001A36  EF1F  F00D         	goto	u4880
  6549   001A3A                     u4881:
  6550   001A3A  EF36  F00D         	goto	l4201
  6551   001A3E                     u4880:
  6552   001A3E                     
  6553                           ; BSR set to: 0
  6554   001A3E  90D8               	bcf	status,0,c
  6555   001A40  37C3               	rlcf	___fldiv@rem& (0+255),f,b
  6556   001A42  37C4               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  6557   001A44  37C5               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  6558   001A46  37C6               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  6559   001A48  90D8               	bcf	status,0,c
  6560   001A4A  37B7               	rlcf	___fldiv@b& (0+255),f,b
  6561   001A4C  37B8               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6562   001A4E  37B9               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6563   001A50  37BA               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6564   001A52                     
  6565                           ; BSR set to: 0
  6566   001A52  AFCD               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6567   001A54  EF2E  F00D         	goto	u4891
  6568   001A58  EF30  F00D         	goto	u4890
  6569   001A5C                     u4891:
  6570   001A5C  EF31  F00D         	goto	l923
  6571   001A60                     u4890:
  6572   001A60                     
  6573                           ; BSR set to: 0
  6574   001A60  81B7               	bsf	___fldiv@b& (0+255),0,b
  6575   001A62                     l923:
  6576                           
  6577                           ; BSR set to: 0
  6578   001A62  90D8               	bcf	status,0,c
  6579   001A64  37CA               	rlcf	___fldiv@grs& (0+255),f,b
  6580   001A66  37CB               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6581   001A68  37CC               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6582   001A6A  37CD               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6583   001A6C                     l4201:
  6584                           
  6585                           ; BSR set to: 0
  6586   001A6C  51BB               	movf	___fldiv@a& (0+255),w,b
  6587   001A6E  5DC3               	subwf	___fldiv@rem& (0+255),w,b
  6588   001A70  51BC               	movf	(___fldiv@a+1)& (0+255),w,b
  6589   001A72  59C4               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  6590   001A74  51BD               	movf	(___fldiv@a+2)& (0+255),w,b
  6591   001A76  59C5               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  6592   001A78  51BE               	movf	(___fldiv@a+3)& (0+255),w,b
  6593   001A7A  59C6               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  6594   001A7C  A0D8               	btfss	status,0,c
  6595   001A7E  EF43  F00D         	goto	u4901
  6596   001A82  EF45  F00D         	goto	u4900
  6597   001A86                     u4901:
  6598   001A86  EF4E  F00D         	goto	l4207
  6599   001A8A                     u4900:
  6600   001A8A                     
  6601                           ; BSR set to: 0
  6602   001A8A  8DCD               	bsf	(___fldiv@grs+3)& (0+255),6,b
  6603   001A8C                     
  6604                           ; BSR set to: 0
  6605   001A8C  51BB               	movf	___fldiv@a& (0+255),w,b
  6606   001A8E  5FC3               	subwf	___fldiv@rem& (0+255),f,b
  6607   001A90  51BC               	movf	(___fldiv@a+1)& (0+255),w,b
  6608   001A92  5BC4               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  6609   001A94  51BD               	movf	(___fldiv@a+2)& (0+255),w,b
  6610   001A96  5BC5               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  6611   001A98  51BE               	movf	(___fldiv@a+3)& (0+255),w,b
  6612   001A9A  5BC6               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  6613   001A9C                     l4207:
  6614                           
  6615                           ; BSR set to: 0
  6616   001A9C  2BCF               	incf	___fldiv@aexp& (0+255),f,b
  6617   001A9E                     l920:
  6618                           
  6619                           ; BSR set to: 0
  6620   001A9E  0E19               	movlw	25
  6621   001AA0  65CF               	cpfsgt	___fldiv@aexp& (0+255),b
  6622   001AA2  EF55  F00D         	goto	u4911
  6623   001AA6  EF57  F00D         	goto	u4910
  6624   001AAA                     u4911:
  6625   001AAA  EF17  F00D         	goto	l4193
  6626   001AAE                     u4910:
  6627   001AAE                     
  6628                           ; BSR set to: 0
  6629   001AAE  51C3               	movf	___fldiv@rem& (0+255),w,b
  6630   001AB0  11C4               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  6631   001AB2  11C5               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  6632   001AB4  11C6               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  6633   001AB6  B4D8               	btfsc	status,2,c
  6634   001AB8  EF60  F00D         	goto	u4921
  6635   001ABC  EF62  F00D         	goto	u4920
  6636   001AC0                     u4921:
  6637   001AC0  EF7A  F00D         	goto	l4219
  6638   001AC4                     u4920:
  6639   001AC4                     
  6640                           ; BSR set to: 0
  6641   001AC4  81CA               	bsf	___fldiv@grs& (0+255),0,b
  6642   001AC6  EF7A  F00D         	goto	l4219
  6643   001ACA                     l4213:
  6644                           
  6645                           ; BSR set to: 0
  6646   001ACA  90D8               	bcf	status,0,c
  6647   001ACC  37B7               	rlcf	___fldiv@b& (0+255),f,b
  6648   001ACE  37B8               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6649   001AD0  37B9               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6650   001AD2  37BA               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6651   001AD4                     
  6652                           ; BSR set to: 0
  6653   001AD4  AFCD               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6654   001AD6  EF6F  F00D         	goto	u4931
  6655   001ADA  EF71  F00D         	goto	u4930
  6656   001ADE                     u4931:
  6657   001ADE  EF72  F00D         	goto	l929
  6658   001AE2                     u4930:
  6659   001AE2                     
  6660                           ; BSR set to: 0
  6661   001AE2  81B7               	bsf	___fldiv@b& (0+255),0,b
  6662   001AE4                     l929:
  6663                           
  6664                           ; BSR set to: 0
  6665   001AE4  90D8               	bcf	status,0,c
  6666   001AE6  37CA               	rlcf	___fldiv@grs& (0+255),f,b
  6667   001AE8  37CB               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6668   001AEA  37CC               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6669   001AEC  37CD               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6670   001AEE  07C8               	decf	___fldiv@new_exp& (0+255),f,b
  6671   001AF0  A0D8               	btfss	status,0,c
  6672   001AF2  07C9               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  6673   001AF4                     l4219:
  6674                           
  6675                           ; BSR set to: 0
  6676   001AF4  AFB9               	btfss	(___fldiv@b+2)& (0+255),7,b
  6677   001AF6  EF7F  F00D         	goto	u4941
  6678   001AFA  EF81  F00D         	goto	u4940
  6679   001AFE                     u4941:
  6680   001AFE  EF65  F00D         	goto	l4213
  6681   001B02                     u4940:
  6682   001B02                     
  6683                           ; BSR set to: 0
  6684   001B02  6BCF               	clrf	___fldiv@aexp& (0+255),b
  6685   001B04  AFCD               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6686   001B06  EF87  F00D         	goto	u4951
  6687   001B0A  EF89  F00D         	goto	u4950
  6688   001B0E                     u4951:
  6689   001B0E  EFAD  F00D         	goto	l931
  6690   001B12                     u4950:
  6691   001B12                     
  6692                           ; BSR set to: 0
  6693   001B12  0EFF               	movlw	255
  6694   001B14  15CA               	andwf	___fldiv@grs& (0+255),w,b
  6695   001B16  6FBF               	movwf	??___fldiv& (0+255),b
  6696   001B18  0EFF               	movlw	255
  6697   001B1A  15CB               	andwf	(___fldiv@grs+1)& (0+255),w,b
  6698   001B1C  6FC0               	movwf	(??___fldiv+1)& (0+255),b
  6699   001B1E  0EFF               	movlw	255
  6700   001B20  15CC               	andwf	(___fldiv@grs+2)& (0+255),w,b
  6701   001B22  6FC1               	movwf	(??___fldiv+2)& (0+255),b
  6702   001B24  0E7F               	movlw	127
  6703   001B26  15CD               	andwf	(___fldiv@grs+3)& (0+255),w,b
  6704   001B28  6FC2               	movwf	(??___fldiv+3)& (0+255),b
  6705   001B2A  51BF               	movf	??___fldiv& (0+255),w,b
  6706   001B2C  11C0               	iorwf	(??___fldiv+1)& (0+255),w,b
  6707   001B2E  11C1               	iorwf	(??___fldiv+2)& (0+255),w,b
  6708   001B30  11C2               	iorwf	(??___fldiv+3)& (0+255),w,b
  6709   001B32  B4D8               	btfsc	status,2,c
  6710   001B34  EF9E  F00D         	goto	u4961
  6711   001B38  EFA0  F00D         	goto	u4960
  6712   001B3C                     u4961:
  6713   001B3C  EFA4  F00D         	goto	l932
  6714   001B40                     u4960:
  6715   001B40                     l4223:
  6716                           
  6717                           ; BSR set to: 0
  6718   001B40  0E01               	movlw	1
  6719   001B42  6FCF               	movwf	___fldiv@aexp& (0+255),b
  6720   001B44  EFAD  F00D         	goto	l931
  6721   001B48                     l932:
  6722                           
  6723                           ; BSR set to: 0
  6724   001B48  A1B7               	btfss	___fldiv@b& (0+255),0,b
  6725   001B4A  EFA9  F00D         	goto	u4971
  6726   001B4E  EFAB  F00D         	goto	u4970
  6727   001B52                     u4971:
  6728   001B52  EFAD  F00D         	goto	l931
  6729   001B56                     u4970:
  6730   001B56  EFA0  F00D         	goto	l4223
  6731   001B5A                     l931:
  6732                           
  6733                           ; BSR set to: 0
  6734   001B5A  51CF               	movf	___fldiv@aexp& (0+255),w,b
  6735   001B5C  B4D8               	btfsc	status,2,c
  6736   001B5E  EFB3  F00D         	goto	u4981
  6737   001B62  EFB5  F00D         	goto	u4980
  6738   001B66                     u4981:
  6739   001B66  EFD9  F00D         	goto	l4235
  6740   001B6A                     u4980:
  6741   001B6A                     
  6742                           ; BSR set to: 0
  6743   001B6A  0E01               	movlw	1
  6744   001B6C  27B7               	addwf	___fldiv@b& (0+255),f,b
  6745   001B6E  0E00               	movlw	0
  6746   001B70  23B8               	addwfc	(___fldiv@b+1)& (0+255),f,b
  6747   001B72  23B9               	addwfc	(___fldiv@b+2)& (0+255),f,b
  6748   001B74  23BA               	addwfc	(___fldiv@b+3)& (0+255),f,b
  6749   001B76                     
  6750                           ; BSR set to: 0
  6751   001B76  A1BA               	btfss	(___fldiv@b+3)& (0+255),0,b
  6752   001B78  EFC0  F00D         	goto	u4991
  6753   001B7C  EFC2  F00D         	goto	u4990
  6754   001B80                     u4991:
  6755   001B80  EFD9  F00D         	goto	l4235
  6756   001B84                     u4990:
  6757   001B84                     
  6758                           ; BSR set to: 0
  6759   001B84  C0B7  F0BF         	movff	___fldiv@b,??___fldiv
  6760   001B88  C0B8  F0C0         	movff	___fldiv@b+1,??___fldiv+1
  6761   001B8C  C0B9  F0C1         	movff	___fldiv@b+2,??___fldiv+2
  6762   001B90  C0BA  F0C2         	movff	___fldiv@b+3,??___fldiv+3
  6763   001B94  35C2               	rlcf	(??___fldiv+3)& (0+255),w,b
  6764   001B96  33C2               	rrcf	(??___fldiv+3)& (0+255),f,b
  6765   001B98  33C1               	rrcf	(??___fldiv+2)& (0+255),f,b
  6766   001B9A  33C0               	rrcf	(??___fldiv+1)& (0+255),f,b
  6767   001B9C  33BF               	rrcf	??___fldiv& (0+255),f,b
  6768   001B9E  C0BF  F0B7         	movff	??___fldiv,___fldiv@b
  6769   001BA2  C0C0  F0B8         	movff	??___fldiv+1,___fldiv@b+1
  6770   001BA6  C0C1  F0B9         	movff	??___fldiv+2,___fldiv@b+2
  6771   001BAA  C0C2  F0BA         	movff	??___fldiv+3,___fldiv@b+3
  6772   001BAE                     
  6773                           ; BSR set to: 0
  6774   001BAE  4BC8               	infsnz	___fldiv@new_exp& (0+255),f,b
  6775   001BB0  2BC9               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  6776   001BB2                     l4235:
  6777                           
  6778                           ; BSR set to: 0
  6779   001BB2  BFC9               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6780   001BB4  EFE4  F00D         	goto	u5001
  6781   001BB8  51C9               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6782   001BBA  E108               	bnz	u5000
  6783   001BBC  29C8               	incf	___fldiv@new_exp& (0+255),w,b
  6784   001BBE  A0D8               	btfss	status,0,c
  6785   001BC0  EFE4  F00D         	goto	u5001
  6786   001BC4  EFE6  F00D         	goto	u5000
  6787   001BC8                     u5001:
  6788   001BC8  EFF1  F00D         	goto	l4239
  6789   001BCC                     u5000:
  6790   001BCC                     
  6791                           ; BSR set to: 0
  6792   001BCC  0E00               	movlw	0
  6793   001BCE  6FC9               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6794   001BD0  69C8               	setf	___fldiv@new_exp& (0+255),b
  6795   001BD2  0E00               	movlw	0
  6796   001BD4  6FB7               	movwf	___fldiv@b& (0+255),b
  6797   001BD6  0E00               	movlw	0
  6798   001BD8  6FB8               	movwf	(___fldiv@b+1)& (0+255),b
  6799   001BDA  0E00               	movlw	0
  6800   001BDC  6FB9               	movwf	(___fldiv@b+2)& (0+255),b
  6801   001BDE  0E00               	movlw	0
  6802   001BE0  6FBA               	movwf	(___fldiv@b+3)& (0+255),b
  6803   001BE2                     l4239:
  6804                           
  6805                           ; BSR set to: 0
  6806   001BE2  BFC9               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6807   001BE4  EFFE  F00D         	goto	u5010
  6808   001BE8  51C9               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6809   001BEA  E106               	bnz	u5011
  6810   001BEC  05C8               	decf	___fldiv@new_exp& (0+255),w,b
  6811   001BEE  B0D8               	btfsc	status,0,c
  6812   001BF0  EFFC  F00D         	goto	u5011
  6813   001BF4  EFFE  F00D         	goto	u5010
  6814   001BF8                     u5011:
  6815   001BF8  EF0B  F00E         	goto	l4245
  6816   001BFC                     u5010:
  6817   001BFC                     
  6818                           ; BSR set to: 0
  6819   001BFC  0E00               	movlw	0
  6820   001BFE  6FC9               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6821   001C00  0E00               	movlw	0
  6822   001C02  6FC8               	movwf	___fldiv@new_exp& (0+255),b
  6823   001C04  0E00               	movlw	0
  6824   001C06  6FB7               	movwf	___fldiv@b& (0+255),b
  6825   001C08  0E00               	movlw	0
  6826   001C0A  6FB8               	movwf	(___fldiv@b+1)& (0+255),b
  6827   001C0C  0E00               	movlw	0
  6828   001C0E  6FB9               	movwf	(___fldiv@b+2)& (0+255),b
  6829   001C10  0E00               	movlw	0
  6830   001C12  6FBA               	movwf	(___fldiv@b+3)& (0+255),b
  6831   001C14                     
  6832                           ; BSR set to: 0
  6833   001C14  6BC7               	clrf	___fldiv@sign& (0+255),b
  6834   001C16                     l4245:
  6835                           
  6836                           ; BSR set to: 0
  6837   001C16  C0C8  F0CE         	movff	___fldiv@new_exp,___fldiv@bexp
  6838   001C1A                     
  6839                           ; BSR set to: 0
  6840   001C1A  A1CE               	btfss	___fldiv@bexp& (0+255),0,b
  6841   001C1C  EF12  F00E         	goto	u5021
  6842   001C20  EF14  F00E         	goto	u5020
  6843   001C24                     u5021:
  6844   001C24  EF17  F00E         	goto	l4251
  6845   001C28                     u5020:
  6846   001C28                     
  6847                           ; BSR set to: 0
  6848   001C28  8FB9               	bsf	(___fldiv@b+2)& (0+255),7,b
  6849   001C2A  EF18  F00E         	goto	l4253
  6850   001C2E                     l4251:
  6851                           
  6852                           ; BSR set to: 0
  6853   001C2E  9FB9               	bcf	(___fldiv@b+2)& (0+255),7,b
  6854   001C30                     l4253:
  6855                           
  6856                           ; BSR set to: 0
  6857   001C30  90D8               	bcf	status,0,c
  6858   001C32  31CE               	rrcf	___fldiv@bexp& (0+255),w,b
  6859   001C34  6FBA               	movwf	(___fldiv@b+3)& (0+255),b
  6860   001C36  EFD1  F00C         	goto	l4169
  6861   001C3A                     l918:
  6862                           
  6863                           ; BSR set to: 0
  6864   001C3A  0012               	return		;funcret
  6865   001C3C                     __end_of___fldiv:
  6866                           	callstack 0
  6867                           
  6868 ;; *************** function ___xxtofl *****************
  6869 ;; Defined at:
  6870 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;  sign            1    wreg     unsigned char 
  6873 ;;  val             4    0[BANK0 ] long 
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;  sign            1    8[BANK0 ] unsigned char 
  6876 ;;  arg             4   10[BANK0 ] unsigned long 
  6877 ;;  exp             1    9[BANK0 ] unsigned char 
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  4    0[BANK0 ] unsigned char 
  6880 ;; Registers used:
  6881 ;;		wreg, status,2, status,0
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6887 ;;      Params:         0       4       0       0       0       0       0
  6888 ;;      Locals:         0       6       0       0       0       0       0
  6889 ;;      Temps:          0       4       0       0       0       0       0
  6890 ;;      Totals:         0      14       0       0       0       0       0
  6891 ;;Total ram usage:       14 bytes
  6892 ;; Hardware stack levels used: 1
  6893 ;; Hardware stack levels required when called: 7
  6894 ;; This function calls:
  6895 ;;		Nothing
  6896 ;; This function is called by:
  6897 ;;		_calculate_angle
  6898 ;;		_Calibration
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           
  6902                           	psect	text18
  6903   001E26                     __ptext18:
  6904                           	callstack 0
  6905   001E26                     ___xxtofl:
  6906                           	callstack 21
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;incstack = 0
  6910                           ;___xxtofl@sign stored from wreg
  6911   001E26  0100               	movlb	0	; () banked
  6912   001E28  6F88               	movwf	___xxtofl@sign& (0+255),b
  6913   001E2A  0100               	movlb	0	; () banked
  6914   001E2C  5188               	movf	___xxtofl@sign& (0+255),w,b
  6915   001E2E  B4D8               	btfsc	status,2,c
  6916   001E30  EF1C  F00F         	goto	u5851
  6917   001E34  EF1E  F00F         	goto	u5850
  6918   001E38                     u5851:
  6919   001E38  EF40  F00F         	goto	l991
  6920   001E3C                     u5850:
  6921   001E3C                     
  6922                           ; BSR set to: 0
  6923   001E3C  BF83               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  6924   001E3E  EF25  F00F         	goto	u5860
  6925   001E42  EF23  F00F         	goto	u5861
  6926   001E46                     u5861:
  6927   001E46  EF40  F00F         	goto	l991
  6928   001E4A                     u5860:
  6929   001E4A                     
  6930                           ; BSR set to: 0
  6931   001E4A  C080  F084         	movff	___xxtofl@val,??___xxtofl
  6932   001E4E  C081  F085         	movff	___xxtofl@val+1,??___xxtofl+1
  6933   001E52  C082  F086         	movff	___xxtofl@val+2,??___xxtofl+2
  6934   001E56  C083  F087         	movff	___xxtofl@val+3,??___xxtofl+3
  6935   001E5A  1F84               	comf	??___xxtofl& (0+255),f,b
  6936   001E5C  1F85               	comf	(??___xxtofl+1)& (0+255),f,b
  6937   001E5E  1F86               	comf	(??___xxtofl+2)& (0+255),f,b
  6938   001E60  1F87               	comf	(??___xxtofl+3)& (0+255),f,b
  6939   001E62  2B84               	incf	??___xxtofl& (0+255),f,b
  6940   001E64  0E00               	movlw	0
  6941   001E66  2385               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6942   001E68  2386               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6943   001E6A  2387               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6944   001E6C  C084  F08A         	movff	??___xxtofl,___xxtofl@arg
  6945   001E70  C085  F08B         	movff	??___xxtofl+1,___xxtofl@arg+1
  6946   001E74  C086  F08C         	movff	??___xxtofl+2,___xxtofl@arg+2
  6947   001E78  C087  F08D         	movff	??___xxtofl+3,___xxtofl@arg+3
  6948   001E7C  EF48  F00F         	goto	l4805
  6949   001E80                     l991:
  6950                           
  6951                           ; BSR set to: 0
  6952   001E80  C080  F08A         	movff	___xxtofl@val,___xxtofl@arg
  6953   001E84  C081  F08B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6954   001E88  C082  F08C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6955   001E8C  C083  F08D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6956   001E90                     l4805:
  6957                           
  6958                           ; BSR set to: 0
  6959   001E90  5180               	movf	___xxtofl@val& (0+255),w,b
  6960   001E92  1181               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6961   001E94  1182               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6962   001E96  1183               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6963   001E98  A4D8               	btfss	status,2,c
  6964   001E9A  EF51  F00F         	goto	u5871
  6965   001E9E  EF53  F00F         	goto	u5870
  6966   001EA2                     u5871:
  6967   001EA2  EF5D  F00F         	goto	l4811
  6968   001EA6                     u5870:
  6969   001EA6                     
  6970                           ; BSR set to: 0
  6971   001EA6  0E00               	movlw	0
  6972   001EA8  6F80               	movwf	?___xxtofl& (0+255),b
  6973   001EAA  0E00               	movlw	0
  6974   001EAC  6F81               	movwf	(?___xxtofl+1)& (0+255),b
  6975   001EAE  0E00               	movlw	0
  6976   001EB0  6F82               	movwf	(?___xxtofl+2)& (0+255),b
  6977   001EB2  0E00               	movlw	0
  6978   001EB4  6F83               	movwf	(?___xxtofl+3)& (0+255),b
  6979   001EB6  EFEE  F00F         	goto	l994
  6980   001EBA                     l4811:
  6981                           
  6982                           ; BSR set to: 0
  6983   001EBA  0E96               	movlw	150
  6984   001EBC  6F89               	movwf	___xxtofl@exp& (0+255),b
  6985   001EBE  EF67  F00F         	goto	l4815
  6986   001EC2                     l4813:
  6987                           
  6988                           ; BSR set to: 0
  6989   001EC2  2B89               	incf	___xxtofl@exp& (0+255),f,b
  6990   001EC4  90D8               	bcf	status,0,c
  6991   001EC6  338D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6992   001EC8  338C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6993   001ECA  338B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6994   001ECC  338A               	rrcf	___xxtofl@arg& (0+255),f,b
  6995   001ECE                     l4815:
  6996                           
  6997                           ; BSR set to: 0
  6998   001ECE  0E00               	movlw	0
  6999   001ED0  158A               	andwf	___xxtofl@arg& (0+255),w,b
  7000   001ED2  6F84               	movwf	??___xxtofl& (0+255),b
  7001   001ED4  0E00               	movlw	0
  7002   001ED6  158B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7003   001ED8  6F85               	movwf	(??___xxtofl+1)& (0+255),b
  7004   001EDA  0E00               	movlw	0
  7005   001EDC  158C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7006   001EDE  6F86               	movwf	(??___xxtofl+2)& (0+255),b
  7007   001EE0  0EFE               	movlw	254
  7008   001EE2  158D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7009   001EE4  6F87               	movwf	(??___xxtofl+3)& (0+255),b
  7010   001EE6  5184               	movf	??___xxtofl& (0+255),w,b
  7011   001EE8  1185               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7012   001EEA  1186               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7013   001EEC  1187               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7014   001EEE  A4D8               	btfss	status,2,c
  7015   001EF0  EF7C  F00F         	goto	u5881
  7016   001EF4  EF7E  F00F         	goto	u5880
  7017   001EF8                     u5881:
  7018   001EF8  EF61  F00F         	goto	l4813
  7019   001EFC                     u5880:
  7020   001EFC  EF8C  F00F         	goto	l998
  7021   001F00                     l4817:
  7022                           
  7023                           ; BSR set to: 0
  7024   001F00  2B89               	incf	___xxtofl@exp& (0+255),f,b
  7025   001F02                     
  7026                           ; BSR set to: 0
  7027   001F02  0E01               	movlw	1
  7028   001F04  278A               	addwf	___xxtofl@arg& (0+255),f,b
  7029   001F06  0E00               	movlw	0
  7030   001F08  238B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  7031   001F0A  238C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  7032   001F0C  238D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  7033   001F0E                     
  7034                           ; BSR set to: 0
  7035   001F0E  90D8               	bcf	status,0,c
  7036   001F10  338D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7037   001F12  338C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7038   001F14  338B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7039   001F16  338A               	rrcf	___xxtofl@arg& (0+255),f,b
  7040   001F18                     l998:
  7041                           
  7042                           ; BSR set to: 0
  7043   001F18  0E00               	movlw	0
  7044   001F1A  158A               	andwf	___xxtofl@arg& (0+255),w,b
  7045   001F1C  6F84               	movwf	??___xxtofl& (0+255),b
  7046   001F1E  0E00               	movlw	0
  7047   001F20  158B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7048   001F22  6F85               	movwf	(??___xxtofl+1)& (0+255),b
  7049   001F24  0E00               	movlw	0
  7050   001F26  158C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7051   001F28  6F86               	movwf	(??___xxtofl+2)& (0+255),b
  7052   001F2A  0EFF               	movlw	255
  7053   001F2C  158D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7054   001F2E  6F87               	movwf	(??___xxtofl+3)& (0+255),b
  7055   001F30  5184               	movf	??___xxtofl& (0+255),w,b
  7056   001F32  1185               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7057   001F34  1186               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7058   001F36  1187               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7059   001F38  A4D8               	btfss	status,2,c
  7060   001F3A  EFA1  F00F         	goto	u5891
  7061   001F3E  EFA3  F00F         	goto	u5890
  7062   001F42                     u5891:
  7063   001F42  EF80  F00F         	goto	l4817
  7064   001F46                     u5890:
  7065   001F46  EFAB  F00F         	goto	l4825
  7066   001F4A                     l4823:
  7067                           
  7068                           ; BSR set to: 0
  7069   001F4A  0789               	decf	___xxtofl@exp& (0+255),f,b
  7070   001F4C  90D8               	bcf	status,0,c
  7071   001F4E  378A               	rlcf	___xxtofl@arg& (0+255),f,b
  7072   001F50  378B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  7073   001F52  378C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  7074   001F54  378D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  7075   001F56                     l4825:
  7076                           
  7077                           ; BSR set to: 0
  7078   001F56  BF8C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  7079   001F58  EFB0  F00F         	goto	u5901
  7080   001F5C  EFB2  F00F         	goto	u5900
  7081   001F60                     u5901:
  7082   001F60  EFBA  F00F         	goto	l1005
  7083   001F64                     u5900:
  7084   001F64                     
  7085                           ; BSR set to: 0
  7086   001F64  0E02               	movlw	2
  7087   001F66  6189               	cpfslt	___xxtofl@exp& (0+255),b
  7088   001F68  EFB8  F00F         	goto	u5911
  7089   001F6C  EFBA  F00F         	goto	u5910
  7090   001F70                     u5911:
  7091   001F70  EFA5  F00F         	goto	l4823
  7092   001F74                     u5910:
  7093   001F74                     l1005:
  7094                           
  7095                           ; BSR set to: 0
  7096   001F74  B189               	btfsc	___xxtofl@exp& (0+255),0,b
  7097   001F76  EFBF  F00F         	goto	u5921
  7098   001F7A  EFC1  F00F         	goto	u5920
  7099   001F7E                     u5921:
  7100   001F7E  EFC2  F00F         	goto	l4831
  7101   001F82                     u5920:
  7102   001F82                     
  7103                           ; BSR set to: 0
  7104   001F82  9F8C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  7105   001F84                     l4831:
  7106                           
  7107                           ; BSR set to: 0
  7108   001F84  90D8               	bcf	status,0,c
  7109   001F86  3389               	rrcf	___xxtofl@exp& (0+255),f,b
  7110   001F88                     
  7111                           ; BSR set to: 0
  7112   001F88  C089  F084         	movff	___xxtofl@exp,??___xxtofl
  7113   001F8C  6B85               	clrf	(??___xxtofl+1)& (0+255),b
  7114   001F8E  6B86               	clrf	(??___xxtofl+2)& (0+255),b
  7115   001F90  6B87               	clrf	(??___xxtofl+3)& (0+255),b
  7116   001F92  C084  F087         	movff	??___xxtofl,??___xxtofl+3
  7117   001F96  6B86               	clrf	(??___xxtofl+2)& (0+255),b
  7118   001F98  6B85               	clrf	(??___xxtofl+1)& (0+255),b
  7119   001F9A  6B84               	clrf	??___xxtofl& (0+255),b
  7120   001F9C  5184               	movf	??___xxtofl& (0+255),w,b
  7121   001F9E  138A               	iorwf	___xxtofl@arg& (0+255),f,b
  7122   001FA0  5185               	movf	(??___xxtofl+1)& (0+255),w,b
  7123   001FA2  138B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  7124   001FA4  5186               	movf	(??___xxtofl+2)& (0+255),w,b
  7125   001FA6  138C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  7126   001FA8  5187               	movf	(??___xxtofl+3)& (0+255),w,b
  7127   001FAA  138D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  7128   001FAC                     
  7129                           ; BSR set to: 0
  7130   001FAC  5188               	movf	___xxtofl@sign& (0+255),w,b
  7131   001FAE  B4D8               	btfsc	status,2,c
  7132   001FB0  EFDC  F00F         	goto	u5931
  7133   001FB4  EFDE  F00F         	goto	u5930
  7134   001FB8                     u5931:
  7135   001FB8  EFE6  F00F         	goto	l4841
  7136   001FBC                     u5930:
  7137   001FBC                     
  7138                           ; BSR set to: 0
  7139   001FBC  BF83               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  7140   001FBE  EFE5  F00F         	goto	u5940
  7141   001FC2  EFE3  F00F         	goto	u5941
  7142   001FC6                     u5941:
  7143   001FC6  EFE6  F00F         	goto	l4841
  7144   001FCA                     u5940:
  7145   001FCA                     
  7146                           ; BSR set to: 0
  7147   001FCA  8F8D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  7148   001FCC                     l4841:
  7149                           
  7150                           ; BSR set to: 0
  7151   001FCC  C08A  F080         	movff	___xxtofl@arg,?___xxtofl
  7152   001FD0  C08B  F081         	movff	___xxtofl@arg+1,?___xxtofl+1
  7153   001FD4  C08C  F082         	movff	___xxtofl@arg+2,?___xxtofl+2
  7154   001FD8  C08D  F083         	movff	___xxtofl@arg+3,?___xxtofl+3
  7155   001FDC                     l994:
  7156                           
  7157                           ; BSR set to: 0
  7158   001FDC  0012               	return		;funcret
  7159   001FDE                     __end_of___xxtofl:
  7160                           	callstack 0
  7161                           
  7162 ;; *************** function ___flge *****************
  7163 ;; Defined at:
  7164 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flge.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;  ff1             4    0[BANK0 ] unsigned char 
  7167 ;;  ff2             4    4[BANK0 ] unsigned char 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;		None
  7170 ;; Return value:  Size  Location     Type
  7171 ;;		None               void
  7172 ;; Registers used:
  7173 ;;		wreg, status,2, status,0
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7179 ;;      Params:         0       8       0       0       0       0       0
  7180 ;;      Locals:         0       0       0       0       0       0       0
  7181 ;;      Temps:          0       4       0       0       0       0       0
  7182 ;;      Totals:         0      12       0       0       0       0       0
  7183 ;;Total ram usage:       12 bytes
  7184 ;; Hardware stack levels used: 1
  7185 ;; Hardware stack levels required when called: 7
  7186 ;; This function calls:
  7187 ;;		Nothing
  7188 ;; This function is called by:
  7189 ;;		_Check_Gyroscope
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193                           	psect	text19
  7194   002154                     __ptext19:
  7195                           	callstack 0
  7196   002154                     ___flge:
  7197                           	callstack 22
  7198   002154  0E00               	movlw	0
  7199   002156  0100               	movlb	0	; () banked
  7200   002158  1580               	andwf	___flge@ff1& (0+255),w,b
  7201   00215A  6F88               	movwf	??___flge& (0+255),b
  7202   00215C  0E00               	movlw	0
  7203   00215E  1581               	andwf	(___flge@ff1+1)& (0+255),w,b
  7204   002160  6F89               	movwf	(??___flge+1)& (0+255),b
  7205   002162  0E80               	movlw	128
  7206   002164  1582               	andwf	(___flge@ff1+2)& (0+255),w,b
  7207   002166  6F8A               	movwf	(??___flge+2)& (0+255),b
  7208   002168  0E7F               	movlw	127
  7209   00216A  1583               	andwf	(___flge@ff1+3)& (0+255),w,b
  7210   00216C  6F8B               	movwf	(??___flge+3)& (0+255),b
  7211   00216E  5188               	movf	??___flge& (0+255),w,b
  7212   002170  1189               	iorwf	(??___flge+1)& (0+255),w,b
  7213   002172  118A               	iorwf	(??___flge+2)& (0+255),w,b
  7214   002174  118B               	iorwf	(??___flge+3)& (0+255),w,b
  7215   002176  A4D8               	btfss	status,2,c
  7216   002178  EFC0  F010         	goto	u6081
  7217   00217C  EFC2  F010         	goto	u6080
  7218   002180                     u6081:
  7219   002180  EFCA  F010         	goto	l4969
  7220   002184                     u6080:
  7221   002184                     
  7222                           ; BSR set to: 0
  7223   002184  0E00               	movlw	0
  7224   002186  6F80               	movwf	___flge@ff1& (0+255),b
  7225   002188  0E00               	movlw	0
  7226   00218A  6F81               	movwf	(___flge@ff1+1)& (0+255),b
  7227   00218C  0E00               	movlw	0
  7228   00218E  6F82               	movwf	(___flge@ff1+2)& (0+255),b
  7229   002190  0E00               	movlw	0
  7230   002192  6F83               	movwf	(___flge@ff1+3)& (0+255),b
  7231   002194                     l4969:
  7232                           
  7233                           ; BSR set to: 0
  7234   002194  0E00               	movlw	0
  7235   002196  1584               	andwf	___flge@ff2& (0+255),w,b
  7236   002198  6F88               	movwf	??___flge& (0+255),b
  7237   00219A  0E00               	movlw	0
  7238   00219C  1585               	andwf	(___flge@ff2+1)& (0+255),w,b
  7239   00219E  6F89               	movwf	(??___flge+1)& (0+255),b
  7240   0021A0  0E80               	movlw	128
  7241   0021A2  1586               	andwf	(___flge@ff2+2)& (0+255),w,b
  7242   0021A4  6F8A               	movwf	(??___flge+2)& (0+255),b
  7243   0021A6  0E7F               	movlw	127
  7244   0021A8  1587               	andwf	(___flge@ff2+3)& (0+255),w,b
  7245   0021AA  6F8B               	movwf	(??___flge+3)& (0+255),b
  7246   0021AC  5188               	movf	??___flge& (0+255),w,b
  7247   0021AE  1189               	iorwf	(??___flge+1)& (0+255),w,b
  7248   0021B0  118A               	iorwf	(??___flge+2)& (0+255),w,b
  7249   0021B2  118B               	iorwf	(??___flge+3)& (0+255),w,b
  7250   0021B4  A4D8               	btfss	status,2,c
  7251   0021B6  EFDF  F010         	goto	u6091
  7252   0021BA  EFE1  F010         	goto	u6090
  7253   0021BE                     u6091:
  7254   0021BE  EFE9  F010         	goto	l4973
  7255   0021C2                     u6090:
  7256   0021C2                     
  7257                           ; BSR set to: 0
  7258   0021C2  0E00               	movlw	0
  7259   0021C4  6F84               	movwf	___flge@ff2& (0+255),b
  7260   0021C6  0E00               	movlw	0
  7261   0021C8  6F85               	movwf	(___flge@ff2+1)& (0+255),b
  7262   0021CA  0E00               	movlw	0
  7263   0021CC  6F86               	movwf	(___flge@ff2+2)& (0+255),b
  7264   0021CE  0E00               	movlw	0
  7265   0021D0  6F87               	movwf	(___flge@ff2+3)& (0+255),b
  7266   0021D2                     l4973:
  7267                           
  7268                           ; BSR set to: 0
  7269   0021D2  AF83               	btfss	(___flge@ff1+3)& (0+255),7,b
  7270   0021D4  EFEE  F010         	goto	u6101
  7271   0021D8  EFF0  F010         	goto	u6100
  7272   0021DC                     u6101:
  7273   0021DC  EFF9  F010         	goto	l4977
  7274   0021E0                     u6100:
  7275   0021E0                     
  7276                           ; BSR set to: 0
  7277   0021E0  6D80               	negf	___flge@ff1& (0+255),b
  7278   0021E2  1F81               	comf	(___flge@ff1+1)& (0+255),f,b
  7279   0021E4  B0D8               	btfsc	status,0,c
  7280   0021E6  2B81               	incf	(___flge@ff1+1)& (0+255),f,b
  7281   0021E8  1F82               	comf	(___flge@ff1+2)& (0+255),f,b
  7282   0021EA  B0D8               	btfsc	status,0,c
  7283   0021EC  2B82               	incf	(___flge@ff1+2)& (0+255),f,b
  7284   0021EE  0E80               	movlw	128
  7285   0021F0  5783               	subfwb	(___flge@ff1+3)& (0+255),f,b
  7286   0021F2                     l4977:
  7287                           
  7288                           ; BSR set to: 0
  7289   0021F2  AF87               	btfss	(___flge@ff2+3)& (0+255),7,b
  7290   0021F4  EFFE  F010         	goto	u6111
  7291   0021F8  EF00  F011         	goto	u6110
  7292   0021FC                     u6111:
  7293   0021FC  EF09  F011         	goto	l601
  7294   002200                     u6110:
  7295   002200                     
  7296                           ; BSR set to: 0
  7297   002200  6D84               	negf	___flge@ff2& (0+255),b
  7298   002202  1F85               	comf	(___flge@ff2+1)& (0+255),f,b
  7299   002204  B0D8               	btfsc	status,0,c
  7300   002206  2B85               	incf	(___flge@ff2+1)& (0+255),f,b
  7301   002208  1F86               	comf	(___flge@ff2+2)& (0+255),f,b
  7302   00220A  B0D8               	btfsc	status,0,c
  7303   00220C  2B86               	incf	(___flge@ff2+2)& (0+255),f,b
  7304   00220E  0E80               	movlw	128
  7305   002210  5787               	subfwb	(___flge@ff2+3)& (0+255),f,b
  7306   002212                     l601:
  7307                           
  7308                           ; BSR set to: 0
  7309   002212  0E00               	movlw	0
  7310   002214  1B80               	xorwf	___flge@ff1& (0+255),f,b
  7311   002216  0E00               	movlw	0
  7312   002218  1B81               	xorwf	(___flge@ff1+1)& (0+255),f,b
  7313   00221A  0E00               	movlw	0
  7314   00221C  1B82               	xorwf	(___flge@ff1+2)& (0+255),f,b
  7315   00221E  0E80               	movlw	128
  7316   002220  1B83               	xorwf	(___flge@ff1+3)& (0+255),f,b
  7317   002222  0E00               	movlw	0
  7318   002224  1B84               	xorwf	___flge@ff2& (0+255),f,b
  7319   002226  0E00               	movlw	0
  7320   002228  1B85               	xorwf	(___flge@ff2+1)& (0+255),f,b
  7321   00222A  0E00               	movlw	0
  7322   00222C  1B86               	xorwf	(___flge@ff2+2)& (0+255),f,b
  7323   00222E  0E80               	movlw	128
  7324   002230  1B87               	xorwf	(___flge@ff2+3)& (0+255),f,b
  7325   002232  5184               	movf	___flge@ff2& (0+255),w,b
  7326   002234  5D80               	subwf	___flge@ff1& (0+255),w,b
  7327   002236  5185               	movf	(___flge@ff2+1)& (0+255),w,b
  7328   002238  5981               	subwfb	(___flge@ff1+1)& (0+255),w,b
  7329   00223A  5186               	movf	(___flge@ff2+2)& (0+255),w,b
  7330   00223C  5982               	subwfb	(___flge@ff1+2)& (0+255),w,b
  7331   00223E  5187               	movf	(___flge@ff2+3)& (0+255),w,b
  7332   002240  5983               	subwfb	(___flge@ff1+3)& (0+255),w,b
  7333   002242  B0D8               	btfsc	status,0,c
  7334   002244  EF26  F011         	goto	u6121
  7335   002248  EF28  F011         	goto	u6120
  7336   00224C                     u6121:
  7337   00224C  EF2B  F011         	goto	l4983
  7338   002250                     u6120:
  7339   002250                     
  7340                           ; BSR set to: 0
  7341   002250  90D8               	bcf	status,0,c
  7342   002252  EF2C  F011         	goto	l606
  7343   002256                     l4983:
  7344                           
  7345                           ; BSR set to: 0
  7346   002256  80D8               	bsf	status,0,c
  7347   002258                     l606:
  7348                           
  7349                           ; BSR set to: 0
  7350   002258  0012               	return		;funcret
  7351   00225A                     __end_of___flge:
  7352                           	callstack 0
  7353                           
  7354 ;; *************** function _I2C_Write *****************
  7355 ;; Defined at:
  7356 ;;		line 102 in file "setting_hardaware/gyroscope.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  data            1    wreg     unsigned char 
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;  data            1    0[BANK0 ] unsigned char 
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  1    wreg      void 
  7363 ;; Registers used:
  7364 ;;		wreg
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7370 ;;      Params:         0       0       0       0       0       0       0
  7371 ;;      Locals:         0       1       0       0       0       0       0
  7372 ;;      Temps:          0       0       0       0       0       0       0
  7373 ;;      Totals:         0       1       0       0       0       0       0
  7374 ;;Total ram usage:        1 bytes
  7375 ;; Hardware stack levels used: 1
  7376 ;; Hardware stack levels required when called: 7
  7377 ;; This function calls:
  7378 ;;		Nothing
  7379 ;; This function is called by:
  7380 ;;		_Check_Gyroscope
  7381 ;;		_Gyroscope_Initialize
  7382 ;;		_Calibration
  7383 ;; This function uses a non-reentrant model
  7384 ;;
  7385                           
  7386                           	psect	text20
  7387   002D9C                     __ptext20:
  7388                           	callstack 0
  7389   002D9C                     _I2C_Write:
  7390                           	callstack 22
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;incstack = 0
  7394                           ;I2C_Write@data stored from wreg
  7395   002D9C  0100               	movlb	0	; () banked
  7396   002D9E  6F80               	movwf	I2C_Write@data& (0+255),b
  7397   002DA0                     
  7398                           ;setting_hardaware/gyroscope.c: 103:     SSPBUF = data;
  7399   002DA0  C080  FFC9         	movff	I2C_Write@data,4041	;volatile
  7400   002DA4                     l315:
  7401   002DA4  B0C7               	btfsc	4039,0,c	;volatile
  7402   002DA6  EFD7  F016         	goto	u6011
  7403   002DAA  EFD9  F016         	goto	u6010
  7404   002DAE                     u6011:
  7405   002DAE  EFD2  F016         	goto	l315
  7406   002DB2                     u6010:
  7407   002DB2                     l318:
  7408   002DB2  BCC5               	btfsc	197,6,c	;volatile
  7409   002DB4  EFDE  F016         	goto	u6021
  7410   002DB8  EFE0  F016         	goto	u6020
  7411   002DBC                     u6021:
  7412   002DBC  EFD9  F016         	goto	l318
  7413   002DC0                     u6020:
  7414   002DC0  0012               	return		;funcret
  7415   002DC2                     __end_of_I2C_Write:
  7416                           	callstack 0
  7417                           
  7418 ;; *************** function _I2C_Stop *****************
  7419 ;; Defined at:
  7420 ;;		line 97 in file "setting_hardaware/gyroscope.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;		None
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;		None
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  1    wreg      void 
  7427 ;; Registers used:
  7428 ;;		None
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7434 ;;      Params:         0       0       0       0       0       0       0
  7435 ;;      Locals:         0       0       0       0       0       0       0
  7436 ;;      Temps:          0       0       0       0       0       0       0
  7437 ;;      Totals:         0       0       0       0       0       0       0
  7438 ;;Total ram usage:        0 bytes
  7439 ;; Hardware stack levels used: 1
  7440 ;; Hardware stack levels required when called: 7
  7441 ;; This function calls:
  7442 ;;		Nothing
  7443 ;; This function is called by:
  7444 ;;		_Check_Gyroscope
  7445 ;;		_Gyroscope_Initialize
  7446 ;;		_Calibration
  7447 ;; This function uses a non-reentrant model
  7448 ;;
  7449                           
  7450                           	psect	text21
  7451   002E54                     __ptext21:
  7452                           	callstack 0
  7453   002E54                     _I2C_Stop:
  7454                           	callstack 22
  7455   002E54                     
  7456                           ;setting_hardaware/gyroscope.c: 98:     PEN = 1;
  7457   002E54  84C5               	bsf	4037,2,c	;volatile
  7458   002E56                     l309:
  7459   002E56  B4C5               	btfsc	4037,2,c	;volatile
  7460   002E58  EF30  F017         	goto	u6031
  7461   002E5C  EF32  F017         	goto	u6030
  7462   002E60                     u6031:
  7463   002E60  EF2B  F017         	goto	l309
  7464   002E64                     u6030:
  7465   002E64  0012               	return		;funcret
  7466   002E66                     __end_of_I2C_Stop:
  7467                           	callstack 0
  7468                           
  7469 ;; *************** function _I2C_Start *****************
  7470 ;; Defined at:
  7471 ;;		line 91 in file "setting_hardaware/gyroscope.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;		None
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;		None
  7476 ;; Return value:  Size  Location     Type
  7477 ;;                  1    wreg      void 
  7478 ;; Registers used:
  7479 ;;		None
  7480 ;; Tracked objects:
  7481 ;;		On entry : 0/0
  7482 ;;		On exit  : 0/0
  7483 ;;		Unchanged: 0/0
  7484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7485 ;;      Params:         0       0       0       0       0       0       0
  7486 ;;      Locals:         0       0       0       0       0       0       0
  7487 ;;      Temps:          0       0       0       0       0       0       0
  7488 ;;      Totals:         0       0       0       0       0       0       0
  7489 ;;Total ram usage:        0 bytes
  7490 ;; Hardware stack levels used: 1
  7491 ;; Hardware stack levels required when called: 7
  7492 ;; This function calls:
  7493 ;;		Nothing
  7494 ;; This function is called by:
  7495 ;;		_Check_Gyroscope
  7496 ;;		_Gyroscope_Initialize
  7497 ;;		_Calibration
  7498 ;; This function uses a non-reentrant model
  7499 ;;
  7500                           
  7501                           	psect	text22
  7502   002E66                     __ptext22:
  7503                           	callstack 0
  7504   002E66                     _I2C_Start:
  7505                           	callstack 22
  7506   002E66                     
  7507                           ;setting_hardaware/gyroscope.c: 92:     SEN = 1;
  7508   002E66  80C5               	bsf	4037,0,c	;volatile
  7509   002E68                     l303:
  7510   002E68  B0C5               	btfsc	4037,0,c	;volatile
  7511   002E6A  EF39  F017         	goto	u6001
  7512   002E6E  EF3B  F017         	goto	u6000
  7513   002E72                     u6001:
  7514   002E72  EF34  F017         	goto	l303
  7515   002E76                     u6000:
  7516   002E76  0012               	return		;funcret
  7517   002E78                     __end_of_I2C_Start:
  7518                           	callstack 0
  7519                           
  7520 ;; *************** function _I2C_Read *****************
  7521 ;; Defined at:
  7522 ;;		line 109 in file "setting_hardaware/gyroscope.c"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;  ack             1    wreg     unsigned char 
  7525 ;; Auto vars:     Size  Location     Type
  7526 ;;  ack             1    0[BANK0 ] unsigned char 
  7527 ;;  data            1    1[BANK0 ] unsigned char 
  7528 ;; Return value:  Size  Location     Type
  7529 ;;                  1    wreg      unsigned char 
  7530 ;; Registers used:
  7531 ;;		wreg, status,2
  7532 ;; Tracked objects:
  7533 ;;		On entry : 0/0
  7534 ;;		On exit  : 0/0
  7535 ;;		Unchanged: 0/0
  7536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7537 ;;      Params:         0       0       0       0       0       0       0
  7538 ;;      Locals:         0       2       0       0       0       0       0
  7539 ;;      Temps:          0       0       0       0       0       0       0
  7540 ;;      Totals:         0       2       0       0       0       0       0
  7541 ;;Total ram usage:        2 bytes
  7542 ;; Hardware stack levels used: 1
  7543 ;; Hardware stack levels required when called: 7
  7544 ;; This function calls:
  7545 ;;		Nothing
  7546 ;; This function is called by:
  7547 ;;		_Check_Gyroscope
  7548 ;;		_Calibration
  7549 ;; This function uses a non-reentrant model
  7550 ;;
  7551                           
  7552                           	psect	text23
  7553   002B4A                     __ptext23:
  7554                           	callstack 0
  7555   002B4A                     _I2C_Read:
  7556                           	callstack 22
  7557                           
  7558                           ;incstack = 0
  7559                           ;I2C_Read@ack stored from wreg
  7560   002B4A  0100               	movlb	0	; () banked
  7561   002B4C  6F80               	movwf	I2C_Read@ack& (0+255),b
  7562   002B4E                     
  7563                           ;setting_hardaware/gyroscope.c: 110:     uint8_t data;;setting_hardaware/gyroscope.c: 11
      +                          1:     RCEN = 1;
  7564   002B4E  86C5               	bsf	4037,3,c	;volatile
  7565   002B50                     l324:
  7566   002B50  A0C7               	btfss	4039,0,c	;volatile
  7567   002B52  EFAD  F015         	goto	u6041
  7568   002B56  EFAF  F015         	goto	u6040
  7569   002B5A                     u6041:
  7570   002B5A  EFA8  F015         	goto	l324
  7571   002B5E                     u6040:
  7572   002B5E                     
  7573                           ;setting_hardaware/gyroscope.c: 113:     data = SSPBUF;
  7574   002B5E  CFC9 F081          	movff	4041,I2C_Read@data	;volatile
  7575   002B62                     
  7576                           ;setting_hardaware/gyroscope.c: 116:     ACKDT = ack ? 0 : 1;
  7577   002B62  0100               	movlb	0	; () banked
  7578   002B64  5180               	movf	I2C_Read@ack& (0+255),w,b
  7579   002B66  B4D8               	btfsc	status,2,c
  7580   002B68  EFB8  F015         	goto	u6051
  7581   002B6C  EFBB  F015         	goto	u6050
  7582   002B70                     u6051:
  7583   002B70  8AC5               	bsf	4037,5,c	;volatile
  7584   002B72  EFBC  F015         	goto	u6065
  7585   002B76                     u6050:
  7586   002B76  9AC5               	bcf	4037,5,c	;volatile
  7587   002B78                     u6065:
  7588   002B78                     
  7589                           ;setting_hardaware/gyroscope.c: 117:     ACKEN = 1;
  7590   002B78  88C5               	bsf	4037,4,c	;volatile
  7591   002B7A                     l327:
  7592   002B7A  B8C5               	btfsc	4037,4,c	;volatile
  7593   002B7C  EFC2  F015         	goto	u6071
  7594   002B80  EFC4  F015         	goto	u6070
  7595   002B84                     u6071:
  7596   002B84  EFBD  F015         	goto	l327
  7597   002B88                     u6070:
  7598   002B88                     
  7599                           ;setting_hardaware/gyroscope.c: 119:     return data;
  7600   002B88  0100               	movlb	0	; () banked
  7601   002B8A  5181               	movf	I2C_Read@data& (0+255),w,b
  7602   002B8C                     
  7603                           ; BSR set to: 0
  7604   002B8C  0012               	return		;funcret
  7605   002B8E                     __end_of_I2C_Read:
  7606                           	callstack 0
  7607                           
  7608 ;; *************** function _Check_ADC *****************
  7609 ;; Defined at:
  7610 ;;		line 33 in file "setting_hardaware/adc.c"
  7611 ;; Parameters:    Size  Location     Type
  7612 ;;  prev_sensor_    2   46[BANK0 ] int 
  7613 ;; Auto vars:     Size  Location     Type
  7614 ;;  tmp            10   51[BANK0 ] unsigned char [10]
  7615 ;;  bend_sensor_    2   61[BANK0 ] int 
  7616 ;; Return value:  Size  Location     Type
  7617 ;;                  1    wreg      void 
  7618 ;; Registers used:
  7619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7620 ;; Tracked objects:
  7621 ;;		On entry : 0/0
  7622 ;;		On exit  : 0/0
  7623 ;;		Unchanged: 0/0
  7624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7625 ;;      Params:         0       2       0       0       0       0       0
  7626 ;;      Locals:         0      12       0       0       0       0       0
  7627 ;;      Temps:          0       3       0       0       0       0       0
  7628 ;;      Totals:         0      17       0       0       0       0       0
  7629 ;;Total ram usage:       17 bytes
  7630 ;; Hardware stack levels used: 1
  7631 ;; Hardware stack levels required when called: 12
  7632 ;; This function calls:
  7633 ;;		_ADC_Read
  7634 ;;		_UART_Write_Text
  7635 ;;		_sprintf
  7636 ;; This function is called by:
  7637 ;;		_main
  7638 ;; This function uses a non-reentrant model
  7639 ;;
  7640                           
  7641                           	psect	text24
  7642   00235A                     __ptext24:
  7643                           	callstack 0
  7644   00235A                     _Check_ADC:
  7645                           	callstack 18
  7646   00235A                     
  7647                           ;setting_hardaware/adc.c: 35:     int bend_sensor_val=ADC_Read(bend_sensor_val);
  7648   00235A  C0BD  F080         	movff	Check_ADC@bend_sensor_val,ADC_Read@channel
  7649   00235E  C0BE  F081         	movff	Check_ADC@bend_sensor_val+1,ADC_Read@channel+1
  7650   002362  EC75  F016         	call	_ADC_Read	;wreg free
  7651   002366  C080  F0BD         	movff	?_ADC_Read,Check_ADC@bend_sensor_val
  7652   00236A  C081  F0BE         	movff	?_ADC_Read+1,Check_ADC@bend_sensor_val+1
  7653   00236E                     
  7654                           ;setting_hardaware/adc.c: 37:     char tmp[10];;setting_hardaware/adc.c: 38:     sprintf
      +                          (tmp, "%d\r\n", bend_sensor_val);
  7655   00236E  0EB3               	movlw	low Check_ADC@tmp
  7656   002370  0100               	movlb	0	; () banked
  7657   002372  6F9D               	movwf	sprintf@s& (0+255),b
  7658   002374  0E2A               	movlw	low STR_1
  7659   002376  6F9E               	movwf	sprintf@fmt& (0+255),b
  7660   002378  0E7D               	movlw	high STR_1
  7661   00237A  6F9F               	movwf	(sprintf@fmt+1)& (0+255),b
  7662   00237C  C0BD  F0A0         	movff	Check_ADC@bend_sensor_val,?_sprintf+3
  7663   002380  C0BE  F0A1         	movff	Check_ADC@bend_sensor_val+1,?_sprintf+4
  7664   002384  ECE6  F015         	call	_sprintf	;wreg free
  7665   002388                     
  7666                           ;setting_hardaware/adc.c: 39:     UART_Write_Text(tmp);
  7667   002388  0EB3               	movlw	low Check_ADC@tmp
  7668   00238A  0100               	movlb	0	; () banked
  7669   00238C  6F81               	movwf	UART_Write_Text@text& (0+255),b
  7670   00238E  6B82               	clrf	(UART_Write_Text@text+1)& (0+255),b
  7671   002390  EC78  F014         	call	_UART_Write_Text	;wreg free
  7672   002394                     
  7673                           ;setting_hardaware/adc.c: 41:     if(prev_sensor_val<bend_sensor_val-5 || prev_sensor_va
      +                          l>bend_sensor_val+5)
  7674   002394  0EFB               	movlw	251
  7675   002396  0100               	movlb	0	; () banked
  7676   002398  25BD               	addwf	Check_ADC@bend_sensor_val& (0+255),w,b
  7677   00239A  6FB0               	movwf	??_Check_ADC& (0+255),b
  7678   00239C  0EFF               	movlw	255
  7679   00239E  21BE               	addwfc	(Check_ADC@bend_sensor_val+1)& (0+255),w,b
  7680   0023A0  6FB1               	movwf	(??_Check_ADC+1)& (0+255),b
  7681   0023A2  51B0               	movf	??_Check_ADC& (0+255),w,b
  7682   0023A4  5DAE               	subwf	Check_ADC@prev_sensor_val& (0+255),w,b
  7683   0023A6  51AF               	movf	(Check_ADC@prev_sensor_val+1)& (0+255),w,b
  7684   0023A8  0A80               	xorlw	128
  7685   0023AA  6FB2               	movwf	(??_Check_ADC+2)& (0+255),b
  7686   0023AC  51B1               	movf	(??_Check_ADC+1)& (0+255),w,b
  7687   0023AE  0A80               	xorlw	128
  7688   0023B0  59B2               	subwfb	(??_Check_ADC+2)& (0+255),w,b
  7689   0023B2  A0D8               	btfss	status,0,c
  7690   0023B4  EFDE  F011         	goto	u6131
  7691   0023B8  EFE0  F011         	goto	u6130
  7692   0023BC                     u6131:
  7693   0023BC  EFF5  F011         	goto	l32
  7694   0023C0                     u6130:
  7695   0023C0                     
  7696                           ; BSR set to: 0
  7697   0023C0  0E05               	movlw	5
  7698   0023C2  25BD               	addwf	Check_ADC@bend_sensor_val& (0+255),w,b
  7699   0023C4  6FB0               	movwf	??_Check_ADC& (0+255),b
  7700   0023C6  0E00               	movlw	0
  7701   0023C8  21BE               	addwfc	(Check_ADC@bend_sensor_val+1)& (0+255),w,b
  7702   0023CA  6FB1               	movwf	(??_Check_ADC+1)& (0+255),b
  7703   0023CC  51AE               	movf	Check_ADC@prev_sensor_val& (0+255),w,b
  7704   0023CE  5DB0               	subwf	??_Check_ADC& (0+255),w,b
  7705   0023D0  51B1               	movf	(??_Check_ADC+1)& (0+255),w,b
  7706   0023D2  0A80               	xorlw	128
  7707   0023D4  6FB2               	movwf	(??_Check_ADC+2)& (0+255),b
  7708   0023D6  51AF               	movf	(Check_ADC@prev_sensor_val+1)& (0+255),w,b
  7709   0023D8  0A80               	xorlw	128
  7710   0023DA  59B2               	subwfb	(??_Check_ADC+2)& (0+255),w,b
  7711   0023DC  B0D8               	btfsc	status,0,c
  7712   0023DE  EFF3  F011         	goto	u6141
  7713   0023E2  EFF5  F011         	goto	u6140
  7714   0023E6                     u6141:
  7715   0023E6  EFF9  F011         	goto	l4997
  7716   0023EA                     u6140:
  7717   0023EA                     l32:
  7718                           
  7719                           ; BSR set to: 0
  7720                           ;setting_hardaware/adc.c: 42:     {;setting_hardaware/adc.c: 43:         prev_sensor_val
      +                          =bend_sensor_val;
  7721   0023EA  C0BD  F0AE         	movff	Check_ADC@bend_sensor_val,Check_ADC@prev_sensor_val
  7722   0023EE  C0BE  F0AF         	movff	Check_ADC@bend_sensor_val+1,Check_ADC@prev_sensor_val+1
  7723   0023F2                     l4997:
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;setting_hardaware/adc.c: 46:     if(prev_sensor_val<=0x0130)
  7727   0023F2  BFAF               	btfsc	(Check_ADC@prev_sensor_val+1)& (0+255),7,b
  7728   0023F4  EF07  F012         	goto	u6150
  7729   0023F8  0E31               	movlw	49
  7730   0023FA  5DAE               	subwf	Check_ADC@prev_sensor_val& (0+255),w,b
  7731   0023FC  0E01               	movlw	1
  7732   0023FE  59AF               	subwfb	(Check_ADC@prev_sensor_val+1)& (0+255),w,b
  7733   002400  B0D8               	btfsc	status,0,c
  7734   002402  EF05  F012         	goto	u6151
  7735   002406  EF07  F012         	goto	u6150
  7736   00240A                     u6151:
  7737   00240A  EF0F  F012         	goto	l5001
  7738   00240E                     u6150:
  7739   00240E                     
  7740                           ; BSR set to: 0
  7741                           ;setting_hardaware/adc.c: 47:     {;setting_hardaware/adc.c: 48:         UART_Write_Text
      +                          ("BN\r\n");
  7742   00240E  0E25               	movlw	low STR_2
  7743   002410  6F81               	movwf	UART_Write_Text@text& (0+255),b
  7744   002412  0E7D               	movlw	high STR_2
  7745   002414  6F82               	movwf	(UART_Write_Text@text+1)& (0+255),b
  7746   002416  EC78  F014         	call	_UART_Write_Text	;wreg free
  7747                           
  7748                           ;setting_hardaware/adc.c: 49:     }
  7749   00241A  EF15  F012         	goto	l35
  7750   00241E                     l5001:
  7751                           
  7752                           ; BSR set to: 0
  7753                           ;setting_hardaware/adc.c: 51:     {;setting_hardaware/adc.c: 52:         UART_Write_Text
      +                          ("BF\r\n");
  7754   00241E  0E20               	movlw	low STR_3
  7755   002420  6F81               	movwf	UART_Write_Text@text& (0+255),b
  7756   002422  0E7D               	movlw	high STR_3
  7757   002424  6F82               	movwf	(UART_Write_Text@text+1)& (0+255),b
  7758   002426  EC78  F014         	call	_UART_Write_Text	;wreg free
  7759   00242A                     l35:
  7760   00242A  0012               	return		;funcret
  7761   00242C                     __end_of_Check_ADC:
  7762                           	callstack 0
  7763                           
  7764 ;; *************** function _sprintf *****************
  7765 ;; Defined at:
  7766 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  7767 ;; Parameters:    Size  Location     Type
  7768 ;;  s               1   29[BANK0 ] PTR unsigned char 
  7769 ;;		 -> Check_ADC@tmp(10), 
  7770 ;;  fmt             2   30[BANK0 ] PTR const unsigned char 
  7771 ;;		 -> STR_1(5), 
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;  f              11   35[BANK0 ] struct _IO_FILE
  7774 ;;  ret             2    0        int 
  7775 ;;  ap              1   34[BANK0 ] PTR void [1]
  7776 ;;		 -> ?_sprintf(2), 
  7777 ;; Return value:  Size  Location     Type
  7778 ;;                  2   29[BANK0 ] int 
  7779 ;; Registers used:
  7780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7781 ;; Tracked objects:
  7782 ;;		On entry : 0/0
  7783 ;;		On exit  : 0/0
  7784 ;;		Unchanged: 0/0
  7785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7786 ;;      Params:         0       5       0       0       0       0       0
  7787 ;;      Locals:         0      12       0       0       0       0       0
  7788 ;;      Temps:          0       0       0       0       0       0       0
  7789 ;;      Totals:         0      17       0       0       0       0       0
  7790 ;;Total ram usage:       17 bytes
  7791 ;; Hardware stack levels used: 1
  7792 ;; Hardware stack levels required when called: 11
  7793 ;; This function calls:
  7794 ;;		_vfprintf
  7795 ;; This function is called by:
  7796 ;;		_Check_ADC
  7797 ;; This function uses a non-reentrant model
  7798 ;;
  7799                           
  7800                           	psect	text25
  7801   002BCC                     __ptext25:
  7802                           	callstack 0
  7803   002BCC                     _sprintf:
  7804                           	callstack 18
  7805   002BCC  0EA0               	movlw	low (?_sprintf+3)
  7806   002BCE  0100               	movlb	0	; () banked
  7807   002BD0  6FA2               	movwf	sprintf@ap& (0+255),b
  7808   002BD2  C09D  F0A3         	movff	sprintf@s,sprintf@f
  7809   002BD6                     
  7810                           ; BSR set to: 0
  7811   002BD6  0E00               	movlw	0
  7812   002BD8  6FA6               	movwf	(sprintf@f+3)& (0+255),b
  7813   002BDA  0E00               	movlw	0
  7814   002BDC  6FA5               	movwf	(sprintf@f+2)& (0+255),b
  7815   002BDE                     
  7816                           ; BSR set to: 0
  7817   002BDE  0E00               	movlw	0
  7818   002BE0  6FAD               	movwf	(sprintf@f+10)& (0+255),b
  7819   002BE2  0E00               	movlw	0
  7820   002BE4  6FAC               	movwf	(sprintf@f+9)& (0+255),b
  7821   002BE6                     
  7822                           ; BSR set to: 0
  7823   002BE6  0EA3               	movlw	low sprintf@f
  7824   002BE8  6F97               	movwf	vfprintf@fp& (0+255),b
  7825   002BEA  C09E  F098         	movff	sprintf@fmt,vfprintf@fmt
  7826   002BEE  C09F  F099         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7827   002BF2  0EA2               	movlw	low sprintf@ap
  7828   002BF4  6F9A               	movwf	vfprintf@ap& (0+255),b
  7829   002BF6  EC82  F015         	call	_vfprintf	;wreg free
  7830   002BFA  0100               	movlb	0	; () banked
  7831   002BFC  519D               	movf	sprintf@s& (0+255),w,b
  7832   002BFE  25A5               	addwf	(sprintf@f+2)& (0+255),w,b
  7833   002C00  6ED9               	movwf	fsr2l,c
  7834   002C02  6ADA               	clrf	fsr2h,c
  7835   002C04  6ADF               	clrf	indf2,c
  7836   002C06                     
  7837                           ; BSR set to: 0
  7838   002C06  0012               	return		;funcret
  7839   002C08                     __end_of_sprintf:
  7840                           	callstack 0
  7841                           
  7842 ;; *************** function _vfprintf *****************
  7843 ;; Defined at:
  7844 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  7845 ;; Parameters:    Size  Location     Type
  7846 ;;  fp              1   23[BANK0 ] PTR struct _IO_FILE
  7847 ;;		 -> sprintf@f(11), 
  7848 ;;  fmt             2   24[BANK0 ] PTR const unsigned char 
  7849 ;;		 -> STR_1(5), 
  7850 ;;  ap              1   26[BANK0 ] PTR PTR void 
  7851 ;;		 -> sprintf@ap(1), 
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;  cfmt            2   27[BANK0 ] PTR unsigned char 
  7854 ;;		 -> STR_1(5), 
  7855 ;; Return value:  Size  Location     Type
  7856 ;;                  2   23[BANK0 ] int 
  7857 ;; Registers used:
  7858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7864 ;;      Params:         0       4       0       0       0       0       0
  7865 ;;      Locals:         0       2       0       0       0       0       0
  7866 ;;      Temps:          0       0       0       0       0       0       0
  7867 ;;      Totals:         0       6       0       0       0       0       0
  7868 ;;Total ram usage:        6 bytes
  7869 ;; Hardware stack levels used: 1
  7870 ;; Hardware stack levels required when called: 10
  7871 ;; This function calls:
  7872 ;;		_vfpfcnvrt
  7873 ;; This function is called by:
  7874 ;;		_sprintf
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           	psect	text26
  7879   002B04                     __ptext26:
  7880                           	callstack 0
  7881   002B04                     _vfprintf:
  7882                           	callstack 18
  7883   002B04                     
  7884                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  7885   002B04  C098  F09B         	movff	vfprintf@fmt,vfprintf@cfmt
  7886   002B08  C099  F09C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7887                           
  7888                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  7889   002B0C  EF91  F015         	goto	l4849
  7890   002B10                     l4847:
  7891                           
  7892                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  7893   002B10  C097  F08A         	movff	vfprintf@fp,vfpfcnvrt@fp
  7894   002B14  0E9B               	movlw	low vfprintf@cfmt
  7895   002B16  0100               	movlb	0	; () banked
  7896   002B18  6F8B               	movwf	vfpfcnvrt@fmt& (0+255),b
  7897   002B1A  C09A  F08C         	movff	vfprintf@ap,vfpfcnvrt@ap
  7898   002B1E  EC1E  F00E         	call	_vfpfcnvrt	;wreg free
  7899   002B22                     l4849:
  7900                           
  7901                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  7902   002B22  C09B  FFF6         	movff	vfprintf@cfmt,tblptrl
  7903   002B26  C09C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7904   002B2A                     	if	0	;tblptru may be non-zero
  7905   002B2A                     	endif
  7906   002B2A                     	if	0	;tblptru may be non-zero
  7907   002B2A                     	endif
  7908   002B2A  0008               	tblrd		*
  7909   002B2C  50F5               	movf	tablat,w,c
  7910   002B2E  0900               	iorlw	0
  7911   002B30  A4D8               	btfss	status,2,c
  7912   002B32  EF9D  F015         	goto	u5951
  7913   002B36  EF9F  F015         	goto	u5950
  7914   002B3A                     u5951:
  7915   002B3A  EF88  F015         	goto	l4847
  7916   002B3E                     u5950:
  7917   002B3E                     
  7918                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  7919   002B3E  0E00               	movlw	0
  7920   002B40  0100               	movlb	0	; () banked
  7921   002B42  6F98               	movwf	(?_vfprintf+1)& (0+255),b
  7922   002B44  0E00               	movlw	0
  7923   002B46  6F97               	movwf	?_vfprintf& (0+255),b
  7924   002B48                     
  7925                           ; BSR set to: 0
  7926   002B48  0012               	return		;funcret
  7927   002B4A                     __end_of_vfprintf:
  7928                           	callstack 0
  7929                           
  7930 ;; *************** function _vfpfcnvrt *****************
  7931 ;; Defined at:
  7932 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  7935 ;;		 -> sprintf@f(11), 
  7936 ;;  fmt             1   11[BANK0 ] PTR PTR unsigned char 
  7937 ;;		 -> vfprintf@cfmt(2), 
  7938 ;;  ap              1   12[BANK0 ] PTR PTR void 
  7939 ;;		 -> sprintf@ap(1), 
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;  convarg         4   18[BANK0 ] struct .
  7942 ;;  cp              2   16[BANK0 ] PTR unsigned char 
  7943 ;;		 -> STR_1(5), 
  7944 ;;  c               1   22[BANK0 ] unsigned char 
  7945 ;;  done            1   15[BANK0 ] _Bool 
  7946 ;; Return value:  Size  Location     Type
  7947 ;;                  1    wreg      void 
  7948 ;; Registers used:
  7949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7955 ;;      Params:         0       3       0       0       0       0       0
  7956 ;;      Locals:         0       8       0       0       0       0       0
  7957 ;;      Temps:          0       2       0       0       0       0       0
  7958 ;;      Totals:         0      13       0       0       0       0       0
  7959 ;;Total ram usage:       13 bytes
  7960 ;; Hardware stack levels used: 1
  7961 ;; Hardware stack levels required when called: 9
  7962 ;; This function calls:
  7963 ;;		___awdiv
  7964 ;;		___awmod
  7965 ;;		_abs
  7966 ;;		_fputc
  7967 ;; This function is called by:
  7968 ;;		_vfprintf
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           	psect	text27
  7973   001C3C                     __ptext27:
  7974                           	callstack 0
  7975   001C3C                     _vfpfcnvrt:
  7976                           	callstack 18
  7977   001C3C                     
  7978                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  7979   001C3C  0100               	movlb	0	; () banked
  7980   001C3E  518B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7981   001C40  6ED9               	movwf	fsr2l,c
  7982   001C42  6ADA               	clrf	fsr2h,c
  7983   001C44  CFDE FFF6          	movff	postinc2,tblptrl
  7984   001C48  CFDD FFF7          	movff	postdec2,tblptrh
  7985   001C4C                     	if	0	;tblptru may be non-zero
  7986   001C4C                     	endif
  7987   001C4C                     	if	0	;tblptru may be non-zero
  7988   001C4C                     	endif
  7989   001C4C  0008               	tblrd		*
  7990   001C4E  50F5               	movf	tablat,w,c
  7991   001C50  0A25               	xorlw	37
  7992   001C52  A4D8               	btfss	status,2,c
  7993   001C54  EF2E  F00E         	goto	u5591
  7994   001C58  EF30  F00E         	goto	u5590
  7995   001C5C                     u5591:
  7996   001C5C  EF01  F00F         	goto	l4665
  7997   001C60                     u5590:
  7998   001C60                     
  7999                           ; BSR set to: 0
  8000                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  8001   001C60  518B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8002   001C62  6ED9               	movwf	fsr2l,c
  8003   001C64  6ADA               	clrf	fsr2h,c
  8004   001C66  2ADE               	incf	postinc2,f,c
  8005   001C68  0E00               	movlw	0
  8006   001C6A  22DD               	addwfc	postdec2,f,c
  8007   001C6C                     
  8008                           ; BSR set to: 0
  8009                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  8010   001C6C  0E00               	movlw	0
  8011   001C6E  6E44               	movwf	(_width+1)^0,c
  8012   001C70  0E00               	movlw	0
  8013   001C72  6E43               	movwf	_width^0,c
  8014   001C74  C043  F04B         	movff	_width,_flags
  8015   001C78                     
  8016                           ; BSR set to: 0
  8017                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  8018   001C78  6845               	setf	_prec^0,c
  8019   001C7A  6846               	setf	(_prec+1)^0,c
  8020   001C7C                     
  8021                           ; BSR set to: 0
  8022                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  8023   001C7C  518B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8024   001C7E  6ED9               	movwf	fsr2l,c
  8025   001C80  6ADA               	clrf	fsr2h,c
  8026   001C82  CFDE F090          	movff	postinc2,vfpfcnvrt@cp
  8027   001C86  CFDD F091          	movff	postdec2,vfpfcnvrt@cp+1
  8028   001C8A                     
  8029                           ; BSR set to: 0
  8030                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  8031   001C8A  C090  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8032   001C8E  C091  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8033   001C92                     	if	0	;tblptru may be non-zero
  8034   001C92                     	endif
  8035   001C92                     	if	0	;tblptru may be non-zero
  8036   001C92                     	endif
  8037   001C92  0008               	tblrd		*
  8038   001C94  50F5               	movf	tablat,w,c
  8039   001C96  0A64               	xorlw	100
  8040   001C98  B4D8               	btfsc	status,2,c
  8041   001C9A  EF51  F00E         	goto	u5601
  8042   001C9E  EF53  F00E         	goto	u5600
  8043   001CA2                     u5601:
  8044   001CA2  EF61  F00E         	goto	l4635
  8045   001CA6                     u5600:
  8046   001CA6                     
  8047                           ; BSR set to: 0
  8048   001CA6  C090  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8049   001CAA  C091  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8050   001CAE                     	if	0	;tblptru may be non-zero
  8051   001CAE                     	endif
  8052   001CAE                     	if	0	;tblptru may be non-zero
  8053   001CAE                     	endif
  8054   001CAE  0008               	tblrd		*
  8055   001CB0  50F5               	movf	tablat,w,c
  8056   001CB2  0A69               	xorlw	105
  8057   001CB4  A4D8               	btfss	status,2,c
  8058   001CB6  EF5F  F00E         	goto	u5611
  8059   001CBA  EF61  F00E         	goto	u5610
  8060   001CBE                     u5611:
  8061   001CBE  EFF8  F00E         	goto	l4661
  8062   001CC2                     u5610:
  8063   001CC2                     l4635:
  8064                           
  8065                           ; BSR set to: 0
  8066                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  8067   001CC2  518C               	movf	vfpfcnvrt@ap& (0+255),w,b
  8068   001CC4  6ED9               	movwf	fsr2l,c
  8069   001CC6  6ADA               	clrf	fsr2h,c
  8070   001CC8  0E02               	movlw	2
  8071   001CCA  26DF               	addwf	indf2,f,c
  8072   001CCC  5CDF               	subwf	indf2,w,c
  8073   001CCE  6ED9               	movwf	fsr2l,c
  8074   001CD0  6ADA               	clrf	fsr2h,c
  8075   001CD2  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg
  8076   001CD6  CFDE F093          	movff	postinc2,vfpfcnvrt@convarg+1
  8077   001CDA                     
  8078                           ; BSR set to: 0
  8079                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  8080   001CDA  0E01               	movlw	1
  8081   001CDC  2590               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8082   001CDE  6F8D               	movwf	??_vfpfcnvrt& (0+255),b
  8083   001CE0  0E00               	movlw	0
  8084   001CE2  2191               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8085   001CE4  6F8E               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8086   001CE6  518B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8087   001CE8  6ED9               	movwf	fsr2l,c
  8088   001CEA  6ADA               	clrf	fsr2h,c
  8089   001CEC  C08D  FFDE         	movff	??_vfpfcnvrt,postinc2
  8090   001CF0  C08E  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8091   001CF4                     
  8092                           ; BSR set to: 0
  8093                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  8094   001CF4  0E20               	movlw	32
  8095   001CF6  6F96               	movwf	vfpfcnvrt@c& (0+255),b
  8096                           
  8097                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  8098   001CF8  BF93               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  8099   001CFA  EF81  F00E         	goto	u5621
  8100   001CFE  EF84  F00E         	goto	u5620
  8101   001D02                     u5621:
  8102   001D02  0E01               	movlw	1
  8103   001D04  EF85  F00E         	goto	u5630
  8104   001D08                     u5620:
  8105   001D08  0E00               	movlw	0
  8106   001D0A                     u5630:
  8107   001D0A  6F8F               	movwf	vfpfcnvrt@done& (0+255),b
  8108   001D0C                     l4641:
  8109                           
  8110                           ; BSR set to: 0
  8111                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  8112   001D0C  0796               	decf	vfpfcnvrt@c& (0+255),f,b
  8113   001D0E  0E45               	movlw	low _dbuf
  8114   001D10  2596               	addwf	vfpfcnvrt@c& (0+255),w,b
  8115   001D12  6ED9               	movwf	fsr2l,c
  8116   001D14  6ADA               	clrf	fsr2h,c
  8117   001D16  0E01               	movlw	high _dbuf
  8118   001D18  22DA               	addwfc	fsr2h,f,c
  8119   001D1A  C092  F080         	movff	vfpfcnvrt@convarg,___awmod@dividend
  8120   001D1E  C093  F081         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  8121   001D22  0E00               	movlw	0
  8122   001D24  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  8123   001D26  0E0A               	movlw	10
  8124   001D28  6F82               	movwf	___awmod@divisor& (0+255),b
  8125   001D2A  EC3B  F013         	call	___awmod	;wreg free
  8126   001D2E  C080  F086         	movff	?___awmod,abs@a
  8127   001D32  C081  F087         	movff	?___awmod+1,abs@a+1
  8128   001D36  EC5A  F016         	call	_abs	;wreg free
  8129   001D3A  0100               	movlb	0	; () banked
  8130   001D3C  5186               	movf	?_abs& (0+255),w,b
  8131   001D3E  0F30               	addlw	48
  8132   001D40  6EDF               	movwf	indf2,c
  8133   001D42                     
  8134                           ; BSR set to: 0
  8135                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  8136   001D42  C092  F080         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  8137   001D46  C093  F081         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  8138   001D4A  0E00               	movlw	0
  8139   001D4C  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  8140   001D4E  0E0A               	movlw	10
  8141   001D50  6F82               	movwf	___awdiv@divisor& (0+255),b
  8142   001D52  EC79  F012         	call	___awdiv	;wreg free
  8143   001D56  C080  F092         	movff	?___awdiv,vfpfcnvrt@convarg
  8144   001D5A  C081  F093         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  8145   001D5E                     
  8146                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  8147   001D5E  0100               	movlb	0	; () banked
  8148   001D60  5192               	movf	vfpfcnvrt@convarg& (0+255),w,b
  8149   001D62  1193               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  8150   001D64  B4D8               	btfsc	status,2,c
  8151   001D66  EFB7  F00E         	goto	u5641
  8152   001D6A  EFB9  F00E         	goto	u5640
  8153   001D6E                     u5641:
  8154   001D6E  EFC1  F00E         	goto	l4649
  8155   001D72                     u5640:
  8156   001D72                     
  8157                           ; BSR set to: 0
  8158   001D72  5196               	movf	vfpfcnvrt@c& (0+255),w,b
  8159   001D74  A4D8               	btfss	status,2,c
  8160   001D76  EFBF  F00E         	goto	u5651
  8161   001D7A  EFC1  F00E         	goto	u5650
  8162   001D7E                     u5651:
  8163   001D7E  EF86  F00E         	goto	l4641
  8164   001D82                     u5650:
  8165   001D82                     l4649:
  8166                           
  8167                           ; BSR set to: 0
  8168                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  8169   001D82  5196               	movf	vfpfcnvrt@c& (0+255),w,b
  8170   001D84  B4D8               	btfsc	status,2,c
  8171   001D86  EFC7  F00E         	goto	u5661
  8172   001D8A  EFC9  F00E         	goto	u5660
  8173   001D8E                     u5661:
  8174   001D8E  EFED  F00E         	goto	l4659
  8175   001D92                     u5660:
  8176   001D92                     
  8177                           ; BSR set to: 0
  8178   001D92  518F               	movf	vfpfcnvrt@done& (0+255),w,b
  8179   001D94  B4D8               	btfsc	status,2,c
  8180   001D96  EFCF  F00E         	goto	u5671
  8181   001D9A  EFD1  F00E         	goto	u5670
  8182   001D9E                     u5671:
  8183   001D9E  EFED  F00E         	goto	l4659
  8184   001DA2                     u5670:
  8185   001DA2                     
  8186                           ; BSR set to: 0
  8187                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  8188   001DA2  0796               	decf	vfpfcnvrt@c& (0+255),f,b
  8189   001DA4  0E45               	movlw	low _dbuf
  8190   001DA6  2596               	addwf	vfpfcnvrt@c& (0+255),w,b
  8191   001DA8  6ED9               	movwf	fsr2l,c
  8192   001DAA  6ADA               	clrf	fsr2h,c
  8193   001DAC  0E01               	movlw	high _dbuf
  8194   001DAE  22DA               	addwfc	fsr2h,f,c
  8195   001DB0  0E2D               	movlw	45
  8196   001DB2  6EDF               	movwf	indf2,c
  8197   001DB4  EFED  F00E         	goto	l4659
  8198   001DB8                     l4655:
  8199                           
  8200                           ; BSR set to: 0
  8201                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  8202   001DB8  0E45               	movlw	low _dbuf
  8203   001DBA  2596               	addwf	vfpfcnvrt@c& (0+255),w,b
  8204   001DBC  6ED9               	movwf	fsr2l,c
  8205   001DBE  6ADA               	clrf	fsr2h,c
  8206   001DC0  0E01               	movlw	high _dbuf
  8207   001DC2  22DA               	addwfc	fsr2h,f,c
  8208   001DC4  50DF               	movf	indf2,w,c
  8209   001DC6  6F8D               	movwf	??_vfpfcnvrt& (0+255),b
  8210   001DC8  518D               	movf	??_vfpfcnvrt& (0+255),w,b
  8211   001DCA  6F80               	movwf	fputc@c& (0+255),b
  8212   001DCC  6B81               	clrf	(fputc@c+1)& (0+255),b
  8213   001DCE  C08A  F082         	movff	vfpfcnvrt@fp,fputc@fp
  8214   001DD2  EC93  F013         	call	_fputc	;wreg free
  8215   001DD6  0100               	movlb	0	; () banked
  8216   001DD8  2B96               	incf	vfpfcnvrt@c& (0+255),f,b
  8217   001DDA                     l4659:
  8218                           
  8219                           ; BSR set to: 0
  8220                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  8221   001DDA  0E20               	movlw	32
  8222   001DDC  1996               	xorwf	vfpfcnvrt@c& (0+255),w,b
  8223   001DDE  A4D8               	btfss	status,2,c
  8224   001DE0  EFF4  F00E         	goto	u5681
  8225   001DE4  EFF6  F00E         	goto	u5680
  8226   001DE8                     u5681:
  8227   001DE8  EFDC  F00E         	goto	l4655
  8228   001DEC                     u5680:
  8229   001DEC  EF12  F00F         	goto	l1169
  8230   001DF0                     l4661:
  8231                           
  8232                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  8233   001DF0  0100               	movlb	0	; () banked
  8234   001DF2  518B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8235   001DF4  6ED9               	movwf	fsr2l,c
  8236   001DF6  6ADA               	clrf	fsr2h,c
  8237   001DF8  2ADE               	incf	postinc2,f,c
  8238   001DFA  0E00               	movlw	0
  8239   001DFC  22DD               	addwfc	postdec2,f,c
  8240   001DFE  EF12  F00F         	goto	l1169
  8241   001E02                     l4665:
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  8245   001E02  518B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8246   001E04  6ED9               	movwf	fsr2l,c
  8247   001E06  6ADA               	clrf	fsr2h,c
  8248   001E08  CFDE FFF6          	movff	postinc2,tblptrl
  8249   001E0C  CFDD FFF7          	movff	postdec2,tblptrh
  8250   001E10                     	if	0	;tblptru may be non-zero
  8251   001E10                     	endif
  8252   001E10                     	if	0	;tblptru may be non-zero
  8253   001E10                     	endif
  8254   001E10  0008               	tblrd		*
  8255   001E12  50F5               	movf	tablat,w,c
  8256   001E14  6F80               	movwf	fputc@c& (0+255),b
  8257   001E16  6B81               	clrf	(fputc@c+1)& (0+255),b
  8258   001E18  C08A  F082         	movff	vfpfcnvrt@fp,fputc@fp
  8259   001E1C  EC93  F013         	call	_fputc	;wreg free
  8260   001E20  EFF8  F00E         	goto	l4661
  8261   001E24                     l1169:
  8262                           
  8263                           ; BSR set to: 0
  8264   001E24  0012               	return		;funcret
  8265   001E26                     __end_of_vfpfcnvrt:
  8266                           	callstack 0
  8267                           
  8268 ;; *************** function _fputc *****************
  8269 ;; Defined at:
  8270 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;  c               2    0[BANK0 ] int 
  8273 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  8274 ;;		 -> sprintf@f(11), 
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;		None
  8277 ;; Return value:  Size  Location     Type
  8278 ;;                  2    0[BANK0 ] int 
  8279 ;; Registers used:
  8280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8281 ;; Tracked objects:
  8282 ;;		On entry : 0/0
  8283 ;;		On exit  : 0/0
  8284 ;;		Unchanged: 0/0
  8285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8286 ;;      Params:         0       3       0       0       0       0       0
  8287 ;;      Locals:         0       0       0       0       0       0       0
  8288 ;;      Temps:          0       5       0       0       0       0       0
  8289 ;;      Totals:         0       8       0       0       0       0       0
  8290 ;;Total ram usage:        8 bytes
  8291 ;; Hardware stack levels used: 1
  8292 ;; Hardware stack levels required when called: 8
  8293 ;; This function calls:
  8294 ;;		_putch
  8295 ;; This function is called by:
  8296 ;;		_vfpfcnvrt
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           	psect	text28
  8301   002726                     __ptext28:
  8302                           	callstack 0
  8303   002726                     _fputc:
  8304                           	callstack 18
  8305   002726  0100               	movlb	0	; () banked
  8306   002728  5182               	movf	fputc@fp& (0+255),w,b
  8307   00272A  B4D8               	btfsc	status,2,c
  8308   00272C  EF9A  F013         	goto	u5421
  8309   002730  EF9C  F013         	goto	u5420
  8310   002734                     u5421:
  8311   002734  EFA4  F013         	goto	l4517
  8312   002738                     u5420:
  8313   002738                     
  8314                           ; BSR set to: 0
  8315   002738  5182               	movf	fputc@fp& (0+255),w,b
  8316   00273A  A4D8               	btfss	status,2,c
  8317   00273C  EFA2  F013         	goto	u5431
  8318   002740  EFA4  F013         	goto	u5430
  8319   002744                     u5431:
  8320   002744  EFA9  F013         	goto	l4519
  8321   002748                     u5430:
  8322   002748                     l4517:
  8323                           
  8324                           ; BSR set to: 0
  8325   002748  5180               	movf	fputc@c& (0+255),w,b
  8326   00274A  EC42  F017         	call	_putch
  8327   00274E  EFE8  F013         	goto	l1194
  8328   002752                     l4519:
  8329                           
  8330                           ; BSR set to: 0
  8331   002752  5182               	movf	fputc@fp& (0+255),w,b
  8332   002754  6ED9               	movwf	fsr2l,c
  8333   002756  6ADA               	clrf	fsr2h,c
  8334   002758  0E09               	movlw	9
  8335   00275A  26D9               	addwf	fsr2l,f,c
  8336   00275C  50DE               	movf	postinc2,w,c
  8337   00275E  10DE               	iorwf	postinc2,w,c
  8338   002760  B4D8               	btfsc	status,2,c
  8339   002762  EFB5  F013         	goto	u5441
  8340   002766  EFB7  F013         	goto	u5440
  8341   00276A                     u5441:
  8342   00276A  EFD0  F013         	goto	l4523
  8343   00276E                     u5440:
  8344   00276E                     
  8345                           ; BSR set to: 0
  8346   00276E  5182               	movf	fputc@fp& (0+255),w,b
  8347   002770  6ED9               	movwf	fsr2l,c
  8348   002772  6ADA               	clrf	fsr2h,c
  8349   002774  0E09               	movlw	9
  8350   002776  26D9               	addwf	fsr2l,f,c
  8351   002778  5182               	movf	fputc@fp& (0+255),w,b
  8352   00277A  6EE1               	movwf	fsr1l,c
  8353   00277C  6AE2               	clrf	fsr1h,c
  8354   00277E  0E02               	movlw	2
  8355   002780  26E1               	addwf	fsr1l,f,c
  8356   002782  50DE               	movf	postinc2,w,c
  8357   002784  5CE6               	subwf	postinc1,w,c
  8358   002786  50E6               	movf	postinc1,w,c
  8359   002788  0A80               	xorlw	128
  8360   00278A  6F87               	movwf	(??_fputc+4)& (0+255),b
  8361   00278C  50DE               	movf	postinc2,w,c
  8362   00278E  0A80               	xorlw	128
  8363   002790  5987               	subwfb	(??_fputc+4)& (0+255),w,b
  8364   002792  B0D8               	btfsc	status,0,c
  8365   002794  EFCE  F013         	goto	u5451
  8366   002798  EFD0  F013         	goto	u5450
  8367   00279C                     u5451:
  8368   00279C  EFE8  F013         	goto	l1194
  8369   0027A0                     u5450:
  8370   0027A0                     l4523:
  8371                           
  8372                           ; BSR set to: 0
  8373   0027A0  5182               	movf	fputc@fp& (0+255),w,b
  8374   0027A2  6ED9               	movwf	fsr2l,c
  8375   0027A4  6ADA               	clrf	fsr2h,c
  8376   0027A6  0E02               	movlw	2
  8377   0027A8  26D9               	addwf	fsr2l,f,c
  8378   0027AA  50DF               	movf	indf2,w,c
  8379   0027AC  6F83               	movwf	??_fputc& (0+255),b
  8380   0027AE  5182               	movf	fputc@fp& (0+255),w,b
  8381   0027B0  6ED9               	movwf	fsr2l,c
  8382   0027B2  6ADA               	clrf	fsr2h,c
  8383   0027B4  50DF               	movf	indf2,w,c
  8384   0027B6  2583               	addwf	??_fputc& (0+255),w,b
  8385   0027B8  6ED9               	movwf	fsr2l,c
  8386   0027BA  6ADA               	clrf	fsr2h,c
  8387   0027BC  C080  FFDF         	movff	fputc@c,indf2
  8388   0027C0  5182               	movf	fputc@fp& (0+255),w,b
  8389   0027C2  6ED9               	movwf	fsr2l,c
  8390   0027C4  6ADA               	clrf	fsr2h,c
  8391   0027C6  0E02               	movlw	2
  8392   0027C8  26D9               	addwf	fsr2l,f,c
  8393   0027CA  2ADE               	incf	postinc2,f,c
  8394   0027CC  0E00               	movlw	0
  8395   0027CE  22DD               	addwfc	postdec2,f,c
  8396   0027D0                     l1194:
  8397   0027D0  0012               	return		;funcret
  8398   0027D2                     __end_of_fputc:
  8399                           	callstack 0
  8400                           
  8401 ;; *************** function _putch *****************
  8402 ;; Defined at:
  8403 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;  c               1    wreg     unsigned char 
  8406 ;; Auto vars:     Size  Location     Type
  8407 ;;  c               1    0[COMRAM] unsigned char 
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  1    wreg      void 
  8410 ;; Registers used:
  8411 ;;		wreg
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/0
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8417 ;;      Params:         0       0       0       0       0       0       0
  8418 ;;      Locals:         0       0       0       0       0       0       0
  8419 ;;      Temps:          0       0       0       0       0       0       0
  8420 ;;      Totals:         0       0       0       0       0       0       0
  8421 ;;Total ram usage:        0 bytes
  8422 ;; Hardware stack levels used: 1
  8423 ;; Hardware stack levels required when called: 7
  8424 ;; This function calls:
  8425 ;;		Nothing
  8426 ;; This function is called by:
  8427 ;;		_fputc
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           	psect	text29
  8432   002E84                     __ptext29:
  8433                           	callstack 0
  8434   002E84                     _putch:
  8435                           	callstack 18
  8436   002E84  0012               	return		;funcret
  8437   002E86                     __end_of_putch:
  8438                           	callstack 0
  8439                           
  8440 ;; *************** function _abs *****************
  8441 ;; Defined at:
  8442 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;  a               2    6[BANK0 ] int 
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;		None
  8447 ;; Return value:  Size  Location     Type
  8448 ;;                  2    6[BANK0 ] int 
  8449 ;; Registers used:
  8450 ;;		wreg, status,2, status,0
  8451 ;; Tracked objects:
  8452 ;;		On entry : 0/0
  8453 ;;		On exit  : 0/0
  8454 ;;		Unchanged: 0/0
  8455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8456 ;;      Params:         0       2       0       0       0       0       0
  8457 ;;      Locals:         0       0       0       0       0       0       0
  8458 ;;      Temps:          0       2       0       0       0       0       0
  8459 ;;      Totals:         0       4       0       0       0       0       0
  8460 ;;Total ram usage:        4 bytes
  8461 ;; Hardware stack levels used: 1
  8462 ;; Hardware stack levels required when called: 7
  8463 ;; This function calls:
  8464 ;;		Nothing
  8465 ;; This function is called by:
  8466 ;;		_vfpfcnvrt
  8467 ;; This function uses a non-reentrant model
  8468 ;;
  8469                           
  8470                           	psect	text30
  8471   002CB4                     __ptext30:
  8472                           	callstack 0
  8473   002CB4                     _abs:
  8474                           	callstack 19
  8475   002CB4  0100               	movlb	0	; () banked
  8476   002CB6  BF87               	btfsc	(abs@a+1)& (0+255),7,b
  8477   002CB8  EF60  F016         	goto	u5461
  8478   002CBC  EF62  F016         	goto	u5460
  8479   002CC0                     u5461:
  8480   002CC0  EF68  F016         	goto	l1179
  8481   002CC4                     u5460:
  8482   002CC4                     
  8483                           ; BSR set to: 0
  8484   002CC4  C086  F086         	movff	abs@a,?_abs
  8485   002CC8  C087  F087         	movff	abs@a+1,?_abs+1
  8486   002CCC  EF74  F016         	goto	l1182
  8487   002CD0                     l1179:
  8488                           
  8489                           ; BSR set to: 0
  8490   002CD0  C086  F088         	movff	abs@a,??_abs
  8491   002CD4  C087  F089         	movff	abs@a+1,??_abs+1
  8492   002CD8  1F88               	comf	??_abs& (0+255),f,b
  8493   002CDA  1F89               	comf	(??_abs+1)& (0+255),f,b
  8494   002CDC  4B88               	infsnz	??_abs& (0+255),f,b
  8495   002CDE  2B89               	incf	(??_abs+1)& (0+255),f,b
  8496   002CE0  C088  F086         	movff	??_abs,?_abs
  8497   002CE4  C089  F087         	movff	??_abs+1,?_abs+1
  8498   002CE8                     l1182:
  8499                           
  8500                           ; BSR set to: 0
  8501   002CE8  0012               	return		;funcret
  8502   002CEA                     __end_of_abs:
  8503                           	callstack 0
  8504                           
  8505 ;; *************** function ___awmod *****************
  8506 ;; Defined at:
  8507 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;  dividend        2    0[BANK0 ] int 
  8510 ;;  divisor         2    2[BANK0 ] int 
  8511 ;; Auto vars:     Size  Location     Type
  8512 ;;  sign            1    5[BANK0 ] unsigned char 
  8513 ;;  counter         1    4[BANK0 ] unsigned char 
  8514 ;; Return value:  Size  Location     Type
  8515 ;;                  2    0[BANK0 ] int 
  8516 ;; Registers used:
  8517 ;;		wreg, status,2, status,0
  8518 ;; Tracked objects:
  8519 ;;		On entry : 0/0
  8520 ;;		On exit  : 0/0
  8521 ;;		Unchanged: 0/0
  8522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8523 ;;      Params:         0       4       0       0       0       0       0
  8524 ;;      Locals:         0       2       0       0       0       0       0
  8525 ;;      Temps:          0       0       0       0       0       0       0
  8526 ;;      Totals:         0       6       0       0       0       0       0
  8527 ;;Total ram usage:        6 bytes
  8528 ;; Hardware stack levels used: 1
  8529 ;; Hardware stack levels required when called: 7
  8530 ;; This function calls:
  8531 ;;		Nothing
  8532 ;; This function is called by:
  8533 ;;		_vfpfcnvrt
  8534 ;; This function uses a non-reentrant model
  8535 ;;
  8536                           
  8537                           	psect	text31
  8538   002676                     __ptext31:
  8539                           	callstack 0
  8540   002676                     ___awmod:
  8541                           	callstack 19
  8542   002676  0100               	movlb	0	; () banked
  8543   002678  6B85               	clrf	___awmod@sign& (0+255),b
  8544   00267A                     
  8545                           ; BSR set to: 0
  8546   00267A  BF81               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  8547   00267C  EF44  F013         	goto	u5280
  8548   002680  EF42  F013         	goto	u5281
  8549   002684                     u5281:
  8550   002684  EF4A  F013         	goto	l4447
  8551   002688                     u5280:
  8552   002688                     
  8553                           ; BSR set to: 0
  8554   002688  6D80               	negf	___awmod@dividend& (0+255),b
  8555   00268A  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  8556   00268C  B0D8               	btfsc	status,0,c
  8557   00268E  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  8558   002690                     
  8559                           ; BSR set to: 0
  8560   002690  0E01               	movlw	1
  8561   002692  6F85               	movwf	___awmod@sign& (0+255),b
  8562   002694                     l4447:
  8563                           
  8564                           ; BSR set to: 0
  8565   002694  BF83               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  8566   002696  EF51  F013         	goto	u5290
  8567   00269A  EF4F  F013         	goto	u5291
  8568   00269E                     u5291:
  8569   00269E  EF55  F013         	goto	l4451
  8570   0026A2                     u5290:
  8571   0026A2                     
  8572                           ; BSR set to: 0
  8573   0026A2  6D82               	negf	___awmod@divisor& (0+255),b
  8574   0026A4  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
  8575   0026A6  B0D8               	btfsc	status,0,c
  8576   0026A8  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
  8577   0026AA                     l4451:
  8578                           
  8579                           ; BSR set to: 0
  8580   0026AA  5182               	movf	___awmod@divisor& (0+255),w,b
  8581   0026AC  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8582   0026AE  B4D8               	btfsc	status,2,c
  8583   0026B0  EF5C  F013         	goto	u5301
  8584   0026B4  EF5E  F013         	goto	u5300
  8585   0026B8                     u5301:
  8586   0026B8  EF82  F013         	goto	l4467
  8587   0026BC                     u5300:
  8588   0026BC                     
  8589                           ; BSR set to: 0
  8590   0026BC  0E01               	movlw	1
  8591   0026BE  6F84               	movwf	___awmod@counter& (0+255),b
  8592   0026C0  EF66  F013         	goto	l4457
  8593   0026C4                     l4455:
  8594                           
  8595                           ; BSR set to: 0
  8596   0026C4  90D8               	bcf	status,0,c
  8597   0026C6  3782               	rlcf	___awmod@divisor& (0+255),f,b
  8598   0026C8  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8599   0026CA  2B84               	incf	___awmod@counter& (0+255),f,b
  8600   0026CC                     l4457:
  8601                           
  8602                           ; BSR set to: 0
  8603   0026CC  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8604   0026CE  EF6B  F013         	goto	u5311
  8605   0026D2  EF6D  F013         	goto	u5310
  8606   0026D6                     u5311:
  8607   0026D6  EF62  F013         	goto	l4455
  8608   0026DA                     u5310:
  8609   0026DA                     l4459:
  8610                           
  8611                           ; BSR set to: 0
  8612   0026DA  5182               	movf	___awmod@divisor& (0+255),w,b
  8613   0026DC  5D80               	subwf	___awmod@dividend& (0+255),w,b
  8614   0026DE  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  8615   0026E0  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  8616   0026E2  A0D8               	btfss	status,0,c
  8617   0026E4  EF76  F013         	goto	u5321
  8618   0026E8  EF78  F013         	goto	u5320
  8619   0026EC                     u5321:
  8620   0026EC  EF7C  F013         	goto	l4463
  8621   0026F0                     u5320:
  8622   0026F0                     
  8623                           ; BSR set to: 0
  8624   0026F0  5182               	movf	___awmod@divisor& (0+255),w,b
  8625   0026F2  5F80               	subwf	___awmod@dividend& (0+255),f,b
  8626   0026F4  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  8627   0026F6  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  8628   0026F8                     l4463:
  8629                           
  8630                           ; BSR set to: 0
  8631   0026F8  90D8               	bcf	status,0,c
  8632   0026FA  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  8633   0026FC  3382               	rrcf	___awmod@divisor& (0+255),f,b
  8634   0026FE                     
  8635                           ; BSR set to: 0
  8636   0026FE  2F84               	decfsz	___awmod@counter& (0+255),f,b
  8637   002700  EF6D  F013         	goto	l4459
  8638   002704                     l4467:
  8639                           
  8640                           ; BSR set to: 0
  8641   002704  5185               	movf	___awmod@sign& (0+255),w,b
  8642   002706  B4D8               	btfsc	status,2,c
  8643   002708  EF88  F013         	goto	u5331
  8644   00270C  EF8A  F013         	goto	u5330
  8645   002710                     u5331:
  8646   002710  EF8E  F013         	goto	l4471
  8647   002714                     u5330:
  8648   002714                     
  8649                           ; BSR set to: 0
  8650   002714  6D80               	negf	___awmod@dividend& (0+255),b
  8651   002716  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  8652   002718  B0D8               	btfsc	status,0,c
  8653   00271A  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  8654   00271C                     l4471:
  8655                           
  8656                           ; BSR set to: 0
  8657   00271C  C080  F080         	movff	___awmod@dividend,?___awmod
  8658   002720  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
  8659   002724                     
  8660                           ; BSR set to: 0
  8661   002724  0012               	return		;funcret
  8662   002726                     __end_of___awmod:
  8663                           	callstack 0
  8664                           
  8665 ;; *************** function ___awdiv *****************
  8666 ;; Defined at:
  8667 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  8668 ;; Parameters:    Size  Location     Type
  8669 ;;  dividend        2    0[BANK0 ] int 
  8670 ;;  divisor         2    2[BANK0 ] int 
  8671 ;; Auto vars:     Size  Location     Type
  8672 ;;  quotient        2    6[BANK0 ] int 
  8673 ;;  sign            1    5[BANK0 ] unsigned char 
  8674 ;;  counter         1    4[BANK0 ] unsigned char 
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  2    0[BANK0 ] int 
  8677 ;; Registers used:
  8678 ;;		wreg, status,2, status,0
  8679 ;; Tracked objects:
  8680 ;;		On entry : 0/0
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8684 ;;      Params:         0       4       0       0       0       0       0
  8685 ;;      Locals:         0       4       0       0       0       0       0
  8686 ;;      Temps:          0       0       0       0       0       0       0
  8687 ;;      Totals:         0       8       0       0       0       0       0
  8688 ;;Total ram usage:        8 bytes
  8689 ;; Hardware stack levels used: 1
  8690 ;; Hardware stack levels required when called: 7
  8691 ;; This function calls:
  8692 ;;		Nothing
  8693 ;; This function is called by:
  8694 ;;		_vfpfcnvrt
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           
  8698                           	psect	text32
  8699   0024F2                     __ptext32:
  8700                           	callstack 0
  8701   0024F2                     ___awdiv:
  8702                           	callstack 19
  8703   0024F2  0100               	movlb	0	; () banked
  8704   0024F4  6B85               	clrf	___awdiv@sign& (0+255),b
  8705   0024F6                     
  8706                           ; BSR set to: 0
  8707   0024F6  BF83               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  8708   0024F8  EF82  F012         	goto	u5220
  8709   0024FC  EF80  F012         	goto	u5221
  8710   002500                     u5221:
  8711   002500  EF88  F012         	goto	l4403
  8712   002504                     u5220:
  8713   002504                     
  8714                           ; BSR set to: 0
  8715   002504  6D82               	negf	___awdiv@divisor& (0+255),b
  8716   002506  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8717   002508  B0D8               	btfsc	status,0,c
  8718   00250A  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8719   00250C                     
  8720                           ; BSR set to: 0
  8721   00250C  0E01               	movlw	1
  8722   00250E  6F85               	movwf	___awdiv@sign& (0+255),b
  8723   002510                     l4403:
  8724                           
  8725                           ; BSR set to: 0
  8726   002510  BF81               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  8727   002512  EF8F  F012         	goto	u5230
  8728   002516  EF8D  F012         	goto	u5231
  8729   00251A                     u5231:
  8730   00251A  EF95  F012         	goto	l4409
  8731   00251E                     u5230:
  8732   00251E                     
  8733                           ; BSR set to: 0
  8734   00251E  6D80               	negf	___awdiv@dividend& (0+255),b
  8735   002520  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8736   002522  B0D8               	btfsc	status,0,c
  8737   002524  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8738   002526                     
  8739                           ; BSR set to: 0
  8740   002526  0E01               	movlw	1
  8741   002528  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  8742   00252A                     l4409:
  8743                           
  8744                           ; BSR set to: 0
  8745   00252A  0E00               	movlw	0
  8746   00252C  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  8747   00252E  0E00               	movlw	0
  8748   002530  6F86               	movwf	___awdiv@quotient& (0+255),b
  8749   002532                     
  8750                           ; BSR set to: 0
  8751   002532  5182               	movf	___awdiv@divisor& (0+255),w,b
  8752   002534  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8753   002536  B4D8               	btfsc	status,2,c
  8754   002538  EFA0  F012         	goto	u5241
  8755   00253C  EFA2  F012         	goto	u5240
  8756   002540                     u5241:
  8757   002540  EFCA  F012         	goto	l4431
  8758   002544                     u5240:
  8759   002544                     
  8760                           ; BSR set to: 0
  8761   002544  0E01               	movlw	1
  8762   002546  6F84               	movwf	___awdiv@counter& (0+255),b
  8763   002548  EFAA  F012         	goto	l4417
  8764   00254C                     l4415:
  8765                           
  8766                           ; BSR set to: 0
  8767   00254C  90D8               	bcf	status,0,c
  8768   00254E  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  8769   002550  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8770   002552  2B84               	incf	___awdiv@counter& (0+255),f,b
  8771   002554                     l4417:
  8772                           
  8773                           ; BSR set to: 0
  8774   002554  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8775   002556  EFAF  F012         	goto	u5251
  8776   00255A  EFB1  F012         	goto	u5250
  8777   00255E                     u5251:
  8778   00255E  EFA6  F012         	goto	l4415
  8779   002562                     u5250:
  8780   002562                     l4419:
  8781                           
  8782                           ; BSR set to: 0
  8783   002562  90D8               	bcf	status,0,c
  8784   002564  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  8785   002566  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8786   002568                     
  8787                           ; BSR set to: 0
  8788   002568  5182               	movf	___awdiv@divisor& (0+255),w,b
  8789   00256A  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  8790   00256C  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8791   00256E  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8792   002570  A0D8               	btfss	status,0,c
  8793   002572  EFBD  F012         	goto	u5261
  8794   002576  EFBF  F012         	goto	u5260
  8795   00257A                     u5261:
  8796   00257A  EFC4  F012         	goto	l4427
  8797   00257E                     u5260:
  8798   00257E                     
  8799                           ; BSR set to: 0
  8800   00257E  5182               	movf	___awdiv@divisor& (0+255),w,b
  8801   002580  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  8802   002582  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8803   002584  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8804   002586                     
  8805                           ; BSR set to: 0
  8806   002586  8186               	bsf	___awdiv@quotient& (0+255),0,b
  8807   002588                     l4427:
  8808                           
  8809                           ; BSR set to: 0
  8810   002588  90D8               	bcf	status,0,c
  8811   00258A  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8812   00258C  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  8813   00258E                     
  8814                           ; BSR set to: 0
  8815   00258E  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  8816   002590  EFB1  F012         	goto	l4419
  8817   002594                     l4431:
  8818                           
  8819                           ; BSR set to: 0
  8820   002594  5185               	movf	___awdiv@sign& (0+255),w,b
  8821   002596  B4D8               	btfsc	status,2,c
  8822   002598  EFD0  F012         	goto	u5271
  8823   00259C  EFD2  F012         	goto	u5270
  8824   0025A0                     u5271:
  8825   0025A0  EFD6  F012         	goto	l4435
  8826   0025A4                     u5270:
  8827   0025A4                     
  8828                           ; BSR set to: 0
  8829   0025A4  6D86               	negf	___awdiv@quotient& (0+255),b
  8830   0025A6  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8831   0025A8  B0D8               	btfsc	status,0,c
  8832   0025AA  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8833   0025AC                     l4435:
  8834                           
  8835                           ; BSR set to: 0
  8836   0025AC  C086  F080         	movff	___awdiv@quotient,?___awdiv
  8837   0025B0  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  8838   0025B4                     
  8839                           ; BSR set to: 0
  8840   0025B4  0012               	return		;funcret
  8841   0025B6                     __end_of___awdiv:
  8842                           	callstack 0
  8843                           
  8844 ;; *************** function _UART_Write_Text *****************
  8845 ;; Defined at:
  8846 ;;		line 51 in file "setting_hardaware/uart.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;  text            2    1[BANK0 ] PTR unsigned char 
  8849 ;;		 -> STR_13(6), STR_12(6), STR_8(11), STR_7(9), 
  8850 ;;		 -> STR_6(5), STR_5(6), STR_4(3), STR_3(5), 
  8851 ;;		 -> STR_2(5), Check_ADC@tmp(10), 
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;  i               2    5[BANK0 ] int 
  8854 ;; Return value:  Size  Location     Type
  8855 ;;                  1    wreg      void 
  8856 ;; Registers used:
  8857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8858 ;; Tracked objects:
  8859 ;;		On entry : 0/0
  8860 ;;		On exit  : 0/0
  8861 ;;		Unchanged: 0/0
  8862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8863 ;;      Params:         0       2       0       0       0       0       0
  8864 ;;      Locals:         0       2       0       0       0       0       0
  8865 ;;      Temps:          0       2       0       0       0       0       0
  8866 ;;      Totals:         0       6       0       0       0       0       0
  8867 ;;Total ram usage:        6 bytes
  8868 ;; Hardware stack levels used: 1
  8869 ;; Hardware stack levels required when called: 8
  8870 ;; This function calls:
  8871 ;;		_UART_Write
  8872 ;; This function is called by:
  8873 ;;		_Check_ADC
  8874 ;;		_main
  8875 ;;		_Check_Gyroscope
  8876 ;; This function uses a non-reentrant model
  8877 ;;
  8878                           
  8879                           	psect	text33
  8880   0028F0                     __ptext33:
  8881                           	callstack 0
  8882   0028F0                     _UART_Write_Text:
  8883                           	callstack 22
  8884   0028F0                     
  8885                           ;setting_hardaware/uart.c: 52:     for(int i=0;text[i]!='\0';i++)
  8886   0028F0  0E00               	movlw	0
  8887   0028F2  0100               	movlb	0	; () banked
  8888   0028F4  6F86               	movwf	(UART_Write_Text@i+1)& (0+255),b
  8889   0028F6  0E00               	movlw	0
  8890   0028F8  6F85               	movwf	UART_Write_Text@i& (0+255),b
  8891   0028FA  EF9B  F014         	goto	l4891
  8892   0028FE                     l4887:
  8893                           
  8894                           ;setting_hardaware/uart.c: 53:         UART_Write(text[i]);
  8895   0028FE  0100               	movlb	0	; () banked
  8896   002900  5185               	movf	UART_Write_Text@i& (0+255),w,b
  8897   002902  2581               	addwf	UART_Write_Text@text& (0+255),w,b
  8898   002904  6F83               	movwf	??_UART_Write_Text& (0+255),b
  8899   002906  5186               	movf	(UART_Write_Text@i+1)& (0+255),w,b
  8900   002908  2182               	addwfc	(UART_Write_Text@text+1)& (0+255),w,b
  8901   00290A  6F84               	movwf	(??_UART_Write_Text+1)& (0+255),b
  8902   00290C  C083  FFF6         	movff	??_UART_Write_Text,tblptrl
  8903   002910  C084  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  8904   002914  6AF8               	clrf	tblptru,c
  8905   002916  0E05               	movlw	(high __ramtop+-1)
  8906   002918  64F7               	cpfsgt	tblptrh,c
  8907   00291A  D003               	bra	u5977
  8908   00291C  0008               	tblrd		*
  8909   00291E  50F5               	movf	tablat,w,c
  8910   002920  D005               	bra	u5970
  8911   002922                     u5977:
  8912   002922  CFF6 FFE9          	movff	tblptrl,fsr0l
  8913   002926  CFF7 FFEA          	movff	tblptrh,fsr0h
  8914   00292A  50EF               	movf	indf0,w,c
  8915   00292C                     u5970:
  8916   00292C  ECFF  F016         	call	_UART_Write
  8917   002930  0100               	movlb	0	; () banked
  8918   002932  4B85               	infsnz	UART_Write_Text@i& (0+255),f,b
  8919   002934  2B86               	incf	(UART_Write_Text@i+1)& (0+255),f,b
  8920   002936                     l4891:
  8921                           
  8922                           ; BSR set to: 0
  8923   002936  5185               	movf	UART_Write_Text@i& (0+255),w,b
  8924   002938  2581               	addwf	UART_Write_Text@text& (0+255),w,b
  8925   00293A  6F83               	movwf	??_UART_Write_Text& (0+255),b
  8926   00293C  5186               	movf	(UART_Write_Text@i+1)& (0+255),w,b
  8927   00293E  2182               	addwfc	(UART_Write_Text@text+1)& (0+255),w,b
  8928   002940  6F84               	movwf	(??_UART_Write_Text+1)& (0+255),b
  8929   002942  C083  FFF6         	movff	??_UART_Write_Text,tblptrl
  8930   002946  C084  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  8931   00294A  6AF8               	clrf	tblptru,c
  8932   00294C  0E05               	movlw	(high __ramtop+-1)
  8933   00294E  64F7               	cpfsgt	tblptrh,c
  8934   002950  D003               	bra	u5987
  8935   002952  0008               	tblrd		*
  8936   002954  50F5               	movf	tablat,w,c
  8937   002956  D005               	bra	u5980
  8938   002958                     u5987:
  8939   002958  CFF6 FFE9          	movff	tblptrl,fsr0l
  8940   00295C  CFF7 FFEA          	movff	tblptrh,fsr0h
  8941   002960  50EF               	movf	indf0,w,c
  8942   002962                     u5980:
  8943   002962  0900               	iorlw	0
  8944   002964  A4D8               	btfss	status,2,c
  8945   002966  EFB7  F014         	goto	u5991
  8946   00296A  EFB9  F014         	goto	u5990
  8947   00296E                     u5991:
  8948   00296E  EF7F  F014         	goto	l4887
  8949   002972                     u5990:
  8950   002972  0012               	return		;funcret
  8951   002974                     __end_of_UART_Write_Text:
  8952                           	callstack 0
  8953                           
  8954 ;; *************** function _UART_Write *****************
  8955 ;; Defined at:
  8956 ;;		line 44 in file "setting_hardaware/uart.c"
  8957 ;; Parameters:    Size  Location     Type
  8958 ;;  data            1    wreg     unsigned char 
  8959 ;; Auto vars:     Size  Location     Type
  8960 ;;  data            1    0[BANK0 ] unsigned char 
  8961 ;; Return value:  Size  Location     Type
  8962 ;;                  1    wreg      void 
  8963 ;; Registers used:
  8964 ;;		wreg
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8970 ;;      Params:         0       0       0       0       0       0       0
  8971 ;;      Locals:         0       1       0       0       0       0       0
  8972 ;;      Temps:          0       0       0       0       0       0       0
  8973 ;;      Totals:         0       1       0       0       0       0       0
  8974 ;;Total ram usage:        1 bytes
  8975 ;; Hardware stack levels used: 1
  8976 ;; Hardware stack levels required when called: 7
  8977 ;; This function calls:
  8978 ;;		Nothing
  8979 ;; This function is called by:
  8980 ;;		_UART_Write_Text
  8981 ;; This function uses a non-reentrant model
  8982 ;;
  8983                           
  8984                           	psect	text34
  8985   002DFE                     __ptext34:
  8986                           	callstack 0
  8987   002DFE                     _UART_Write:
  8988                           	callstack 22
  8989                           
  8990                           ;incstack = 0
  8991                           ;UART_Write@data stored from wreg
  8992   002DFE  0100               	movlb	0	; () banked
  8993   002E00  6F80               	movwf	UART_Write@data& (0+255),b
  8994   002E02                     l115:
  8995   002E02  A2AC               	btfss	172,1,c	;volatile
  8996   002E04  EF06  F017         	goto	u5691
  8997   002E08  EF08  F017         	goto	u5690
  8998   002E0C                     u5691:
  8999   002E0C  EF01  F017         	goto	l115
  9000   002E10                     u5690:
  9001   002E10                     
  9002                           ;setting_hardaware/uart.c: 47:     TXREG = data;
  9003   002E10  C080  FFAD         	movff	UART_Write@data,4013	;volatile
  9004   002E14  0012               	return		;funcret
  9005   002E16                     __end_of_UART_Write:
  9006                           	callstack 0
  9007                           
  9008 ;; *************** function _ADC_Read *****************
  9009 ;; Defined at:
  9010 ;;		line 19 in file "setting_hardaware/adc.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;  channel         2    0[BANK0 ] int 
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;  digital         2    4[BANK0 ] int 
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  2    0[BANK0 ] int 
  9017 ;; Registers used:
  9018 ;;		wreg, status,2, status,0
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9024 ;;      Params:         0       2       0       0       0       0       0
  9025 ;;      Locals:         0       2       0       0       0       0       0
  9026 ;;      Temps:          0       2       0       0       0       0       0
  9027 ;;      Totals:         0       6       0       0       0       0       0
  9028 ;;Total ram usage:        6 bytes
  9029 ;; Hardware stack levels used: 1
  9030 ;; Hardware stack levels required when called: 7
  9031 ;; This function calls:
  9032 ;;		Nothing
  9033 ;; This function is called by:
  9034 ;;		_Check_ADC
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038                           	psect	text35
  9039   002CEA                     __ptext35:
  9040                           	callstack 0
  9041   002CEA                     _ADC_Read:
  9042                           	callstack 22
  9043   002CEA                     
  9044                           ;setting_hardaware/adc.c: 19: int ADC_Read(int channel);setting_hardaware/adc.c: 20: {;s
      +                          etting_hardaware/adc.c: 21:     int digital;;setting_hardaware/adc.c: 23:     ADCON0bits
      +                          .ADON = 1;
  9045   002CEA  80C2               	bsf	194,0,c	;volatile
  9046                           
  9047                           ;setting_hardaware/adc.c: 24:     ADCON0bits.GO = 1;
  9048   002CEC  82C2               	bsf	194,1,c	;volatile
  9049   002CEE                     l24:
  9050   002CEE  B2C2               	btfsc	194,1,c	;volatile
  9051   002CF0  EF7C  F016         	goto	u5961
  9052   002CF4  EF7E  F016         	goto	u5960
  9053   002CF8                     u5961:
  9054   002CF8  EF77  F016         	goto	l24
  9055   002CFC                     u5960:
  9056   002CFC                     
  9057                           ;setting_hardaware/adc.c: 28:     digital = (ADRESH*256) | (ADRESL);
  9058   002CFC  50C3               	movf	195,w,c	;volatile
  9059   002CFE  CFC4 F082          	movff	4036,??_ADC_Read	;volatile
  9060   002D02  0100               	movlb	0	; () banked
  9061   002D04  6B83               	clrf	(??_ADC_Read+1)& (0+255),b
  9062   002D06  C082  F083         	movff	??_ADC_Read,??_ADC_Read+1
  9063   002D0A  6B82               	clrf	??_ADC_Read& (0+255),b
  9064   002D0C  1182               	iorwf	??_ADC_Read& (0+255),w,b
  9065   002D0E  6F84               	movwf	ADC_Read@digital& (0+255),b
  9066   002D10  5183               	movf	(??_ADC_Read+1)& (0+255),w,b
  9067   002D12  6F85               	movwf	(ADC_Read@digital+1)& (0+255),b
  9068   002D14                     
  9069                           ; BSR set to: 0
  9070                           ;setting_hardaware/adc.c: 30:     return(digital);
  9071   002D14  C084  F080         	movff	ADC_Read@digital,?_ADC_Read
  9072   002D18  C085  F081         	movff	ADC_Read@digital+1,?_ADC_Read+1
  9073   002D1C                     
  9074                           ; BSR set to: 0
  9075   002D1C  0012               	return		;funcret
  9076   002D1E                     __end_of_ADC_Read:
  9077                           	callstack 0
  9078                           
  9079 ;; *************** function _Lo_ISR *****************
  9080 ;; Defined at:
  9081 ;;		line 66 in file "main.c"
  9082 ;; Parameters:    Size  Location     Type
  9083 ;;		None
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;  command        20   34[COMRAM] unsigned char [20]
  9086 ;; Return value:  Size  Location     Type
  9087 ;;                  1    wreg      void 
  9088 ;; Registers used:
  9089 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9095 ;;      Params:         0       0       0       0       0       0       0
  9096 ;;      Locals:        20       0       0       0       0       0       0
  9097 ;;      Temps:         12       0       0       0       0       0       0
  9098 ;;      Totals:        32       0       0       0       0       0       0
  9099 ;;Total ram usage:       32 bytes
  9100 ;; Hardware stack levels used: 1
  9101 ;; Hardware stack levels required when called: 6
  9102 ;; This function calls:
  9103 ;;		_ClearBuffer
  9104 ;;		_GetString
  9105 ;;		_MyusartRead
  9106 ;;		_strcpy
  9107 ;;		_strlen
  9108 ;; This function is called by:
  9109 ;;		Interrupt level 1
  9110 ;; This function uses a non-reentrant model
  9111 ;;
  9112                           
  9113                           	psect	intcodelo
  9114   000018                     __pintcodelo:
  9115                           	callstack 0
  9116   000018                     _Lo_ISR:
  9117                           	callstack 18
  9118                           
  9119                           ; BSR set to: 0
  9120                           ;incstack = 0
  9121   000018  8060               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9122   00001A  CFD8 F018          	movff	status,??_Lo_ISR+1
  9123   00001E  CFE8 F019          	movff	wreg,??_Lo_ISR+2
  9124   000022  CFE0 F01A          	movff	bsr,??_Lo_ISR+3
  9125   000026  CFE9 F01B          	movff	fsr0l,??_Lo_ISR+4
  9126   00002A  CFEA F01C          	movff	fsr0h,??_Lo_ISR+5
  9127   00002E  CFD9 F01D          	movff	fsr2l,??_Lo_ISR+6
  9128   000032  CFDA F01E          	movff	fsr2h,??_Lo_ISR+7
  9129   000036  CFF6 F01F          	movff	tblptrl,??_Lo_ISR+8
  9130   00003A  CFF7 F020          	movff	tblptrh,??_Lo_ISR+9
  9131   00003E  CFF8 F021          	movff	tblptru,??_Lo_ISR+10
  9132   000042  CFF5 F022          	movff	tablat,??_Lo_ISR+11
  9133   000046                     
  9134                           ;main.c: 68:     if(RCIF)
  9135   000046  AA9E               	btfss	3998,5,c	;volatile
  9136   000048  EF28  F000         	goto	i1u425_21
  9137   00004C  EF2A  F000         	goto	i1u425_20
  9138   000050                     i1u425_21:
  9139   000050  EFF6  F000         	goto	i1l214
  9140   000054                     i1u425_20:
  9141   000054                     
  9142                           ;main.c: 69:     {;main.c: 70:         if(RCSTAbits.OERR)
  9143   000054  A2AB               	btfss	171,1,c	;volatile
  9144   000056  EF2F  F000         	goto	i1u426_21
  9145   00005A  EF31  F000         	goto	i1u426_20
  9146   00005E                     i1u426_21:
  9147   00005E  EF34  F000         	goto	i1l3821
  9148   000062                     i1u426_20:
  9149   000062                     
  9150                           ;main.c: 71:         {;main.c: 72:             CREN = 0;
  9151   000062  98AB               	bcf	4011,4,c	;volatile
  9152                           
  9153                           ;main.c: 73:             __nop();
  9154   000064  0000               	nop	
  9155                           
  9156                           ;main.c: 74:             CREN = 1;
  9157   000066  88AB               	bsf	4011,4,c	;volatile
  9158   000068                     i1l3821:
  9159                           
  9160                           ;main.c: 77:         MyusartRead();
  9161   000068  ECC7  F015         	call	_MyusartRead	;wreg free
  9162   00006C                     
  9163                           ;main.c: 78:         char command[20];;main.c: 79:         if(RCREG == '\r' || RCREG == 
      +                          '\n'){
  9164   00006C  0E0D               	movlw	13
  9165   00006E  18AE               	xorwf	174,w,c	;volatile
  9166   000070  B4D8               	btfsc	status,2,c
  9167   000072  EF3D  F000         	goto	i1u427_21
  9168   000076  EF3F  F000         	goto	i1u427_20
  9169   00007A                     i1u427_21:
  9170   00007A  EF48  F000         	goto	i1l3827
  9171   00007E                     i1u427_20:
  9172   00007E  0E0A               	movlw	10
  9173   000080  18AE               	xorwf	174,w,c	;volatile
  9174   000082  A4D8               	btfss	status,2,c
  9175   000084  EF46  F000         	goto	i1u428_21
  9176   000088  EF48  F000         	goto	i1u428_20
  9177   00008C                     i1u428_21:
  9178   00008C  EF54  F000         	goto	i1l3831
  9179   000090                     i1u428_20:
  9180   000090                     i1l3827:
  9181                           
  9182                           ;main.c: 80:             strcpy(command, GetString());
  9183   000090  0E23               	movlw	low Lo_ISR@command
  9184   000092  6E11               	movwf	strcpy@dest^0,c
  9185   000094  EC40  F017         	call	_GetString	;wreg free
  9186   000098  6E17               	movwf	??_Lo_ISR^0,c
  9187   00009A  C017  F012         	movff	??_Lo_ISR,strcpy@src
  9188   00009E  6A13               	clrf	(strcpy@src+1)^0,c
  9189   0000A0  EC38  F015         	call	_strcpy	;wreg free
  9190   0000A4                     
  9191                           ;main.c: 81:             ClearBuffer();
  9192   0000A4  EC04  F016         	call	_ClearBuffer	;wreg free
  9193   0000A8                     i1l3831:
  9194                           
  9195                           ;main.c: 83:         if(command[0] == 'O' && command[1] == 'K' && strlen(command) == 2){
  9196   0000A8  0E4F               	movlw	79
  9197   0000AA  1823               	xorwf	Lo_ISR@command^0,w,c
  9198   0000AC  A4D8               	btfss	status,2,c
  9199   0000AE  EF5B  F000         	goto	i1u429_21
  9200   0000B2  EF5D  F000         	goto	i1u429_20
  9201   0000B6                     i1u429_21:
  9202   0000B6  EF83  F000         	goto	i1l3847
  9203   0000BA                     i1u429_20:
  9204   0000BA  0E4B               	movlw	75
  9205   0000BC  1824               	xorwf	(Lo_ISR@command+1)^0,w,c
  9206   0000BE  A4D8               	btfss	status,2,c
  9207   0000C0  EF64  F000         	goto	i1u430_21
  9208   0000C4  EF66  F000         	goto	i1u430_20
  9209   0000C8                     i1u430_21:
  9210   0000C8  EF83  F000         	goto	i1l3847
  9211   0000CC                     i1u430_20:
  9212   0000CC  0E23               	movlw	low Lo_ISR@command
  9213   0000CE  6E0F               	movwf	strlen@s^0,c
  9214   0000D0  EC8F  F016         	call	_strlen	;wreg free
  9215   0000D4  0E02               	movlw	2
  9216   0000D6  180F               	xorwf	?_strlen^0,w,c
  9217   0000D8  1010               	iorwf	(?_strlen+1)^0,w,c
  9218   0000DA  A4D8               	btfss	status,2,c
  9219   0000DC  EF72  F000         	goto	i1u431_21
  9220   0000E0  EF74  F000         	goto	i1u431_20
  9221   0000E4                     i1u431_21:
  9222   0000E4  EF83  F000         	goto	i1l3847
  9223   0000E8                     i1u431_20:
  9224   0000E8                     
  9225                           ;main.c: 84:             LATAbits.LATA1 = 1;
  9226   0000E8  8289               	bsf	137,1,c	;volatile
  9227   0000EA                     
  9228                           ;main.c: 85:             ClearBuffer();
  9229   0000EA  EC04  F016         	call	_ClearBuffer	;wreg free
  9230   0000EE                     
  9231                           ;main.c: 86:             strcpy(command, "");
  9232   0000EE  0E23               	movlw	low Lo_ISR@command
  9233   0000F0  6E11               	movwf	strcpy@dest^0,c
  9234   0000F2  0E05               	movlw	low (STR_8+10)
  9235   0000F4  6E12               	movwf	strcpy@src^0,c
  9236   0000F6  0E7D               	movlw	high (STR_8+10)
  9237   0000F8  6E13               	movwf	(strcpy@src+1)^0,c
  9238   0000FA  EC38  F015         	call	_strcpy	;wreg free
  9239   0000FE  EFF6  F000         	goto	i1l214
  9240   000102                     i1l3843:
  9241                           
  9242                           ;main.c: 87:             return;
  9243   000102  EFF6  F000         	goto	i1l214
  9244   000106                     i1l3847:
  9245   000106  0E2B               	movlw	43
  9246   000108  1823               	xorwf	Lo_ISR@command^0,w,c
  9247   00010A  A4D8               	btfss	status,2,c
  9248   00010C  EF8A  F000         	goto	i1u432_21
  9249   000110  EF8C  F000         	goto	i1u432_20
  9250   000114                     i1u432_21:
  9251   000114  EFBD  F000         	goto	i1l3867
  9252   000118                     i1u432_20:
  9253   000118  0E49               	movlw	73
  9254   00011A  1824               	xorwf	(Lo_ISR@command+1)^0,w,c
  9255   00011C  A4D8               	btfss	status,2,c
  9256   00011E  EF93  F000         	goto	i1u433_21
  9257   000122  EF95  F000         	goto	i1u433_20
  9258   000126                     i1u433_21:
  9259   000126  EFBD  F000         	goto	i1l3867
  9260   00012A                     i1u433_20:
  9261   00012A  0E4E               	movlw	78
  9262   00012C  1825               	xorwf	(Lo_ISR@command+2)^0,w,c
  9263   00012E  A4D8               	btfss	status,2,c
  9264   000130  EF9C  F000         	goto	i1u434_21
  9265   000134  EF9E  F000         	goto	i1u434_20
  9266   000138                     i1u434_21:
  9267   000138  EFBD  F000         	goto	i1l3867
  9268   00013C                     i1u434_20:
  9269   00013C  0E51               	movlw	81
  9270   00013E  1826               	xorwf	(Lo_ISR@command+3)^0,w,c
  9271   000140  A4D8               	btfss	status,2,c
  9272   000142  EFA5  F000         	goto	i1u435_21
  9273   000146  EFA7  F000         	goto	i1u435_20
  9274   00014A                     i1u435_21:
  9275   00014A  EFBD  F000         	goto	i1l3867
  9276   00014E                     i1u435_20:
  9277   00014E  0E45               	movlw	69
  9278   000150  1827               	xorwf	(Lo_ISR@command+4)^0,w,c
  9279   000152  A4D8               	btfss	status,2,c
  9280   000154  EFAE  F000         	goto	i1u436_21
  9281   000158  EFB0  F000         	goto	i1u436_20
  9282   00015C                     i1u436_21:
  9283   00015C  EFBD  F000         	goto	i1l3867
  9284   000160                     i1u436_20:
  9285   000160                     
  9286                           ;main.c: 90:             LATAbits.LATA2 = 1;
  9287   000160  8489               	bsf	137,2,c	;volatile
  9288   000162                     
  9289                           ;main.c: 91:             ClearBuffer();
  9290   000162  EC04  F016         	call	_ClearBuffer	;wreg free
  9291   000166                     
  9292                           ;main.c: 92:             strcpy(command, "");
  9293   000166  0E23               	movlw	low Lo_ISR@command
  9294   000168  6E11               	movwf	strcpy@dest^0,c
  9295   00016A  0E05               	movlw	low (STR_8+10)
  9296   00016C  6E12               	movwf	strcpy@src^0,c
  9297   00016E  0E7D               	movlw	high (STR_8+10)
  9298   000170  6E13               	movwf	(strcpy@src+1)^0,c
  9299   000172  EC38  F015         	call	_strcpy	;wreg free
  9300   000176  EFF6  F000         	goto	i1l214
  9301   00017A                     i1l3867:
  9302   00017A  0E2B               	movlw	43
  9303   00017C  1823               	xorwf	Lo_ISR@command^0,w,c
  9304   00017E  A4D8               	btfss	status,2,c
  9305   000180  EFC4  F000         	goto	i1u437_21
  9306   000184  EFC6  F000         	goto	i1u437_20
  9307   000188                     i1u437_21:
  9308   000188  EF81  F000         	goto	i1l3843
  9309   00018C                     i1u437_20:
  9310   00018C  0E43               	movlw	67
  9311   00018E  1824               	xorwf	(Lo_ISR@command+1)^0,w,c
  9312   000190  A4D8               	btfss	status,2,c
  9313   000192  EFCD  F000         	goto	i1u438_21
  9314   000196  EFCF  F000         	goto	i1u438_20
  9315   00019A                     i1u438_21:
  9316   00019A  EF81  F000         	goto	i1l3843
  9317   00019E                     i1u438_20:
  9318   00019E  0E6F               	movlw	111
  9319   0001A0  1825               	xorwf	(Lo_ISR@command+2)^0,w,c
  9320   0001A2  A4D8               	btfss	status,2,c
  9321   0001A4  EFD6  F000         	goto	i1u439_21
  9322   0001A8  EFD8  F000         	goto	i1u439_20
  9323   0001AC                     i1u439_21:
  9324   0001AC  EF81  F000         	goto	i1l3843
  9325   0001B0                     i1u439_20:
  9326   0001B0  0E6E               	movlw	110
  9327   0001B2  1826               	xorwf	(Lo_ISR@command+3)^0,w,c
  9328   0001B4  A4D8               	btfss	status,2,c
  9329   0001B6  EFDF  F000         	goto	i1u440_21
  9330   0001BA  EFE1  F000         	goto	i1u440_20
  9331   0001BE                     i1u440_21:
  9332   0001BE  EF81  F000         	goto	i1l3843
  9333   0001C2                     i1u440_20:
  9334   0001C2                     
  9335                           ;main.c: 96:             LATAbits.LATA3 = 1;
  9336   0001C2  8689               	bsf	137,3,c	;volatile
  9337                           
  9338                           ;main.c: 97:             PIE1bits.RCIE = 0;
  9339   0001C4  9A9D               	bcf	157,5,c	;volatile
  9340   0001C6                     
  9341                           ;main.c: 98:             isConnected = 1;
  9342   0001C6  0E00               	movlw	0
  9343   0001C8  0101               	movlb	1	; () banked
  9344   0001CA  6F84               	movwf	(_isConnected+1)& (0+255),b
  9345   0001CC  0E01               	movlw	1
  9346   0001CE  6F83               	movwf	_isConnected& (0+255),b
  9347                           
  9348                           ;main.c: 99:             needSendMsg = 1;
  9349   0001D0  0E00               	movlw	0
  9350   0001D2  6F82               	movwf	(_needSendMsg+1)& (0+255),b
  9351   0001D4  0E01               	movlw	1
  9352   0001D6  6F81               	movwf	_needSendMsg& (0+255),b
  9353   0001D8                     
  9354                           ; BSR set to: 1
  9355                           ;main.c: 100:             ClearBuffer();
  9356   0001D8  EC04  F016         	call	_ClearBuffer	;wreg free
  9357   0001DC                     
  9358                           ;main.c: 101:             strcpy(command, "");
  9359   0001DC  0E23               	movlw	low Lo_ISR@command
  9360   0001DE  6E11               	movwf	strcpy@dest^0,c
  9361   0001E0  0E05               	movlw	low (STR_8+10)
  9362   0001E2  6E12               	movwf	strcpy@src^0,c
  9363   0001E4  0E7D               	movlw	high (STR_8+10)
  9364   0001E6  6E13               	movwf	(strcpy@src+1)^0,c
  9365   0001E8  EC38  F015         	call	_strcpy	;wreg free
  9366   0001EC                     i1l214:
  9367   0001EC  C022  FFF5         	movff	??_Lo_ISR+11,tablat
  9368   0001F0  C021  FFF8         	movff	??_Lo_ISR+10,tblptru
  9369   0001F4  C020  FFF7         	movff	??_Lo_ISR+9,tblptrh
  9370   0001F8  C01F  FFF6         	movff	??_Lo_ISR+8,tblptrl
  9371   0001FC  C01E  FFDA         	movff	??_Lo_ISR+7,fsr2h
  9372   000200  C01D  FFD9         	movff	??_Lo_ISR+6,fsr2l
  9373   000204  C01C  FFEA         	movff	??_Lo_ISR+5,fsr0h
  9374   000208  C01B  FFE9         	movff	??_Lo_ISR+4,fsr0l
  9375   00020C  C01A  FFE0         	movff	??_Lo_ISR+3,bsr
  9376   000210  C019  FFE8         	movff	??_Lo_ISR+2,wreg
  9377   000214  C018  FFD8         	movff	??_Lo_ISR+1,status
  9378   000218  9060               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  9379   00021A  0010               	retfie	
  9380   00021C                     __end_of_Lo_ISR:
  9381                           	callstack 0
  9382                           
  9383 ;; *************** function _strlen *****************
  9384 ;; Defined at:
  9385 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  9386 ;; Parameters:    Size  Location     Type
  9387 ;;  s               1   14[COMRAM] PTR const unsigned char 
  9388 ;;		 -> Lo_ISR@command(20), 
  9389 ;; Auto vars:     Size  Location     Type
  9390 ;;  a               1   16[COMRAM] PTR const unsigned char 
  9391 ;;		 -> Lo_ISR@command(20), 
  9392 ;; Return value:  Size  Location     Type
  9393 ;;                  2   14[COMRAM] unsigned int 
  9394 ;; Registers used:
  9395 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9396 ;; Tracked objects:
  9397 ;;		On entry : 0/0
  9398 ;;		On exit  : 0/0
  9399 ;;		Unchanged: 0/0
  9400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9401 ;;      Params:         2       0       0       0       0       0       0
  9402 ;;      Locals:         1       0       0       0       0       0       0
  9403 ;;      Temps:          0       0       0       0       0       0       0
  9404 ;;      Totals:         3       0       0       0       0       0       0
  9405 ;;Total ram usage:        3 bytes
  9406 ;; Hardware stack levels used: 1
  9407 ;; Hardware stack levels required when called: 3
  9408 ;; This function calls:
  9409 ;;		Nothing
  9410 ;; This function is called by:
  9411 ;;		_Lo_ISR
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           	psect	text37
  9416   002D1E                     __ptext37:
  9417                           	callstack 0
  9418   002D1E                     _strlen:
  9419                           	callstack 20
  9420   002D1E  C00F  F011         	movff	strlen@s,strlen@a
  9421   002D22  EF94  F016         	goto	i1l3759
  9422   002D26                     i1l3757:
  9423   002D26  2A0F               	incf	strlen@s^0,f,c
  9424   002D28                     i1l3759:
  9425   002D28  500F               	movf	strlen@s^0,w,c
  9426   002D2A  6ED9               	movwf	fsr2l,c
  9427   002D2C  6ADA               	clrf	fsr2h,c
  9428   002D2E  50DF               	movf	indf2,w,c
  9429   002D30  A4D8               	btfss	status,2,c
  9430   002D32  EF9D  F016         	goto	i1u415_21
  9431   002D36  EF9F  F016         	goto	i1u415_20
  9432   002D3A                     i1u415_21:
  9433   002D3A  EF93  F016         	goto	i1l3757
  9434   002D3E                     i1u415_20:
  9435   002D3E  5011               	movf	strlen@a^0,w,c
  9436   002D40  5C0F               	subwf	strlen@s^0,w,c
  9437   002D42  6E0F               	movwf	?_strlen^0,c
  9438   002D44  6A10               	clrf	(?_strlen+1)^0,c
  9439   002D46  BE0F               	btfsc	?_strlen^0,7,c
  9440   002D48  0610               	decf	(?_strlen+1)^0,f,c
  9441   002D4A  0012               	return		;funcret
  9442   002D4C                     __end_of_strlen:
  9443                           	callstack 0
  9444                           
  9445 ;; *************** function _strcpy *****************
  9446 ;; Defined at:
  9447 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;  dest            1   16[COMRAM] PTR unsigned char 
  9450 ;;		 -> Lo_ISR@command(20), 
  9451 ;;  src             2   17[COMRAM] PTR const unsigned char 
  9452 ;;		 -> STR_11(1), STR_10(1), STR_9(1), mystring(20), 
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;  d               1   21[COMRAM] PTR unsigned char 
  9455 ;;		 -> Lo_ISR@command(20), 
  9456 ;; Return value:  Size  Location     Type
  9457 ;;                  1   16[COMRAM] PTR unsigned char 
  9458 ;; Registers used:
  9459 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9460 ;; Tracked objects:
  9461 ;;		On entry : 0/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9465 ;;      Params:         3       0       0       0       0       0       0
  9466 ;;      Locals:         1       0       0       0       0       0       0
  9467 ;;      Temps:          2       0       0       0       0       0       0
  9468 ;;      Totals:         6       0       0       0       0       0       0
  9469 ;;Total ram usage:        6 bytes
  9470 ;; Hardware stack levels used: 1
  9471 ;; Hardware stack levels required when called: 3
  9472 ;; This function calls:
  9473 ;;		Nothing
  9474 ;; This function is called by:
  9475 ;;		_Lo_ISR
  9476 ;; This function uses a non-reentrant model
  9477 ;;
  9478                           
  9479                           	psect	text38
  9480   002A70                     __ptext38:
  9481                           	callstack 0
  9482   002A70                     _strcpy:
  9483                           	callstack 20
  9484   002A70  C011  F016         	movff	strcpy@dest,strcpy@d
  9485   002A74                     i1l3753:
  9486   002A74  5012               	movf	strcpy@src^0,w,c
  9487   002A76  6E14               	movwf	??_strcpy^0,c
  9488   002A78  5013               	movf	(strcpy@src+1)^0,w,c
  9489   002A7A  6E15               	movwf	(??_strcpy+1)^0,c
  9490   002A7C  4A12               	infsnz	strcpy@src^0,f,c
  9491   002A7E  2A13               	incf	(strcpy@src+1)^0,f,c
  9492   002A80  C014  FFF6         	movff	??_strcpy,tblptrl
  9493   002A84  C015  FFF7         	movff	??_strcpy+1,tblptrh
  9494   002A88  6AF8               	clrf	tblptru,c
  9495   002A8A  2A16               	incf	strcpy@d^0,f,c
  9496   002A8C  0416               	decf	strcpy@d^0,w,c
  9497   002A8E  6ED9               	movwf	fsr2l,c
  9498   002A90  6ADA               	clrf	fsr2h,c
  9499   002A92  0E05               	movlw	(high __ramtop+-1)
  9500   002A94  64F7               	cpfsgt	tblptrh,c
  9501   002A96  D003               	bra	i1u413_27
  9502   002A98  0008               	tblrd		*
  9503   002A9A  50F5               	movf	tablat,w,c
  9504   002A9C  D005               	bra	i1u413_20
  9505   002A9E                     i1u413_27:
  9506   002A9E  CFF6 FFE9          	movff	tblptrl,fsr0l
  9507   002AA2  CFF7 FFEA          	movff	tblptrh,fsr0h
  9508   002AA6  50EF               	movf	indf0,w,c
  9509   002AA8                     i1u413_20:
  9510   002AA8  6EDF               	movwf	indf2,c
  9511   002AAA  50DF               	movf	indf2,w,c
  9512   002AAC  A4D8               	btfss	status,2,c
  9513   002AAE  EF5B  F015         	goto	i1u414_21
  9514   002AB2  EF5D  F015         	goto	i1u414_20
  9515   002AB6                     i1u414_21:
  9516   002AB6  EF3A  F015         	goto	i1l3753
  9517   002ABA                     i1u414_20:
  9518   002ABA  0012               	return		;funcret
  9519   002ABC                     __end_of_strcpy:
  9520                           	callstack 0
  9521                           
  9522 ;; *************** function _MyusartRead *****************
  9523 ;; Defined at:
  9524 ;;		line 62 in file "setting_hardaware/uart.c"
  9525 ;; Parameters:    Size  Location     Type
  9526 ;;		None
  9527 ;; Auto vars:     Size  Location     Type
  9528 ;;  receivedData    1   21[COMRAM] unsigned char 
  9529 ;; Return value:  Size  Location     Type
  9530 ;;                  1    wreg      void 
  9531 ;; Registers used:
  9532 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9533 ;; Tracked objects:
  9534 ;;		On entry : 0/0
  9535 ;;		On exit  : 0/0
  9536 ;;		Unchanged: 0/0
  9537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9538 ;;      Params:         0       0       0       0       0       0       0
  9539 ;;      Locals:         1       0       0       0       0       0       0
  9540 ;;      Temps:          0       0       0       0       0       0       0
  9541 ;;      Totals:         1       0       0       0       0       0       0
  9542 ;;Total ram usage:        1 bytes
  9543 ;; Hardware stack levels used: 1
  9544 ;; Hardware stack levels required when called: 5
  9545 ;; This function calls:
  9546 ;;		i1_UART_Write
  9547 ;;		i1_UART_Write_Text
  9548 ;; This function is called by:
  9549 ;;		_Lo_ISR
  9550 ;; This function uses a non-reentrant model
  9551 ;;
  9552                           
  9553                           	psect	text39
  9554   002B8E                     __ptext39:
  9555                           	callstack 0
  9556   002B8E                     _MyusartRead:
  9557                           	callstack 18
  9558   002B8E                     
  9559                           ;setting_hardaware/uart.c: 66:     unsigned char receivedData = RCREG;
  9560   002B8E  CFAE F016          	movff	4014,MyusartRead@receivedData	;volatile
  9561   002B92                     
  9562                           ;setting_hardaware/uart.c: 67:     if(receivedData == '\r'){
  9563   002B92  0E0D               	movlw	13
  9564   002B94  1816               	xorwf	MyusartRead@receivedData^0,w,c
  9565   002B96  A4D8               	btfss	status,2,c
  9566   002B98  EFD0  F015         	goto	i1u402_21
  9567   002B9C  EFD2  F015         	goto	i1u402_20
  9568   002BA0                     i1u402_21:
  9569   002BA0  EFDA  F015         	goto	i1l3701
  9570   002BA4                     i1u402_20:
  9571   002BA4                     
  9572                           ;setting_hardaware/uart.c: 68:         UART_Write_Text("\r\n");
  9573   002BA4  0E03               	movlw	low (STR_8+8)
  9574   002BA6  6E10               	movwf	i1UART_Write_Text@text^0,c
  9575   002BA8  0E7D               	movlw	high (STR_8+8)
  9576   002BAA  6E11               	movwf	(i1UART_Write_Text@text+1)^0,c
  9577   002BAC  ECBA  F014         	call	i1_UART_Write_Text	;wreg free
  9578   002BB0  EFE5  F015         	goto	i1l133
  9579   002BB4                     i1l3701:
  9580                           
  9581                           ;setting_hardaware/uart.c: 71:     mystring[lenStr] = receivedData;
  9582   002BB4  5049               	movf	_lenStr^0,w,c
  9583   002BB6  0F4C               	addlw	low _mystring
  9584   002BB8  6ED9               	movwf	fsr2l,c
  9585   002BBA  6ADA               	clrf	fsr2h,c
  9586   002BBC  C016  FFDF         	movff	MyusartRead@receivedData,indf2
  9587   002BC0                     
  9588                           ;setting_hardaware/uart.c: 72:     lenStr++;
  9589   002BC0  4A49               	infsnz	_lenStr^0,f,c
  9590   002BC2  2A4A               	incf	(_lenStr+1)^0,f,c
  9591   002BC4                     
  9592                           ;setting_hardaware/uart.c: 73:     UART_Write(receivedData);
  9593   002BC4  5016               	movf	MyusartRead@receivedData^0,w,c
  9594   002BC6  EC0B  F017         	call	i1_UART_Write
  9595   002BCA                     i1l133:
  9596   002BCA  0012               	return		;funcret
  9597   002BCC                     __end_of_MyusartRead:
  9598                           	callstack 0
  9599                           
  9600 ;; *************** function i1_UART_Write_Text *****************
  9601 ;; Defined at:
  9602 ;;		line 51 in file "setting_hardaware/uart.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  text            2   15[COMRAM] PTR unsigned char 
  9605 ;;		 -> STR_13(6), STR_12(6), STR_8(11), STR_7(9), 
  9606 ;;		 -> STR_6(5), STR_5(6), STR_4(3), STR_3(5), 
  9607 ;;		 -> STR_2(5), Check_ADC@tmp(10), 
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;  i               2   19[COMRAM] int 
  9610 ;; Return value:  Size  Location     Type
  9611 ;;                  1    wreg      void 
  9612 ;; Registers used:
  9613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9614 ;; Tracked objects:
  9615 ;;		On entry : 0/0
  9616 ;;		On exit  : 0/0
  9617 ;;		Unchanged: 0/0
  9618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9619 ;;      Params:         2       0       0       0       0       0       0
  9620 ;;      Locals:         2       0       0       0       0       0       0
  9621 ;;      Temps:          2       0       0       0       0       0       0
  9622 ;;      Totals:         6       0       0       0       0       0       0
  9623 ;;Total ram usage:        6 bytes
  9624 ;; Hardware stack levels used: 1
  9625 ;; Hardware stack levels required when called: 4
  9626 ;; This function calls:
  9627 ;;		i1_UART_Write
  9628 ;; This function is called by:
  9629 ;;		_MyusartRead
  9630 ;; This function uses a non-reentrant model
  9631 ;;
  9632                           
  9633                           	psect	text40
  9634   002974                     __ptext40:
  9635                           	callstack 0
  9636   002974                     i1_UART_Write_Text:
  9637                           	callstack 18
  9638   002974                     
  9639                           ;setting_hardaware/uart.c: 52:     for(int i=0;text[i]!='\0';i++)
  9640   002974  0E00               	movlw	0
  9641   002976  6E15               	movwf	(i1UART_Write_Text@i+1)^0,c
  9642   002978  0E00               	movlw	0
  9643   00297A  6E14               	movwf	i1UART_Write_Text@i^0,c
  9644   00297C  EFDA  F014         	goto	i1l3653
  9645   002980                     i1l3649:
  9646                           
  9647                           ;setting_hardaware/uart.c: 53:         UART_Write(text[i]);
  9648   002980  5014               	movf	i1UART_Write_Text@i^0,w,c
  9649   002982  2410               	addwf	i1UART_Write_Text@text^0,w,c
  9650   002984  6E12               	movwf	??i1_UART_Write_Text^0,c
  9651   002986  5015               	movf	(i1UART_Write_Text@i+1)^0,w,c
  9652   002988  2011               	addwfc	(i1UART_Write_Text@text+1)^0,w,c
  9653   00298A  6E13               	movwf	(??i1_UART_Write_Text+1)^0,c
  9654   00298C  C012  FFF6         	movff	??i1_UART_Write_Text,tblptrl
  9655   002990  C013  FFF7         	movff	??i1_UART_Write_Text+1,tblptrh
  9656   002994  6AF8               	clrf	tblptru,c
  9657   002996  0E05               	movlw	(high __ramtop+-1)
  9658   002998  64F7               	cpfsgt	tblptrh,c
  9659   00299A  D003               	bra	i1u395_27
  9660   00299C  0008               	tblrd		*
  9661   00299E  50F5               	movf	tablat,w,c
  9662   0029A0  D005               	bra	i1u395_20
  9663   0029A2                     i1u395_27:
  9664   0029A2  CFF6 FFE9          	movff	tblptrl,fsr0l
  9665   0029A6  CFF7 FFEA          	movff	tblptrh,fsr0h
  9666   0029AA  50EF               	movf	indf0,w,c
  9667   0029AC                     i1u395_20:
  9668   0029AC  EC0B  F017         	call	i1_UART_Write
  9669   0029B0  4A14               	infsnz	i1UART_Write_Text@i^0,f,c
  9670   0029B2  2A15               	incf	(i1UART_Write_Text@i+1)^0,f,c
  9671   0029B4                     i1l3653:
  9672   0029B4  5014               	movf	i1UART_Write_Text@i^0,w,c
  9673   0029B6  2410               	addwf	i1UART_Write_Text@text^0,w,c
  9674   0029B8  6E12               	movwf	??i1_UART_Write_Text^0,c
  9675   0029BA  5015               	movf	(i1UART_Write_Text@i+1)^0,w,c
  9676   0029BC  2011               	addwfc	(i1UART_Write_Text@text+1)^0,w,c
  9677   0029BE  6E13               	movwf	(??i1_UART_Write_Text+1)^0,c
  9678   0029C0  C012  FFF6         	movff	??i1_UART_Write_Text,tblptrl
  9679   0029C4  C013  FFF7         	movff	??i1_UART_Write_Text+1,tblptrh
  9680   0029C8  6AF8               	clrf	tblptru,c
  9681   0029CA  0E05               	movlw	(high __ramtop+-1)
  9682   0029CC  64F7               	cpfsgt	tblptrh,c
  9683   0029CE  D003               	bra	i1u396_27
  9684   0029D0  0008               	tblrd		*
  9685   0029D2  50F5               	movf	tablat,w,c
  9686   0029D4  D005               	bra	i1u396_20
  9687   0029D6                     i1u396_27:
  9688   0029D6  CFF6 FFE9          	movff	tblptrl,fsr0l
  9689   0029DA  CFF7 FFEA          	movff	tblptrh,fsr0h
  9690   0029DE  50EF               	movf	indf0,w,c
  9691   0029E0                     i1u396_20:
  9692   0029E0  0900               	iorlw	0
  9693   0029E2  A4D8               	btfss	status,2,c
  9694   0029E4  EFF6  F014         	goto	i1u397_21
  9695   0029E8  EFF8  F014         	goto	i1u397_20
  9696   0029EC                     i1u397_21:
  9697   0029EC  EFC0  F014         	goto	i1l3649
  9698   0029F0                     i1u397_20:
  9699   0029F0  0012               	return		;funcret
  9700   0029F2                     __end_ofi1_UART_Write_Text:
  9701                           	callstack 0
  9702                           
  9703 ;; *************** function i1_UART_Write *****************
  9704 ;; Defined at:
  9705 ;;		line 44 in file "setting_hardaware/uart.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;  data            1    wreg     unsigned char 
  9708 ;; Auto vars:     Size  Location     Type
  9709 ;;  data            1   14[COMRAM] unsigned char 
  9710 ;; Return value:  Size  Location     Type
  9711 ;;                  1    wreg      void 
  9712 ;; Registers used:
  9713 ;;		wreg
  9714 ;; Tracked objects:
  9715 ;;		On entry : 0/0
  9716 ;;		On exit  : 0/0
  9717 ;;		Unchanged: 0/0
  9718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9719 ;;      Params:         0       0       0       0       0       0       0
  9720 ;;      Locals:         1       0       0       0       0       0       0
  9721 ;;      Temps:          0       0       0       0       0       0       0
  9722 ;;      Totals:         1       0       0       0       0       0       0
  9723 ;;Total ram usage:        1 bytes
  9724 ;; Hardware stack levels used: 1
  9725 ;; Hardware stack levels required when called: 3
  9726 ;; This function calls:
  9727 ;;		Nothing
  9728 ;; This function is called by:
  9729 ;;		_MyusartRead
  9730 ;;		i1_UART_Write_Text
  9731 ;; This function uses a non-reentrant model
  9732 ;;
  9733                           
  9734                           	psect	text41
  9735   002E16                     __ptext41:
  9736                           	callstack 0
  9737   002E16                     i1_UART_Write:
  9738                           	callstack 18
  9739                           
  9740                           ;incstack = 0
  9741                           ;i1UART_Write@data stored from wreg
  9742   002E16  6E0F               	movwf	i1UART_Write@data^0,c
  9743   002E18                     i1l115:
  9744   002E18  A2AC               	btfss	172,1,c	;volatile
  9745   002E1A  EF11  F017         	goto	i1u376_21
  9746   002E1E  EF13  F017         	goto	i1u376_20
  9747   002E22                     i1u376_21:
  9748   002E22  EF0C  F017         	goto	i1l115
  9749   002E26                     i1u376_20:
  9750   002E26                     
  9751                           ;setting_hardaware/uart.c: 47:     TXREG = data;
  9752   002E26  C00F  FFAD         	movff	i1UART_Write@data,4013	;volatile
  9753   002E2A  0012               	return		;funcret
  9754   002E2C                     __end_ofi1_UART_Write:
  9755                           	callstack 0
  9756                           
  9757 ;; *************** function _GetString *****************
  9758 ;; Defined at:
  9759 ;;		line 77 in file "setting_hardaware/uart.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;		None
  9762 ;; Auto vars:     Size  Location     Type
  9763 ;;		None
  9764 ;; Return value:  Size  Location     Type
  9765 ;;                  1   14[COMRAM] PTR unsigned char 
  9766 ;; Registers used:
  9767 ;;		wreg
  9768 ;; Tracked objects:
  9769 ;;		On entry : 0/0
  9770 ;;		On exit  : 0/0
  9771 ;;		Unchanged: 0/0
  9772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9773 ;;      Params:         2       0       0       0       0       0       0
  9774 ;;      Locals:         0       0       0       0       0       0       0
  9775 ;;      Temps:          0       0       0       0       0       0       0
  9776 ;;      Totals:         2       0       0       0       0       0       0
  9777 ;;Total ram usage:        2 bytes
  9778 ;; Hardware stack levels used: 1
  9779 ;; Hardware stack levels required when called: 3
  9780 ;; This function calls:
  9781 ;;		Nothing
  9782 ;; This function is called by:
  9783 ;;		_Lo_ISR
  9784 ;; This function uses a non-reentrant model
  9785 ;;
  9786                           
  9787                           	psect	text42
  9788   002E80                     __ptext42:
  9789                           	callstack 0
  9790   002E80                     _GetString:
  9791                           	callstack 20
  9792   002E80                     
  9793                           ;setting_hardaware/uart.c: 78:     return mystring;
  9794   002E80  0E4C               	movlw	_mystring& (0+255)
  9795   002E82  0012               	return		;funcret
  9796   002E84                     __end_of_GetString:
  9797                           	callstack 0
  9798                           
  9799 ;; *************** function _ClearBuffer *****************
  9800 ;; Defined at:
  9801 ;;		line 56 in file "setting_hardaware/uart.c"
  9802 ;; Parameters:    Size  Location     Type
  9803 ;;		None
  9804 ;; Auto vars:     Size  Location     Type
  9805 ;;  i               2   14[COMRAM] int 
  9806 ;; Return value:  Size  Location     Type
  9807 ;;                  1    wreg      void 
  9808 ;; Registers used:
  9809 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9810 ;; Tracked objects:
  9811 ;;		On entry : 0/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9815 ;;      Params:         0       0       0       0       0       0       0
  9816 ;;      Locals:         2       0       0       0       0       0       0
  9817 ;;      Temps:          0       0       0       0       0       0       0
  9818 ;;      Totals:         2       0       0       0       0       0       0
  9819 ;;Total ram usage:        2 bytes
  9820 ;; Hardware stack levels used: 1
  9821 ;; Hardware stack levels required when called: 3
  9822 ;; This function calls:
  9823 ;;		Nothing
  9824 ;; This function is called by:
  9825 ;;		_Lo_ISR
  9826 ;; This function uses a non-reentrant model
  9827 ;;
  9828                           
  9829                           	psect	text43
  9830   002C08                     __ptext43:
  9831                           	callstack 0
  9832   002C08                     _ClearBuffer:
  9833                           	callstack 20
  9834   002C08                     
  9835                           ;setting_hardaware/uart.c: 57:     for(int i = 0; i < 10 ; i++)
  9836   002C08  0E00               	movlw	0
  9837   002C0A  6E10               	movwf	(ClearBuffer@i+1)^0,c
  9838   002C0C  0E00               	movlw	0
  9839   002C0E  6E0F               	movwf	ClearBuffer@i^0,c
  9840   002C10                     i1l3685:
  9841                           
  9842                           ;setting_hardaware/uart.c: 58:         mystring[i] = '\0';
  9843   002C10  500F               	movf	ClearBuffer@i^0,w,c
  9844   002C12  0F4C               	addlw	low _mystring
  9845   002C14  6ED9               	movwf	fsr2l,c
  9846   002C16  6ADA               	clrf	fsr2h,c
  9847   002C18  6ADF               	clrf	indf2,c
  9848   002C1A  4A0F               	infsnz	ClearBuffer@i^0,f,c
  9849   002C1C  2A10               	incf	(ClearBuffer@i+1)^0,f,c
  9850   002C1E  BE10               	btfsc	(ClearBuffer@i+1)^0,7,c
  9851   002C20  EF1B  F016         	goto	i1u401_21
  9852   002C24  5010               	movf	(ClearBuffer@i+1)^0,w,c
  9853   002C26  E109               	bnz	i1u401_20
  9854   002C28  0E0A               	movlw	10
  9855   002C2A  5C0F               	subwf	ClearBuffer@i^0,w,c
  9856   002C2C  A0D8               	btfss	status,0,c
  9857   002C2E  EF1B  F016         	goto	i1u401_21
  9858   002C32  EF1D  F016         	goto	i1u401_20
  9859   002C36                     i1u401_21:
  9860   002C36  EF08  F016         	goto	i1l3685
  9861   002C3A                     i1u401_20:
  9862   002C3A                     
  9863                           ;setting_hardaware/uart.c: 59:     lenStr = 0;
  9864   002C3A  0E00               	movlw	0
  9865   002C3C  6E4A               	movwf	(_lenStr+1)^0,c
  9866   002C3E  0E00               	movlw	0
  9867   002C40  6E49               	movwf	_lenStr^0,c
  9868   002C42  0012               	return		;funcret
  9869   002C44                     __end_of_ClearBuffer:
  9870                           	callstack 0
  9871                           
  9872 ;; *************** function _Hi_ISR *****************
  9873 ;; Defined at:
  9874 ;;		line 45 in file "main.c"
  9875 ;; Parameters:    Size  Location     Type
  9876 ;;		None
  9877 ;; Auto vars:     Size  Location     Type
  9878 ;;		None
  9879 ;; Return value:  Size  Location     Type
  9880 ;;                  1    wreg      void 
  9881 ;; Registers used:
  9882 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9883 ;; Tracked objects:
  9884 ;;		On entry : 0/0
  9885 ;;		On exit  : 0/0
  9886 ;;		Unchanged: 0/0
  9887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9888 ;;      Params:         0       0       0       0       0       0       0
  9889 ;;      Locals:         0       0       0       0       0       0       0
  9890 ;;      Temps:          7       0       0       0       0       0       0
  9891 ;;      Totals:         7       0       0       0       0       0       0
  9892 ;;Total ram usage:        7 bytes
  9893 ;; Hardware stack levels used: 1
  9894 ;; Hardware stack levels required when called: 2
  9895 ;; This function calls:
  9896 ;;		i2_UART_Write_Text
  9897 ;; This function is called by:
  9898 ;;		Interrupt level 2
  9899 ;; This function uses a non-reentrant model
  9900 ;;
  9901                           
  9902                           	psect	intcode
  9903   000008                     __pintcode:
  9904                           	callstack 0
  9905   000008                     _Hi_ISR:
  9906                           	callstack 18
  9907                           
  9908                           ;incstack = 0
  9909   000008  8260               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9910   00000A  EDDB  F012         	call	int_func,f	;refresh shadow registers
  9911                           
  9912                           	psect	intcode_body
  9913   0025B6                     __pintcode_body:
  9914                           	callstack 18
  9915   0025B6                     int_func:
  9916                           	callstack 18
  9917   0025B6  0006               	pop		; remove dummy address from shadow register refresh
  9918   0025B8  CFE9 F009          	movff	fsr0l,??_Hi_ISR+1
  9919   0025BC  CFEA F00A          	movff	fsr0h,??_Hi_ISR+2
  9920   0025C0  CFF6 F00B          	movff	tblptrl,??_Hi_ISR+3
  9921   0025C4  CFF7 F00C          	movff	tblptrh,??_Hi_ISR+4
  9922   0025C8  CFF8 F00D          	movff	tblptru,??_Hi_ISR+5
  9923   0025CC  CFF5 F00E          	movff	tablat,??_Hi_ISR+6
  9924   0025D0                     
  9925                           ;main.c: 47:     if (INTCONbits.RBIF) {
  9926   0025D0  A0F2               	btfss	242,0,c	;volatile
  9927   0025D2  EFED  F012         	goto	i2u421_41
  9928   0025D6  EFEF  F012         	goto	i2u421_40
  9929   0025DA                     i2u421_41:
  9930   0025DA  EF2D  F013         	goto	i2l203
  9931   0025DE                     i2u421_40:
  9932   0025DE                     
  9933                           ;main.c: 48:         _delay((unsigned long)((100)*(4000000/4000.0)));
  9934   0025DE  0E82               	movlw	130
  9935   0025E0  6E08               	movwf	??_Hi_ISR^0,c
  9936   0025E2  0EDE               	movlw	222
  9937   0025E4                     i2u630_47:
  9938   0025E4  2EE8               	decfsz	wreg,f,c
  9939   0025E6  D7FE               	bra	i2u630_47
  9940   0025E8  2E08               	decfsz	??_Hi_ISR^0,f,c
  9941   0025EA  D7FC               	bra	i2u630_47
  9942   0025EC                     
  9943                           ;main.c: 49:         if(count == 0){
  9944   0025EC  5047               	movf	_count^0,w,c
  9945   0025EE  1048               	iorwf	(_count+1)^0,w,c
  9946   0025F0  A4D8               	btfss	status,2,c
  9947   0025F2  EFFD  F012         	goto	i2u422_41
  9948   0025F6  EFFF  F012         	goto	i2u422_40
  9949   0025FA                     i2u422_41:
  9950   0025FA  EF07  F013         	goto	i2l3801
  9951   0025FE                     i2u422_40:
  9952   0025FE                     
  9953                           ;main.c: 50:             UART_Write_Text("AT\r\n");
  9954   0025FE  0E1B               	movlw	low STR_6
  9955   002600  6E02               	movwf	i2UART_Write_Text@text^0,c
  9956   002602  0E7D               	movlw	high STR_6
  9957   002604  6E03               	movwf	(i2UART_Write_Text@text+1)^0,c
  9958   002606  ECF9  F014         	call	i2_UART_Write_Text	;wreg free
  9959                           
  9960                           ;main.c: 51:         }
  9961   00260A  EF2A  F013         	goto	i2l3811
  9962   00260E                     i2l3801:
  9963   00260E  0447               	decf	_count^0,w,c
  9964   002610  1048               	iorwf	(_count+1)^0,w,c
  9965   002612  A4D8               	btfss	status,2,c
  9966   002614  EF0E  F013         	goto	i2u423_41
  9967   002618  EF10  F013         	goto	i2u423_40
  9968   00261C                     i2u423_41:
  9969   00261C  EF18  F013         	goto	i2l3805
  9970   002620                     i2u423_40:
  9971   002620                     
  9972                           ;main.c: 53:             UART_Write_Text("AT+INQ\r\n");
  9973   002620  0E06               	movlw	low STR_7
  9974   002622  6E02               	movwf	i2UART_Write_Text@text^0,c
  9975   002624  0E7D               	movlw	high STR_7
  9976   002626  6E03               	movwf	(i2UART_Write_Text@text+1)^0,c
  9977   002628  ECF9  F014         	call	i2_UART_Write_Text	;wreg free
  9978                           
  9979                           ;main.c: 54:         }
  9980   00262C  EF2A  F013         	goto	i2l3811
  9981   002630                     i2l3805:
  9982   002630  0E02               	movlw	2
  9983   002632  1847               	xorwf	_count^0,w,c
  9984   002634  1048               	iorwf	(_count+1)^0,w,c
  9985   002636  A4D8               	btfss	status,2,c
  9986   002638  EF20  F013         	goto	i2u424_41
  9987   00263C  EF22  F013         	goto	i2u424_40
  9988   002640                     i2u424_41:
  9989   002640  EF2A  F013         	goto	i2l3811
  9990   002644                     i2u424_40:
  9991   002644                     
  9992                           ;main.c: 56:             UART_Write_Text("AT+CONN1\r\n");
  9993   002644  0EFB               	movlw	low STR_8
  9994   002646  6E02               	movwf	i2UART_Write_Text@text^0,c
  9995   002648  0E7C               	movlw	high STR_8
  9996   00264A  6E03               	movwf	(i2UART_Write_Text@text+1)^0,c
  9997   00264C  ECF9  F014         	call	i2_UART_Write_Text	;wreg free
  9998   002650                     
  9999                           ;main.c: 57:             count = -1;
 10000   002650  6847               	setf	_count^0,c
 10001   002652  6848               	setf	(_count+1)^0,c
 10002   002654                     i2l3811:
 10003                           
 10004                           ;main.c: 59:         count++;
 10005   002654  4A47               	infsnz	_count^0,f,c
 10006   002656  2A48               	incf	(_count+1)^0,f,c
 10007   002658                     
 10008                           ;main.c: 61:         INTCONbits.INT0IF = 0;
 10009   002658  92F2               	bcf	242,1,c	;volatile
 10010   00265A                     i2l203:
 10011   00265A  C00E  FFF5         	movff	??_Hi_ISR+6,tablat
 10012   00265E  C00D  FFF8         	movff	??_Hi_ISR+5,tblptru
 10013   002662  C00C  FFF7         	movff	??_Hi_ISR+4,tblptrh
 10014   002666  C00B  FFF6         	movff	??_Hi_ISR+3,tblptrl
 10015   00266A  C00A  FFEA         	movff	??_Hi_ISR+2,fsr0h
 10016   00266E  C009  FFE9         	movff	??_Hi_ISR+1,fsr0l
 10017   002672  9260               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10018   002674  0011               	retfie		f
 10019   002676                     __end_of_Hi_ISR:
 10020                           	callstack 0
 10021                           
 10022 ;; *************** function i2_UART_Write_Text *****************
 10023 ;; Defined at:
 10024 ;;		line 51 in file "setting_hardaware/uart.c"
 10025 ;; Parameters:    Size  Location     Type
 10026 ;;  text            2    1[COMRAM] PTR unsigned char 
 10027 ;;		 -> STR_13(6), STR_12(6), STR_8(11), STR_7(9), 
 10028 ;;		 -> STR_6(5), STR_5(6), STR_4(3), STR_3(5), 
 10029 ;;		 -> STR_2(5), Check_ADC@tmp(10), 
 10030 ;; Auto vars:     Size  Location     Type
 10031 ;;  i               2    5[COMRAM] int 
 10032 ;; Return value:  Size  Location     Type
 10033 ;;                  1    wreg      void 
 10034 ;; Registers used:
 10035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10036 ;; Tracked objects:
 10037 ;;		On entry : 0/0
 10038 ;;		On exit  : 0/0
 10039 ;;		Unchanged: 0/0
 10040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10041 ;;      Params:         2       0       0       0       0       0       0
 10042 ;;      Locals:         2       0       0       0       0       0       0
 10043 ;;      Temps:          2       0       0       0       0       0       0
 10044 ;;      Totals:         6       0       0       0       0       0       0
 10045 ;;Total ram usage:        6 bytes
 10046 ;; Hardware stack levels used: 1
 10047 ;; Hardware stack levels required when called: 1
 10048 ;; This function calls:
 10049 ;;		i2_UART_Write
 10050 ;; This function is called by:
 10051 ;;		_Hi_ISR
 10052 ;; This function uses a non-reentrant model
 10053 ;;
 10054                           
 10055                           	psect	text45
 10056   0029F2                     __ptext45:
 10057                           	callstack 0
 10058   0029F2                     i2_UART_Write_Text:
 10059                           	callstack 18
 10060   0029F2                     
 10061                           ;setting_hardaware/uart.c: 52:     for(int i=0;text[i]!='\0';i++)
 10062   0029F2  0E00               	movlw	0
 10063   0029F4  6E07               	movwf	(i2UART_Write_Text@i+1)^0,c
 10064   0029F6  0E00               	movlw	0
 10065   0029F8  6E06               	movwf	i2UART_Write_Text@i^0,c
 10066   0029FA  EF19  F015         	goto	i2l3771
 10067   0029FE                     i2l3767:
 10068                           
 10069                           ;setting_hardaware/uart.c: 53:         UART_Write(text[i]);
 10070   0029FE  5006               	movf	i2UART_Write_Text@i^0,w,c
 10071   002A00  2402               	addwf	i2UART_Write_Text@text^0,w,c
 10072   002A02  6E04               	movwf	??i2_UART_Write_Text^0,c
 10073   002A04  5007               	movf	(i2UART_Write_Text@i+1)^0,w,c
 10074   002A06  2003               	addwfc	(i2UART_Write_Text@text+1)^0,w,c
 10075   002A08  6E05               	movwf	(??i2_UART_Write_Text+1)^0,c
 10076   002A0A  C004  FFF6         	movff	??i2_UART_Write_Text,tblptrl
 10077   002A0E  C005  FFF7         	movff	??i2_UART_Write_Text+1,tblptrh
 10078   002A12  6AF8               	clrf	tblptru,c
 10079   002A14  0E05               	movlw	(high __ramtop+-1)
 10080   002A16  64F7               	cpfsgt	tblptrh,c
 10081   002A18  D003               	bra	i2u416_47
 10082   002A1A  0008               	tblrd		*
 10083   002A1C  50F5               	movf	tablat,w,c
 10084   002A1E  D005               	bra	i2u416_40
 10085   002A20                     i2u416_47:
 10086   002A20  CFF6 FFE9          	movff	tblptrl,fsr0l
 10087   002A24  CFF7 FFEA          	movff	tblptrh,fsr0h
 10088   002A28  50EF               	movf	indf0,w,c
 10089   002A2A                     i2u416_40:
 10090   002A2A  EC16  F017         	call	i2_UART_Write
 10091   002A2E  4A06               	infsnz	i2UART_Write_Text@i^0,f,c
 10092   002A30  2A07               	incf	(i2UART_Write_Text@i+1)^0,f,c
 10093   002A32                     i2l3771:
 10094   002A32  5006               	movf	i2UART_Write_Text@i^0,w,c
 10095   002A34  2402               	addwf	i2UART_Write_Text@text^0,w,c
 10096   002A36  6E04               	movwf	??i2_UART_Write_Text^0,c
 10097   002A38  5007               	movf	(i2UART_Write_Text@i+1)^0,w,c
 10098   002A3A  2003               	addwfc	(i2UART_Write_Text@text+1)^0,w,c
 10099   002A3C  6E05               	movwf	(??i2_UART_Write_Text+1)^0,c
 10100   002A3E  C004  FFF6         	movff	??i2_UART_Write_Text,tblptrl
 10101   002A42  C005  FFF7         	movff	??i2_UART_Write_Text+1,tblptrh
 10102   002A46  6AF8               	clrf	tblptru,c
 10103   002A48  0E05               	movlw	(high __ramtop+-1)
 10104   002A4A  64F7               	cpfsgt	tblptrh,c
 10105   002A4C  D003               	bra	i2u417_47
 10106   002A4E  0008               	tblrd		*
 10107   002A50  50F5               	movf	tablat,w,c
 10108   002A52  D005               	bra	i2u417_40
 10109   002A54                     i2u417_47:
 10110   002A54  CFF6 FFE9          	movff	tblptrl,fsr0l
 10111   002A58  CFF7 FFEA          	movff	tblptrh,fsr0h
 10112   002A5C  50EF               	movf	indf0,w,c
 10113   002A5E                     i2u417_40:
 10114   002A5E  0900               	iorlw	0
 10115   002A60  A4D8               	btfss	status,2,c
 10116   002A62  EF35  F015         	goto	i2u418_41
 10117   002A66  EF37  F015         	goto	i2u418_40
 10118   002A6A                     i2u418_41:
 10119   002A6A  EFFF  F014         	goto	i2l3767
 10120   002A6E                     i2u418_40:
 10121   002A6E  0012               	return		;funcret
 10122   002A70                     __end_ofi2_UART_Write_Text:
 10123                           	callstack 0
 10124                           
 10125 ;; *************** function i2_UART_Write *****************
 10126 ;; Defined at:
 10127 ;;		line 44 in file "setting_hardaware/uart.c"
 10128 ;; Parameters:    Size  Location     Type
 10129 ;;  data            1    wreg     unsigned char 
 10130 ;; Auto vars:     Size  Location     Type
 10131 ;;  data            1    0[COMRAM] unsigned char 
 10132 ;; Return value:  Size  Location     Type
 10133 ;;                  1    wreg      void 
 10134 ;; Registers used:
 10135 ;;		wreg
 10136 ;; Tracked objects:
 10137 ;;		On entry : 0/0
 10138 ;;		On exit  : 0/0
 10139 ;;		Unchanged: 0/0
 10140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10141 ;;      Params:         0       0       0       0       0       0       0
 10142 ;;      Locals:         1       0       0       0       0       0       0
 10143 ;;      Temps:          0       0       0       0       0       0       0
 10144 ;;      Totals:         1       0       0       0       0       0       0
 10145 ;;Total ram usage:        1 bytes
 10146 ;; Hardware stack levels used: 1
 10147 ;; This function calls:
 10148 ;;		Nothing
 10149 ;; This function is called by:
 10150 ;;		i2_UART_Write_Text
 10151 ;; This function uses a non-reentrant model
 10152 ;;
 10153                           
 10154                           	psect	text46
 10155   002E2C                     __ptext46:
 10156                           	callstack 0
 10157   002E2C                     i2_UART_Write:
 10158                           	callstack 18
 10159                           
 10160                           ;incstack = 0
 10161                           ;i2UART_Write@data stored from wreg
 10162   002E2C  6E01               	movwf	i2UART_Write@data^0,c
 10163   002E2E                     i2l115:
 10164   002E2E  A2AC               	btfss	172,1,c	;volatile
 10165   002E30  EF1C  F017         	goto	i2u394_41
 10166   002E34  EF1E  F017         	goto	i2u394_40
 10167   002E38                     i2u394_41:
 10168   002E38  EF17  F017         	goto	i2l115
 10169   002E3C                     i2u394_40:
 10170   002E3C                     
 10171                           ;setting_hardaware/uart.c: 47:     TXREG = data;
 10172   002E3C  C001  FFAD         	movff	i2UART_Write@data,4013	;volatile
 10173   002E40  0012               	return		;funcret
 10174   002E42                     __end_ofi2_UART_Write:
 10175                           	callstack 0
 10176                           
 10177                           	psect	rparam
 10178   000001                     ___rparam_used  equ	1
 10179   000000                     ___param_bank   equ	0
 10180   000000                     __Lparam        equ	__Lrparam
 10181   000000                     __Hparam        equ	__Hrparam
 10182                           
 10183                           	psect	temp
 10184   000060                     btemp:
 10185                           	callstack 0
 10186   000060                     	ds	1
 10187   000060                     int$flags       set	btemp
 10188   000061                     wtemp8          set	btemp+1
 10189   000061                     ttemp5          set	btemp+1
 10190   000064                     ttemp6          set	btemp+4
 10191   000068                     ttemp7          set	btemp+8
 10192                           
 10193                           	psect	idloc
 10194                           
 10195                           ;Config register IDLOC0 @ 0x200000
 10196                           ;	unspecified, using default values
 10197   200000                     	org	2097152
 10198   200000  FF                 	db	255
 10199                           
 10200                           ;Config register IDLOC1 @ 0x200001
 10201                           ;	unspecified, using default values
 10202   200001                     	org	2097153
 10203   200001  FF                 	db	255
 10204                           
 10205                           ;Config register IDLOC2 @ 0x200002
 10206                           ;	unspecified, using default values
 10207   200002                     	org	2097154
 10208   200002  FF                 	db	255
 10209                           
 10210                           ;Config register IDLOC3 @ 0x200003
 10211                           ;	unspecified, using default values
 10212   200003                     	org	2097155
 10213   200003  FF                 	db	255
 10214                           
 10215                           ;Config register IDLOC4 @ 0x200004
 10216                           ;	unspecified, using default values
 10217   200004                     	org	2097156
 10218   200004  FF                 	db	255
 10219                           
 10220                           ;Config register IDLOC5 @ 0x200005
 10221                           ;	unspecified, using default values
 10222   200005                     	org	2097157
 10223   200005  FF                 	db	255
 10224                           
 10225                           ;Config register IDLOC6 @ 0x200006
 10226                           ;	unspecified, using default values
 10227   200006                     	org	2097158
 10228   200006  FF                 	db	255
 10229                           
 10230                           ;Config register IDLOC7 @ 0x200007
 10231                           ;	unspecified, using default values
 10232   200007                     	org	2097159
 10233   200007  FF                 	db	255
 10234                           
 10235                           	psect	config
 10236                           
 10237                           ; Padding undefined space
 10238   300000                     	org	3145728
 10239   300000  FF                 	db	255
 10240                           
 10241                           ;Config register CONFIG1H @ 0x300001
 10242                           ;	Oscillator Selection bits
 10243                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
 10244                           ;	Fail-Safe Clock Monitor Enable bit
 10245                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10246                           ;	Internal/External Oscillator Switchover bit
 10247                           ;	IESO = ON, Oscillator Switchover mode enabled
 10248   300001                     	org	3145729
 10249   300001  88                 	db	136
 10250                           
 10251                           ;Config register CONFIG2L @ 0x300002
 10252                           ;	Power-up Timer Enable bit
 10253                           ;	PWRT = OFF, PWRT disabled
 10254                           ;	Brown-out Reset Enable bits
 10255                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 10256                           ;	Brown Out Reset Voltage bits
 10257                           ;	BORV = 3, Minimum setting
 10258   300002                     	org	3145730
 10259   300002  1F                 	db	31
 10260                           
 10261                           ;Config register CONFIG2H @ 0x300003
 10262                           ;	Watchdog Timer Enable bit
 10263                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10264                           ;	Watchdog Timer Postscale Select bits
 10265                           ;	WDTPS = 1, 1:1
 10266   300003                     	org	3145731
 10267   300003  00                 	db	0
 10268                           
 10269                           ; Padding undefined space
 10270   300004                     	org	3145732
 10271   300004  FF                 	db	255
 10272                           
 10273                           ;Config register CONFIG3H @ 0x300005
 10274                           ;	CCP2 MUX bit
 10275                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 10276                           ;	PORTB A/D Enable bit
 10277                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 10278                           ;	Low-Power Timer1 Oscillator Enable bit
 10279                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10280                           ;	MCLR Pin Enable bit
 10281                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10282   300005                     	org	3145733
 10283   300005  83                 	db	131
 10284                           
 10285                           ;Config register CONFIG4L @ 0x300006
 10286                           ;	Stack Full/Underflow Reset Enable bit
 10287                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10288                           ;	Single-Supply ICSP Enable bit
 10289                           ;	LVP = OFF, Single-Supply ICSP disabled
 10290                           ;	Extended Instruction Set Enable bit
 10291                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10292                           ;	Background Debugger Enable bit
 10293                           ;	DEBUG = 0x1, unprogrammed default
 10294   300006                     	org	3145734
 10295   300006  81                 	db	129
 10296                           
 10297                           ; Padding undefined space
 10298   300007                     	org	3145735
 10299   300007  FF                 	db	255
 10300                           
 10301                           ;Config register CONFIG5L @ 0x300008
 10302                           ;	Code Protection bit
 10303                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 10304                           ;	Code Protection bit
 10305                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 10306                           ;	Code Protection bit
 10307                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 10308                           ;	Code Protection bit
 10309                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 10310   300008                     	org	3145736
 10311   300008  0F                 	db	15
 10312                           
 10313                           ;Config register CONFIG5H @ 0x300009
 10314                           ;	Boot Block Code Protection bit
 10315                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10316                           ;	Data EEPROM Code Protection bit
 10317                           ;	CPD = OFF, Data EEPROM not code-protected
 10318   300009                     	org	3145737
 10319   300009  C0                 	db	192
 10320                           
 10321                           ;Config register CONFIG6L @ 0x30000A
 10322                           ;	Write Protection bit
 10323                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 10324                           ;	Write Protection bit
 10325                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 10326                           ;	Write Protection bit
 10327                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 10328                           ;	Write Protection bit
 10329                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 10330   30000A                     	org	3145738
 10331   30000A  0F                 	db	15
 10332                           
 10333                           ;Config register CONFIG6H @ 0x30000B
 10334                           ;	Configuration Register Write Protection bit
 10335                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10336                           ;	Boot Block Write Protection bit
 10337                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
 10338                           ;	Data EEPROM Write Protection bit
 10339                           ;	WRTD = OFF, Data EEPROM not write-protected
 10340   30000B                     	org	3145739
 10341   30000B  E0                 	db	224
 10342                           
 10343                           ;Config register CONFIG7L @ 0x30000C
 10344                           ;	Table Read Protection bit
 10345                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 10346                           ;	Table Read Protection bit
 10347                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 10348                           ;	Table Read Protection bit
 10349                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 10350                           ;	Table Read Protection bit
 10351                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10352   30000C                     	org	3145740
 10353   30000C  0F                 	db	15
 10354                           
 10355                           ;Config register CONFIG7H @ 0x30000D
 10356                           ;	Boot Block Table Read Protection bit
 10357                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10358   30000D                     	org	3145741
 10359   30000D  40                 	db	64
 10360                           tosu	equ	0xFFF
 10361                           tosh	equ	0xFFE
 10362                           tosl	equ	0xFFD
 10363                           stkptr	equ	0xFFC
 10364                           pclatu	equ	0xFFB
 10365                           pclath	equ	0xFFA
 10366                           pcl	equ	0xFF9
 10367                           tblptru	equ	0xFF8
 10368                           tblptrh	equ	0xFF7
 10369                           tblptrl	equ	0xFF6
 10370                           tablat	equ	0xFF5
 10371                           prodh	equ	0xFF4
 10372                           prodl	equ	0xFF3
 10373                           indf0	equ	0xFEF
 10374                           postinc0	equ	0xFEE
 10375                           postdec0	equ	0xFED
 10376                           preinc0	equ	0xFEC
 10377                           plusw0	equ	0xFEB
 10378                           fsr0h	equ	0xFEA
 10379                           fsr0l	equ	0xFE9
 10380                           wreg	equ	0xFE8
 10381                           indf1	equ	0xFE7
 10382                           postinc1	equ	0xFE6
 10383                           postdec1	equ	0xFE5
 10384                           preinc1	equ	0xFE4
 10385                           plusw1	equ	0xFE3
 10386                           fsr1h	equ	0xFE2
 10387                           fsr1l	equ	0xFE1
 10388                           bsr	equ	0xFE0
 10389                           indf2	equ	0xFDF
 10390                           postinc2	equ	0xFDE
 10391                           postdec2	equ	0xFDD
 10392                           preinc2	equ	0xFDC
 10393                           plusw2	equ	0xFDB
 10394                           fsr2h	equ	0xFDA
 10395                           fsr2l	equ	0xFD9
 10396                           status	equ	0xFD8

Data Sizes:
    Strings     52
    Constant    60
    Data        0
    BSS         109
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     54      95
    BANK0           128    127     127
    BANK1           256     69     137
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> Check_ADC@tmp(BANK0[10]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> Check_ADC@tmp(BANK0[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    S1719$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> Check_ADC@tmp(BANK0[10]), 

    S1719$source	PTR const unsigned char  size(2) Largest target is 0

    sp__GetString	PTR unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> Check_ADC@tmp(BANK0[10]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), STR_10(CODE[1]), STR_11(CODE[1]), STR_9(CODE[1]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 11
		 -> Check_ADC@tmp(BANK0[10]), STR_12(CODE[6]), STR_13(CODE[6]), STR_2(CODE[5]), 
		 -> STR_3(CODE[5]), STR_4(CODE[3]), STR_5(CODE[6]), STR_6(CODE[5]), 
		 -> STR_7(CODE[9]), STR_8(CODE[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_MyusartRead
    _Lo_ISR->_strcpy
    _strcpy->_GetString
    _MyusartRead->i1_UART_Write_Text
    i1_UART_Write_Text->i1_UART_Write

Critical Paths under _Hi_ISR in COMRAM

    _Hi_ISR->i2_UART_Write_Text
    i2_UART_Write_Text->i2_UART_Write

Critical Paths under _main in BANK0

    _main->_Check_Gyroscope
    _Check_Gyroscope->_calculate_angle
    _calculate_angle->_atan2f
    _atan2f->_atanf
    _atanf->_fabsf
    _fabsf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___fldiv->___fladd
    _Check_ADC->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _UART_Write_Text->_UART_Write

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Check_Gyroscope
    _calculate_angle->_atan2f
    _atan2f->_atanf

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   33661
                                            122 BANK0      5     5      0
                          _Check_ADC
                    _Check_Gyroscope
                  _SYSTEM_Initialize
                    _UART_Write_Text
                      _displayBinary
 ---------------------------------------------------------------------------------
 (1) _displayBinary                                        3     1      2     127
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Gyroscope                                      8     6      2   30095
                                            116 BANK0      6     6      0
                                             67 BANK1      2     0      2
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                    _UART_Write_Text
                             ___flge
                            ___flsub
                    _calculate_angle
 ---------------------------------------------------------------------------------
 (2) _calculate_angle                                      8     4      4   26312
                                            108 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
                             _atan2f
 ---------------------------------------------------------------------------------
 (3) _atan2f                                              41    33      8   21694
                                             92 BANK0     16     8      8
                                             42 BANK1     25    25      0
                            ___fladd
                            ___fldiv
                            ___flneg
                            ___flsub
                      ___fpclassifyf
                           ___xxtofl (ARG)
                              _atanf
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _atanf                                               46    42      4   12267
                                             88 BANK0      4     0      4
                                              0 BANK1     42    42      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___flsub
                      ___fpclassifyf
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4      77
                                             80 BANK0      8     4      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     204
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3145
                                             55 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3044
                                             39 BANK0     16     8      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      74
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2271
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1725
                                             55 BANK0     25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     520
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     278
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      47
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             2     2      0      81
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Check_ADC                                           17    15      2    3179
                                             46 BANK0     17    15      2
                           _ADC_Read
                    _UART_Write_Text
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    14      5    2598
                                             29 BANK0     17    12      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4    2286
                                             23 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    2086
                                             10 BANK0     13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     329
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      96
                                              6 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     439
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     451
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      6     4      2     195
                                              1 BANK0      6     4      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      47
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             6     4      2      37
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Lo_ISR                                              32    32      0     819
                                             22 COMRAM    32    32      0
                        _ClearBuffer
                          _GetString
                        _MyusartRead
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               3     1      2      91
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               6     3      3      81
                                             16 COMRAM     6     3      3
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (8) _MyusartRead                                          1     1      0     216
                                             21 COMRAM     1     1      0
                       i1_UART_Write
                  i1_UART_Write_Text
 ---------------------------------------------------------------------------------
 (9) i1_UART_Write_Text                                    6     4      2     120
                                             15 COMRAM     6     4      2
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (10) i1_UART_Write                                        1     1      0      29
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _GetString                                            2     0      2       0
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _ClearBuffer                                          2     2      0      68
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _Hi_ISR                                              7     7      0     122
                                              7 COMRAM     7     7      0
                  i2_UART_Write_Text
 ---------------------------------------------------------------------------------
 (12) i2_UART_Write_Text                                   6     4      2     122
                                              1 COMRAM     6     4      2
                       i2_UART_Write
 ---------------------------------------------------------------------------------
 (13) i2_UART_Write                                        1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_ADC
     _ADC_Read
     _UART_Write_Text
       _UART_Write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _Check_Gyroscope
     _I2C_Read
     _I2C_Start
     _I2C_Stop
     _I2C_Write
     _UART_Write_Text
     ___flge
     ___flsub
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___flmul (ARG)
     _calculate_angle
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___flmul
       ___xxtofl
       _atan2f
         ___fladd
         ___fldiv
         ___flneg
         ___flsub
         ___fpclassifyf
         ___xxtofl (ARG)
         _atanf (ARG)
           ___fladd
           ___fldiv
           ___flmul
           ___flneg
           ___flsub
           ___fpclassifyf
           _fabsf
             ___fldiv (ARG)
         _fabsf (ARG)
   _SYSTEM_Initialize
     _ADC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _UART_Write_Text
   _displayBinary

 _Lo_ISR (ROOT)
   _ClearBuffer
   _GetString
   _MyusartRead
     i1_UART_Write
     i1_UART_Write_Text
       i1_UART_Write
   _strcpy
     _GetString (ARG)
   _strlen

 _Hi_ISR (ROOT)
   i2_UART_Write_Text
     i2_UART_Write

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1518      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256     69     137     53.5%
BITBANK5           239      0       0      0.0%
BANK5              239      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128    127     127     99.2%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     54      95     75.4%
BITBIGSFR_1h        38      0       0      0.0%
BITBIGSFRh          18      0       0      0.0%
BITBIGSFR_1llh      12      0       0      0.0%
BITBIGSFR_5h         9      0       0      0.0%
BITBIGSFRl           9      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_5l         2      0       0      0.0%
BITBIGSFR_1lh        1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     359      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Jan 14 00:04:16 2025

                 ___fldiv@aexp 00CF                   ___fldiv@bexp 00CE                   ___fldiv@sign 00C7  
                           l21 2DFC                             _BF 7E38                             l24 2CEE  
                           l32 23EA                             l27 2D1C                             l35 242A  
                           l65 2D74                             l82 2E52                             l85 2E7E  
                 ___awdiv@sign 0085                             _pi 7CF7                             bsr 0FE0  
                          l112 2DE2                            l115 2E02                            l124 2972  
                          l118 2E14                            l303 2E68                            l312 2E64  
                          l321 2DC0                            l330 2B8C                            l306 2E76  
                          l315 2DA4                            l324 2B50                            l309 2E56  
                          l326 2B5E                            l318 2DB2                            l327 2B7A  
                          l183 2862                            l329 2B88                            l601 2212  
                          l610 2C7C                            l606 2258                            l294 2152  
                          l297 24F0                            l580 2724                            l567 25B4  
                          l920 1A9E                            l930 1B02                            l906 2B02  
                          l931 1B5A                            l923 1A62                            l932 1B48  
                          l918 1C3A                            l950 1548                            l960 17A2  
                          l864 11B4                            l929 1AE4                            l881 12CE  
                          l873 1480                            l865 11A2                            l954 18A8  
                          l890 139C                            l866 1168                            l891 138A  
                          l957 173E                            l958 175C                            l878 135C  
                          l991 1E80                            l967 186A                            l959 17B4  
                          l897 1444                            l994 1FDC                            l998 1F18  
                          _PEN 7E2A                            _SEN 7E28                            _aT0 7CEF  
                          _aT1 7CEB                            _aT2 7CE7                            _aT3 7CE3  
                          _aT4 7CDF                            _abs 2CB4                            _str 0165  
                 ___awmod@sign 0085                 ?_displayBinary 0080                            wreg 0FE8  
                 ___flmul@aexp 009B       Check_ADC@prev_sensor_val 00AE                   ___flmul@bexp 00A0  
                 ___flmul@sign 009A                   ___flmul@temp 00A5                   ___flmul@prod 00A1  
                         l1100 099E                           l1020 0A28                           l1005 1F74  
                         l1023 0FC8                           l1106 035C                           l1131 2C06  
                         ?_abs 0086                           l1124 2CB2                           l1052 0DA4  
                         l1028 0B08                           l1205 2E84                           l1062 0E8C  
                         l1054 0D68                           l1076 2358                           l1182 2CE8  
                         l1175 2B48                           l1169 1E24                           l4001 10F8  
                         l1194 27D0                           l1179 2CD0                           l4011 1134  
                         l4003 10FC                           l4101 1400                           l4021 1186  
                         l4013 1150                           l4005 1100                           l4111 1452  
                         l4103 1402                           l4031 11D2                           l4023 1194  
                         l4015 1160                           l4007 1104                           l5001 241E  
                         l4201 1A6C                           l4121 1470                           l4113 1458  
                         l4105 1412                           l4041 1212                           l4025 1196  
                         l4017 1176                           l4009 1108                           l4211 1AC4  
                         l4203 1A8A                           l4131 18C8                           l4115 145A  
                         l4107 1422                           l4051 123C                           l4043 121E  
                         l4035 11E6                           l4027 11A0                           l4019 1182  
                         l5003 2E42                           l5011 27D2                           l4221 1B12  
                         l4213 1ACA                           l4205 1A8C                           l4133 18D8  
                         l4141 1900                           l4125 18AA                           l4301 157C  
                         l4117 1460                           l4109 1442                           l4061 12AE  
                         l4045 1222                           l4037 11F6                           l4029 11C2  
                         l4053 1242                           l5021 1FF8                           l5013 1FDE  
                         l5005 2E46                           l4231 1B84                           l4223 1B40  
                         l4215 1AD4                           l4207 1A9C                           l4151 192C  
                         l4143 1910                           l4135 18E8                           l4127 18B8  
                         l4311 15CC                           l4303 1588                           l4119 146E  
                         l4071 1308                           l4055 1268                           l4063 12BE  
                         l4047 1230                           l4039 1204                           l5031 2024  
                         l5023 2002                           l5015 1FE2                           l5007 2E4A  
                         l4401 250C                           l4241 1BFC                           l4233 1BAE  
                         l4217 1AE2                           l4209 1AAE                           l4153 193C  
                         l4161 1964                           l4145 1916                           l4137 18F8  
                         l4129 18C6                           l4321 160E                           l4313 15D8  
                         l4305 1592                           l4081 1338                           l4073 1312  
                         l4065 12E4                           l4057 129C                           l4049 1232  
                         l5041 20F0                           l5033 2044                           l5025 200C  
                         l5017 1FE8                           l5009 2E4E                           l4411 2532  
                         l4403 2510                           l4251 1C2E                           l4243 1C14  
                         l4227 1B6A                           l4235 1BB2                           l4219 1AF4  
                         l4171 19A6                           l4163 1974                           l4155 194C  
                         l4147 191C                           l4139 18FA                           l4331 1670  
                         l4323 161A                           l4315 15E4                           l4307 15A8  
                         l4091 1382                           l4083 133C                           l4075 1320  
                         l4067 12F4                           l4059 129E                           l5043 2100  
                         l5035 2062                           l5027 2016                           l5019 1FF2  
                         l5051 2868                           l4421 2568                           l4413 2544  
                         l4405 251E                           l4253 1C30                           l4245 1C16  
                         l4237 1BCC                           l4229 1B76                           l4165 198A  
                         l4157 195C                           l4149 192A                           l4341 1706  
                         l4333 167C                           l4325 162A                           l4317 15F2  
                         l4309 15B4                           l4261 1482                           l4085 134C  
                         l4077 1322                           l4501 2350                           l5045 2134  
                         l5037 2086                           l5029 2020                           l5061 28B4  
                         l5053 2872                           l4423 257E                           l4415 254C  
                         l4431 2594                           l4407 2526                           l4247 1C1A  
                         l4239 1BE2                           l4191 1A28                           l4183 19DE  
                         l4167 199A                           l4175 19BA                           l4159 195E  
                         l4351 176C                           l4343 1724                           l4335 1698  
                         l4327 1644                           l4319 15FE                           l4271 14C0  
                         l4263 1490                           l4095 13AC                           l4079 1330  
                         l4087 134E                           l5047 2140                           l5039 20BA  
                         l5055 2886                           l5063 28BE                           l4433 25A4  
                         l4425 2586                           l4417 2554                           l4409 252A  
                         l4441 267A                           l4521 276E                           l4513 2726  
                         l4249 1C28                           l4193 1A2E                           l4185 19F8  
                         l4177 19CA                           l4169 19A2                           l4361 17DE  
                         l4353 179A                           l4345 172E                           l4337 16C2  
                         l4329 1654                           l4281 14F2                           l4273 14D0  
                         l4265 149E                           l4097 13B8                           l4089 136C  
                         l4505 2C7E                           l4601 0828                           l5065 28CA  
                         l5057 2898                           l5049 2864                           l4435 25AC  
                         l4427 2588                           l4419 2562                           l4451 26AA  
                         l4443 2688                           l4523 27A0                           l4515 2738  
                         l4195 1A3E                           l4187 1A08                           l4179 19CA  
                         l4371 1854                           l4363 1808                           l4347 173C  
                         l4339 16F8                           l4291 1532                           l4283 1500  
                         l4275 14D6                           l4267 14A0                           l4099 13C6  
                         l4507 2C9E                           l4611 093A                           l4531 0220  
                         l5067 28D6                           l5059 28A6                           l4429 258E  
                         l4461 26F0                           l4453 26BC                           l4445 2690  
                         l4517 2748                           l4621 1C3C                           l4197 1A52  
                         l4189 1A18                           l4381 188E                           l4373 1864  
                         l4357 17C4                           l4365 180C                           l4349 174E  
                         l4293 1538                           l4285 1502                           l4277 14E6  
                         l4269 14B0                           l4509 2CA2                           l4613 0988  
                         l4605 0860                           l4541 0286                           l4533 0230  
                         l4701 0B32                           l4471 271C                           l4463 26F8  
                         l4455 26C4                           l4447 2694                           l4439 2676  
                         l4527 2CB4                           l4519 2752                           l4631 1C8A  
                         l4623 1C60                           l4199 1A60                           l4375 186E  
                         l4383 1894                           l4367 1826                           l4359 17D0  
                         l4295 1558                           l4287 1512                           l4279 14EC  
                         l4391 2ACE                           l4607 08B8                           l4543 029A  
                         l4535 0246                           l4711 0B84                           l4465 26FE  
                         l4457 26CC                           l4449 26A2                           l4529 2CC4  
                         l4641 1D0C                           l4633 1CA6                           l4625 1C6C  
                         l4801 1E3C                           l4385 1898                           l4377 187E  
                         l4369 183A                           l4297 1568                           l4289 1522  
                         l4609 0906                           l4561 0386                           l4545 02DE  
                         l4553 032C                           l4537 0248                           l4721 0BDA  
                         l4713 0B92                           l4395 24F2                           l4459 26DA  
                         l4467 2704                           l4651 1D92                           l4643 1D42  
                         l4635 1CC2                           l4627 1C78                           l4811 1EBA  
                         l4803 1E4A                           l4379 188C                           l4475 2C44  
                         l3931 0FCA                           l4491 22EE                           l4483 225A  
                         l4571 0462                           l4563 039E                           l4555 0342  
                         l4547 02F0                           l4539 025E                           l4715 0BA8  
                         l4707 0B48                           l4397 24F6                           l4469 2714  
                         l4653 1DA2                           l4645 1D5E                           l4637 1CDA  
                         l4661 1DF0                           l4629 1C7C                           l4821 1F0E  
                         l4813 1EC2                           l4805 1E90                           l4477 2C5C  
                         l3941 1008                           l3933 0FD8                           l4389 2ABC  
                         l4485 227A                           l4581 05AC                           l4565 03B4  
                         l4573 04E6                           l4549 0304                           l4733 0C26  
                         l4725 0BFA                           l4709 0B6E                           l4901 2D5A  
                         l4671 2E02                           l4399 2504                           l4655 1DB8  
                         l4647 1D72                           l4639 1CF4                           l4831 1F84  
                         l4823 1F4A                           l4815 1ECE                           l4807 1EA6  
                         l4479 2C6C                           l3951 1036                           l3943 1018  
                         l3935 0FE6                           l4487 22BA                           l4495 22FA  
                         l4591 06FE                           l4575 04FC                           l4567 03B6  
                         l4583 05E2                           l4559 0362                           l4743 0C52  
                         l4719 0BBE                           l4911 2D64                           l4903 2D5C  
                         l4673 2E10                           l4657 1DD6                           l4649 1D82  
                         l4665 1E02                           l4841 1FCC                           l4833 1F88  
                         l4825 1F56                           l4817 1F00                           l3961 1060  
                         l3953 1048                           l3945 101A                           l3937 0FE8  
                         l4497 230C                           l4489 22E2                           l4593 0732  
                         l4585 0616                           l4577 0500                           l4569 045E  
                         l4753 0CA4                           l4745 0C78                           l4737 0C3C  
                         l4729 0C10                           l4921 2D72                           l4913 2D66  
                         l4905 2D5E                           l4659 1DDA                           l4851 2B3E  
                         l4835 1FAC                           l4827 1F64                           l4819 1F02  
                         l3963 1070                           l3971 1098                           l3955 104A  
                         l3939 0FF8                           l3947 1020                           l4595 078C  
                         l4587 064A                           l4579 05A8                           l4771 0D8E  
                         l4763 0CD0                           l4691 0AEA                           l4683 0A48  
                         l4675 09A0                           l4915 2D68                           l4907 2D60  
                         l4923 2E78                           l4931 2DD2                           l4845 2B04  
                         l4837 1FBC                           l4829 1F82                           l3981 10D0  
                         l3973 10A8                           l3965 1080                           l3957 1050  
                         l3949 1030                           l4597 07C0                           l4589 06A4  
                         l4781 0E64                           l4757 0CBA                           l4749 0C8E  
                         l4765 0CF6                           l4693 0AEC                           l4685 0A66  
                         l4677 09C8                           l4861 2DF8                           l4917 2D6E  
                         l4909 2D62                           l4941 2DDC                           l4933 2DD4  
                         l4925 2DC2                           l4847 2B10                           l4951 2E54  
                         l4839 1FCA                           l3991 10E4                           l3983 10D4  
                         l3975 10BA                           l3967 1090                           l3959 105E  
                         l4599 07D0                           l4791 0F38                           l4783 0EA0  
                         l4775 0DB2                           l4767 0D4A                           l4679 09F0  
                         l4863 2DFA                           l4855 2DE4                           l4919 2D70  
                         l4943 2DDE                           l4935 2DD6                           l4927 2DCC  
                         l4865 2CEA                           l4849 2B22                           l4881 2BFA  
                         l4873 2BCC                           l4953 2B4E                           l3993 10E8  
                         l3985 10D8                           l3977 10C8                           l3969 1092  
                         l4777 0E06                           l4769 0D78                           l4697 0B1C  
                         l4689 0A8E                           l4961 2494                           l4857 2DE6  
                         l4945 2DE0                           l4937 2DD8                           l4929 2DD0  
                         _ADFM 7E07                           l4867 2CFC                           l4891 2936  
                         l4875 2BD6                           l4955 2B62                           l4947 2E66  
                         l4971 21C2                           l3995 10EC                           l3987 10DC  
                         l3979 10CC                           l4787 0EC8                           l4779 0E1C  
                         l4859 2DEA                           l4939 2DDA                           l4869 2D14  
                         l4885 28F0                           l4877 2BDE                           l4957 2B78  
                         l4949 2DA0                           l4981 2250                           l4973 21D2  
                         l4965 2154                           l3997 10F0                           l3989 10E0  
                         l4797 0FA8                           l4893 2D4C                           l4887 28FE  
                         l4879 2BE6                           l4991 2388                           l4983 2256  
                         l4975 21E0                           l4967 2184                           l4799 1E2A  
                         l3999 10F4                           l4959 242C                           l4895 2D52  
                         l4889 2930                           l4993 2394                           l4977 21F2  
                         l4969 2194                           l4897 2D56                           l4995 23C0  
                         l4987 235A                           l4979 2200                           l4899 2D58  
                         l4997 23F2                           l4989 236E                           l4999 240E  
                         STR_1 7D2A                           STR_2 7D25                           STR_3 7D20  
                         STR_4 7D03                           STR_5 7D15                           STR_6 7D1B  
                         STR_7 7D06                           STR_8 7CFB                           STR_9 7D05  
                         _CREN 7D5C                           _LATA 0F89                           u5000 1BCC  
                         u5001 1BC8                           u5010 1BFC                           u5011 1BF8  
                         u5020 1C28                           u5100 1568                           u5021 1C24  
                         u5101 1564                           u5110 16E2                           u5030 149E  
                         u5031 149A                           u6000 2E76                           u5200 1854  
                         u5120 173C                           u5040 14B0                           u6001 2E72  
                         u5201 1850                           u5121 1738                           u5041 14AC  
                         u6010 2DB2                           u5210 188C                           u5130 175C  
                         u5050 14C0                           u4410 0FE6                           u6011 2DAE  
                         u5211 1888                           u5131 1758                           u5115 16D8  
                         u5051 14BC                           u4411 0FE2              ??_Check_Gyroscope 00F4  
                         u5220 2504                           u5300 26BC                           u6020 2DC0  
                         u6100 21E0                           u5140 176C                           u5060 1500  
                         u4500 1134                           u4420 0FF8                           u5221 2500  
                         u5301 26B8                           u6021 2DBC                           u6101 21DC  
                         u5141 1768                           u5061 14FC                           u4501 1130  
                         u4421 0FF4                           u5230 251E                           u5310 26DA  
                         u6030 2E64                           u6110 2200                           u5150 179A  
                         u5070 1512                           u4510 114C                           u4430 1008  
                         u5231 251A                           u5311 26D6                           u6031 2E60  
                         u6111 21FC                           u5151 1796                           u5071 150E  
                         u4511 1146                           u4431 1004                           u5240 2544  
                         u5320 26F0                           u6040 2B5E                           u6120 2250  
                         u5160 17B0                           u5080 1522                           u4600 1230  
                         u4520 114E                           u4440 1048                           u5400 2346  
                         u6200 282C                           u5241 2540                           u5321 26EC  
                         u6041 2B5A                           u6121 224C                           u5161 17AC  
                         u5081 151E                           u4601 122C                           u4441 1044  
                         u5401 2340                           u6201 2824                           u5250 2562  
                         u5330 2714                           u6130 23C0                           u6050 2B76  
                         u5170 17C4                           u5090 1558                           u4610 1268  
                         u4530 1176                           u4450 105E                           u5410 2348  
                         u5251 255E                           u5331 2710                           u6131 23BC  
                         u6051 2B70                           u5171 17C0                           u5091 1554  
                         u4611 1264                           u4531 1172                           u4451 105A  
                         u5260 257E                           u5420 2738                           u6140 23EA  
                         u5180 17DE                           u5340 2C5C                           u4700 1382  
                         u4620 12AE                           u4540 1194                           u4460 1070  
                         u5500 0286                           u6220 2852                           u5261 257A  
                         u5421 2734                           u6141 23E6                           u5181 17DA  
                         u5341 2C58                           u4701 137E                           u4621 12AA  
                         u4541 1190                           u4461 106C                           u5501 0282  
                         u6221 284A                           u5270 25A4                           u5430 2748  
                         u6150 240E                           u6070 2B88                           u5190 1826  
                         u4710 1398                           u4630 12E4                           u4550 11B4  
                         u4470 1080                           u5350 229C                           u5510 02F0  
                         u5271 25A0                           u5431 2744                           u6151 240A  
                         u6071 2B84                           u5191 1822                           u4711 1394  
                         u4631 12E0                           u4551 11B0                           u4471 107C  
                         u5511 02EC                           u5280 2688                           u5440 276E  
                         u5600 1CA6                           u6080 2184                           u4800 18C6  
                         u4720 13AC                           u4640 12F4                           u4560 11C2  
                         u4480 10BA                           u5360 22BA                           u5520 0342  
                         u6240 20F0                           u6160 27E6                           u5281 2684  
                         u5441 276A                           u5601 1CA2                           u6065 2B78  
                         u6081 2180                           u4801 18C2                           u4721 13A8  
                         u4641 12F0                           u4561 11BE                           u4481 10B6  
                         u5361 22B6                           u5521 033E                           u6241 20EC  
                         u6161 27DE                           u5290 26A2                           u5450 27A0  
                         u5610 1CC2                           u6090 21C2                           u4810 18D8  
                         u4730 13C6                           u4650 1320                           u4570 11D2  
                         u4490 10C8                           u5370 22E2                           u5530 0358  
                         u6250 2134                           u6218 2830                           u5291 269E  
                         u5451 279C                           u5611 1CBE                           u6091 21BE  
                         u4811 18D4                           u4731 13C2                           u4651 131C  
                         u4571 11CE                           u4491 10C4                           u5371 22DE  
                         u5355 2290                           u5531 0354                           u6251 2130  
                         u5460 2CC4                           u5620 1D08                           u4900 1A8A  
                         u4820 18E8                           u4740 1400                           u4660 1330  
                         u4580 1204                           u5380 230C                           u5540 039E  
                         u5700 09C8                           u6180 2808                           u6260 2886  
                         _RCIF 7CF5                           _RCEN 7E2B                           u5461 2CC0  
                         u5621 1D02                           u4901 1A86                           u4821 18E4  
                         u4741 13FC                           u4661 132C                           u4581 1200  
                         u5381 2308                           u5541 039A                           u5701 09C4  
                         u6181 2800                           u6261 2882                           u5630 1D0A  
                         u4910 1AAE                           u4830 192A                           u4750 1412  
                         u4670 134C                           u4590 1212                           u5550 03B4  
                         u5470 0242                           u5710 09F0                           u6238 2856  
                         u6270 2898                           u4911 1AAA                           u4831 1926  
                         u4751 140E                           u4671 1348                           u4591 120E  
                         u5551 03B0                           u5471 023C                           u5711 09EC  
                         u6271 2894                           u5640 1D72                           u4920 1AC4  
                         u4840 193C                           u4760 1422                           u4680 135C  
                         u5560 04FC                           u5480 0244                           u5800 0D4A  
                         u5720 0A66                           u5641 1D6E                           u4921 1AC0  
                         u4841 1938                           u4761 141E                           u4681 1358  
                         u5561 04F8                           u5801 0D46                           u5721 0A62  
                         u5650 1D82                           u4930 1AE2                           u4850 194C  
                         u4770 1442                           u4690 136C                           u5570 07D0  
                         u5490 025E                           u5810 0D68                           u5730 0AB0  
                         u6178 27EA                           u5651 1D7E                           u4931 1ADE  
                         u4851 1948                           u4771 143E                           u4691 1368  
                         u5395 231E                           u5571 07CC                           u5491 025A  
                         u5811 0D64                           u5660 1D92                           u5900 1F64  
                         u4940 1B02                           u4860 198A                           u4780 1452  
                         u5580 099A                           u5820 0D78                           u5740 0ADA  
                         u5661 1D8E                           u5901 1F60                           u4941 1AFE  
                         u4861 1986                           u4781 144E                           u5581 0996  
                         u5821 0D74                           u5670 1DA2                           u5590 1C60  
                         u5910 1F74                           u4950 1B12                           u4870 19CA  
                         u4790 146E                           u5830 0DB2                           u5750 0B04  
                         u6198 280C                           u5671 1D9E                           u5591 1C5C  
                         u5911 1F70                           u4951 1B0E                           u4871 19C6  
                         u4791 146A                           u5831 0DAE                           u5751 0B00  
                         u5735 0AA4                           u6287 28DE                           u5680 1DEC  
                         u5920 1F82                           u4960 1B40                           u4880 1A3E  
                         u5840 0E06                           u5760 0B84                           u5681 1DE8  
                         u5921 1F7E                           u4961 1B3C                           u4881 1A3A  
                         u5841 0E02                           u5761 0B80                           u5745 0AD0  
                         u6297 2148                           u5690 2E10                           u5930 1FBC  
                         u5850 1E3C                           u4970 1B56                           u4890 1A60  
                         u5770 0B92                           u5691 2E0C                           u5931 1FB8  
                         u5851 1E38                           u4971 1B52                           u4891 1A5C  
                         u5771 0B8E                           u5940 1FCA                           u5860 1E4A  
                         u4980 1B6A                           u5780 0BDA                           u5941 1FC6  
                         u5861 1E46                           u4981 1B66                           u5781 0BD6  
                         u5950 2B3E                           u5870 1EA6                           u4990 1B84  
                         u5790 0BF6                           u5951 2B3A                           u5871 1EA2  
                         u4991 1B80                           u5791 0BF2                           u5960 2CFC  
                         u5880 1EFC                           u5961 2CF8                           u5881 1EF8  
                         u5970 292C                           u5890 1F46                           u5891 1F42  
                         u5980 2962                           u5990 2972                           u5991 296E  
                         u5977 2922                           u5987 2958                           _accX 017F  
                         _accZ 017D                           abs@a 0086                           _dbuf 0145  
                         _main 2864                           _prec 0045               __end_of_I2C_Read 2B8E  
                         fsr0h 0FEA                           fsr1h 0FE2                           indf0 0FEF  
                         fsr2h 0FDA                           fsr0l 0FE9                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           btemp 0060  
             __end_of_I2C_Stop 2E66               __end_of_ADC_Read 2D1E                  ___fpclassifyf 225A  
                         prodh 0FF4                           prodl 0FF3                           start 021C  
              ___fldiv@new_exp 00C8                   ___param_bank 0000        __end_of_UART_Write_Text 2974  
                        ??_abs 0088               ?_UART_Initialize 0001  __end_of_OSCILLATOR_Initialize 2E80  
              __end_of___fladd 1482                          ?_main 0001                          _ACKEN 7E2C  
                        _ACKDT 7E2D                __end_of___fldiv 1C3C               ?_calculate_angle 00EC  
              __end_of___awdiv 25B6                __end_of___flneg 2C7E                          STR_10 7D05  
                        STR_11 7D05                          STR_12 7D0F                          STR_13 7D15  
              __end_of___awmod 2726                __end_of___flmul 18AA                __end_of___flsub 2B04  
              ___awdiv@divisor 0082                          _IRCF0 7E9C                          _IRCF1 7E9D  
                        _IRCF2 7E9E                          i1l115 2E18                          i1l124 29F0  
                        i1l133 2BCA                          i1l118 2E2A                          i1l214 01EC  
                        i1l136 2E82                          i1l129 2C42                          i2l115 2E2E  
                        i2l203 265A                          i2l124 2A6E                          i2l118 2E40  
              ___awdiv@counter 0084                          _RCREG 0FAE                   vfpfcnvrt@fmt 008B  
                        _SPBRG 0FAF                          _TRISA 0F92                          _TRISB 0F93  
                        _TXREG 0FAD                    ?_UART_Write 0001                          _fabsf 2C7E  
                        _angle 0179                          _atanf 0220                          _flags 004B  
                        _count 0047                          _fputc 2726                          _pi_lo 7CF3  
                        _width 0043                          _putch 2E84                    _ClearBuffer 2C08  
            __end_of_I2C_Start 2E78              __end_of_I2C_Write 2DC2                          tablat 0FF5  
                        ttemp5 0061                          ttemp6 0064                          ttemp7 0068  
                        status 0FD8                          wtemp8 0061                __end_of_sprintf 2C08  
               ?___fpclassifyf 0080                __initialization 2D76                   __end_of_main 28F0  
                       ??_main 00FA                ??_displayBinary 0082                  __activetblptr 0002  
           i1UART_Write_Text@i 0014                         ?_fabsf 00D0                         ?_atanf 00D8  
                       _ADCON1 0FC1                         ?_fputc 0080                         _ADRESH 0FC4  
                       _ADRESL 0FC3               ___awdiv@dividend 0080                         ?_putch 0001  
                       i1l1211 2ABA                         i1l1217 2D4A                         i1l3507 2E18  
                       i1l3509 2E26                         i1l3701 2BB4                         i1l3703 2BC0  
                       i1l3705 2BC4                         i1l3651 29B0                         i1l3709 2E80  
                       i1l3653 29B4                         i1l3821 0068                         i1l3647 2974  
                       i1l3751 2A70                         i1l3831 00A8                         i1l3823 006C  
                       i1l3815 0046                         i1l3649 2980                         i1l3753 2A74  
                       i1l3761 2D3E                         i1l3841 00EE                         i1l3833 00BA  
                       i1l3825 007E                         i1l3817 0054                         i1l3691 2C3A  
                       i1l3755 2D1E                         i1l3851 012A                         i1l3843 0102  
                       i1l3835 00CC                         i1l3827 0090                         i1l3819 0062  
                       i1l3685 2C10                         i1l3693 2B8E                         i1l3757 2D26  
                       i1l3861 0166                         i1l3853 013C                         i1l3837 00E8  
                       i1l3829 00A4                         i1l3687 2C1A                         i1l3679 2C08  
                       i1l3695 2B92                         i1l3759 2D28                         i1l3871 019E  
                       i1l3855 014E                         i1l3839 00EA                         i1l3847 0106  
                       i1l3689 2C1E                         i1l3697 2BA4                         i1l3881 01DC  
                       i1l3873 01B0                         i1l3857 0160                         i1l3849 0118  
                       i1l3875 01C2                         i1l3859 0162                         i1l3867 017A  
                       i1l3877 01C6                         i1l3869 018C                         i1l3879 01D8  
                       i2l3801 260E                         i2l3643 2E2E                         i2l3803 2620  
                       i2l3811 2654                         i2l3645 2E3C                         i2l3813 2658  
                       i2l3805 2630                         i2l3807 2644                         i2l3809 2650  
                       i2l3771 2A32                         i2l3765 29F2                         i2l3767 29FE  
                       i2l3769 2A2E                         i2l3793 25D0                         i2l3795 25DE  
                       i2l3797 25EC                         i2l3799 25FE                         _OSCCON 0FD3  
                vfpfcnvrt@done 008F                         _SSPADD 0FC8                         _SSPBUF 0FC9  
             __end_of___xxtofl 1FDE                         _Hi_ISR 0008                         _Lo_ISR 0018  
                 vfprintf@cfmt 009B                         ___flge 2154                      ??___fladd 00AF  
                    ??___fldiv 00BF                      ??___awdiv 0084                      ??___flneg 0084  
                    ??___awmod 0084                      ??___flmul 0096               ?_UART_Write_Text 0081  
                       _atan2f 09A0                      ??___flsub 00BF                         _atanhi 7CCF  
                       _atanlo 7CBF                ADC_Read@channel 0080                         _lenStr 0049  
                       fabsf@u 00D4                         fabsf@x 00D0                ADC_Read@digital 0084  
                       clear_0 2D7C                         clear_1 2D88               ___awdiv@quotient 0086  
              ___awmod@divisor 0082                         atanf@w 011D                         atanf@x 00D8  
                       atanf@z 0122                         isa$std 0001                ___awmod@counter 0084  
                       _strcpy 2A70                         _strlen 2D1E                         fputc@c 0080  
                    ?_I2C_Read 0001                      ?_I2C_Stop 0001                ___fpclassifyf@e 0088  
              ___fpclassifyf@u 008A                      ?_ADC_Read 0080                ___fpclassifyf@x 0080  
         _Check_Gyroscope$2064 00F6                   __mediumconst 7CBE                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8                         putch@c 0001  
            __end_of_Check_ADC 242C               __end_of_vfprintf 2B4A                      ??_sprintf 00A2  
                   ___flge@ff1 0080                ??___fpclassifyf 0084                     ___flge@ff2 0084  
                 ___xxtofl@arg 008A                   ___xxtofl@exp 0089              _SYSTEM_Initialize 2E42  
                 ___xxtofl@val 0080                     __accesstop 0080        __end_of__initialization 2D8E  
                   ___flneg@f1 0080             ?_SYSTEM_Initialize 0001                  ___rparam_used 0001  
            __end_of_GetString 2E84                  ?i1_UART_Write 0001                 __pcstackCOMRAM 0001  
          ??_SYSTEM_Initialize 0080                  __end_of_fabsf 2CB4                  __end_of_atanf 09A0  
                __end_of_fputc 27D2                  __end_of_pi_lo 7CF7                  __end_of_putch 2E86  
                   __end_of_pi 7CFB                _Check_Gyroscope 1FDE                     ??_I2C_Read 0080  
                   ??_I2C_Stop 0080                     ??_ADC_Read 0082                  ??_MyusartRead 0016  
                ?i2_UART_Write 0001                        ??_fabsf 00D4                        ??_atanf 00DC  
                      ??_fputc 0083      __end_of_SYSTEM_Initialize 2E54                        ??_putch 0080  
                   __pbssBANK1 0145          i1UART_Write_Text@text 0010                     _atanf$2070 0114  
                   _atanf$2071 0100                     _atanf$2072 0118                     _atanf$2073 0104  
                   _atanf$2074 0108                        ?_Hi_ISR 0001               i2UART_Write@data 0001  
                      ?_Lo_ISR 0001                 ??i1_UART_Write 000F             i2UART_Write_Text@i 0006  
                 I2C_Read@data 0081                        ?___flge 0080                        ?_atan2f 00DC  
                      _CCP1CON 0FBD                        ?_strcpy 0011                        ?_strlen 000F  
                    ?___xxtofl 0080                 ??i2_UART_Write 0001                   ??_UART_Write 0080  
                      _SSPCON1 0FC6                        _SSPCON2 0FC5                        _SSPSTAT 0FC7  
                 ?_ClearBuffer 0001            __end_of_MyusartRead 2BCC                      _I2C_Start 2E66  
                    _I2C_Write 2D9C                        __Hparam 0000                        __Lparam 0000  
                 Check_ADC@tmp 00B3                        ___fladd 0FCA        __end_of_Check_Gyroscope 2154  
                      ___fldiv 18AA                        ___awdiv 24F2                        ___flneg 2C44  
                      ___awmod 2676                        ___flmul 1482                        ___flsub 2ABC  
           __end_of_UART_Write 2E16                      ?_vfprintf 0097                        __pcinit 2D76  
                      __ramtop 0600                        __ptext0 2864                        __ptext1 27D2  
                      __ptext2 2E42                        __ptext3 2DC2                        __ptext4 2E78  
                      __ptext5 2D4C                        __ptext6 2DE4                        __ptext7 1FDE  
                      __ptext8 242C                        __ptext9 09A0          _OSCILLATOR_Initialize 2E78  
                      atan2f@m 0142                        atan2f@x 00E0                        atan2f@y 00DC  
                      atan2f@z 0136                     ??___xxtofl 0084               ___awmod@dividend 0080  
                      atanf@s1 010C                        atanf@s2 0110                        atanf@id 0121  
                      atanf@ix 0126                        _sprintf 2BCC                 __pintcode_body 25B6  
         end_of_initialization 2D8E                        fputc@fp 0082                  __Lmediumconst 7CBE  
                      int_func 25B6                     ?_I2C_Start 0001                     ?_I2C_Write 0001  
            __end_of_vfpfcnvrt 1E26                      _RCSTAbits 0FAB                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0092                     ??_vfprintf 009B       Check_ADC@bend_sensor_val 00BD  
                      strcpy@d 0016                        strlen@a 0011                        strlen@s 000F  
               UART_Write@data 0080                    ___fladd@grs 00B6          __end_of_displayBinary 2864  
                ___xxtofl@sign 0088                      _TRISAbits 0F92                      _TRISCbits 0F94  
                  _MyusartRead 2B8E           __end_ofi1_UART_Write 2E2C                    ___fldiv@grs 00CA  
                  ___fldiv@rem 00C3                    ___flmul@grs 009C                      _Check_ADC 235A  
                    _TXSTAbits 0FAC                 __end_of_Hi_ISR 2676                 __end_of_Lo_ISR 021C  
         __end_ofi2_UART_Write 2E42   __end_of_INTERRUPT_Initialize 2D76               ?_Check_Gyroscope 0143  
               __end_of___flge 225A                      _GetString 2E80                    vfpfcnvrt@ap 008C  
                  vfpfcnvrt@cp 0090                    vfpfcnvrt@fp 008A              i1_UART_Write_Text 2974  
               __end_of_atan2f 0FCA                    _BAUDCONbits 0FB8                 __end_of_atanhi 7CDF  
               __end_of_atanlo 7CCF                 _ADC_Initialize 2DE4         ?_OSCILLATOR_Initialize 0001  
           ?i1_UART_Write_Text 0010                 __end_of_strcpy 2ABC                 __end_of_strlen 2D4C  
          start_initialization 2D76                    __end_of_aT0 7CF3                    __end_of_aT1 7CEF  
                  __end_of_aT2 7CEB                    __end_of_aT3 7CE7                    __end_of_aT4 7CE3  
                  __end_of_abs 2CEA            ??i1_UART_Write_Text 0012                   ClearBuffer@i 000F  
            ??_UART_Initialize 0080                     ?_Check_ADC 00AE          __end_of___fpclassifyf 235A  
                     ??_Hi_ISR 0008                    ??_I2C_Start 0080              ??_calculate_angle 00F0  
                  ??_I2C_Write 0080                       ??_Lo_ISR 0017                    vfprintf@fmt 0098  
                     ??___flge 0088      __end_ofi1_UART_Write_Text 29F2                       ??_atan2f 00E4  
       __end_of_ADC_Initialize 2DFE                     ?_GetString 000F                    _atan2f$2067 012A  
                  _atan2f$2068 012E                    _atan2f$2069 0132                       ??_strcpy 0014  
                     ??_strlen 0011                main@blinker_dir 00FD                      ___fladd@a 00AB  
                    ___fladd@b 00A7               displayBinary@num 0080                      ___fldiv@a 00BB  
                    ___fldiv@b 00B7                      _accX_high 0188                      ___flmul@a 0092  
                    ___flmul@b 008E                      _accZ_high 0186                    __pbssCOMRAM 0037  
                    ___flsub@a 00BB                      ___flsub@b 00B7              i2_UART_Write_Text 29F2  
                __pcstackBANK0 0080                  __pcstackBANK1 0100             ?i2_UART_Write_Text 0002  
        i2UART_Write_Text@text 0002            ??i2_UART_Write_Text 0004                  Lo_ISR@command 0023  
                  I2C_Read@ack 0080                      __pintcode 0008                  __pmediumconst 7CBE  
                     ?___fladd 00A7                       ?___fldiv 00B7                       ?___awdiv 0080  
                     ?___flneg 0080                       ?___awmod 0080                       ?___flmul 008E  
                     ?___flsub 00B7                ?_ADC_Initialize 0001       main@prev_bend_sensor_val 00FB  
                  __pintcodelo 0018           _calculate_angle$2065 00F0      __end_ofi2_UART_Write_Text 2A70  
                    fabsf@F465 0037                       _I2C_Read 2B4A                       _I2C_Stop 2E54  
                     _ADC_Read 2CEA                       ?_sprintf 009D              ??_UART_Write_Text 0083  
         _INTERRUPT_Initialize 2D4C                    _isConnected 0183                    ??_Check_ADC 00B0  
                     _LATAbits 0F89                       _LATBbits 0F8A                       _IPR1bits 0F9F  
                     _PIE1bits 0F9D                       i1u401_20 2C3A                       i1u401_21 2C36  
                     i1u402_20 2BA4                       i1u402_21 2BA0                       i1u413_20 2AA8  
                     i1u413_27 2A9E                       i1u414_20 2ABA                       i1u430_20 00CC  
                     i1u414_21 2AB6                       i1u430_21 00C8                       i1u415_20 2D3E  
                     i1u431_20 00E8                       i1u415_21 2D3A                       i1u431_21 00E4  
                     i1u440_20 01C2                       i1u432_20 0118                       i1u440_21 01BE  
                     i1u432_21 0114                       i1u433_20 012A                       i1u425_20 0054  
                     i1u433_21 0126                       i1u425_21 0050                       i1u434_20 013C  
                     i1u426_20 0062                       i1u434_21 0138                       i1u426_21 005E  
                     i1u435_20 014E                       i1u427_20 007E                       i1u435_21 014A  
                     i1u427_21 007A                       i1u436_20 0160                       i1u428_20 0090  
                     i1u436_21 015C                       i1u428_21 008C                       i1u437_20 018C  
                     i1u429_20 00BA                       i1u437_21 0188                       i1u429_21 00B6  
                     i1u438_20 019E                       i1u438_21 019A                       i1u439_20 01B0  
                     i1u439_21 01AC                       i1u376_20 2E26                       i1u376_21 2E22  
                     i1u395_20 29AC                       i1u395_27 29A2                       i1u396_20 29E0  
                     i1u396_27 29D6                       i1u397_20 29F0                       i1u397_21 29EC  
                     i2u421_40 25DE                       i2u421_41 25DA                       i2u422_40 25FE  
                     i2u422_41 25FA                       i2u423_40 2620                       i2u423_41 261C  
                     i2u416_40 2A2A                       i2u424_40 2644                       i2u424_41 2640  
                     i2u416_47 2A20                       i2u417_40 2A5E                       _PIR1bits 0F9E  
                     i2u417_47 2A54                       i2u418_40 2A6E                       i2u418_41 2A6A  
                     i2u630_47 25E4                       i2u394_40 2E3C                       i2u394_41 2E38  
                    atanf@sign 011C                   i1_UART_Write 2E16                       _RCONbits 0FD0  
                  ??_GetString 0011                      _vfpfcnvrt 1C3C                     _ADCON0bits 0FC2  
   Check_Gyroscope@blinker_dir 0143                     _ADCON2bits 0FC0        MyusartRead@receivedData 0016  
                 ?_MyusartRead 0001                    _needSendMsg 0181                   i2_UART_Write 2E2C  
                   vfpfcnvrt@c 0096          ?_INTERRUPT_Initialize 0001               i1UART_Write@data 000F  
                     __Hrparam 0000                     vfprintf@ap 009A                       __Lrparam 0000  
                   vfprintf@fp 0097                  I2C_Write@data 0080        ??_OSCILLATOR_Initialize 0080  
                   ?_vfpfcnvrt 008A                       _accX_low 0187                       _accZ_low 0185  
           ___fpclassifyf@F465 003B                _UART_Initialize 2DC2                     sprintf@fmt 009E  
                     ___xxtofl 1E26                _calculate_angle 242C                   _pitch_offset 003F  
                     __ptext10 0220                       __ptext11 2C7E                       __ptext20 2D9C  
                     __ptext12 225A                       __ptext21 2E54                       __ptext13 2ABC  
                     __ptext30 2CB4                       __ptext22 2E66                       __ptext14 0FCA  
                     __ptext31 2676                       __ptext23 2B4A                       __ptext15 2C44  
                     __ptext40 2974                       __ptext32 24F2                       __ptext24 235A  
                     __ptext16 1482                       __ptext41 2E16                       __ptext33 28F0  
                     __ptext25 2BCC                       __ptext17 18AA                       __ptext42 2E80  
                     __ptext34 2DFE                       __ptext26 2B04                       __ptext18 1E26  
                     __ptext43 2C08                       __ptext35 2CEA                       __ptext27 1C3C  
                     __ptext19 2154                       __ptext28 2726                       __ptext45 29F2  
                     __ptext37 2D1E                       __ptext29 2E84                       __ptext46 2E2C  
                     __ptext38 2A70                       __ptext39 2B8E                     strcpy@dest 0011  
          UART_Write_Text@text 0081                       atan2f@ix 013A                       atan2f@iy 013E  
                     isa$xinst 0000                       int$flags 0060                       _vfprintf 2B04  
                     _mystring 004C                     _INTCONbits 0FF2         ??_INTERRUPT_Initialize 0080  
                ??_ClearBuffer 000F                       intlevel1 0000                       intlevel2 0000  
                    sprintf@ap 00A2                      strcpy@src 0012               ??_ADC_Initialize 0080  
      __end_of_UART_Initialize 2DE4                    ??_vfpfcnvrt 008D        __end_of_calculate_angle 24F2  
              _UART_Write_Text 28F0                       sprintf@f 00A3                       sprintf@s 009D  
                _displayBinary 27D2                     _UART_Write 2DFE                    _SSPCON2bits 0FC5  
                ___fladd@signs 00B3               UART_Write_Text@i 0085                   ___fladd@aexp 00B4  
                 ___fladd@bexp 00B5            calculate_angle@accX 00EC            calculate_angle@accZ 00EE  
          __end_of_ClearBuffer 2C44  
