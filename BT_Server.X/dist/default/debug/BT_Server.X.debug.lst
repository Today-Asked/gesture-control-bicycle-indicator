

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Jan 13 18:57:41 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Generated 25/07/2024 GMT
    37                           ; 
    38                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4520 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000FE0                     bsr             equ	4064
    71   000FE9                     fsr0            equ	4073
    72   000FEA                     fsr0h           equ	4074
    73   000FE9                     fsr0l           equ	4073
    74   000FE1                     fsr1            equ	4065
    75   000FE2                     fsr1h           equ	4066
    76   000FE1                     fsr1l           equ	4065
    77   000FD9                     fsr2            equ	4057
    78   000FDA                     fsr2h           equ	4058
    79   000FD9                     fsr2l           equ	4057
    80   000FEF                     indf0           equ	4079
    81   000FE7                     indf1           equ	4071
    82   000FDF                     indf2           equ	4063
    83   000FF2                     intcon          equ	4082
    84   000000                     nvmcon          equ	0
    85   000FF9                     pcl             equ	4089
    86   000FFA                     pclath          equ	4090
    87   000FFB                     pclatu          equ	4091
    88   000FEB                     plusw0          equ	4075
    89   000FE3                     plusw1          equ	4067
    90   000FDB                     plusw2          equ	4059
    91   000FED                     postdec0        equ	4077
    92   000FE5                     postdec1        equ	4069
    93   000FDD                     postdec2        equ	4061
    94   000FEE                     postinc0        equ	4078
    95   000FE6                     postinc1        equ	4070
    96   000FDE                     postinc2        equ	4062
    97   000FEC                     preinc0         equ	4076
    98   000FE4                     preinc1         equ	4068
    99   000FDC                     preinc2         equ	4060
   100   000FF3                     prod            equ	4083
   101   000FF4                     prodh           equ	4084
   102   000FF3                     prodl           equ	4083
   103   000FD8                     status          equ	4056
   104   000FF5                     tablat          equ	4085
   105   000FF6                     tblptr          equ	4086
   106   000FF7                     tblptrh         equ	4087
   107   000FF6                     tblptrl         equ	4086
   108   000FF8                     tblptru         equ	4088
   109   000FFD                     tosl            equ	4093
   110   000FE8                     wreg            equ	4072
   111   000F80                     PORTA           equ	3968	;# 
   112   000F81                     PORTB           equ	3969	;# 
   113   000F82                     PORTC           equ	3970	;# 
   114   000F83                     PORTD           equ	3971	;# 
   115   000F84                     PORTE           equ	3972	;# 
   116   000F89                     LATA            equ	3977	;# 
   117   000F8A                     LATB            equ	3978	;# 
   118   000F8B                     LATC            equ	3979	;# 
   119   000F8C                     LATD            equ	3980	;# 
   120   000F8D                     LATE            equ	3981	;# 
   121   000F92                     TRISA           equ	3986	;# 
   122   000F92                     DDRA            equ	3986	;# 
   123   000F93                     TRISB           equ	3987	;# 
   124   000F93                     DDRB            equ	3987	;# 
   125   000F94                     TRISC           equ	3988	;# 
   126   000F94                     DDRC            equ	3988	;# 
   127   000F95                     TRISD           equ	3989	;# 
   128   000F95                     DDRD            equ	3989	;# 
   129   000F96                     TRISE           equ	3990	;# 
   130   000F96                     DDRE            equ	3990	;# 
   131   000F9B                     OSCTUNE         equ	3995	;# 
   132   000F9D                     PIE1            equ	3997	;# 
   133   000F9E                     PIR1            equ	3998	;# 
   134   000F9F                     IPR1            equ	3999	;# 
   135   000FA0                     PIE2            equ	4000	;# 
   136   000FA1                     PIR2            equ	4001	;# 
   137   000FA2                     IPR2            equ	4002	;# 
   138   000FA6                     EECON1          equ	4006	;# 
   139   000FA7                     EECON2          equ	4007	;# 
   140   000FA8                     EEDATA          equ	4008	;# 
   141   000FA9                     EEADR           equ	4009	;# 
   142   000FAB                     RCSTA           equ	4011	;# 
   143   000FAB                     RCSTA1          equ	4011	;# 
   144   000FAC                     TXSTA           equ	4012	;# 
   145   000FAC                     TXSTA1          equ	4012	;# 
   146   000FAD                     TXREG           equ	4013	;# 
   147   000FAD                     TXREG1          equ	4013	;# 
   148   000FAE                     RCREG           equ	4014	;# 
   149   000FAE                     RCREG1          equ	4014	;# 
   150   000FAF                     SPBRG           equ	4015	;# 
   151   000FAF                     SPBRG1          equ	4015	;# 
   152   000FB0                     SPBRGH          equ	4016	;# 
   153   000FB1                     T3CON           equ	4017	;# 
   154   000FB2                     TMR3            equ	4018	;# 
   155   000FB2                     TMR3L           equ	4018	;# 
   156   000FB3                     TMR3H           equ	4019	;# 
   157   000FB4                     CMCON           equ	4020	;# 
   158   000FB5                     CVRCON          equ	4021	;# 
   159   000FB6                     ECCP1AS         equ	4022	;# 
   160   000FB6                     ECCPAS          equ	4022	;# 
   161   000FB7                     PWM1CON         equ	4023	;# 
   162   000FB7                     ECCP1DEL        equ	4023	;# 
   163   000FB8                     BAUDCON         equ	4024	;# 
   164   000FB8                     BAUDCTL         equ	4024	;# 
   165   000FBA                     CCP2CON         equ	4026	;# 
   166   000FBB                     CCPR2           equ	4027	;# 
   167   000FBB                     CCPR2L          equ	4027	;# 
   168   000FBC                     CCPR2H          equ	4028	;# 
   169   000FBD                     CCP1CON         equ	4029	;# 
   170   000FBE                     CCPR1           equ	4030	;# 
   171   000FBE                     CCPR1L          equ	4030	;# 
   172   000FBF                     CCPR1H          equ	4031	;# 
   173   000FC0                     ADCON2          equ	4032	;# 
   174   000FC1                     ADCON1          equ	4033	;# 
   175   000FC2                     ADCON0          equ	4034	;# 
   176   000FC3                     ADRES           equ	4035	;# 
   177   000FC3                     ADRESL          equ	4035	;# 
   178   000FC4                     ADRESH          equ	4036	;# 
   179   000FC5                     SSPCON2         equ	4037	;# 
   180   000FC6                     SSPCON1         equ	4038	;# 
   181   000FC7                     SSPSTAT         equ	4039	;# 
   182   000FC8                     SSPADD          equ	4040	;# 
   183   000FC9                     SSPBUF          equ	4041	;# 
   184   000FCA                     T2CON           equ	4042	;# 
   185   000FCB                     PR2             equ	4043	;# 
   186   000FCB                     MEMCON          equ	4043	;# 
   187   000FCC                     TMR2            equ	4044	;# 
   188   000FCD                     T1CON           equ	4045	;# 
   189   000FCE                     TMR1            equ	4046	;# 
   190   000FCE                     TMR1L           equ	4046	;# 
   191   000FCF                     TMR1H           equ	4047	;# 
   192   000FD0                     RCON            equ	4048	;# 
   193   000FD1                     WDTCON          equ	4049	;# 
   194   000FD2                     HLVDCON         equ	4050	;# 
   195   000FD2                     LVDCON          equ	4050	;# 
   196   000FD3                     OSCCON          equ	4051	;# 
   197   000FD5                     T0CON           equ	4053	;# 
   198   000FD6                     TMR0            equ	4054	;# 
   199   000FD6                     TMR0L           equ	4054	;# 
   200   000FD7                     TMR0H           equ	4055	;# 
   201   000FD8                     STATUS          equ	4056	;# 
   202   000FD9                     FSR2            equ	4057	;# 
   203   000FD9                     FSR2L           equ	4057	;# 
   204   000FDA                     FSR2H           equ	4058	;# 
   205   000FDB                     PLUSW2          equ	4059	;# 
   206   000FDC                     PREINC2         equ	4060	;# 
   207   000FDD                     POSTDEC2        equ	4061	;# 
   208   000FDE                     POSTINC2        equ	4062	;# 
   209   000FDF                     INDF2           equ	4063	;# 
   210   000FE0                     BSR             equ	4064	;# 
   211   000FE1                     FSR1            equ	4065	;# 
   212   000FE1                     FSR1L           equ	4065	;# 
   213   000FE2                     FSR1H           equ	4066	;# 
   214   000FE3                     PLUSW1          equ	4067	;# 
   215   000FE4                     PREINC1         equ	4068	;# 
   216   000FE5                     POSTDEC1        equ	4069	;# 
   217   000FE6                     POSTINC1        equ	4070	;# 
   218   000FE7                     INDF1           equ	4071	;# 
   219   000FE8                     WREG            equ	4072	;# 
   220   000FE9                     FSR0            equ	4073	;# 
   221   000FE9                     FSR0L           equ	4073	;# 
   222   000FEA                     FSR0H           equ	4074	;# 
   223   000FEB                     PLUSW0          equ	4075	;# 
   224   000FEC                     PREINC0         equ	4076	;# 
   225   000FED                     POSTDEC0        equ	4077	;# 
   226   000FEE                     POSTINC0        equ	4078	;# 
   227   000FEF                     INDF0           equ	4079	;# 
   228   000FF0                     INTCON3         equ	4080	;# 
   229   000FF1                     INTCON2         equ	4081	;# 
   230   000FF2                     INTCON          equ	4082	;# 
   231   000FF3                     PROD            equ	4083	;# 
   232   000FF3                     PRODL           equ	4083	;# 
   233   000FF4                     PRODH           equ	4084	;# 
   234   000FF5                     TABLAT          equ	4085	;# 
   235   000FF6                     TBLPTR          equ	4086	;# 
   236   000FF6                     TBLPTRL         equ	4086	;# 
   237   000FF7                     TBLPTRH         equ	4087	;# 
   238   000FF8                     TBLPTRU         equ	4088	;# 
   239   000FF9                     PCLAT           equ	4089	;# 
   240   000FF9                     PC              equ	4089	;# 
   241   000FF9                     PCL             equ	4089	;# 
   242   000FFA                     PCLATH          equ	4090	;# 
   243   000FFB                     PCLATU          equ	4091	;# 
   244   000FFC                     STKPTR          equ	4092	;# 
   245   000FFD                     TOS             equ	4093	;# 
   246   000FFD                     TOSL            equ	4093	;# 
   247   000FFE                     TOSH            equ	4094	;# 
   248   000FFF                     TOSU            equ	4095	;# 
   249   000F80                     PORTA           equ	3968	;# 
   250   000F81                     PORTB           equ	3969	;# 
   251   000F82                     PORTC           equ	3970	;# 
   252   000F83                     PORTD           equ	3971	;# 
   253   000F84                     PORTE           equ	3972	;# 
   254   000F89                     LATA            equ	3977	;# 
   255   000F8A                     LATB            equ	3978	;# 
   256   000F8B                     LATC            equ	3979	;# 
   257   000F8C                     LATD            equ	3980	;# 
   258   000F8D                     LATE            equ	3981	;# 
   259   000F92                     TRISA           equ	3986	;# 
   260   000F92                     DDRA            equ	3986	;# 
   261   000F93                     TRISB           equ	3987	;# 
   262   000F93                     DDRB            equ	3987	;# 
   263   000F94                     TRISC           equ	3988	;# 
   264   000F94                     DDRC            equ	3988	;# 
   265   000F95                     TRISD           equ	3989	;# 
   266   000F95                     DDRD            equ	3989	;# 
   267   000F96                     TRISE           equ	3990	;# 
   268   000F96                     DDRE            equ	3990	;# 
   269   000F9B                     OSCTUNE         equ	3995	;# 
   270   000F9D                     PIE1            equ	3997	;# 
   271   000F9E                     PIR1            equ	3998	;# 
   272   000F9F                     IPR1            equ	3999	;# 
   273   000FA0                     PIE2            equ	4000	;# 
   274   000FA1                     PIR2            equ	4001	;# 
   275   000FA2                     IPR2            equ	4002	;# 
   276   000FA6                     EECON1          equ	4006	;# 
   277   000FA7                     EECON2          equ	4007	;# 
   278   000FA8                     EEDATA          equ	4008	;# 
   279   000FA9                     EEADR           equ	4009	;# 
   280   000FAB                     RCSTA           equ	4011	;# 
   281   000FAB                     RCSTA1          equ	4011	;# 
   282   000FAC                     TXSTA           equ	4012	;# 
   283   000FAC                     TXSTA1          equ	4012	;# 
   284   000FAD                     TXREG           equ	4013	;# 
   285   000FAD                     TXREG1          equ	4013	;# 
   286   000FAE                     RCREG           equ	4014	;# 
   287   000FAE                     RCREG1          equ	4014	;# 
   288   000FAF                     SPBRG           equ	4015	;# 
   289   000FAF                     SPBRG1          equ	4015	;# 
   290   000FB0                     SPBRGH          equ	4016	;# 
   291   000FB1                     T3CON           equ	4017	;# 
   292   000FB2                     TMR3            equ	4018	;# 
   293   000FB2                     TMR3L           equ	4018	;# 
   294   000FB3                     TMR3H           equ	4019	;# 
   295   000FB4                     CMCON           equ	4020	;# 
   296   000FB5                     CVRCON          equ	4021	;# 
   297   000FB6                     ECCP1AS         equ	4022	;# 
   298   000FB6                     ECCPAS          equ	4022	;# 
   299   000FB7                     PWM1CON         equ	4023	;# 
   300   000FB7                     ECCP1DEL        equ	4023	;# 
   301   000FB8                     BAUDCON         equ	4024	;# 
   302   000FB8                     BAUDCTL         equ	4024	;# 
   303   000FBA                     CCP2CON         equ	4026	;# 
   304   000FBB                     CCPR2           equ	4027	;# 
   305   000FBB                     CCPR2L          equ	4027	;# 
   306   000FBC                     CCPR2H          equ	4028	;# 
   307   000FBD                     CCP1CON         equ	4029	;# 
   308   000FBE                     CCPR1           equ	4030	;# 
   309   000FBE                     CCPR1L          equ	4030	;# 
   310   000FBF                     CCPR1H          equ	4031	;# 
   311   000FC0                     ADCON2          equ	4032	;# 
   312   000FC1                     ADCON1          equ	4033	;# 
   313   000FC2                     ADCON0          equ	4034	;# 
   314   000FC3                     ADRES           equ	4035	;# 
   315   000FC3                     ADRESL          equ	4035	;# 
   316   000FC4                     ADRESH          equ	4036	;# 
   317   000FC5                     SSPCON2         equ	4037	;# 
   318   000FC6                     SSPCON1         equ	4038	;# 
   319   000FC7                     SSPSTAT         equ	4039	;# 
   320   000FC8                     SSPADD          equ	4040	;# 
   321   000FC9                     SSPBUF          equ	4041	;# 
   322   000FCA                     T2CON           equ	4042	;# 
   323   000FCB                     PR2             equ	4043	;# 
   324   000FCB                     MEMCON          equ	4043	;# 
   325   000FCC                     TMR2            equ	4044	;# 
   326   000FCD                     T1CON           equ	4045	;# 
   327   000FCE                     TMR1            equ	4046	;# 
   328   000FCE                     TMR1L           equ	4046	;# 
   329   000FCF                     TMR1H           equ	4047	;# 
   330   000FD0                     RCON            equ	4048	;# 
   331   000FD1                     WDTCON          equ	4049	;# 
   332   000FD2                     HLVDCON         equ	4050	;# 
   333   000FD2                     LVDCON          equ	4050	;# 
   334   000FD3                     OSCCON          equ	4051	;# 
   335   000FD5                     T0CON           equ	4053	;# 
   336   000FD6                     TMR0            equ	4054	;# 
   337   000FD6                     TMR0L           equ	4054	;# 
   338   000FD7                     TMR0H           equ	4055	;# 
   339   000FD8                     STATUS          equ	4056	;# 
   340   000FD9                     FSR2            equ	4057	;# 
   341   000FD9                     FSR2L           equ	4057	;# 
   342   000FDA                     FSR2H           equ	4058	;# 
   343   000FDB                     PLUSW2          equ	4059	;# 
   344   000FDC                     PREINC2         equ	4060	;# 
   345   000FDD                     POSTDEC2        equ	4061	;# 
   346   000FDE                     POSTINC2        equ	4062	;# 
   347   000FDF                     INDF2           equ	4063	;# 
   348   000FE0                     BSR             equ	4064	;# 
   349   000FE1                     FSR1            equ	4065	;# 
   350   000FE1                     FSR1L           equ	4065	;# 
   351   000FE2                     FSR1H           equ	4066	;# 
   352   000FE3                     PLUSW1          equ	4067	;# 
   353   000FE4                     PREINC1         equ	4068	;# 
   354   000FE5                     POSTDEC1        equ	4069	;# 
   355   000FE6                     POSTINC1        equ	4070	;# 
   356   000FE7                     INDF1           equ	4071	;# 
   357   000FE8                     WREG            equ	4072	;# 
   358   000FE9                     FSR0            equ	4073	;# 
   359   000FE9                     FSR0L           equ	4073	;# 
   360   000FEA                     FSR0H           equ	4074	;# 
   361   000FEB                     PLUSW0          equ	4075	;# 
   362   000FEC                     PREINC0         equ	4076	;# 
   363   000FED                     POSTDEC0        equ	4077	;# 
   364   000FEE                     POSTINC0        equ	4078	;# 
   365   000FEF                     INDF0           equ	4079	;# 
   366   000FF0                     INTCON3         equ	4080	;# 
   367   000FF1                     INTCON2         equ	4081	;# 
   368   000FF2                     INTCON          equ	4082	;# 
   369   000FF3                     PROD            equ	4083	;# 
   370   000FF3                     PRODL           equ	4083	;# 
   371   000FF4                     PRODH           equ	4084	;# 
   372   000FF5                     TABLAT          equ	4085	;# 
   373   000FF6                     TBLPTR          equ	4086	;# 
   374   000FF6                     TBLPTRL         equ	4086	;# 
   375   000FF7                     TBLPTRH         equ	4087	;# 
   376   000FF8                     TBLPTRU         equ	4088	;# 
   377   000FF9                     PCLAT           equ	4089	;# 
   378   000FF9                     PC              equ	4089	;# 
   379   000FF9                     PCL             equ	4089	;# 
   380   000FFA                     PCLATH          equ	4090	;# 
   381   000FFB                     PCLATU          equ	4091	;# 
   382   000FFC                     STKPTR          equ	4092	;# 
   383   000FFD                     TOS             equ	4093	;# 
   384   000FFD                     TOSL            equ	4093	;# 
   385   000FFE                     TOSH            equ	4094	;# 
   386   000FFF                     TOSU            equ	4095	;# 
   387   000F80                     PORTA           equ	3968	;# 
   388   000F81                     PORTB           equ	3969	;# 
   389   000F82                     PORTC           equ	3970	;# 
   390   000F83                     PORTD           equ	3971	;# 
   391   000F84                     PORTE           equ	3972	;# 
   392   000F89                     LATA            equ	3977	;# 
   393   000F8A                     LATB            equ	3978	;# 
   394   000F8B                     LATC            equ	3979	;# 
   395   000F8C                     LATD            equ	3980	;# 
   396   000F8D                     LATE            equ	3981	;# 
   397   000F92                     TRISA           equ	3986	;# 
   398   000F92                     DDRA            equ	3986	;# 
   399   000F93                     TRISB           equ	3987	;# 
   400   000F93                     DDRB            equ	3987	;# 
   401   000F94                     TRISC           equ	3988	;# 
   402   000F94                     DDRC            equ	3988	;# 
   403   000F95                     TRISD           equ	3989	;# 
   404   000F95                     DDRD            equ	3989	;# 
   405   000F96                     TRISE           equ	3990	;# 
   406   000F96                     DDRE            equ	3990	;# 
   407   000F9B                     OSCTUNE         equ	3995	;# 
   408   000F9D                     PIE1            equ	3997	;# 
   409   000F9E                     PIR1            equ	3998	;# 
   410   000F9F                     IPR1            equ	3999	;# 
   411   000FA0                     PIE2            equ	4000	;# 
   412   000FA1                     PIR2            equ	4001	;# 
   413   000FA2                     IPR2            equ	4002	;# 
   414   000FA6                     EECON1          equ	4006	;# 
   415   000FA7                     EECON2          equ	4007	;# 
   416   000FA8                     EEDATA          equ	4008	;# 
   417   000FA9                     EEADR           equ	4009	;# 
   418   000FAB                     RCSTA           equ	4011	;# 
   419   000FAB                     RCSTA1          equ	4011	;# 
   420   000FAC                     TXSTA           equ	4012	;# 
   421   000FAC                     TXSTA1          equ	4012	;# 
   422   000FAD                     TXREG           equ	4013	;# 
   423   000FAD                     TXREG1          equ	4013	;# 
   424   000FAE                     RCREG           equ	4014	;# 
   425   000FAE                     RCREG1          equ	4014	;# 
   426   000FAF                     SPBRG           equ	4015	;# 
   427   000FAF                     SPBRG1          equ	4015	;# 
   428   000FB0                     SPBRGH          equ	4016	;# 
   429   000FB1                     T3CON           equ	4017	;# 
   430   000FB2                     TMR3            equ	4018	;# 
   431   000FB2                     TMR3L           equ	4018	;# 
   432   000FB3                     TMR3H           equ	4019	;# 
   433   000FB4                     CMCON           equ	4020	;# 
   434   000FB5                     CVRCON          equ	4021	;# 
   435   000FB6                     ECCP1AS         equ	4022	;# 
   436   000FB6                     ECCPAS          equ	4022	;# 
   437   000FB7                     PWM1CON         equ	4023	;# 
   438   000FB7                     ECCP1DEL        equ	4023	;# 
   439   000FB8                     BAUDCON         equ	4024	;# 
   440   000FB8                     BAUDCTL         equ	4024	;# 
   441   000FBA                     CCP2CON         equ	4026	;# 
   442   000FBB                     CCPR2           equ	4027	;# 
   443   000FBB                     CCPR2L          equ	4027	;# 
   444   000FBC                     CCPR2H          equ	4028	;# 
   445   000FBD                     CCP1CON         equ	4029	;# 
   446   000FBE                     CCPR1           equ	4030	;# 
   447   000FBE                     CCPR1L          equ	4030	;# 
   448   000FBF                     CCPR1H          equ	4031	;# 
   449   000FC0                     ADCON2          equ	4032	;# 
   450   000FC1                     ADCON1          equ	4033	;# 
   451   000FC2                     ADCON0          equ	4034	;# 
   452   000FC3                     ADRES           equ	4035	;# 
   453   000FC3                     ADRESL          equ	4035	;# 
   454   000FC4                     ADRESH          equ	4036	;# 
   455   000FC5                     SSPCON2         equ	4037	;# 
   456   000FC6                     SSPCON1         equ	4038	;# 
   457   000FC7                     SSPSTAT         equ	4039	;# 
   458   000FC8                     SSPADD          equ	4040	;# 
   459   000FC9                     SSPBUF          equ	4041	;# 
   460   000FCA                     T2CON           equ	4042	;# 
   461   000FCB                     PR2             equ	4043	;# 
   462   000FCB                     MEMCON          equ	4043	;# 
   463   000FCC                     TMR2            equ	4044	;# 
   464   000FCD                     T1CON           equ	4045	;# 
   465   000FCE                     TMR1            equ	4046	;# 
   466   000FCE                     TMR1L           equ	4046	;# 
   467   000FCF                     TMR1H           equ	4047	;# 
   468   000FD0                     RCON            equ	4048	;# 
   469   000FD1                     WDTCON          equ	4049	;# 
   470   000FD2                     HLVDCON         equ	4050	;# 
   471   000FD2                     LVDCON          equ	4050	;# 
   472   000FD3                     OSCCON          equ	4051	;# 
   473   000FD5                     T0CON           equ	4053	;# 
   474   000FD6                     TMR0            equ	4054	;# 
   475   000FD6                     TMR0L           equ	4054	;# 
   476   000FD7                     TMR0H           equ	4055	;# 
   477   000FD8                     STATUS          equ	4056	;# 
   478   000FD9                     FSR2            equ	4057	;# 
   479   000FD9                     FSR2L           equ	4057	;# 
   480   000FDA                     FSR2H           equ	4058	;# 
   481   000FDB                     PLUSW2          equ	4059	;# 
   482   000FDC                     PREINC2         equ	4060	;# 
   483   000FDD                     POSTDEC2        equ	4061	;# 
   484   000FDE                     POSTINC2        equ	4062	;# 
   485   000FDF                     INDF2           equ	4063	;# 
   486   000FE0                     BSR             equ	4064	;# 
   487   000FE1                     FSR1            equ	4065	;# 
   488   000FE1                     FSR1L           equ	4065	;# 
   489   000FE2                     FSR1H           equ	4066	;# 
   490   000FE3                     PLUSW1          equ	4067	;# 
   491   000FE4                     PREINC1         equ	4068	;# 
   492   000FE5                     POSTDEC1        equ	4069	;# 
   493   000FE6                     POSTINC1        equ	4070	;# 
   494   000FE7                     INDF1           equ	4071	;# 
   495   000FE8                     WREG            equ	4072	;# 
   496   000FE9                     FSR0            equ	4073	;# 
   497   000FE9                     FSR0L           equ	4073	;# 
   498   000FEA                     FSR0H           equ	4074	;# 
   499   000FEB                     PLUSW0          equ	4075	;# 
   500   000FEC                     PREINC0         equ	4076	;# 
   501   000FED                     POSTDEC0        equ	4077	;# 
   502   000FEE                     POSTINC0        equ	4078	;# 
   503   000FEF                     INDF0           equ	4079	;# 
   504   000FF0                     INTCON3         equ	4080	;# 
   505   000FF1                     INTCON2         equ	4081	;# 
   506   000FF2                     INTCON          equ	4082	;# 
   507   000FF3                     PROD            equ	4083	;# 
   508   000FF3                     PRODL           equ	4083	;# 
   509   000FF4                     PRODH           equ	4084	;# 
   510   000FF5                     TABLAT          equ	4085	;# 
   511   000FF6                     TBLPTR          equ	4086	;# 
   512   000FF6                     TBLPTRL         equ	4086	;# 
   513   000FF7                     TBLPTRH         equ	4087	;# 
   514   000FF8                     TBLPTRU         equ	4088	;# 
   515   000FF9                     PCLAT           equ	4089	;# 
   516   000FF9                     PC              equ	4089	;# 
   517   000FF9                     PCL             equ	4089	;# 
   518   000FFA                     PCLATH          equ	4090	;# 
   519   000FFB                     PCLATU          equ	4091	;# 
   520   000FFC                     STKPTR          equ	4092	;# 
   521   000FFD                     TOS             equ	4093	;# 
   522   000FFD                     TOSL            equ	4093	;# 
   523   000FFE                     TOSH            equ	4094	;# 
   524   000FFF                     TOSU            equ	4095	;# 
   525   000F80                     PORTA           equ	3968	;# 
   526   000F81                     PORTB           equ	3969	;# 
   527   000F82                     PORTC           equ	3970	;# 
   528   000F83                     PORTD           equ	3971	;# 
   529   000F84                     PORTE           equ	3972	;# 
   530   000F89                     LATA            equ	3977	;# 
   531   000F8A                     LATB            equ	3978	;# 
   532   000F8B                     LATC            equ	3979	;# 
   533   000F8C                     LATD            equ	3980	;# 
   534   000F8D                     LATE            equ	3981	;# 
   535   000F92                     TRISA           equ	3986	;# 
   536   000F92                     DDRA            equ	3986	;# 
   537   000F93                     TRISB           equ	3987	;# 
   538   000F93                     DDRB            equ	3987	;# 
   539   000F94                     TRISC           equ	3988	;# 
   540   000F94                     DDRC            equ	3988	;# 
   541   000F95                     TRISD           equ	3989	;# 
   542   000F95                     DDRD            equ	3989	;# 
   543   000F96                     TRISE           equ	3990	;# 
   544   000F96                     DDRE            equ	3990	;# 
   545   000F9B                     OSCTUNE         equ	3995	;# 
   546   000F9D                     PIE1            equ	3997	;# 
   547   000F9E                     PIR1            equ	3998	;# 
   548   000F9F                     IPR1            equ	3999	;# 
   549   000FA0                     PIE2            equ	4000	;# 
   550   000FA1                     PIR2            equ	4001	;# 
   551   000FA2                     IPR2            equ	4002	;# 
   552   000FA6                     EECON1          equ	4006	;# 
   553   000FA7                     EECON2          equ	4007	;# 
   554   000FA8                     EEDATA          equ	4008	;# 
   555   000FA9                     EEADR           equ	4009	;# 
   556   000FAB                     RCSTA           equ	4011	;# 
   557   000FAB                     RCSTA1          equ	4011	;# 
   558   000FAC                     TXSTA           equ	4012	;# 
   559   000FAC                     TXSTA1          equ	4012	;# 
   560   000FAD                     TXREG           equ	4013	;# 
   561   000FAD                     TXREG1          equ	4013	;# 
   562   000FAE                     RCREG           equ	4014	;# 
   563   000FAE                     RCREG1          equ	4014	;# 
   564   000FAF                     SPBRG           equ	4015	;# 
   565   000FAF                     SPBRG1          equ	4015	;# 
   566   000FB0                     SPBRGH          equ	4016	;# 
   567   000FB1                     T3CON           equ	4017	;# 
   568   000FB2                     TMR3            equ	4018	;# 
   569   000FB2                     TMR3L           equ	4018	;# 
   570   000FB3                     TMR3H           equ	4019	;# 
   571   000FB4                     CMCON           equ	4020	;# 
   572   000FB5                     CVRCON          equ	4021	;# 
   573   000FB6                     ECCP1AS         equ	4022	;# 
   574   000FB6                     ECCPAS          equ	4022	;# 
   575   000FB7                     PWM1CON         equ	4023	;# 
   576   000FB7                     ECCP1DEL        equ	4023	;# 
   577   000FB8                     BAUDCON         equ	4024	;# 
   578   000FB8                     BAUDCTL         equ	4024	;# 
   579   000FBA                     CCP2CON         equ	4026	;# 
   580   000FBB                     CCPR2           equ	4027	;# 
   581   000FBB                     CCPR2L          equ	4027	;# 
   582   000FBC                     CCPR2H          equ	4028	;# 
   583   000FBD                     CCP1CON         equ	4029	;# 
   584   000FBE                     CCPR1           equ	4030	;# 
   585   000FBE                     CCPR1L          equ	4030	;# 
   586   000FBF                     CCPR1H          equ	4031	;# 
   587   000FC0                     ADCON2          equ	4032	;# 
   588   000FC1                     ADCON1          equ	4033	;# 
   589   000FC2                     ADCON0          equ	4034	;# 
   590   000FC3                     ADRES           equ	4035	;# 
   591   000FC3                     ADRESL          equ	4035	;# 
   592   000FC4                     ADRESH          equ	4036	;# 
   593   000FC5                     SSPCON2         equ	4037	;# 
   594   000FC6                     SSPCON1         equ	4038	;# 
   595   000FC7                     SSPSTAT         equ	4039	;# 
   596   000FC8                     SSPADD          equ	4040	;# 
   597   000FC9                     SSPBUF          equ	4041	;# 
   598   000FCA                     T2CON           equ	4042	;# 
   599   000FCB                     PR2             equ	4043	;# 
   600   000FCB                     MEMCON          equ	4043	;# 
   601   000FCC                     TMR2            equ	4044	;# 
   602   000FCD                     T1CON           equ	4045	;# 
   603   000FCE                     TMR1            equ	4046	;# 
   604   000FCE                     TMR1L           equ	4046	;# 
   605   000FCF                     TMR1H           equ	4047	;# 
   606   000FD0                     RCON            equ	4048	;# 
   607   000FD1                     WDTCON          equ	4049	;# 
   608   000FD2                     HLVDCON         equ	4050	;# 
   609   000FD2                     LVDCON          equ	4050	;# 
   610   000FD3                     OSCCON          equ	4051	;# 
   611   000FD5                     T0CON           equ	4053	;# 
   612   000FD6                     TMR0            equ	4054	;# 
   613   000FD6                     TMR0L           equ	4054	;# 
   614   000FD7                     TMR0H           equ	4055	;# 
   615   000FD8                     STATUS          equ	4056	;# 
   616   000FD9                     FSR2            equ	4057	;# 
   617   000FD9                     FSR2L           equ	4057	;# 
   618   000FDA                     FSR2H           equ	4058	;# 
   619   000FDB                     PLUSW2          equ	4059	;# 
   620   000FDC                     PREINC2         equ	4060	;# 
   621   000FDD                     POSTDEC2        equ	4061	;# 
   622   000FDE                     POSTINC2        equ	4062	;# 
   623   000FDF                     INDF2           equ	4063	;# 
   624   000FE0                     BSR             equ	4064	;# 
   625   000FE1                     FSR1            equ	4065	;# 
   626   000FE1                     FSR1L           equ	4065	;# 
   627   000FE2                     FSR1H           equ	4066	;# 
   628   000FE3                     PLUSW1          equ	4067	;# 
   629   000FE4                     PREINC1         equ	4068	;# 
   630   000FE5                     POSTDEC1        equ	4069	;# 
   631   000FE6                     POSTINC1        equ	4070	;# 
   632   000FE7                     INDF1           equ	4071	;# 
   633   000FE8                     WREG            equ	4072	;# 
   634   000FE9                     FSR0            equ	4073	;# 
   635   000FE9                     FSR0L           equ	4073	;# 
   636   000FEA                     FSR0H           equ	4074	;# 
   637   000FEB                     PLUSW0          equ	4075	;# 
   638   000FEC                     PREINC0         equ	4076	;# 
   639   000FED                     POSTDEC0        equ	4077	;# 
   640   000FEE                     POSTINC0        equ	4078	;# 
   641   000FEF                     INDF0           equ	4079	;# 
   642   000FF0                     INTCON3         equ	4080	;# 
   643   000FF1                     INTCON2         equ	4081	;# 
   644   000FF2                     INTCON          equ	4082	;# 
   645   000FF3                     PROD            equ	4083	;# 
   646   000FF3                     PRODL           equ	4083	;# 
   647   000FF4                     PRODH           equ	4084	;# 
   648   000FF5                     TABLAT          equ	4085	;# 
   649   000FF6                     TBLPTR          equ	4086	;# 
   650   000FF6                     TBLPTRL         equ	4086	;# 
   651   000FF7                     TBLPTRH         equ	4087	;# 
   652   000FF8                     TBLPTRU         equ	4088	;# 
   653   000FF9                     PCLAT           equ	4089	;# 
   654   000FF9                     PC              equ	4089	;# 
   655   000FF9                     PCL             equ	4089	;# 
   656   000FFA                     PCLATH          equ	4090	;# 
   657   000FFB                     PCLATU          equ	4091	;# 
   658   000FFC                     STKPTR          equ	4092	;# 
   659   000FFD                     TOS             equ	4093	;# 
   660   000FFD                     TOSL            equ	4093	;# 
   661   000FFE                     TOSH            equ	4094	;# 
   662   000FFF                     TOSU            equ	4095	;# 
   663   000F80                     PORTA           equ	3968	;# 
   664   000F81                     PORTB           equ	3969	;# 
   665   000F82                     PORTC           equ	3970	;# 
   666   000F83                     PORTD           equ	3971	;# 
   667   000F84                     PORTE           equ	3972	;# 
   668   000F89                     LATA            equ	3977	;# 
   669   000F8A                     LATB            equ	3978	;# 
   670   000F8B                     LATC            equ	3979	;# 
   671   000F8C                     LATD            equ	3980	;# 
   672   000F8D                     LATE            equ	3981	;# 
   673   000F92                     TRISA           equ	3986	;# 
   674   000F92                     DDRA            equ	3986	;# 
   675   000F93                     TRISB           equ	3987	;# 
   676   000F93                     DDRB            equ	3987	;# 
   677   000F94                     TRISC           equ	3988	;# 
   678   000F94                     DDRC            equ	3988	;# 
   679   000F95                     TRISD           equ	3989	;# 
   680   000F95                     DDRD            equ	3989	;# 
   681   000F96                     TRISE           equ	3990	;# 
   682   000F96                     DDRE            equ	3990	;# 
   683   000F9B                     OSCTUNE         equ	3995	;# 
   684   000F9D                     PIE1            equ	3997	;# 
   685   000F9E                     PIR1            equ	3998	;# 
   686   000F9F                     IPR1            equ	3999	;# 
   687   000FA0                     PIE2            equ	4000	;# 
   688   000FA1                     PIR2            equ	4001	;# 
   689   000FA2                     IPR2            equ	4002	;# 
   690   000FA6                     EECON1          equ	4006	;# 
   691   000FA7                     EECON2          equ	4007	;# 
   692   000FA8                     EEDATA          equ	4008	;# 
   693   000FA9                     EEADR           equ	4009	;# 
   694   000FAB                     RCSTA           equ	4011	;# 
   695   000FAB                     RCSTA1          equ	4011	;# 
   696   000FAC                     TXSTA           equ	4012	;# 
   697   000FAC                     TXSTA1          equ	4012	;# 
   698   000FAD                     TXREG           equ	4013	;# 
   699   000FAD                     TXREG1          equ	4013	;# 
   700   000FAE                     RCREG           equ	4014	;# 
   701   000FAE                     RCREG1          equ	4014	;# 
   702   000FAF                     SPBRG           equ	4015	;# 
   703   000FAF                     SPBRG1          equ	4015	;# 
   704   000FB0                     SPBRGH          equ	4016	;# 
   705   000FB1                     T3CON           equ	4017	;# 
   706   000FB2                     TMR3            equ	4018	;# 
   707   000FB2                     TMR3L           equ	4018	;# 
   708   000FB3                     TMR3H           equ	4019	;# 
   709   000FB4                     CMCON           equ	4020	;# 
   710   000FB5                     CVRCON          equ	4021	;# 
   711   000FB6                     ECCP1AS         equ	4022	;# 
   712   000FB6                     ECCPAS          equ	4022	;# 
   713   000FB7                     PWM1CON         equ	4023	;# 
   714   000FB7                     ECCP1DEL        equ	4023	;# 
   715   000FB8                     BAUDCON         equ	4024	;# 
   716   000FB8                     BAUDCTL         equ	4024	;# 
   717   000FBA                     CCP2CON         equ	4026	;# 
   718   000FBB                     CCPR2           equ	4027	;# 
   719   000FBB                     CCPR2L          equ	4027	;# 
   720   000FBC                     CCPR2H          equ	4028	;# 
   721   000FBD                     CCP1CON         equ	4029	;# 
   722   000FBE                     CCPR1           equ	4030	;# 
   723   000FBE                     CCPR1L          equ	4030	;# 
   724   000FBF                     CCPR1H          equ	4031	;# 
   725   000FC0                     ADCON2          equ	4032	;# 
   726   000FC1                     ADCON1          equ	4033	;# 
   727   000FC2                     ADCON0          equ	4034	;# 
   728   000FC3                     ADRES           equ	4035	;# 
   729   000FC3                     ADRESL          equ	4035	;# 
   730   000FC4                     ADRESH          equ	4036	;# 
   731   000FC5                     SSPCON2         equ	4037	;# 
   732   000FC6                     SSPCON1         equ	4038	;# 
   733   000FC7                     SSPSTAT         equ	4039	;# 
   734   000FC8                     SSPADD          equ	4040	;# 
   735   000FC9                     SSPBUF          equ	4041	;# 
   736   000FCA                     T2CON           equ	4042	;# 
   737   000FCB                     PR2             equ	4043	;# 
   738   000FCB                     MEMCON          equ	4043	;# 
   739   000FCC                     TMR2            equ	4044	;# 
   740   000FCD                     T1CON           equ	4045	;# 
   741   000FCE                     TMR1            equ	4046	;# 
   742   000FCE                     TMR1L           equ	4046	;# 
   743   000FCF                     TMR1H           equ	4047	;# 
   744   000FD0                     RCON            equ	4048	;# 
   745   000FD1                     WDTCON          equ	4049	;# 
   746   000FD2                     HLVDCON         equ	4050	;# 
   747   000FD2                     LVDCON          equ	4050	;# 
   748   000FD3                     OSCCON          equ	4051	;# 
   749   000FD5                     T0CON           equ	4053	;# 
   750   000FD6                     TMR0            equ	4054	;# 
   751   000FD6                     TMR0L           equ	4054	;# 
   752   000FD7                     TMR0H           equ	4055	;# 
   753   000FD8                     STATUS          equ	4056	;# 
   754   000FD9                     FSR2            equ	4057	;# 
   755   000FD9                     FSR2L           equ	4057	;# 
   756   000FDA                     FSR2H           equ	4058	;# 
   757   000FDB                     PLUSW2          equ	4059	;# 
   758   000FDC                     PREINC2         equ	4060	;# 
   759   000FDD                     POSTDEC2        equ	4061	;# 
   760   000FDE                     POSTINC2        equ	4062	;# 
   761   000FDF                     INDF2           equ	4063	;# 
   762   000FE0                     BSR             equ	4064	;# 
   763   000FE1                     FSR1            equ	4065	;# 
   764   000FE1                     FSR1L           equ	4065	;# 
   765   000FE2                     FSR1H           equ	4066	;# 
   766   000FE3                     PLUSW1          equ	4067	;# 
   767   000FE4                     PREINC1         equ	4068	;# 
   768   000FE5                     POSTDEC1        equ	4069	;# 
   769   000FE6                     POSTINC1        equ	4070	;# 
   770   000FE7                     INDF1           equ	4071	;# 
   771   000FE8                     WREG            equ	4072	;# 
   772   000FE9                     FSR0            equ	4073	;# 
   773   000FE9                     FSR0L           equ	4073	;# 
   774   000FEA                     FSR0H           equ	4074	;# 
   775   000FEB                     PLUSW0          equ	4075	;# 
   776   000FEC                     PREINC0         equ	4076	;# 
   777   000FED                     POSTDEC0        equ	4077	;# 
   778   000FEE                     POSTINC0        equ	4078	;# 
   779   000FEF                     INDF0           equ	4079	;# 
   780   000FF0                     INTCON3         equ	4080	;# 
   781   000FF1                     INTCON2         equ	4081	;# 
   782   000FF2                     INTCON          equ	4082	;# 
   783   000FF3                     PROD            equ	4083	;# 
   784   000FF3                     PRODL           equ	4083	;# 
   785   000FF4                     PRODH           equ	4084	;# 
   786   000FF5                     TABLAT          equ	4085	;# 
   787   000FF6                     TBLPTR          equ	4086	;# 
   788   000FF6                     TBLPTRL         equ	4086	;# 
   789   000FF7                     TBLPTRH         equ	4087	;# 
   790   000FF8                     TBLPTRU         equ	4088	;# 
   791   000FF9                     PCLAT           equ	4089	;# 
   792   000FF9                     PC              equ	4089	;# 
   793   000FF9                     PCL             equ	4089	;# 
   794   000FFA                     PCLATH          equ	4090	;# 
   795   000FFB                     PCLATU          equ	4091	;# 
   796   000FFC                     STKPTR          equ	4092	;# 
   797   000FFD                     TOS             equ	4093	;# 
   798   000FFD                     TOSL            equ	4093	;# 
   799   000FFE                     TOSH            equ	4094	;# 
   800   000FFF                     TOSU            equ	4095	;# 
   801   000F80                     PORTA           equ	3968	;# 
   802   000F81                     PORTB           equ	3969	;# 
   803   000F82                     PORTC           equ	3970	;# 
   804   000F83                     PORTD           equ	3971	;# 
   805   000F84                     PORTE           equ	3972	;# 
   806   000F89                     LATA            equ	3977	;# 
   807   000F8A                     LATB            equ	3978	;# 
   808   000F8B                     LATC            equ	3979	;# 
   809   000F8C                     LATD            equ	3980	;# 
   810   000F8D                     LATE            equ	3981	;# 
   811   000F92                     TRISA           equ	3986	;# 
   812   000F92                     DDRA            equ	3986	;# 
   813   000F93                     TRISB           equ	3987	;# 
   814   000F93                     DDRB            equ	3987	;# 
   815   000F94                     TRISC           equ	3988	;# 
   816   000F94                     DDRC            equ	3988	;# 
   817   000F95                     TRISD           equ	3989	;# 
   818   000F95                     DDRD            equ	3989	;# 
   819   000F96                     TRISE           equ	3990	;# 
   820   000F96                     DDRE            equ	3990	;# 
   821   000F9B                     OSCTUNE         equ	3995	;# 
   822   000F9D                     PIE1            equ	3997	;# 
   823   000F9E                     PIR1            equ	3998	;# 
   824   000F9F                     IPR1            equ	3999	;# 
   825   000FA0                     PIE2            equ	4000	;# 
   826   000FA1                     PIR2            equ	4001	;# 
   827   000FA2                     IPR2            equ	4002	;# 
   828   000FA6                     EECON1          equ	4006	;# 
   829   000FA7                     EECON2          equ	4007	;# 
   830   000FA8                     EEDATA          equ	4008	;# 
   831   000FA9                     EEADR           equ	4009	;# 
   832   000FAB                     RCSTA           equ	4011	;# 
   833   000FAB                     RCSTA1          equ	4011	;# 
   834   000FAC                     TXSTA           equ	4012	;# 
   835   000FAC                     TXSTA1          equ	4012	;# 
   836   000FAD                     TXREG           equ	4013	;# 
   837   000FAD                     TXREG1          equ	4013	;# 
   838   000FAE                     RCREG           equ	4014	;# 
   839   000FAE                     RCREG1          equ	4014	;# 
   840   000FAF                     SPBRG           equ	4015	;# 
   841   000FAF                     SPBRG1          equ	4015	;# 
   842   000FB0                     SPBRGH          equ	4016	;# 
   843   000FB1                     T3CON           equ	4017	;# 
   844   000FB2                     TMR3            equ	4018	;# 
   845   000FB2                     TMR3L           equ	4018	;# 
   846   000FB3                     TMR3H           equ	4019	;# 
   847   000FB4                     CMCON           equ	4020	;# 
   848   000FB5                     CVRCON          equ	4021	;# 
   849   000FB6                     ECCP1AS         equ	4022	;# 
   850   000FB6                     ECCPAS          equ	4022	;# 
   851   000FB7                     PWM1CON         equ	4023	;# 
   852   000FB7                     ECCP1DEL        equ	4023	;# 
   853   000FB8                     BAUDCON         equ	4024	;# 
   854   000FB8                     BAUDCTL         equ	4024	;# 
   855   000FBA                     CCP2CON         equ	4026	;# 
   856   000FBB                     CCPR2           equ	4027	;# 
   857   000FBB                     CCPR2L          equ	4027	;# 
   858   000FBC                     CCPR2H          equ	4028	;# 
   859   000FBD                     CCP1CON         equ	4029	;# 
   860   000FBE                     CCPR1           equ	4030	;# 
   861   000FBE                     CCPR1L          equ	4030	;# 
   862   000FBF                     CCPR1H          equ	4031	;# 
   863   000FC0                     ADCON2          equ	4032	;# 
   864   000FC1                     ADCON1          equ	4033	;# 
   865   000FC2                     ADCON0          equ	4034	;# 
   866   000FC3                     ADRES           equ	4035	;# 
   867   000FC3                     ADRESL          equ	4035	;# 
   868   000FC4                     ADRESH          equ	4036	;# 
   869   000FC5                     SSPCON2         equ	4037	;# 
   870   000FC6                     SSPCON1         equ	4038	;# 
   871   000FC7                     SSPSTAT         equ	4039	;# 
   872   000FC8                     SSPADD          equ	4040	;# 
   873   000FC9                     SSPBUF          equ	4041	;# 
   874   000FCA                     T2CON           equ	4042	;# 
   875   000FCB                     PR2             equ	4043	;# 
   876   000FCB                     MEMCON          equ	4043	;# 
   877   000FCC                     TMR2            equ	4044	;# 
   878   000FCD                     T1CON           equ	4045	;# 
   879   000FCE                     TMR1            equ	4046	;# 
   880   000FCE                     TMR1L           equ	4046	;# 
   881   000FCF                     TMR1H           equ	4047	;# 
   882   000FD0                     RCON            equ	4048	;# 
   883   000FD1                     WDTCON          equ	4049	;# 
   884   000FD2                     HLVDCON         equ	4050	;# 
   885   000FD2                     LVDCON          equ	4050	;# 
   886   000FD3                     OSCCON          equ	4051	;# 
   887   000FD5                     T0CON           equ	4053	;# 
   888   000FD6                     TMR0            equ	4054	;# 
   889   000FD6                     TMR0L           equ	4054	;# 
   890   000FD7                     TMR0H           equ	4055	;# 
   891   000FD8                     STATUS          equ	4056	;# 
   892   000FD9                     FSR2            equ	4057	;# 
   893   000FD9                     FSR2L           equ	4057	;# 
   894   000FDA                     FSR2H           equ	4058	;# 
   895   000FDB                     PLUSW2          equ	4059	;# 
   896   000FDC                     PREINC2         equ	4060	;# 
   897   000FDD                     POSTDEC2        equ	4061	;# 
   898   000FDE                     POSTINC2        equ	4062	;# 
   899   000FDF                     INDF2           equ	4063	;# 
   900   000FE0                     BSR             equ	4064	;# 
   901   000FE1                     FSR1            equ	4065	;# 
   902   000FE1                     FSR1L           equ	4065	;# 
   903   000FE2                     FSR1H           equ	4066	;# 
   904   000FE3                     PLUSW1          equ	4067	;# 
   905   000FE4                     PREINC1         equ	4068	;# 
   906   000FE5                     POSTDEC1        equ	4069	;# 
   907   000FE6                     POSTINC1        equ	4070	;# 
   908   000FE7                     INDF1           equ	4071	;# 
   909   000FE8                     WREG            equ	4072	;# 
   910   000FE9                     FSR0            equ	4073	;# 
   911   000FE9                     FSR0L           equ	4073	;# 
   912   000FEA                     FSR0H           equ	4074	;# 
   913   000FEB                     PLUSW0          equ	4075	;# 
   914   000FEC                     PREINC0         equ	4076	;# 
   915   000FED                     POSTDEC0        equ	4077	;# 
   916   000FEE                     POSTINC0        equ	4078	;# 
   917   000FEF                     INDF0           equ	4079	;# 
   918   000FF0                     INTCON3         equ	4080	;# 
   919   000FF1                     INTCON2         equ	4081	;# 
   920   000FF2                     INTCON          equ	4082	;# 
   921   000FF3                     PROD            equ	4083	;# 
   922   000FF3                     PRODL           equ	4083	;# 
   923   000FF4                     PRODH           equ	4084	;# 
   924   000FF5                     TABLAT          equ	4085	;# 
   925   000FF6                     TBLPTR          equ	4086	;# 
   926   000FF6                     TBLPTRL         equ	4086	;# 
   927   000FF7                     TBLPTRH         equ	4087	;# 
   928   000FF8                     TBLPTRU         equ	4088	;# 
   929   000FF9                     PCLAT           equ	4089	;# 
   930   000FF9                     PC              equ	4089	;# 
   931   000FF9                     PCL             equ	4089	;# 
   932   000FFA                     PCLATH          equ	4090	;# 
   933   000FFB                     PCLATU          equ	4091	;# 
   934   000FFC                     STKPTR          equ	4092	;# 
   935   000FFD                     TOS             equ	4093	;# 
   936   000FFD                     TOSL            equ	4093	;# 
   937   000FFE                     TOSH            equ	4094	;# 
   938   000FFF                     TOSU            equ	4095	;# 
   939   007D5C                     _CREN           set	32092
   940   007CF5                     _RCIF           set	31989
   941   007E9C                     _IRCF0          set	32412
   942   007E9D                     _IRCF1          set	32413
   943   007E9E                     _IRCF2          set	32414
   944   007E07                     _ADFM           set	32263
   945   000F8A                     _LATBbits       set	3978
   946   000F93                     _TRISB          set	3987
   947   000F92                     _TRISAbits      set	3986
   948   000F89                     _LATA           set	3977
   949   000F89                     _LATAbits       set	3977
   950   000F94                     _TRISCbits      set	3988
   951   000F92                     _TRISA          set	3986
   952   000FAE                     _RCREG          set	4014
   953   000FAD                     _TXREG          set	4013
   954   000F9D                     _PIE1bits       set	3997
   955   000FAB                     _RCSTAbits      set	4011
   956   000FAF                     _SPBRG          set	4015
   957   000FB8                     _BAUDCONbits    set	4024
   958   000FAC                     _TXSTAbits      set	4012
   959   000FD0                     _RCONbits       set	4048
   960   000F9F                     _IPR1bits       set	3999
   961   000F9E                     _PIR1bits       set	3998
   962   000FBD                     _CCP1CON        set	4029
   963   000FC2                     _ADCON0bits     set	4034
   964   000FC3                     _ADRESL         set	4035
   965   000FC4                     _ADRESH         set	4036
   966   000FC0                     _ADCON2bits     set	4032
   967   000FC1                     _ADCON1         set	4033
   968   000FF2                     _INTCONbits     set	4082
   969                           
   970                           	psect	smallconst
   971   000600                     __psmallconst:
   972                           	callstack 0
   973   000600  00                 	db	0
   974   000601                     STR_5:
   975   000601  41                 	db	65	;'A'
   976   000602  54                 	db	84	;'T'
   977   000603  2B                 	db	43
   978   000604  43                 	db	67	;'C'
   979   000605  4F                 	db	79	;'O'
   980   000606  4E                 	db	78	;'N'
   981   000607  4E                 	db	78	;'N'
   982   000608  31                 	db	49	;'1'
   983   000609  0D                 	db	13
   984   00060A  0A                 	db	10
   985   00060B  00                 	db	0
   986   00060C                     STR_4:
   987   00060C  41                 	db	65	;'A'
   988   00060D  54                 	db	84	;'T'
   989   00060E  2B                 	db	43
   990   00060F  49                 	db	73	;'I'
   991   000610  4E                 	db	78	;'N'
   992   000611  51                 	db	81	;'Q'
   993   000612  0D                 	db	13
   994   000613  0A                 	db	10
   995   000614  00                 	db	0
   996   000615                     STR_2:
   997   000615  4C                 	db	76	;'L'
   998   000616  52                 	db	82	;'R'
   999   000617  4E                 	db	78	;'N'
  1000   000618  0D                 	db	13
  1001   000619  0A                 	db	10
  1002   00061A  00                 	db	0
  1003   00061B                     STR_3:
  1004   00061B  41                 	db	65	;'A'
  1005   00061C  54                 	db	84	;'T'
  1006   00061D  0D                 	db	13
  1007   00061E  0A                 	db	10
  1008   00061F  00                 	db	0
  1009   000609                     STR_1           equ	STR_5+8
  1010   00060B                     STR_6           equ	STR_5+10
  1011   00060B                     STR_7           equ	STR_5+10
  1012   00060B                     STR_8           equ	STR_5+10
  1013   000620  00                 	db	0	; dummy byte at the end
  1014   000002                     __activetblptr  equ	2
  1015                           
  1016                           ; #config settings
  1017                           
  1018                           	psect	cinit
  1019   0009C0                     __pcinit:
  1020                           	callstack 0
  1021   0009C0                     start_initialization:
  1022                           	callstack 0
  1023   0009C0                     __initialization:
  1024                           	callstack 0
  1025                           
  1026                           ; Clear objects allocated to COMRAM (48 bytes)
  1027   0009C0  EE00  F033         	lfsr	0,__pbssCOMRAM
  1028   0009C4  0E30               	movlw	48
  1029   0009C6                     clear_0:
  1030   0009C6  6AEE               	clrf	postinc0,c
  1031   0009C8  06E8               	decf	wreg,f,c
  1032   0009CA  E1FD               	bnz	clear_0
  1033   0009CC                     end_of_initialization:
  1034                           	callstack 0
  1035   0009CC                     __end_of__initialization:
  1036                           	callstack 0
  1037   0009CC  9063               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1038   0009CE  9263               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1039   0009D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1040   0009D2  6EF8               	movwf	tblptru,c
  1041   0009D4  0100               	movlb	0
  1042   0009D6  EFAC  F003         	goto	_main	;jump to C main() function
  1043                           
  1044                           	psect	bssCOMRAM
  1045   000033                     __pbssCOMRAM:
  1046                           	callstack 0
  1047   000033                     _str:
  1048                           	callstack 0
  1049   000033                     	ds	20
  1050   000047                     _needSendMsg:
  1051                           	callstack 0
  1052   000047                     	ds	2
  1053   000049                     _isConnected:
  1054                           	callstack 0
  1055   000049                     	ds	2
  1056   00004B                     _count:
  1057                           	callstack 0
  1058   00004B                     	ds	2
  1059   00004D                     _lenStr:
  1060                           	callstack 0
  1061   00004D                     	ds	2
  1062   00004F                     _mystring:
  1063                           	callstack 0
  1064   00004F                     	ds	20
  1065                           
  1066                           	psect	cstackBANK0
  1067   000080                     __pcstackBANK0:
  1068                           	callstack 0
  1069   000080                     UART_Write@data:
  1070                           	callstack 0
  1071   000080                     displayBinary@num:
  1072                           	callstack 0
  1073   000080                     
  1074                           ; 1 bytes @ 0x0
  1075   000080                     	ds	1
  1076   000081                     UART_Write_Text@text:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0x1
  1080   000081                     	ds	1
  1081   000082                     ??_UART_Write_Text:
  1082   000082                     ??_displayBinary:
  1083                           
  1084                           ; 1 bytes @ 0x2
  1085   000082                     	ds	1
  1086   000083                     UART_Write_Text@i:
  1087                           	callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x3
  1090   000083                     	ds	2
  1091   000085                     
  1092                           ; 1 bytes @ 0x5
  1093                           
  1094                           	psect	cstackCOMRAM
  1095   000001                     __pcstackCOMRAM:
  1096                           	callstack 0
  1097   000001                     i2UART_Write@data:
  1098                           	callstack 0
  1099   000001                     
  1100                           ; 1 bytes @ 0x0
  1101   000001                     	ds	1
  1102   000002                     i2UART_Write_Text@text:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0x1
  1106   000002                     	ds	1
  1107   000003                     ??i2_UART_Write_Text:
  1108                           
  1109                           ; 1 bytes @ 0x2
  1110   000003                     	ds	1
  1111   000004                     i2UART_Write_Text@i:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x3
  1115   000004                     	ds	2
  1116   000006                     ??_Hi_ISR:
  1117                           
  1118                           ; 1 bytes @ 0x5
  1119   000006                     	ds	5
  1120   00000B                     ?_strlen:
  1121                           	callstack 0
  1122   00000B                     strlen@s:
  1123                           	callstack 0
  1124   00000B                     i1UART_Write@data:
  1125                           	callstack 0
  1126   00000B                     ClearBuffer@i:
  1127                           	callstack 0
  1128   00000B                     
  1129                           ; 1 bytes @ 0xA
  1130   00000B                     	ds	1
  1131   00000C                     i1UART_Write_Text@text:
  1132                           	callstack 0
  1133                           
  1134                           ; 1 bytes @ 0xB
  1135   00000C                     	ds	1
  1136   00000D                     strcpy@dest:
  1137                           	callstack 0
  1138   00000D                     strlen@a:
  1139                           	callstack 0
  1140   00000D                     ??i1_UART_Write_Text:
  1141                           
  1142                           ; 1 bytes @ 0xC
  1143   00000D                     	ds	1
  1144   00000E                     strcpy@src:
  1145                           	callstack 0
  1146   00000E                     i1UART_Write_Text@i:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0xD
  1150   00000E                     	ds	2
  1151   000010                     MyusartRead@receivedData:
  1152                           	callstack 0
  1153   000010                     ??_strcpy:
  1154   000010                     
  1155                           ; 1 bytes @ 0xF
  1156   000010                     	ds	2
  1157   000012                     strcpy@d:
  1158                           	callstack 0
  1159                           
  1160                           ; 1 bytes @ 0x11
  1161   000012                     	ds	1
  1162   000013                     ??_Lo_ISR:
  1163                           
  1164                           ; 1 bytes @ 0x12
  1165   000013                     	ds	12
  1166   00001F                     Lo_ISR@command:
  1167                           	callstack 0
  1168                           
  1169                           ; 20 bytes @ 0x1E
  1170   00001F                     	ds	20
  1171                           
  1172 ;;
  1173 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1174 ;;
  1175 ;; *************** function _main *****************
  1176 ;; Defined at:
  1177 ;;		line 22 in file "main.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1191 ;;      Params:         0       0       0       0       0       0       0
  1192 ;;      Locals:         0       0       0       0       0       0       0
  1193 ;;      Temps:          0       0       0       0       0       0       0
  1194 ;;      Totals:         0       0       0       0       0       0       0
  1195 ;;Total ram usage:        0 bytes
  1196 ;; Hardware stack levels required when called: 9
  1197 ;; This function calls:
  1198 ;;		_SYSTEM_Initialize
  1199 ;;		_UART_Write_Text
  1200 ;;		_displayBinary
  1201 ;; This function is called by:
  1202 ;;		Startup code after reset
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text0
  1207   000758                     __ptext0:
  1208                           	callstack 0
  1209   000758                     _main:
  1210                           	callstack 22
  1211   000758                     
  1212                           ;main.c: 25:     ADCON1 = 0x0f;
  1213   000758  0E0F               	movlw	15
  1214   00075A  6EC1               	movwf	193,c	;volatile
  1215   00075C                     
  1216                           ;main.c: 26:     LATA = 0x00;
  1217   00075C  6A89               	clrf	137,c	;volatile
  1218   00075E                     
  1219                           ;main.c: 27:     TRISAbits.TRISA1 = 0;
  1220   00075E  9292               	bcf	146,1,c	;volatile
  1221   000760                     
  1222                           ;main.c: 28:     TRISAbits.TRISA2 = 0;
  1223   000760  9492               	bcf	146,2,c	;volatile
  1224   000762                     
  1225                           ;main.c: 29:     TRISAbits.TRISA3 = 0;
  1226   000762  9692               	bcf	146,3,c	;volatile
  1227   000764                     
  1228                           ;main.c: 30:     TRISAbits.TRISA4 = 0;
  1229   000764  9892               	bcf	146,4,c	;volatile
  1230   000766                     
  1231                           ;main.c: 31:     LATAbits.LATA1 = 0;
  1232   000766  9289               	bcf	137,1,c	;volatile
  1233   000768                     
  1234                           ;main.c: 32:     LATAbits.LATA2 = 0;
  1235   000768  9489               	bcf	137,2,c	;volatile
  1236   00076A                     
  1237                           ;main.c: 33:     LATAbits.LATA3 = 0;
  1238   00076A  9689               	bcf	137,3,c	;volatile
  1239   00076C                     
  1240                           ;main.c: 34:     LATAbits.LATA4 = 0;
  1241   00076C  9889               	bcf	137,4,c	;volatile
  1242                           
  1243                           ;main.c: 37:     TRISB = 0x01;
  1244   00076E  0E01               	movlw	1
  1245   000770  6E93               	movwf	147,c	;volatile
  1246   000772                     
  1247                           ;main.c: 38:     LATBbits.LATB0 = 0;
  1248   000772  908A               	bcf	138,0,c	;volatile
  1249   000774                     
  1250                           ;main.c: 40:     INTCONbits.GIE = 1;
  1251   000774  8EF2               	bsf	242,7,c	;volatile
  1252   000776                     
  1253                           ;main.c: 41:     INTCONbits.PEIE = 1;
  1254   000776  8CF2               	bsf	242,6,c	;volatile
  1255   000778                     
  1256                           ;main.c: 42:     INTCONbits.INT0IE = 1;
  1257   000778  88F2               	bsf	242,4,c	;volatile
  1258   00077A                     
  1259                           ;main.c: 43:     INTCONbits.INT0IF = 0;
  1260   00077A  92F2               	bcf	242,1,c	;volatile
  1261   00077C                     
  1262                           ;main.c: 45:     SYSTEM_Initialize() ;
  1263   00077C  EC0F  F005         	call	_SYSTEM_Initialize	;wreg free
  1264   000780                     l1442:
  1265                           
  1266                           ;main.c: 49:         if(isConnected == 1 && needSendMsg == 1){
  1267   000780  0449               	decf	_isConnected^0,w,c
  1268   000782  104A               	iorwf	(_isConnected+1)^0,w,c
  1269   000784  A4D8               	btfss	status,2,c
  1270   000786  EFC7  F003         	goto	u921
  1271   00078A  EFC9  F003         	goto	u920
  1272   00078E                     u921:
  1273   00078E  EFC0  F003         	goto	l1442
  1274   000792                     u920:
  1275   000792  0447               	decf	_needSendMsg^0,w,c
  1276   000794  1048               	iorwf	(_needSendMsg+1)^0,w,c
  1277   000796  A4D8               	btfss	status,2,c
  1278   000798  EFD0  F003         	goto	u931
  1279   00079C  EFD2  F003         	goto	u930
  1280   0007A0                     u931:
  1281   0007A0  EFC0  F003         	goto	l1442
  1282   0007A4                     u930:
  1283   0007A4                     
  1284                           ;main.c: 50:             displayBinary(0);
  1285   0007A4  0E00               	movlw	0
  1286   0007A6  0100               	movlb	0	; () banked
  1287   0007A8  6F81               	movwf	(displayBinary@num+1)& (0+255),b
  1288   0007AA  0E00               	movlw	0
  1289   0007AC  6F80               	movwf	displayBinary@num& (0+255),b
  1290   0007AE  EC63  F003         	call	_displayBinary	;wreg free
  1291   0007B2                     
  1292                           ;main.c: 51:             UART_Write_Text("LRN\r\n");
  1293   0007B2  0E15               	movlw	low STR_2
  1294   0007B4  0100               	movlb	0	; () banked
  1295   0007B6  6F81               	movwf	UART_Write_Text@text& (0+255),b
  1296   0007B8  ECE6  F003         	call	_UART_Write_Text	;wreg free
  1297   0007BC                     
  1298                           ;main.c: 52:             needSendMsg = 0;
  1299   0007BC  0E00               	movlw	0
  1300   0007BE  6E48               	movwf	(_needSendMsg+1)^0,c
  1301   0007C0  0E00               	movlw	0
  1302   0007C2  6E47               	movwf	_needSendMsg^0,c
  1303   0007C4  EFC0  F003         	goto	l1442
  1304   0007C8  EF13  F001         	goto	start
  1305   0007CC                     __end_of_main:
  1306                           	callstack 0
  1307                           
  1308 ;; *************** function _displayBinary *****************
  1309 ;; Defined at:
  1310 ;;		line 14 in file "main.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;  num             2    0[BANK0 ] int 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, status,2, status,0
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1324 ;;      Params:         0       2       0       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0       0       0
  1326 ;;      Temps:          0       1       0       0       0       0       0
  1327 ;;      Totals:         0       3       0       0       0       0       0
  1328 ;;Total ram usage:        3 bytes
  1329 ;; Hardware stack levels used: 1
  1330 ;; Hardware stack levels required when called: 7
  1331 ;; This function calls:
  1332 ;;		Nothing
  1333 ;; This function is called by:
  1334 ;;		_main
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           	psect	text1
  1339   0006C6                     __ptext1:
  1340                           	callstack 0
  1341   0006C6                     _displayBinary:
  1342                           	callstack 23
  1343   0006C6                     
  1344                           ;main.c: 16:     LATAbits.LATA1 = (num & 0x01) ? 1 : 0;
  1345   0006C6  0100               	movlb	0	; () banked
  1346   0006C8  B180               	btfsc	displayBinary@num& (0+255),0,b
  1347   0006CA  EF69  F003         	goto	u841
  1348   0006CE  EF6D  F003         	goto	u840
  1349   0006D2                     u841:
  1350   0006D2  6B82               	clrf	??_displayBinary& (0+255),b
  1351   0006D4  2B82               	incf	??_displayBinary& (0+255),f,b
  1352   0006D6  EF6F  F003         	goto	u858
  1353   0006DA                     u840:
  1354   0006DA  0100               	movlb	0	; () banked
  1355   0006DC  6B82               	clrf	??_displayBinary& (0+255),b
  1356   0006DE                     u858:
  1357   0006DE  4782               	rlncf	??_displayBinary& (0+255),f,b
  1358   0006E0  5089               	movf	137,w,c	;volatile
  1359   0006E2  1982               	xorwf	??_displayBinary& (0+255),w,b
  1360   0006E4  0BFD               	andlw	-3
  1361   0006E6  1982               	xorwf	??_displayBinary& (0+255),w,b
  1362   0006E8  6E89               	movwf	137,c	;volatile
  1363                           
  1364                           ;main.c: 17:     LATAbits.LATA2 = (num & 0x02) ? 1 : 0;
  1365   0006EA  B380               	btfsc	displayBinary@num& (0+255),1,b
  1366   0006EC  EF7A  F003         	goto	u861
  1367   0006F0  EF7E  F003         	goto	u860
  1368   0006F4                     u861:
  1369   0006F4  6B82               	clrf	??_displayBinary& (0+255),b
  1370   0006F6  2B82               	incf	??_displayBinary& (0+255),f,b
  1371   0006F8  EF80  F003         	goto	u878
  1372   0006FC                     u860:
  1373   0006FC  0100               	movlb	0	; () banked
  1374   0006FE  6B82               	clrf	??_displayBinary& (0+255),b
  1375   000700                     u878:
  1376   000700  4782               	rlncf	??_displayBinary& (0+255),f,b
  1377   000702  4782               	rlncf	??_displayBinary& (0+255),f,b
  1378   000704  5089               	movf	137,w,c	;volatile
  1379   000706  1982               	xorwf	??_displayBinary& (0+255),w,b
  1380   000708  0BFB               	andlw	-5
  1381   00070A  1982               	xorwf	??_displayBinary& (0+255),w,b
  1382   00070C  6E89               	movwf	137,c	;volatile
  1383                           
  1384                           ;main.c: 18:     LATAbits.LATA3 = (num & 0x04) ? 1 : 0;
  1385   00070E  B580               	btfsc	displayBinary@num& (0+255),2,b
  1386   000710  EF8C  F003         	goto	u881
  1387   000714  EF90  F003         	goto	u880
  1388   000718                     u881:
  1389   000718  6B82               	clrf	??_displayBinary& (0+255),b
  1390   00071A  2B82               	incf	??_displayBinary& (0+255),f,b
  1391   00071C  EF92  F003         	goto	u898
  1392   000720                     u880:
  1393   000720  0100               	movlb	0	; () banked
  1394   000722  6B82               	clrf	??_displayBinary& (0+255),b
  1395   000724                     u898:
  1396   000724  4782               	rlncf	??_displayBinary& (0+255),f,b
  1397   000726  4782               	rlncf	??_displayBinary& (0+255),f,b
  1398   000728  4782               	rlncf	??_displayBinary& (0+255),f,b
  1399   00072A  5089               	movf	137,w,c	;volatile
  1400   00072C  1982               	xorwf	??_displayBinary& (0+255),w,b
  1401   00072E  0BF7               	andlw	-9
  1402   000730  1982               	xorwf	??_displayBinary& (0+255),w,b
  1403   000732  6E89               	movwf	137,c	;volatile
  1404                           
  1405                           ;main.c: 19:     LATAbits.LATA4 = (num & 0x08) ? 1 : 0;
  1406   000734  B780               	btfsc	displayBinary@num& (0+255),3,b
  1407   000736  EF9F  F003         	goto	u901
  1408   00073A  EFA3  F003         	goto	u900
  1409   00073E                     u901:
  1410   00073E  6B82               	clrf	??_displayBinary& (0+255),b
  1411   000740  2B82               	incf	??_displayBinary& (0+255),f,b
  1412   000742  EFA5  F003         	goto	u918
  1413   000746                     u900:
  1414   000746  0100               	movlb	0	; () banked
  1415   000748  6B82               	clrf	??_displayBinary& (0+255),b
  1416   00074A                     u918:
  1417   00074A  3B82               	swapf	??_displayBinary& (0+255),f,b
  1418   00074C  5089               	movf	137,w,c	;volatile
  1419   00074E  1982               	xorwf	??_displayBinary& (0+255),w,b
  1420   000750  0BEF               	andlw	-17
  1421   000752  1982               	xorwf	??_displayBinary& (0+255),w,b
  1422   000754  6E89               	movwf	137,c	;volatile
  1423   000756                     
  1424                           ; BSR set to: 0
  1425   000756  0012               	return		;funcret
  1426   000758                     __end_of_displayBinary:
  1427                           	callstack 0
  1428                           
  1429 ;; *************** function _UART_Write_Text *****************
  1430 ;; Defined at:
  1431 ;;		line 51 in file "setting_hardaware/uart.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  text            1    1[BANK0 ] PTR unsigned char 
  1434 ;;		 -> STR_5(11), STR_4(9), STR_3(5), STR_2(6), 
  1435 ;;		 -> STR_1(3), 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  i               2    3[BANK0 ] int 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1447 ;;      Params:         0       1       0       0       0       0       0
  1448 ;;      Locals:         0       2       0       0       0       0       0
  1449 ;;      Temps:          0       1       0       0       0       0       0
  1450 ;;      Totals:         0       4       0       0       0       0       0
  1451 ;;Total ram usage:        4 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; Hardware stack levels required when called: 8
  1454 ;; This function calls:
  1455 ;;		_UART_Write
  1456 ;; This function is called by:
  1457 ;;		_main
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           	psect	text2
  1462   0007CC                     __ptext2:
  1463                           	callstack 0
  1464   0007CC                     _UART_Write_Text:
  1465                           	callstack 22
  1466   0007CC                     
  1467                           ;setting_hardaware/uart.c: 52:     for(int i=0;text[i]!='\0';i++)
  1468   0007CC  0E00               	movlw	0
  1469   0007CE  0100               	movlb	0	; () banked
  1470   0007D0  6F84               	movwf	(UART_Write_Text@i+1)& (0+255),b
  1471   0007D2  0E00               	movlw	0
  1472   0007D4  6F83               	movwf	UART_Write_Text@i& (0+255),b
  1473   0007D6  EFFB  F003         	goto	l1406
  1474   0007DA                     l1402:
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;setting_hardaware/uart.c: 53:         UART_Write(text[i]);
  1478   0007DA  5181               	movf	UART_Write_Text@text& (0+255),w,b
  1479   0007DC  2583               	addwf	UART_Write_Text@i& (0+255),w,b
  1480   0007DE  6F82               	movwf	??_UART_Write_Text& (0+255),b
  1481   0007E0  C082  FFF6         	movff	??_UART_Write_Text,tblptrl
  1482   0007E4                     	if	1	;There is more than 1 active tblptr byte
  1483   0007E4  0E06               	movlw	high __smallconst
  1484   0007E6  6EF7               	movwf	tblptrh,c
  1485   0007E8                     	endif
  1486   0007E8                     	if	0	;tblptru may be non-zero
  1487   0007E8                     	endif
  1488   0007E8                     	if	0	;tblptru may be non-zero
  1489   0007E8                     	endif
  1490   0007E8  0008               	tblrd		*
  1491   0007EA  50F5               	movf	tablat,w,c
  1492   0007EC  ECED  F004         	call	_UART_Write
  1493   0007F0  0100               	movlb	0	; () banked
  1494   0007F2  4B83               	infsnz	UART_Write_Text@i& (0+255),f,b
  1495   0007F4  2B84               	incf	(UART_Write_Text@i+1)& (0+255),f,b
  1496   0007F6                     l1406:
  1497                           
  1498                           ; BSR set to: 0
  1499   0007F6  5181               	movf	UART_Write_Text@text& (0+255),w,b
  1500   0007F8  2583               	addwf	UART_Write_Text@i& (0+255),w,b
  1501   0007FA  6F82               	movwf	??_UART_Write_Text& (0+255),b
  1502   0007FC  C082  FFF6         	movff	??_UART_Write_Text,tblptrl
  1503   000800                     	if	1	;There is more than 1 active tblptr byte
  1504   000800  0E06               	movlw	high __smallconst
  1505   000802  6EF7               	movwf	tblptrh,c
  1506   000804                     	endif
  1507   000804                     	if	0	;tblptru may be non-zero
  1508   000804                     	endif
  1509   000804                     	if	0	;tblptru may be non-zero
  1510   000804                     	endif
  1511   000804  0008               	tblrd		*
  1512   000806  50F5               	movf	tablat,w,c
  1513   000808  0900               	iorlw	0
  1514   00080A  A4D8               	btfss	status,2,c
  1515   00080C  EF0A  F004         	goto	u831
  1516   000810  EF0C  F004         	goto	u830
  1517   000814                     u831:
  1518   000814  EFED  F003         	goto	l1402
  1519   000818                     u830:
  1520   000818                     
  1521                           ; BSR set to: 0
  1522   000818  0012               	return		;funcret
  1523   00081A                     __end_of_UART_Write_Text:
  1524                           	callstack 0
  1525                           
  1526 ;; *************** function _UART_Write *****************
  1527 ;; Defined at:
  1528 ;;		line 44 in file "setting_hardaware/uart.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  data            1    wreg     unsigned char 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  data            1    0[BANK0 ] unsigned char 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1542 ;;      Params:         0       0       0       0       0       0       0
  1543 ;;      Locals:         0       1       0       0       0       0       0
  1544 ;;      Temps:          0       0       0       0       0       0       0
  1545 ;;      Totals:         0       1       0       0       0       0       0
  1546 ;;Total ram usage:        1 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; Hardware stack levels required when called: 7
  1549 ;; This function calls:
  1550 ;;		Nothing
  1551 ;; This function is called by:
  1552 ;;		_UART_Write_Text
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           	psect	text3
  1557   0009DA                     __ptext3:
  1558                           	callstack 0
  1559   0009DA                     _UART_Write:
  1560                           	callstack 22
  1561                           
  1562                           ; BSR set to: 0
  1563                           ;incstack = 0
  1564                           ;UART_Write@data stored from wreg
  1565   0009DA  0100               	movlb	0	; () banked
  1566   0009DC  6F80               	movwf	UART_Write@data& (0+255),b
  1567   0009DE                     l89:
  1568   0009DE  A2AC               	btfss	172,1,c	;volatile
  1569   0009E0  EFF4  F004         	goto	u821
  1570   0009E4  EFF6  F004         	goto	u820
  1571   0009E8                     u821:
  1572   0009E8  EFEF  F004         	goto	l89
  1573   0009EC                     u820:
  1574   0009EC                     
  1575                           ;setting_hardaware/uart.c: 47:     TXREG = data;
  1576   0009EC  C080  FFAD         	movff	UART_Write@data,4013	;volatile
  1577   0009F0  0012               	return		;funcret
  1578   0009F2                     __end_of_UART_Write:
  1579                           	callstack 0
  1580                           
  1581 ;; *************** function _SYSTEM_Initialize *****************
  1582 ;; Defined at:
  1583 ;;		line 60 in file "setting_hardaware/setting.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1597 ;;      Params:         0       0       0       0       0       0       0
  1598 ;;      Locals:         0       0       0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0       0       0
  1600 ;;      Totals:         0       0       0       0       0       0       0
  1601 ;;Total ram usage:        0 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; Hardware stack levels required when called: 8
  1604 ;; This function calls:
  1605 ;;		_INTERRUPT_Initialize
  1606 ;;		_OSCILLATOR_Initialize
  1607 ;;		_UART_Initialize
  1608 ;; This function is called by:
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text4
  1614   000A1E                     __ptext4:
  1615                           	callstack 0
  1616   000A1E                     _SYSTEM_Initialize:
  1617                           	callstack 22
  1618   000A1E                     
  1619                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
  1620   000A1E  EC16  F005         	call	_OSCILLATOR_Initialize	;wreg free
  1621                           
  1622                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  1623   000A22  EC1A  F005         	call	_INTERRUPT_Initialize	;wreg free
  1624   000A26                     
  1625                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
  1626   000A26  ECCF  F004         	call	_UART_Initialize	;wreg free
  1627   000A2A  0012               	return		;funcret
  1628   000A2C                     __end_of_SYSTEM_Initialize:
  1629                           	callstack 0
  1630                           
  1631 ;; *************** function _UART_Initialize *****************
  1632 ;; Defined at:
  1633 ;;		line 10 in file "setting_hardaware/uart.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1647 ;;      Params:         0       0       0       0       0       0       0
  1648 ;;      Locals:         0       0       0       0       0       0       0
  1649 ;;      Temps:          0       0       0       0       0       0       0
  1650 ;;      Totals:         0       0       0       0       0       0       0
  1651 ;;Total ram usage:        0 bytes
  1652 ;; Hardware stack levels used: 1
  1653 ;; Hardware stack levels required when called: 7
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_SYSTEM_Initialize
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text5
  1662   00099E                     __ptext5:
  1663                           	callstack 0
  1664   00099E                     _UART_Initialize:
  1665                           	callstack 22
  1666   00099E                     
  1667                           ;setting_hardaware/uart.c: 21:     TRISCbits.TRISC6 = 1;
  1668   00099E  8C94               	bsf	148,6,c	;volatile
  1669                           
  1670                           ;setting_hardaware/uart.c: 22:     TRISCbits.TRISC7 = 1;
  1671   0009A0  8E94               	bsf	148,7,c	;volatile
  1672                           
  1673                           ;setting_hardaware/uart.c: 25:     TXSTAbits.SYNC = 0;
  1674   0009A2  98AC               	bcf	172,4,c	;volatile
  1675                           
  1676                           ;setting_hardaware/uart.c: 26:     BAUDCONbits.BRG16 = 0;
  1677   0009A4  96B8               	bcf	184,3,c	;volatile
  1678                           
  1679                           ;setting_hardaware/uart.c: 27:     TXSTAbits.BRGH = 1;
  1680   0009A6  84AC               	bsf	172,2,c	;volatile
  1681   0009A8                     
  1682                           ;setting_hardaware/uart.c: 28:     SPBRG = 25;
  1683   0009A8  0E19               	movlw	25
  1684   0009AA  6EAF               	movwf	175,c	;volatile
  1685   0009AC                     
  1686                           ;setting_hardaware/uart.c: 31:     RCSTAbits.SPEN = 1;
  1687   0009AC  8EAB               	bsf	171,7,c	;volatile
  1688   0009AE                     
  1689                           ;setting_hardaware/uart.c: 32:     PIR1bits.TXIF = 0;
  1690   0009AE  989E               	bcf	158,4,c	;volatile
  1691   0009B0                     
  1692                           ;setting_hardaware/uart.c: 33:     PIR1bits.RCIF = 1;
  1693   0009B0  8A9E               	bsf	158,5,c	;volatile
  1694   0009B2                     
  1695                           ;setting_hardaware/uart.c: 34:     TXSTAbits.TXEN = 1;
  1696   0009B2  8AAC               	bsf	172,5,c	;volatile
  1697   0009B4                     
  1698                           ;setting_hardaware/uart.c: 35:     RCSTAbits.CREN = 1;
  1699   0009B4  88AB               	bsf	171,4,c	;volatile
  1700   0009B6                     
  1701                           ;setting_hardaware/uart.c: 36:     PIE1bits.TXIE = 0;
  1702   0009B6  989D               	bcf	157,4,c	;volatile
  1703   0009B8                     
  1704                           ;setting_hardaware/uart.c: 37:     IPR1bits.TXIP = 0;
  1705   0009B8  989F               	bcf	159,4,c	;volatile
  1706   0009BA                     
  1707                           ;setting_hardaware/uart.c: 38:     PIE1bits.RCIE = 1;
  1708   0009BA  8A9D               	bsf	157,5,c	;volatile
  1709   0009BC                     
  1710                           ;setting_hardaware/uart.c: 39:     IPR1bits.RCIP = 0;
  1711   0009BC  9A9F               	bcf	159,5,c	;volatile
  1712   0009BE  0012               	return		;funcret
  1713   0009C0                     __end_of_UART_Initialize:
  1714                           	callstack 0
  1715                           
  1716 ;; *************** function _OSCILLATOR_Initialize *****************
  1717 ;; Defined at:
  1718 ;;		line 73 in file "setting_hardaware/setting.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		None
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1732 ;;      Params:         0       0       0       0       0       0       0
  1733 ;;      Locals:         0       0       0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0
  1735 ;;      Totals:         0       0       0       0       0       0       0
  1736 ;;Total ram usage:        0 bytes
  1737 ;; Hardware stack levels used: 1
  1738 ;; Hardware stack levels required when called: 7
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_SYSTEM_Initialize
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           	psect	text6
  1747   000A2C                     __ptext6:
  1748                           	callstack 0
  1749   000A2C                     _OSCILLATOR_Initialize:
  1750                           	callstack 22
  1751   000A2C                     
  1752                           ;setting_hardaware/setting.c: 75:     IRCF2 = 1;
  1753   000A2C  8CD3               	bsf	4051,6,c	;volatile
  1754                           
  1755                           ;setting_hardaware/setting.c: 76:     IRCF1 = 1;
  1756   000A2E  8AD3               	bsf	4051,5,c	;volatile
  1757                           
  1758                           ;setting_hardaware/setting.c: 77:     IRCF0 = 0;
  1759   000A30  98D3               	bcf	4051,4,c	;volatile
  1760   000A32  0012               	return		;funcret
  1761   000A34                     __end_of_OSCILLATOR_Initialize:
  1762                           	callstack 0
  1763                           
  1764 ;; *************** function _INTERRUPT_Initialize *****************
  1765 ;; Defined at:
  1766 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;		None
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		None
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1780 ;;      Params:         0       0       0       0       0       0       0
  1781 ;;      Locals:         0       0       0       0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0
  1783 ;;      Totals:         0       0       0       0       0       0       0
  1784 ;;Total ram usage:        0 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 7
  1787 ;; This function calls:
  1788 ;;		Nothing
  1789 ;; This function is called by:
  1790 ;;		_SYSTEM_Initialize
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text7
  1795   000A34                     __ptext7:
  1796                           	callstack 0
  1797   000A34                     _INTERRUPT_Initialize:
  1798                           	callstack 22
  1799   000A34                     
  1800                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
  1801   000A34  8ED0               	bsf	208,7,c	;volatile
  1802                           
  1803                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
  1804   000A36  8EF2               	bsf	242,7,c	;volatile
  1805                           
  1806                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
  1807   000A38  8CF2               	bsf	242,6,c	;volatile
  1808   000A3A  0012               	return		;funcret
  1809   000A3C                     __end_of_INTERRUPT_Initialize:
  1810                           	callstack 0
  1811                           
  1812 ;; *************** function _Lo_ISR *****************
  1813 ;; Defined at:
  1814 ;;		line 79 in file "main.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;		None
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  command        20   30[COMRAM] unsigned char [20]
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1828 ;;      Params:         0       0       0       0       0       0       0
  1829 ;;      Locals:        20       0       0       0       0       0       0
  1830 ;;      Temps:         12       0       0       0       0       0       0
  1831 ;;      Totals:        32       0       0       0       0       0       0
  1832 ;;Total ram usage:       32 bytes
  1833 ;; Hardware stack levels used: 1
  1834 ;; Hardware stack levels required when called: 6
  1835 ;; This function calls:
  1836 ;;		_ClearBuffer
  1837 ;;		_GetString
  1838 ;;		_MyusartRead
  1839 ;;		_strcpy
  1840 ;;		_strlen
  1841 ;; This function is called by:
  1842 ;;		Interrupt level 1
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	intcodelo
  1847   000018                     __pintcodelo:
  1848                           	callstack 0
  1849   000018                     _Lo_ISR:
  1850                           	callstack 22
  1851                           
  1852                           ;incstack = 0
  1853   000018  8063               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1854   00001A  CFD8 F014          	movff	status,??_Lo_ISR+1
  1855   00001E  CFE8 F015          	movff	wreg,??_Lo_ISR+2
  1856   000022  CFE0 F016          	movff	bsr,??_Lo_ISR+3
  1857   000026  CFE1 F017          	movff	fsr1l,??_Lo_ISR+4
  1858   00002A  CFE2 F018          	movff	fsr1h,??_Lo_ISR+5
  1859   00002E  CFD9 F019          	movff	fsr2l,??_Lo_ISR+6
  1860   000032  CFDA F01A          	movff	fsr2h,??_Lo_ISR+7
  1861   000036  CFF6 F01B          	movff	tblptrl,??_Lo_ISR+8
  1862   00003A  CFF7 F01C          	movff	tblptrh,??_Lo_ISR+9
  1863   00003E  CFF8 F01D          	movff	tblptru,??_Lo_ISR+10
  1864   000042  CFF5 F01E          	movff	tablat,??_Lo_ISR+11
  1865   000046                     
  1866                           ;main.c: 81:     if(RCIF)
  1867   000046  AA9E               	btfss	3998,5,c	;volatile
  1868   000048  EF28  F000         	goto	i1u66_21
  1869   00004C  EF2A  F000         	goto	i1u66_20
  1870   000050                     i1u66_21:
  1871   000050  EFFB  F000         	goto	i1l194
  1872   000054                     i1u66_20:
  1873   000054                     
  1874                           ;main.c: 82:     {;main.c: 83:         if(RCSTAbits.OERR)
  1875   000054  A2AB               	btfss	171,1,c	;volatile
  1876   000056  EF2F  F000         	goto	i1u67_21
  1877   00005A  EF31  F000         	goto	i1u67_20
  1878   00005E                     i1u67_21:
  1879   00005E  EF34  F000         	goto	i1l1302
  1880   000062                     i1u67_20:
  1881   000062                     
  1882                           ;main.c: 84:         {;main.c: 85:             CREN = 0;
  1883   000062  98AB               	bcf	4011,4,c	;volatile
  1884                           
  1885                           ;main.c: 86:             __nop();
  1886   000064  0000               	nop	
  1887                           
  1888                           ;main.c: 87:             CREN = 1;
  1889   000066  88AB               	bsf	4011,4,c	;volatile
  1890   000068                     i1l1302:
  1891                           
  1892                           ;main.c: 90:         MyusartRead();
  1893   000068  EC9B  F004         	call	_MyusartRead	;wreg free
  1894   00006C                     
  1895                           ;main.c: 91:         char command[20];;main.c: 92:         if(RCREG == '\r' || RCREG == 
      +                          '\n'){
  1896   00006C  0E0D               	movlw	13
  1897   00006E  18AE               	xorwf	174,w,c	;volatile
  1898   000070  B4D8               	btfsc	status,2,c
  1899   000072  EF3D  F000         	goto	i1u68_21
  1900   000076  EF3F  F000         	goto	i1u68_20
  1901   00007A                     i1u68_21:
  1902   00007A  EF48  F000         	goto	i1l1308
  1903   00007E                     i1u68_20:
  1904   00007E  0E0A               	movlw	10
  1905   000080  18AE               	xorwf	174,w,c	;volatile
  1906   000082  A4D8               	btfss	status,2,c
  1907   000084  EF46  F000         	goto	i1u69_21
  1908   000088  EF48  F000         	goto	i1u69_20
  1909   00008C                     i1u69_21:
  1910   00008C  EF54  F000         	goto	i1l1312
  1911   000090                     i1u69_20:
  1912   000090                     i1l1308:
  1913                           
  1914                           ;main.c: 93:             strcpy(command, GetString());
  1915   000090  0E1F               	movlw	low Lo_ISR@command
  1916   000092  6E0D               	movwf	strcpy@dest^0,c
  1917   000094  EC1E  F005         	call	_GetString	;wreg free
  1918   000098  6E13               	movwf	??_Lo_ISR^0,c
  1919   00009A  C013  F00E         	movff	??_Lo_ISR,strcpy@src
  1920   00009E  6A0F               	clrf	(strcpy@src+1)^0,c
  1921   0000A0  EC0D  F004         	call	_strcpy	;wreg free
  1922   0000A4                     
  1923                           ;main.c: 94:             ClearBuffer();
  1924   0000A4  EC7D  F004         	call	_ClearBuffer	;wreg free
  1925   0000A8                     i1l1312:
  1926                           
  1927                           ;main.c: 96:         if(command[0] == 'O' && command[1] == 'K' && strlen(command) == 2){
  1928   0000A8  0E4F               	movlw	79
  1929   0000AA  181F               	xorwf	Lo_ISR@command^0,w,c
  1930   0000AC  A4D8               	btfss	status,2,c
  1931   0000AE  EF5B  F000         	goto	i1u70_21
  1932   0000B2  EF5D  F000         	goto	i1u70_20
  1933   0000B6                     i1u70_21:
  1934   0000B6  EF85  F000         	goto	i1l1328
  1935   0000BA                     i1u70_20:
  1936   0000BA  0E4B               	movlw	75
  1937   0000BC  1820               	xorwf	(Lo_ISR@command+1)^0,w,c
  1938   0000BE  A4D8               	btfss	status,2,c
  1939   0000C0  EF64  F000         	goto	i1u71_21
  1940   0000C4  EF66  F000         	goto	i1u71_20
  1941   0000C8                     i1u71_21:
  1942   0000C8  EF85  F000         	goto	i1l1328
  1943   0000CC                     i1u71_20:
  1944   0000CC  0E1F               	movlw	low Lo_ISR@command
  1945   0000CE  6E0B               	movwf	strlen@s^0,c
  1946   0000D0  ECB8  F004         	call	_strlen	;wreg free
  1947   0000D4  0E02               	movlw	2
  1948   0000D6  180B               	xorwf	?_strlen^0,w,c
  1949   0000D8  100C               	iorwf	(?_strlen+1)^0,w,c
  1950   0000DA  A4D8               	btfss	status,2,c
  1951   0000DC  EF72  F000         	goto	i1u72_21
  1952   0000E0  EF74  F000         	goto	i1u72_20
  1953   0000E4                     i1u72_21:
  1954   0000E4  EF85  F000         	goto	i1l1328
  1955   0000E8                     i1u72_20:
  1956   0000E8                     
  1957                           ;main.c: 97:             LATAbits.LATA1 = 1;
  1958   0000E8  8289               	bsf	137,1,c	;volatile
  1959   0000EA                     
  1960                           ;main.c: 98:             ClearBuffer();
  1961   0000EA  EC7D  F004         	call	_ClearBuffer	;wreg free
  1962   0000EE                     
  1963                           ;main.c: 99:             strcpy(command, "");
  1964   0000EE  0E1F               	movlw	low Lo_ISR@command
  1965   0000F0  6E0D               	movwf	strcpy@dest^0,c
  1966   0000F2  0E0B               	movlw	low (STR_5+10)
  1967   0000F4  6E0E               	movwf	strcpy@src^0,c
  1968   0000F6  500E               	movf	strcpy@src^0,w,c
  1969   0000F8  A4D8               	btfss	status,2,c
  1970   0000FA  0E06               	movlw	high __smallconst
  1971   0000FC  6E0F               	movwf	(strcpy@src+1)^0,c
  1972   0000FE  EC0D  F004         	call	_strcpy	;wreg free
  1973   000102  EFFB  F000         	goto	i1l194
  1974   000106                     i1l1324:
  1975                           
  1976                           ;main.c: 100:             return;
  1977   000106  EFFB  F000         	goto	i1l194
  1978   00010A                     i1l1328:
  1979   00010A  0E2B               	movlw	43
  1980   00010C  181F               	xorwf	Lo_ISR@command^0,w,c
  1981   00010E  A4D8               	btfss	status,2,c
  1982   000110  EF8C  F000         	goto	i1u73_21
  1983   000114  EF8E  F000         	goto	i1u73_20
  1984   000118                     i1u73_21:
  1985   000118  EFC1  F000         	goto	i1l1348
  1986   00011C                     i1u73_20:
  1987   00011C  0E49               	movlw	73
  1988   00011E  1820               	xorwf	(Lo_ISR@command+1)^0,w,c
  1989   000120  A4D8               	btfss	status,2,c
  1990   000122  EF95  F000         	goto	i1u74_21
  1991   000126  EF97  F000         	goto	i1u74_20
  1992   00012A                     i1u74_21:
  1993   00012A  EFC1  F000         	goto	i1l1348
  1994   00012E                     i1u74_20:
  1995   00012E  0E4E               	movlw	78
  1996   000130  1821               	xorwf	(Lo_ISR@command+2)^0,w,c
  1997   000132  A4D8               	btfss	status,2,c
  1998   000134  EF9E  F000         	goto	i1u75_21
  1999   000138  EFA0  F000         	goto	i1u75_20
  2000   00013C                     i1u75_21:
  2001   00013C  EFC1  F000         	goto	i1l1348
  2002   000140                     i1u75_20:
  2003   000140  0E51               	movlw	81
  2004   000142  1822               	xorwf	(Lo_ISR@command+3)^0,w,c
  2005   000144  A4D8               	btfss	status,2,c
  2006   000146  EFA7  F000         	goto	i1u76_21
  2007   00014A  EFA9  F000         	goto	i1u76_20
  2008   00014E                     i1u76_21:
  2009   00014E  EFC1  F000         	goto	i1l1348
  2010   000152                     i1u76_20:
  2011   000152  0E45               	movlw	69
  2012   000154  1823               	xorwf	(Lo_ISR@command+4)^0,w,c
  2013   000156  A4D8               	btfss	status,2,c
  2014   000158  EFB0  F000         	goto	i1u77_21
  2015   00015C  EFB2  F000         	goto	i1u77_20
  2016   000160                     i1u77_21:
  2017   000160  EFC1  F000         	goto	i1l1348
  2018   000164                     i1u77_20:
  2019   000164                     
  2020                           ;main.c: 103:             LATAbits.LATA2 = 1;
  2021   000164  8489               	bsf	137,2,c	;volatile
  2022   000166                     
  2023                           ;main.c: 104:             ClearBuffer();
  2024   000166  EC7D  F004         	call	_ClearBuffer	;wreg free
  2025   00016A                     
  2026                           ;main.c: 105:             strcpy(command, "");
  2027   00016A  0E1F               	movlw	low Lo_ISR@command
  2028   00016C  6E0D               	movwf	strcpy@dest^0,c
  2029   00016E  0E0B               	movlw	low (STR_5+10)
  2030   000170  6E0E               	movwf	strcpy@src^0,c
  2031   000172  500E               	movf	strcpy@src^0,w,c
  2032   000174  A4D8               	btfss	status,2,c
  2033   000176  0E06               	movlw	high __smallconst
  2034   000178  6E0F               	movwf	(strcpy@src+1)^0,c
  2035   00017A  EC0D  F004         	call	_strcpy	;wreg free
  2036   00017E  EFFB  F000         	goto	i1l194
  2037   000182                     i1l1348:
  2038   000182  0E2B               	movlw	43
  2039   000184  181F               	xorwf	Lo_ISR@command^0,w,c
  2040   000186  A4D8               	btfss	status,2,c
  2041   000188  EFC8  F000         	goto	i1u78_21
  2042   00018C  EFCA  F000         	goto	i1u78_20
  2043   000190                     i1u78_21:
  2044   000190  EF83  F000         	goto	i1l1324
  2045   000194                     i1u78_20:
  2046   000194  0E43               	movlw	67
  2047   000196  1820               	xorwf	(Lo_ISR@command+1)^0,w,c
  2048   000198  A4D8               	btfss	status,2,c
  2049   00019A  EFD1  F000         	goto	i1u79_21
  2050   00019E  EFD3  F000         	goto	i1u79_20
  2051   0001A2                     i1u79_21:
  2052   0001A2  EF83  F000         	goto	i1l1324
  2053   0001A6                     i1u79_20:
  2054   0001A6  0E6F               	movlw	111
  2055   0001A8  1821               	xorwf	(Lo_ISR@command+2)^0,w,c
  2056   0001AA  A4D8               	btfss	status,2,c
  2057   0001AC  EFDA  F000         	goto	i1u80_21
  2058   0001B0  EFDC  F000         	goto	i1u80_20
  2059   0001B4                     i1u80_21:
  2060   0001B4  EF83  F000         	goto	i1l1324
  2061   0001B8                     i1u80_20:
  2062   0001B8  0E6E               	movlw	110
  2063   0001BA  1822               	xorwf	(Lo_ISR@command+3)^0,w,c
  2064   0001BC  A4D8               	btfss	status,2,c
  2065   0001BE  EFE3  F000         	goto	i1u81_21
  2066   0001C2  EFE5  F000         	goto	i1u81_20
  2067   0001C6                     i1u81_21:
  2068   0001C6  EF83  F000         	goto	i1l1324
  2069   0001CA                     i1u81_20:
  2070   0001CA                     
  2071                           ;main.c: 109:             LATAbits.LATA3 = 1;
  2072   0001CA  8689               	bsf	137,3,c	;volatile
  2073                           
  2074                           ;main.c: 110:             PIE1bits.RCIE = 0;
  2075   0001CC  9A9D               	bcf	157,5,c	;volatile
  2076   0001CE                     
  2077                           ;main.c: 111:             isConnected = 1;
  2078   0001CE  0E00               	movlw	0
  2079   0001D0  6E4A               	movwf	(_isConnected+1)^0,c
  2080   0001D2  0E01               	movlw	1
  2081   0001D4  6E49               	movwf	_isConnected^0,c
  2082                           
  2083                           ;main.c: 112:             needSendMsg = 1;
  2084   0001D6  0E00               	movlw	0
  2085   0001D8  6E48               	movwf	(_needSendMsg+1)^0,c
  2086   0001DA  0E01               	movlw	1
  2087   0001DC  6E47               	movwf	_needSendMsg^0,c
  2088   0001DE                     
  2089                           ;main.c: 113:             ClearBuffer();
  2090   0001DE  EC7D  F004         	call	_ClearBuffer	;wreg free
  2091   0001E2                     
  2092                           ;main.c: 114:             strcpy(command, "");
  2093   0001E2  0E1F               	movlw	low Lo_ISR@command
  2094   0001E4  6E0D               	movwf	strcpy@dest^0,c
  2095   0001E6  0E0B               	movlw	low (STR_5+10)
  2096   0001E8  6E0E               	movwf	strcpy@src^0,c
  2097   0001EA  500E               	movf	strcpy@src^0,w,c
  2098   0001EC  A4D8               	btfss	status,2,c
  2099   0001EE  0E06               	movlw	high __smallconst
  2100   0001F0  6E0F               	movwf	(strcpy@src+1)^0,c
  2101   0001F2  EC0D  F004         	call	_strcpy	;wreg free
  2102   0001F6                     i1l194:
  2103   0001F6  C01E  FFF5         	movff	??_Lo_ISR+11,tablat
  2104   0001FA  C01D  FFF8         	movff	??_Lo_ISR+10,tblptru
  2105   0001FE  C01C  FFF7         	movff	??_Lo_ISR+9,tblptrh
  2106   000202  C01B  FFF6         	movff	??_Lo_ISR+8,tblptrl
  2107   000206  C01A  FFDA         	movff	??_Lo_ISR+7,fsr2h
  2108   00020A  C019  FFD9         	movff	??_Lo_ISR+6,fsr2l
  2109   00020E  C018  FFE2         	movff	??_Lo_ISR+5,fsr1h
  2110   000212  C017  FFE1         	movff	??_Lo_ISR+4,fsr1l
  2111   000216  C016  FFE0         	movff	??_Lo_ISR+3,bsr
  2112   00021A  C015  FFE8         	movff	??_Lo_ISR+2,wreg
  2113   00021E  C014  FFD8         	movff	??_Lo_ISR+1,status
  2114   000222  9063               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2115   000224  0010               	retfie	
  2116   000226                     __end_of_Lo_ISR:
  2117                           	callstack 0
  2118                           
  2119 ;; *************** function _strlen *****************
  2120 ;; Defined at:
  2121 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  s               1   10[COMRAM] PTR const unsigned char 
  2124 ;;		 -> Lo_ISR@command(20), 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  a               1   12[COMRAM] PTR const unsigned char 
  2127 ;;		 -> Lo_ISR@command(20), 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  2   10[COMRAM] unsigned int 
  2130 ;; Registers used:
  2131 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2137 ;;      Params:         2       0       0       0       0       0       0
  2138 ;;      Locals:         1       0       0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0
  2140 ;;      Totals:         3       0       0       0       0       0       0
  2141 ;;Total ram usage:        3 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; Hardware stack levels required when called: 3
  2144 ;; This function calls:
  2145 ;;		Nothing
  2146 ;; This function is called by:
  2147 ;;		_Lo_ISR
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text9
  2152   000970                     __ptext9:
  2153                           	callstack 0
  2154   000970                     _strlen:
  2155                           	callstack 24
  2156   000970  C00B  F00D         	movff	strlen@s,strlen@a
  2157   000974  EFBD  F004         	goto	i1l1218
  2158   000978                     i1l1216:
  2159   000978  2A0B               	incf	strlen@s^0,f,c
  2160   00097A                     i1l1218:
  2161   00097A  500B               	movf	strlen@s^0,w,c
  2162   00097C  6ED9               	movwf	fsr2l,c
  2163   00097E  6ADA               	clrf	fsr2h,c
  2164   000980  50DF               	movf	indf2,w,c
  2165   000982  A4D8               	btfss	status,2,c
  2166   000984  EFC6  F004         	goto	i1u58_21
  2167   000988  EFC8  F004         	goto	i1u58_20
  2168   00098C                     i1u58_21:
  2169   00098C  EFBC  F004         	goto	i1l1216
  2170   000990                     i1u58_20:
  2171   000990  500D               	movf	strlen@a^0,w,c
  2172   000992  5C0B               	subwf	strlen@s^0,w,c
  2173   000994  6E0B               	movwf	?_strlen^0,c
  2174   000996  6A0C               	clrf	(?_strlen+1)^0,c
  2175   000998  BE0B               	btfsc	?_strlen^0,7,c
  2176   00099A  060C               	decf	(?_strlen+1)^0,f,c
  2177   00099C  0012               	return		;funcret
  2178   00099E                     __end_of_strlen:
  2179                           	callstack 0
  2180                           
  2181 ;; *************** function _strcpy *****************
  2182 ;; Defined at:
  2183 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  dest            1   12[COMRAM] PTR unsigned char 
  2186 ;;		 -> Lo_ISR@command(20), 
  2187 ;;  src             2   13[COMRAM] PTR const unsigned char 
  2188 ;;		 -> STR_8(1), STR_7(1), STR_6(1), mystring(20), 
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;  d               1   17[COMRAM] PTR unsigned char 
  2191 ;;		 -> Lo_ISR@command(20), 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1   12[COMRAM] PTR unsigned char 
  2194 ;; Registers used:
  2195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2201 ;;      Params:         3       0       0       0       0       0       0
  2202 ;;      Locals:         1       0       0       0       0       0       0
  2203 ;;      Temps:          2       0       0       0       0       0       0
  2204 ;;      Totals:         6       0       0       0       0       0       0
  2205 ;;Total ram usage:        6 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 3
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_Lo_ISR
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text10
  2216   00081A                     __ptext10:
  2217                           	callstack 0
  2218   00081A                     _strcpy:
  2219                           	callstack 24
  2220   00081A  C00D  F012         	movff	strcpy@dest,strcpy@d
  2221   00081E                     i1l1212:
  2222   00081E  500E               	movf	strcpy@src^0,w,c
  2223   000820  6E10               	movwf	??_strcpy^0,c
  2224   000822  500F               	movf	(strcpy@src+1)^0,w,c
  2225   000824  6E11               	movwf	(??_strcpy+1)^0,c
  2226   000826  4A0E               	infsnz	strcpy@src^0,f,c
  2227   000828  2A0F               	incf	(strcpy@src+1)^0,f,c
  2228   00082A  C010  FFF6         	movff	??_strcpy,tblptrl
  2229   00082E  C011  FFF7         	movff	??_strcpy+1,tblptrh
  2230   000832  6AF8               	clrf	tblptru,c
  2231   000834  2A12               	incf	strcpy@d^0,f,c
  2232   000836  0412               	decf	strcpy@d^0,w,c
  2233   000838  6ED9               	movwf	fsr2l,c
  2234   00083A  6ADA               	clrf	fsr2h,c
  2235   00083C  0E05               	movlw	(high __ramtop+-1)
  2236   00083E  64F7               	cpfsgt	tblptrh,c
  2237   000840  D003               	bra	i1u56_27
  2238   000842  0008               	tblrd		*
  2239   000844  50F5               	movf	tablat,w,c
  2240   000846  D005               	bra	i1u56_20
  2241   000848                     i1u56_27:
  2242   000848  CFF6 FFE1          	movff	tblptrl,fsr1l
  2243   00084C  CFF7 FFE2          	movff	tblptrh,fsr1h
  2244   000850  50E7               	movf	indf1,w,c
  2245   000852                     i1u56_20:
  2246   000852  6EDF               	movwf	indf2,c
  2247   000854  50DF               	movf	indf2,w,c
  2248   000856  A4D8               	btfss	status,2,c
  2249   000858  EF30  F004         	goto	i1u57_21
  2250   00085C  EF32  F004         	goto	i1u57_20
  2251   000860                     i1u57_21:
  2252   000860  EF0F  F004         	goto	i1l1212
  2253   000864                     i1u57_20:
  2254   000864  0012               	return		;funcret
  2255   000866                     __end_of_strcpy:
  2256                           	callstack 0
  2257                           
  2258 ;; *************** function _MyusartRead *****************
  2259 ;; Defined at:
  2260 ;;		line 62 in file "setting_hardaware/uart.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  receivedData    1   15[COMRAM] unsigned char 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2274 ;;      Params:         0       0       0       0       0       0       0
  2275 ;;      Locals:         1       0       0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0       0       0
  2277 ;;      Totals:         1       0       0       0       0       0       0
  2278 ;;Total ram usage:        1 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 5
  2281 ;; This function calls:
  2282 ;;		i1_UART_Write
  2283 ;;		i1_UART_Write_Text
  2284 ;; This function is called by:
  2285 ;;		_Lo_ISR
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text11
  2290   000936                     __ptext11:
  2291                           	callstack 0
  2292   000936                     _MyusartRead:
  2293                           	callstack 22
  2294   000936                     
  2295                           ;setting_hardaware/uart.c: 66:     unsigned char receivedData = RCREG;
  2296   000936  CFAE F010          	movff	4014,MyusartRead@receivedData	;volatile
  2297   00093A                     
  2298                           ;setting_hardaware/uart.c: 67:     if(receivedData == '\r'){
  2299   00093A  0E0D               	movlw	13
  2300   00093C  1810               	xorwf	MyusartRead@receivedData^0,w,c
  2301   00093E  A4D8               	btfss	status,2,c
  2302   000940  EFA4  F004         	goto	i1u47_21
  2303   000944  EFA6  F004         	goto	i1u47_20
  2304   000948                     i1u47_21:
  2305   000948  EFAC  F004         	goto	i1l1196
  2306   00094C                     i1u47_20:
  2307   00094C                     
  2308                           ;setting_hardaware/uart.c: 68:         UART_Write_Text("\r\n");
  2309   00094C  0E09               	movlw	low (STR_5+8)
  2310   00094E  6E0C               	movwf	i1UART_Write_Text@text^0,c
  2311   000950  EC33  F004         	call	i1_UART_Write_Text	;wreg free
  2312   000954  EFB7  F004         	goto	i1l107
  2313   000958                     i1l1196:
  2314                           
  2315                           ;setting_hardaware/uart.c: 71:     mystring[lenStr] = receivedData;
  2316   000958  504D               	movf	_lenStr^0,w,c
  2317   00095A  0F4F               	addlw	low _mystring
  2318   00095C  6ED9               	movwf	fsr2l,c
  2319   00095E  6ADA               	clrf	fsr2h,c
  2320   000960  C010  FFDF         	movff	MyusartRead@receivedData,indf2
  2321   000964                     
  2322                           ;setting_hardaware/uart.c: 72:     lenStr++;
  2323   000964  4A4D               	infsnz	_lenStr^0,f,c
  2324   000966  2A4E               	incf	(_lenStr+1)^0,f,c
  2325   000968                     
  2326                           ;setting_hardaware/uart.c: 73:     UART_Write(receivedData);
  2327   000968  5010               	movf	MyusartRead@receivedData^0,w,c
  2328   00096A  ECF9  F004         	call	i1_UART_Write
  2329   00096E                     i1l107:
  2330   00096E  0012               	return		;funcret
  2331   000970                     __end_of_MyusartRead:
  2332                           	callstack 0
  2333                           
  2334 ;; *************** function i1_UART_Write_Text *****************
  2335 ;; Defined at:
  2336 ;;		line 51 in file "setting_hardaware/uart.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;  text            1   11[COMRAM] PTR unsigned char 
  2339 ;;		 -> STR_5(11), STR_4(9), STR_3(5), STR_2(6), 
  2340 ;;		 -> STR_1(3), 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  i               2   13[COMRAM] int 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      void 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2352 ;;      Params:         1       0       0       0       0       0       0
  2353 ;;      Locals:         2       0       0       0       0       0       0
  2354 ;;      Temps:          1       0       0       0       0       0       0
  2355 ;;      Totals:         4       0       0       0       0       0       0
  2356 ;;Total ram usage:        4 bytes
  2357 ;; Hardware stack levels used: 1
  2358 ;; Hardware stack levels required when called: 4
  2359 ;; This function calls:
  2360 ;;		i1_UART_Write
  2361 ;; This function is called by:
  2362 ;;		_MyusartRead
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text12
  2367   000866                     __ptext12:
  2368                           	callstack 0
  2369   000866                     i1_UART_Write_Text:
  2370                           	callstack 22
  2371   000866                     
  2372                           ;setting_hardaware/uart.c: 52:     for(int i=0;text[i]!='\0';i++)
  2373   000866  0E00               	movlw	0
  2374   000868  6E0F               	movwf	(i1UART_Write_Text@i+1)^0,c
  2375   00086A  0E00               	movlw	0
  2376   00086C  6E0E               	movwf	i1UART_Write_Text@i^0,c
  2377   00086E  EF46  F004         	goto	i1l1178
  2378   000872                     i1l1174:
  2379                           
  2380                           ;setting_hardaware/uart.c: 53:         UART_Write(text[i]);
  2381   000872  500C               	movf	i1UART_Write_Text@text^0,w,c
  2382   000874  240E               	addwf	i1UART_Write_Text@i^0,w,c
  2383   000876  6E0D               	movwf	??i1_UART_Write_Text^0,c
  2384   000878  C00D  FFF6         	movff	??i1_UART_Write_Text,tblptrl
  2385   00087C                     	if	1	;There is more than 1 active tblptr byte
  2386   00087C  0E06               	movlw	high __smallconst
  2387   00087E  6EF7               	movwf	tblptrh,c
  2388   000880                     	endif
  2389   000880                     	if	0	;tblptru may be non-zero
  2390   000880                     	endif
  2391   000880                     	if	0	;tblptru may be non-zero
  2392   000880                     	endif
  2393   000880  0008               	tblrd		*
  2394   000882  50F5               	movf	tablat,w,c
  2395   000884  ECF9  F004         	call	i1_UART_Write
  2396   000888  4A0E               	infsnz	i1UART_Write_Text@i^0,f,c
  2397   00088A  2A0F               	incf	(i1UART_Write_Text@i+1)^0,f,c
  2398   00088C                     i1l1178:
  2399   00088C  500C               	movf	i1UART_Write_Text@text^0,w,c
  2400   00088E  240E               	addwf	i1UART_Write_Text@i^0,w,c
  2401   000890  6E0D               	movwf	??i1_UART_Write_Text^0,c
  2402   000892  C00D  FFF6         	movff	??i1_UART_Write_Text,tblptrl
  2403   000896                     	if	1	;There is more than 1 active tblptr byte
  2404   000896  0E06               	movlw	high __smallconst
  2405   000898  6EF7               	movwf	tblptrh,c
  2406   00089A                     	endif
  2407   00089A                     	if	0	;tblptru may be non-zero
  2408   00089A                     	endif
  2409   00089A                     	if	0	;tblptru may be non-zero
  2410   00089A                     	endif
  2411   00089A  0008               	tblrd		*
  2412   00089C  50F5               	movf	tablat,w,c
  2413   00089E  0900               	iorlw	0
  2414   0008A0  A4D8               	btfss	status,2,c
  2415   0008A2  EF55  F004         	goto	i1u45_21
  2416   0008A6  EF57  F004         	goto	i1u45_20
  2417   0008AA                     i1u45_21:
  2418   0008AA  EF39  F004         	goto	i1l1174
  2419   0008AE                     i1u45_20:
  2420   0008AE  0012               	return		;funcret
  2421   0008B0                     __end_ofi1_UART_Write_Text:
  2422                           	callstack 0
  2423                           
  2424 ;; *************** function i1_UART_Write *****************
  2425 ;; Defined at:
  2426 ;;		line 44 in file "setting_hardaware/uart.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  data            1    wreg     unsigned char 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;  data            1   10[COMRAM] unsigned char 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2440 ;;      Params:         0       0       0       0       0       0       0
  2441 ;;      Locals:         1       0       0       0       0       0       0
  2442 ;;      Temps:          0       0       0       0       0       0       0
  2443 ;;      Totals:         1       0       0       0       0       0       0
  2444 ;;Total ram usage:        1 bytes
  2445 ;; Hardware stack levels used: 1
  2446 ;; Hardware stack levels required when called: 3
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_MyusartRead
  2451 ;;		i1_UART_Write_Text
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text13
  2456   0009F2                     __ptext13:
  2457                           	callstack 0
  2458   0009F2                     i1_UART_Write:
  2459                           	callstack 22
  2460                           
  2461                           ;incstack = 0
  2462                           ;i1UART_Write@data stored from wreg
  2463   0009F2  6E0B               	movwf	i1UART_Write@data^0,c
  2464   0009F4                     i1l89:
  2465   0009F4  A2AC               	btfss	172,1,c	;volatile
  2466   0009F6  EFFF  F004         	goto	i1u43_21
  2467   0009FA  EF01  F005         	goto	i1u43_20
  2468   0009FE                     i1u43_21:
  2469   0009FE  EFFA  F004         	goto	i1l89
  2470   000A02                     i1u43_20:
  2471   000A02                     
  2472                           ;setting_hardaware/uart.c: 47:     TXREG = data;
  2473   000A02  C00B  FFAD         	movff	i1UART_Write@data,4013	;volatile
  2474   000A06  0012               	return		;funcret
  2475   000A08                     __end_ofi1_UART_Write:
  2476                           	callstack 0
  2477                           
  2478 ;; *************** function _GetString *****************
  2479 ;; Defined at:
  2480 ;;		line 77 in file "setting_hardaware/uart.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;		None
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1   10[COMRAM] PTR unsigned char 
  2487 ;; Registers used:
  2488 ;;		wreg
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2494 ;;      Params:         2       0       0       0       0       0       0
  2495 ;;      Locals:         0       0       0       0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0       0       0
  2497 ;;      Totals:         2       0       0       0       0       0       0
  2498 ;;Total ram usage:        2 bytes
  2499 ;; Hardware stack levels used: 1
  2500 ;; Hardware stack levels required when called: 3
  2501 ;; This function calls:
  2502 ;;		Nothing
  2503 ;; This function is called by:
  2504 ;;		_Lo_ISR
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text14
  2509   000A3C                     __ptext14:
  2510                           	callstack 0
  2511   000A3C                     _GetString:
  2512                           	callstack 24
  2513   000A3C                     
  2514                           ;setting_hardaware/uart.c: 78:     return mystring;
  2515   000A3C  0E4F               	movlw	_mystring& (0+255)
  2516   000A3E  0012               	return		;funcret
  2517   000A40                     __end_of_GetString:
  2518                           	callstack 0
  2519                           
  2520 ;; *************** function _ClearBuffer *****************
  2521 ;; Defined at:
  2522 ;;		line 56 in file "setting_hardaware/uart.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;		None
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  i               2   10[COMRAM] int 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2536 ;;      Params:         0       0       0       0       0       0       0
  2537 ;;      Locals:         2       0       0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0
  2539 ;;      Totals:         2       0       0       0       0       0       0
  2540 ;;Total ram usage:        2 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 3
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_Lo_ISR
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text15
  2551   0008FA                     __ptext15:
  2552                           	callstack 0
  2553   0008FA                     _ClearBuffer:
  2554                           	callstack 24
  2555   0008FA                     
  2556                           ;setting_hardaware/uart.c: 57:     for(int i = 0; i < 10 ; i++)
  2557   0008FA  0E00               	movlw	0
  2558   0008FC  6E0C               	movwf	(ClearBuffer@i+1)^0,c
  2559   0008FE  0E00               	movlw	0
  2560   000900  6E0B               	movwf	ClearBuffer@i^0,c
  2561   000902                     i1l950:
  2562                           
  2563                           ;setting_hardaware/uart.c: 58:         mystring[i] = '\0';
  2564   000902  500B               	movf	ClearBuffer@i^0,w,c
  2565   000904  0F4F               	addlw	low _mystring
  2566   000906  6ED9               	movwf	fsr2l,c
  2567   000908  6ADA               	clrf	fsr2h,c
  2568   00090A  6ADF               	clrf	indf2,c
  2569   00090C  4A0B               	infsnz	ClearBuffer@i^0,f,c
  2570   00090E  2A0C               	incf	(ClearBuffer@i+1)^0,f,c
  2571   000910  BE0C               	btfsc	(ClearBuffer@i+1)^0,7,c
  2572   000912  EF94  F004         	goto	i1u6_21
  2573   000916  500C               	movf	(ClearBuffer@i+1)^0,w,c
  2574   000918  E109               	bnz	i1u6_20
  2575   00091A  0E0A               	movlw	10
  2576   00091C  5C0B               	subwf	ClearBuffer@i^0,w,c
  2577   00091E  A0D8               	btfss	status,0,c
  2578   000920  EF94  F004         	goto	i1u6_21
  2579   000924  EF96  F004         	goto	i1u6_20
  2580   000928                     i1u6_21:
  2581   000928  EF81  F004         	goto	i1l950
  2582   00092C                     i1u6_20:
  2583   00092C                     
  2584                           ;setting_hardaware/uart.c: 59:     lenStr = 0;
  2585   00092C  0E00               	movlw	0
  2586   00092E  6E4E               	movwf	(_lenStr+1)^0,c
  2587   000930  0E00               	movlw	0
  2588   000932  6E4D               	movwf	_lenStr^0,c
  2589   000934  0012               	return		;funcret
  2590   000936                     __end_of_ClearBuffer:
  2591                           	callstack 0
  2592                           
  2593 ;; *************** function _Hi_ISR *****************
  2594 ;; Defined at:
  2595 ;;		line 58 in file "main.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      void 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2609 ;;      Params:         0       0       0       0       0       0       0
  2610 ;;      Locals:         0       0       0       0       0       0       0
  2611 ;;      Temps:          5       0       0       0       0       0       0
  2612 ;;      Totals:         5       0       0       0       0       0       0
  2613 ;;Total ram usage:        5 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; Hardware stack levels required when called: 2
  2616 ;; This function calls:
  2617 ;;		i2_UART_Write_Text
  2618 ;; This function is called by:
  2619 ;;		Interrupt level 2
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	intcode
  2624   000008                     __pintcode:
  2625                           	callstack 0
  2626   000008                     _Hi_ISR:
  2627                           	callstack 22
  2628                           
  2629                           ;incstack = 0
  2630   000008  8263               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2631   00000A  ED11  F003         	call	int_func,f	;refresh shadow registers
  2632                           
  2633                           	psect	intcode_body
  2634   000622                     __pintcode_body:
  2635                           	callstack 22
  2636   000622                     int_func:
  2637                           	callstack 22
  2638   000622  0006               	pop		; remove dummy address from shadow register refresh
  2639   000624  CFF6 F007          	movff	tblptrl,??_Hi_ISR+1
  2640   000628  CFF7 F008          	movff	tblptrh,??_Hi_ISR+2
  2641   00062C  CFF8 F009          	movff	tblptru,??_Hi_ISR+3
  2642   000630  CFF5 F00A          	movff	tablat,??_Hi_ISR+4
  2643   000634                     
  2644                           ;main.c: 60:     if (INTCONbits.RBIF) {
  2645   000634  A0F2               	btfss	242,0,c	;volatile
  2646   000636  EF1F  F003         	goto	i2u62_41
  2647   00063A  EF21  F003         	goto	i2u62_40
  2648   00063E                     i2u62_41:
  2649   00063E  EF59  F003         	goto	i2l183
  2650   000642                     i2u62_40:
  2651   000642                     
  2652                           ;main.c: 61:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2653   000642  0E82               	movlw	130
  2654   000644  6E06               	movwf	??_Hi_ISR^0,c
  2655   000646  0EDE               	movlw	222
  2656   000648                     i2u94_47:
  2657   000648  2EE8               	decfsz	wreg,f,c
  2658   00064A  D7FE               	bra	i2u94_47
  2659   00064C  2E06               	decfsz	??_Hi_ISR^0,f,c
  2660   00064E  D7FC               	bra	i2u94_47
  2661   000650                     
  2662                           ;main.c: 62:         if(count == 0){
  2663   000650  504B               	movf	_count^0,w,c
  2664   000652  104C               	iorwf	(_count+1)^0,w,c
  2665   000654  A4D8               	btfss	status,2,c
  2666   000656  EF2F  F003         	goto	i2u63_41
  2667   00065A  EF31  F003         	goto	i2u63_40
  2668   00065E                     i2u63_41:
  2669   00065E  EF37  F003         	goto	i2l1282
  2670   000662                     i2u63_40:
  2671   000662                     
  2672                           ;main.c: 63:             UART_Write_Text("AT\r\n");
  2673   000662  0E1B               	movlw	low STR_3
  2674   000664  6E02               	movwf	i2UART_Write_Text@text^0,c
  2675   000666  EC58  F004         	call	i2_UART_Write_Text	;wreg free
  2676                           
  2677                           ;main.c: 64:         }
  2678   00066A  EF56  F003         	goto	i2l1292
  2679   00066E                     i2l1282:
  2680   00066E  044B               	decf	_count^0,w,c
  2681   000670  104C               	iorwf	(_count+1)^0,w,c
  2682   000672  A4D8               	btfss	status,2,c
  2683   000674  EF3E  F003         	goto	i2u64_41
  2684   000678  EF40  F003         	goto	i2u64_40
  2685   00067C                     i2u64_41:
  2686   00067C  EF46  F003         	goto	i2l1286
  2687   000680                     i2u64_40:
  2688   000680                     
  2689                           ;main.c: 66:             UART_Write_Text("AT+INQ\r\n");
  2690   000680  0E0C               	movlw	low STR_4
  2691   000682  6E02               	movwf	i2UART_Write_Text@text^0,c
  2692   000684  EC58  F004         	call	i2_UART_Write_Text	;wreg free
  2693                           
  2694                           ;main.c: 67:         }
  2695   000688  EF56  F003         	goto	i2l1292
  2696   00068C                     i2l1286:
  2697   00068C  0E02               	movlw	2
  2698   00068E  184B               	xorwf	_count^0,w,c
  2699   000690  104C               	iorwf	(_count+1)^0,w,c
  2700   000692  A4D8               	btfss	status,2,c
  2701   000694  EF4E  F003         	goto	i2u65_41
  2702   000698  EF50  F003         	goto	i2u65_40
  2703   00069C                     i2u65_41:
  2704   00069C  EF56  F003         	goto	i2l1292
  2705   0006A0                     i2u65_40:
  2706   0006A0                     
  2707                           ;main.c: 69:             UART_Write_Text("AT+CONN1\r\n");
  2708   0006A0  0E01               	movlw	low STR_5
  2709   0006A2  6E02               	movwf	i2UART_Write_Text@text^0,c
  2710   0006A4  EC58  F004         	call	i2_UART_Write_Text	;wreg free
  2711   0006A8                     
  2712                           ;main.c: 70:             count = -1;
  2713   0006A8  684B               	setf	_count^0,c
  2714   0006AA  684C               	setf	(_count+1)^0,c
  2715   0006AC                     i2l1292:
  2716                           
  2717                           ;main.c: 72:         count++;
  2718   0006AC  4A4B               	infsnz	_count^0,f,c
  2719   0006AE  2A4C               	incf	(_count+1)^0,f,c
  2720   0006B0                     
  2721                           ;main.c: 74:         INTCONbits.INT0IF = 0;
  2722   0006B0  92F2               	bcf	242,1,c	;volatile
  2723   0006B2                     i2l183:
  2724   0006B2  C00A  FFF5         	movff	??_Hi_ISR+4,tablat
  2725   0006B6  C009  FFF8         	movff	??_Hi_ISR+3,tblptru
  2726   0006BA  C008  FFF7         	movff	??_Hi_ISR+2,tblptrh
  2727   0006BE  C007  FFF6         	movff	??_Hi_ISR+1,tblptrl
  2728   0006C2  9263               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2729   0006C4  0011               	retfie		f
  2730   0006C6                     __end_of_Hi_ISR:
  2731                           	callstack 0
  2732                           
  2733 ;; *************** function i2_UART_Write_Text *****************
  2734 ;; Defined at:
  2735 ;;		line 51 in file "setting_hardaware/uart.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  text            1    1[COMRAM] PTR unsigned char 
  2738 ;;		 -> STR_5(11), STR_4(9), STR_3(5), STR_2(6), 
  2739 ;;		 -> STR_1(3), 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  i               2    3[COMRAM] int 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      void 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2751 ;;      Params:         1       0       0       0       0       0       0
  2752 ;;      Locals:         2       0       0       0       0       0       0
  2753 ;;      Temps:          1       0       0       0       0       0       0
  2754 ;;      Totals:         4       0       0       0       0       0       0
  2755 ;;Total ram usage:        4 bytes
  2756 ;; Hardware stack levels used: 1
  2757 ;; Hardware stack levels required when called: 1
  2758 ;; This function calls:
  2759 ;;		i2_UART_Write
  2760 ;; This function is called by:
  2761 ;;		_Hi_ISR
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text17
  2766   0008B0                     __ptext17:
  2767                           	callstack 0
  2768   0008B0                     i2_UART_Write_Text:
  2769                           	callstack 22
  2770   0008B0                     
  2771                           ;setting_hardaware/uart.c: 52:     for(int i=0;text[i]!='\0';i++)
  2772   0008B0  0E00               	movlw	0
  2773   0008B2  6E05               	movwf	(i2UART_Write_Text@i+1)^0,c
  2774   0008B4  0E00               	movlw	0
  2775   0008B6  6E04               	movwf	i2UART_Write_Text@i^0,c
  2776   0008B8  EF6B  F004         	goto	i2l1230
  2777   0008BC                     i2l1226:
  2778                           
  2779                           ;setting_hardaware/uart.c: 53:         UART_Write(text[i]);
  2780   0008BC  5002               	movf	i2UART_Write_Text@text^0,w,c
  2781   0008BE  2404               	addwf	i2UART_Write_Text@i^0,w,c
  2782   0008C0  6E03               	movwf	??i2_UART_Write_Text^0,c
  2783   0008C2  C003  FFF6         	movff	??i2_UART_Write_Text,tblptrl
  2784   0008C6                     	if	1	;There is more than 1 active tblptr byte
  2785   0008C6  0E06               	movlw	high __smallconst
  2786   0008C8  6EF7               	movwf	tblptrh,c
  2787   0008CA                     	endif
  2788   0008CA                     	if	0	;tblptru may be non-zero
  2789   0008CA                     	endif
  2790   0008CA                     	if	0	;tblptru may be non-zero
  2791   0008CA                     	endif
  2792   0008CA  0008               	tblrd		*
  2793   0008CC  50F5               	movf	tablat,w,c
  2794   0008CE  EC04  F005         	call	i2_UART_Write
  2795   0008D2  4A04               	infsnz	i2UART_Write_Text@i^0,f,c
  2796   0008D4  2A05               	incf	(i2UART_Write_Text@i+1)^0,f,c
  2797   0008D6                     i2l1230:
  2798   0008D6  5002               	movf	i2UART_Write_Text@text^0,w,c
  2799   0008D8  2404               	addwf	i2UART_Write_Text@i^0,w,c
  2800   0008DA  6E03               	movwf	??i2_UART_Write_Text^0,c
  2801   0008DC  C003  FFF6         	movff	??i2_UART_Write_Text,tblptrl
  2802   0008E0                     	if	1	;There is more than 1 active tblptr byte
  2803   0008E0  0E06               	movlw	high __smallconst
  2804   0008E2  6EF7               	movwf	tblptrh,c
  2805   0008E4                     	endif
  2806   0008E4                     	if	0	;tblptru may be non-zero
  2807   0008E4                     	endif
  2808   0008E4                     	if	0	;tblptru may be non-zero
  2809   0008E4                     	endif
  2810   0008E4  0008               	tblrd		*
  2811   0008E6  50F5               	movf	tablat,w,c
  2812   0008E8  0900               	iorlw	0
  2813   0008EA  A4D8               	btfss	status,2,c
  2814   0008EC  EF7A  F004         	goto	i2u59_41
  2815   0008F0  EF7C  F004         	goto	i2u59_40
  2816   0008F4                     i2u59_41:
  2817   0008F4  EF5E  F004         	goto	i2l1226
  2818   0008F8                     i2u59_40:
  2819   0008F8  0012               	return		;funcret
  2820   0008FA                     __end_ofi2_UART_Write_Text:
  2821                           	callstack 0
  2822                           
  2823 ;; *************** function i2_UART_Write *****************
  2824 ;; Defined at:
  2825 ;;		line 44 in file "setting_hardaware/uart.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  data            1    wreg     unsigned char 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  data            1    0[COMRAM] unsigned char 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2839 ;;      Params:         0       0       0       0       0       0       0
  2840 ;;      Locals:         1       0       0       0       0       0       0
  2841 ;;      Temps:          0       0       0       0       0       0       0
  2842 ;;      Totals:         1       0       0       0       0       0       0
  2843 ;;Total ram usage:        1 bytes
  2844 ;; Hardware stack levels used: 1
  2845 ;; This function calls:
  2846 ;;		Nothing
  2847 ;; This function is called by:
  2848 ;;		i2_UART_Write_Text
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text18
  2853   000A08                     __ptext18:
  2854                           	callstack 0
  2855   000A08                     i2_UART_Write:
  2856                           	callstack 22
  2857                           
  2858                           ;incstack = 0
  2859                           ;i2UART_Write@data stored from wreg
  2860   000A08  6E01               	movwf	i2UART_Write@data^0,c
  2861   000A0A                     i2l89:
  2862   000A0A  A2AC               	btfss	172,1,c	;volatile
  2863   000A0C  EF0A  F005         	goto	i2u44_41
  2864   000A10  EF0C  F005         	goto	i2u44_40
  2865   000A14                     i2u44_41:
  2866   000A14  EF05  F005         	goto	i2l89
  2867   000A18                     i2u44_40:
  2868   000A18                     
  2869                           ;setting_hardaware/uart.c: 47:     TXREG = data;
  2870   000A18  C001  FFAD         	movff	i2UART_Write@data,4013	;volatile
  2871   000A1C  0012               	return		;funcret
  2872   000A1E                     __end_ofi2_UART_Write:
  2873                           	callstack 0
  2874                           
  2875                           	psect	rparam
  2876   000001                     ___rparam_used  equ	1
  2877   000000                     ___param_bank   equ	0
  2878   000000                     __Lparam        equ	__Lrparam
  2879   000000                     __Hparam        equ	__Hrparam
  2880                           
  2881                           	psect	temp
  2882   000063                     btemp:
  2883                           	callstack 0
  2884   000063                     	ds	1
  2885   000063                     int$flags       set	btemp
  2886   000064                     wtemp8          set	btemp+1
  2887   000064                     ttemp5          set	btemp+1
  2888   000067                     ttemp6          set	btemp+4
  2889   00006B                     ttemp7          set	btemp+8
  2890                           
  2891                           	psect	idloc
  2892                           
  2893                           ;Config register IDLOC0 @ 0x200000
  2894                           ;	unspecified, using default values
  2895   200000                     	org	2097152
  2896   200000  FF                 	db	255
  2897                           
  2898                           ;Config register IDLOC1 @ 0x200001
  2899                           ;	unspecified, using default values
  2900   200001                     	org	2097153
  2901   200001  FF                 	db	255
  2902                           
  2903                           ;Config register IDLOC2 @ 0x200002
  2904                           ;	unspecified, using default values
  2905   200002                     	org	2097154
  2906   200002  FF                 	db	255
  2907                           
  2908                           ;Config register IDLOC3 @ 0x200003
  2909                           ;	unspecified, using default values
  2910   200003                     	org	2097155
  2911   200003  FF                 	db	255
  2912                           
  2913                           ;Config register IDLOC4 @ 0x200004
  2914                           ;	unspecified, using default values
  2915   200004                     	org	2097156
  2916   200004  FF                 	db	255
  2917                           
  2918                           ;Config register IDLOC5 @ 0x200005
  2919                           ;	unspecified, using default values
  2920   200005                     	org	2097157
  2921   200005  FF                 	db	255
  2922                           
  2923                           ;Config register IDLOC6 @ 0x200006
  2924                           ;	unspecified, using default values
  2925   200006                     	org	2097158
  2926   200006  FF                 	db	255
  2927                           
  2928                           ;Config register IDLOC7 @ 0x200007
  2929                           ;	unspecified, using default values
  2930   200007                     	org	2097159
  2931   200007  FF                 	db	255
  2932                           
  2933                           	psect	config
  2934                           
  2935                           ; Padding undefined space
  2936   300000                     	org	3145728
  2937   300000  FF                 	db	255
  2938                           
  2939                           ;Config register CONFIG1H @ 0x300001
  2940                           ;	Oscillator Selection bits
  2941                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2942                           ;	Fail-Safe Clock Monitor Enable bit
  2943                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2944                           ;	Internal/External Oscillator Switchover bit
  2945                           ;	IESO = ON, Oscillator Switchover mode enabled
  2946   300001                     	org	3145729
  2947   300001  88                 	db	136
  2948                           
  2949                           ;Config register CONFIG2L @ 0x300002
  2950                           ;	Power-up Timer Enable bit
  2951                           ;	PWRT = OFF, PWRT disabled
  2952                           ;	Brown-out Reset Enable bits
  2953                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2954                           ;	Brown Out Reset Voltage bits
  2955                           ;	BORV = 3, Minimum setting
  2956   300002                     	org	3145730
  2957   300002  1F                 	db	31
  2958                           
  2959                           ;Config register CONFIG2H @ 0x300003
  2960                           ;	Watchdog Timer Enable bit
  2961                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2962                           ;	Watchdog Timer Postscale Select bits
  2963                           ;	WDTPS = 1, 1:1
  2964   300003                     	org	3145731
  2965   300003  00                 	db	0
  2966                           
  2967                           ; Padding undefined space
  2968   300004                     	org	3145732
  2969   300004  FF                 	db	255
  2970                           
  2971                           ;Config register CONFIG3H @ 0x300005
  2972                           ;	CCP2 MUX bit
  2973                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2974                           ;	PORTB A/D Enable bit
  2975                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2976                           ;	Low-Power Timer1 Oscillator Enable bit
  2977                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2978                           ;	MCLR Pin Enable bit
  2979                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2980   300005                     	org	3145733
  2981   300005  83                 	db	131
  2982                           
  2983                           ;Config register CONFIG4L @ 0x300006
  2984                           ;	Stack Full/Underflow Reset Enable bit
  2985                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2986                           ;	Single-Supply ICSP Enable bit
  2987                           ;	LVP = OFF, Single-Supply ICSP disabled
  2988                           ;	Extended Instruction Set Enable bit
  2989                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2990                           ;	Background Debugger Enable bit
  2991                           ;	DEBUG = 0x1, unprogrammed default
  2992   300006                     	org	3145734
  2993   300006  81                 	db	129
  2994                           
  2995                           ; Padding undefined space
  2996   300007                     	org	3145735
  2997   300007  FF                 	db	255
  2998                           
  2999                           ;Config register CONFIG5L @ 0x300008
  3000                           ;	Code Protection bit
  3001                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3002                           ;	Code Protection bit
  3003                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3004                           ;	Code Protection bit
  3005                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3006                           ;	Code Protection bit
  3007                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3008   300008                     	org	3145736
  3009   300008  0F                 	db	15
  3010                           
  3011                           ;Config register CONFIG5H @ 0x300009
  3012                           ;	Boot Block Code Protection bit
  3013                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3014                           ;	Data EEPROM Code Protection bit
  3015                           ;	CPD = OFF, Data EEPROM not code-protected
  3016   300009                     	org	3145737
  3017   300009  C0                 	db	192
  3018                           
  3019                           ;Config register CONFIG6L @ 0x30000A
  3020                           ;	Write Protection bit
  3021                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3022                           ;	Write Protection bit
  3023                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3024                           ;	Write Protection bit
  3025                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3026                           ;	Write Protection bit
  3027                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3028   30000A                     	org	3145738
  3029   30000A  0F                 	db	15
  3030                           
  3031                           ;Config register CONFIG6H @ 0x30000B
  3032                           ;	Configuration Register Write Protection bit
  3033                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3034                           ;	Boot Block Write Protection bit
  3035                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3036                           ;	Data EEPROM Write Protection bit
  3037                           ;	WRTD = OFF, Data EEPROM not write-protected
  3038   30000B                     	org	3145739
  3039   30000B  E0                 	db	224
  3040                           
  3041                           ;Config register CONFIG7L @ 0x30000C
  3042                           ;	Table Read Protection bit
  3043                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3044                           ;	Table Read Protection bit
  3045                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3046                           ;	Table Read Protection bit
  3047                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3048                           ;	Table Read Protection bit
  3049                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3050   30000C                     	org	3145740
  3051   30000C  0F                 	db	15
  3052                           
  3053                           ;Config register CONFIG7H @ 0x30000D
  3054                           ;	Boot Block Table Read Protection bit
  3055                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3056   30000D                     	org	3145741
  3057   30000D  40                 	db	64
  3058                           tosu	equ	0xFFF
  3059                           tosh	equ	0xFFE
  3060                           tosl	equ	0xFFD
  3061                           stkptr	equ	0xFFC
  3062                           pclatu	equ	0xFFB
  3063                           pclath	equ	0xFFA
  3064                           pcl	equ	0xFF9
  3065                           tblptru	equ	0xFF8
  3066                           tblptrh	equ	0xFF7
  3067                           tblptrl	equ	0xFF6
  3068                           tablat	equ	0xFF5
  3069                           prodh	equ	0xFF4
  3070                           prodl	equ	0xFF3
  3071                           indf0	equ	0xFEF
  3072                           postinc0	equ	0xFEE
  3073                           postdec0	equ	0xFED
  3074                           preinc0	equ	0xFEC
  3075                           plusw0	equ	0xFEB
  3076                           fsr0h	equ	0xFEA
  3077                           fsr0l	equ	0xFE9
  3078                           wreg	equ	0xFE8
  3079                           indf1	equ	0xFE7
  3080                           postinc1	equ	0xFE6
  3081                           postdec1	equ	0xFE5
  3082                           preinc1	equ	0xFE4
  3083                           plusw1	equ	0xFE3
  3084                           fsr1h	equ	0xFE2
  3085                           fsr1l	equ	0xFE1
  3086                           bsr	equ	0xFE0
  3087                           indf2	equ	0xFDF
  3088                           postinc2	equ	0xFDE
  3089                           postdec2	equ	0xFDD
  3090                           preinc2	equ	0xFDC
  3091                           plusw2	equ	0xFDB
  3092                           fsr2h	equ	0xFDA
  3093                           fsr2l	equ	0xFD9
  3094                           status	equ	0xFD8

Data Sizes:
    Strings     31
    Constant    0
    Data        0
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     50      98
    BANK0           128      5       5
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    sp__GetString	PTR unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), STR_6(CODE[1]), STR_7(CODE[1]), STR_8(CODE[1]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[3]), STR_2(CODE[6]), STR_3(CODE[5]), STR_4(CODE[9]), 
		 -> STR_5(CODE[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_strcpy
    _strcpy->_GetString
    _MyusartRead->i1_UART_Write_Text
    i1_UART_Write_Text->i1_UART_Write

Critical Paths under _Hi_ISR in COMRAM

    _Hi_ISR->i2_UART_Write_Text
    i2_UART_Write_Text->i2_UART_Write

Critical Paths under _main in BANK0

    _main->_UART_Write_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     289
                  _SYSTEM_Initialize
                    _UART_Write_Text
                      _displayBinary
 ---------------------------------------------------------------------------------
 (1) _displayBinary                                        3     1      2     127
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      4     3      1     162
                                              1 BANK0      4     3      1
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      29
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                              32    32      0     796
                                             18 COMRAM    32    32      0
                        _ClearBuffer
                          _GetString
                        _MyusartRead
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               3     1      2      91
                                             10 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     3      3      81
                                             12 COMRAM     6     3      3
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          1     1      0     216
                                             15 COMRAM     1     1      0
                       i1_UART_Write
                  i1_UART_Write_Text
 ---------------------------------------------------------------------------------
 (5) i1_UART_Write_Text                                    4     3      1     120
                                             11 COMRAM     4     3      1
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (6) i1_UART_Write                                         1     1      0      29
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _GetString                                            2     0      2       0
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ClearBuffer                                          2     2      0      45
                                             10 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Hi_ISR                                               5     5      0     122
                                              5 COMRAM     5     5      0
                  i2_UART_Write_Text
 ---------------------------------------------------------------------------------
 (8) i2_UART_Write_Text                                    4     3      1     122
                                              1 COMRAM     4     3      1
                       i2_UART_Write
 ---------------------------------------------------------------------------------
 (9) i2_UART_Write                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _UART_Write_Text
     _UART_Write
   _displayBinary

 _Lo_ISR (ROOT)
   _ClearBuffer
   _GetString
   _MyusartRead
     i1_UART_Write
     i1_UART_Write_Text
       i1_UART_Write
   _strcpy
     _GetString (ARG)
   _strlen

 _Hi_ISR (ROOT)
   i2_UART_Write_Text
     i2_UART_Write

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1523      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK5           244      0       0      0.0%
BANK5              244      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      5       5      3.9%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     50      98     77.8%
BITBIGSFR_1h        38      0       0      0.0%
BITBIGSFRh          18      0       0      0.0%
BITBIGSFR_1llh      12      0       0      0.0%
BITBIGSFR_5h        10      0       0      0.0%
BITBIGSFRl           9      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_5l         2      0       0      0.0%
BITBIGSFR_1lh        1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     103      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Jan 13 18:57:41 2025

                           l41 0A3A                             l56 0A2A                             l59 0A32  
                           l92 09F0                             l86 09BE                             l89 09DE  
                           l98 0818                             bsr 0FE0                            l163 0756  
                          u820 09EC                            u900 0746                            u821 09E8  
                          u901 073E                            u830 0818                            u831 0814  
                          u840 06DA                            u920 0792                            u841 06D2  
                          u921 078E                            u930 07A4                            u931 07A0  
                          u860 06FC                            u861 06F4                            u918 074A  
                          u880 0720                            u881 0718                            u858 06DE  
                          u878 0700                            u898 0724                            _str 0033  
               ?_displayBinary 0080                            wreg 0FE8                           l1400 07CC  
                         l1402 07DA                           l1410 0758                           l1404 07F0  
                         l1420 0764                           l1412 075C                           l1406 07F6  
                         l1430 0772                           l1422 0766                           l1414 075E  
                         l1408 06C6                           l1440 077C                           l1432 0774  
                         l1424 0768                           l1416 0760                           l1370 099E  
                         l1450 07BC                           l1442 0780                           l1434 0776  
                         l1426 076A                           l1418 0762                           l1380 09B2  
                         l1372 09A8                           l1444 0792                           l1436 0778  
                         l1428 076C                           l1366 0A34                           l1390 09BC  
                         l1382 09B4                           l1374 09AC                           l1446 07A4  
                         l1438 077A                           l1368 0A2C                           l1384 09B6  
                         l1376 09AE                           l1392 09DE                           l1448 07B2  
                         l1386 09B8                           l1378 09B0                           l1394 09EC  
                         l1388 09BA                           l1396 0A1E                           l1398 0A26  
                         _ADFM 7E07                           STR_1 0609                           STR_2 0615  
                         STR_3 061B                           STR_4 060C                           STR_5 0601  
                         STR_6 060B                           STR_7 060B                           STR_8 060B  
                         _CREN 7D5C                           _LATA 0F89                           _RCIF 7CF5  
                         i1l92 0A06                           i1l89 09F4                           i1l98 08AE  
                         i2l92 0A1C                           i2l89 0A0A                           i2l98 08F8  
                         _main 0758                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf1 0FE7                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 0063                           start 0226  
                 ___param_bank 0000        __end_of_UART_Write_Text 081A               ?_UART_Initialize 0001  
__end_of_OSCILLATOR_Initialize 0A34                          ?_main 0001                          _IRCF0 7E9C  
                        _IRCF1 7E9D                          _IRCF2 7E9E                          i1l110 0A3E  
                        i1l103 0934                          i1l107 096E                          i1l194 01F6  
                        i2l183 06B2                          i1l950 0902                          i1l952 090C  
                        i1l944 08FA                          i1l954 0910                          i1l956 092C  
                        i1l884 099C                          i1l878 0864                          _RCREG 0FAE  
                        _SPBRG 0FAF                          _TRISA 0F92                          _TRISB 0F93  
                        _TXREG 0FAD                    ?_UART_Write 0001                          _count 004B  
                  _ClearBuffer 08FA                          tablat 0FF5                          ttemp5 0064  
                        ttemp6 0067                          ttemp7 006B                          status 0FD8  
                        wtemp8 0064                __initialization 09C0                   __end_of_main 07CC  
                       ??_main 0085                ??_displayBinary 0082                  __activetblptr 0002  
           i1UART_Write_Text@i 000E                         _ADCON1 0FC1                         _ADRESH 0FC4  
                       _ADRESL 0FC3                         i1l1200 0968                         i1l1210 081A  
                       i1l1204 0A3C                         i1l1212 081E                         i1l1220 0990  
                       i1l1300 0062                         i1l1214 0970                         i1l1310 00A4  
                       i1l1302 0068                         i1l1216 0978                         i1l1320 00EA  
                       i1l1312 00A8                         i1l1304 006C                         i1l1218 097A  
                       i1l1330 011C                         i1l1322 00EE                         i1l1314 00BA  
                       i1l1306 007E                         i1l1164 09F4                         i1l1172 0866  
                       i1l1340 0166                         i1l1332 012E                         i1l1324 0106  
                       i1l1316 00CC                         i1l1308 0090                         i1l1166 0A02  
                       i1l1174 0872                         i1l1190 093A                         i1l1350 0194  
                       i1l1342 016A                         i1l1334 0140                         i1l1318 00E8  
                       i1l1176 0888                         i1l1192 094C                         i1l1360 01DE  
                       i1l1352 01A6                         i1l1336 0152                         i1l1328 010A  
                       i1l1178 088C                         i1l1362 01E2                         i1l1354 01B8  
                       i1l1338 0164                         i1l1196 0958                         i1l1188 0936  
                       i1l1356 01CA                         i1l1348 0182                         i1l1198 0964  
                       i1l1358 01CE                         i1l1296 0046                         i1l1298 0054  
                       i2l1230 08D6                         i2l1224 08B0                         i2l1170 0A18  
                       i2l1226 08BC                         i2l1228 08D2                         i2l1168 0A0A  
                       i2l1280 0662                         i2l1290 06A8                         i2l1282 066E  
                       i2l1274 0634                         i2l1284 0680                         i2l1292 06AC  
                       i2l1276 0642                         i2l1294 06B0                         i2l1286 068C  
                       i2l1278 0650                         i2l1288 06A0                         i1u6_20 092C  
                       i1u6_21 0928                         _Hi_ISR 0008                         _Lo_ISR 0018  
             ?_UART_Write_Text 0081                         _lenStr 004D                         clear_0 09C6  
                       isa$std 0001                         _strcpy 081A                         _strlen 0970  
                 __mediumconst 0000                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8              _SYSTEM_Initialize 0A1E                     __accesstop 0080  
      __end_of__initialization 09CC             ?_SYSTEM_Initialize 0001                  ___rparam_used 0001  
            __end_of_GetString 0A40                  ?i1_UART_Write 0001                 __pcstackCOMRAM 0001  
          ??_SYSTEM_Initialize 0080                  ??_MyusartRead 0010                  ?i2_UART_Write 0001  
    __end_of_SYSTEM_Initialize 0A2C          i1UART_Write_Text@text 000C                        ?_Hi_ISR 0001  
             i2UART_Write@data 0001                        ?_Lo_ISR 0001                 ??i1_UART_Write 000B  
           i2UART_Write_Text@i 0004                        _CCP1CON 0FBD                        ?_strcpy 000D  
                      ?_strlen 000B                 ??i2_UART_Write 0001                   ??_UART_Write 0080  
                      i1u43_20 0A02                        i1u43_21 09FE                        i1u45_20 08AE  
                      i1u45_21 08AA                        i1u70_20 00BA                        i1u70_21 00B6  
                      i1u47_20 094C                        i1u71_20 00CC                        i1u47_21 0948  
                      i1u71_21 00C8                        i1u56_20 0852                        i1u80_20 01B8  
                      i1u72_20 00E8                        i1u80_21 01B4                        i1u72_21 00E4  
                      i1u56_27 0848                        i1u57_20 0864                        i1u81_20 01CA  
                      i1u73_20 011C                        i1u57_21 0860                        i1u81_21 01C6  
                      i1u73_21 0118                        i1u58_20 0990                        i1u74_20 012E  
                      i1u66_20 0054                        i1u58_21 098C                        i1u74_21 012A  
                      i1u66_21 0050                        i1u75_20 0140                        i1u67_20 0062  
                      i1u75_21 013C                        i1u67_21 005E                        i1u76_20 0152  
                      i1u68_20 007E                        i1u76_21 014E                        i1u68_21 007A  
                      i2u44_40 0A18                        i2u44_41 0A14                        i1u77_20 0164  
                      i1u69_20 0090                        i1u77_21 0160                        i1u69_21 008C  
                      i1u78_20 0194                        i1u78_21 0190                        i2u62_40 0642  
                      i2u62_41 063E                        i1u79_20 01A6                        i1u79_21 01A2  
                      i2u63_40 0662                        i2u63_41 065E                        i2u64_40 0680  
                      i2u64_41 067C                        i2u65_40 06A0                        i2u65_41 069C  
                      i2u59_40 08F8                        i2u59_41 08F4                        i2u94_47 0648  
                 ?_ClearBuffer 0001            __end_of_MyusartRead 0970                        __Hparam 0000  
                      __Lparam 0000             __end_of_UART_Write 09F2                   __psmallconst 0600  
                      __pcinit 09C0                        __ramtop 0600                        __ptext0 0758  
                      __ptext1 06C6                        __ptext2 07CC                        __ptext3 09DA  
                      __ptext4 0A1E                        __ptext5 099E                        __ptext6 0A2C  
                      __ptext7 0A34                        __ptext9 0970          _OSCILLATOR_Initialize 0A2C  
               __pintcode_body 0622           end_of_initialization 09CC                  __Lmediumconst 0000  
                      int_func 0622                      _RCSTAbits 0FAB                        postinc0 0FEE  
                      strcpy@d 0012                        strlen@a 000D                        strlen@s 000B  
               UART_Write@data 0080          __end_of_displayBinary 0758                      _TRISAbits 0F92  
                    _TRISCbits 0F94                    _MyusartRead 0936           __end_ofi1_UART_Write 0A08  
                    _TXSTAbits 0FAC                 __end_of_Hi_ISR 06C6                 __end_of_Lo_ISR 0226  
         __end_ofi2_UART_Write 0A1E   __end_of_INTERRUPT_Initialize 0A3C                      _GetString 0A3C  
            i1_UART_Write_Text 0866                    _BAUDCONbits 0FB8         ?_OSCILLATOR_Initialize 0001  
           ?i1_UART_Write_Text 000C                 __end_of_strcpy 0866                 __end_of_strlen 099E  
          start_initialization 09C0            ??i1_UART_Write_Text 000D                   ClearBuffer@i 000B  
            ??_UART_Initialize 0080                       ??_Hi_ISR 0006                       ??_Lo_ISR 0013  
    __end_ofi1_UART_Write_Text 08B0                     ?_GetString 000B                       ??_strcpy 0010  
                     ??_strlen 000D               displayBinary@num 0080                    __pbssCOMRAM 0033  
            i2_UART_Write_Text 08B0                  __pcstackBANK0 0080             ?i2_UART_Write_Text 0002  
        i2UART_Write_Text@text 0002            ??i2_UART_Write_Text 0003                  Lo_ISR@command 001F  
                    __pintcode 0008                    __pintcodelo 0018      __end_ofi2_UART_Write_Text 08FA  
                  __smallconst 0600              ??_UART_Write_Text 0082           _INTERRUPT_Initialize 0A34  
                  _isConnected 0049                       _LATAbits 0F89                       _LATBbits 0F8A  
                     _IPR1bits 0F9F                       _PIE1bits 0F9D                       _PIR1bits 0F9E  
                 i1_UART_Write 09F2                       _RCONbits 0FD0                    ??_GetString 000D  
                   _ADCON0bits 0FC2                     _ADCON2bits 0FC0        MyusartRead@receivedData 0010  
                 ?_MyusartRead 0001                    _needSendMsg 0047                   i2_UART_Write 0A08  
        ?_INTERRUPT_Initialize 0001               i1UART_Write@data 000B                       __Hrparam 0000  
                     __Lrparam 0000        ??_OSCILLATOR_Initialize 0080                _UART_Initialize 099E  
                     __ptext10 081A                       __ptext11 0936                       __ptext12 0866  
                     __ptext13 09F2                       __ptext14 0A3C                       __ptext15 08FA  
                     __ptext17 08B0                       __ptext18 0A08                     strcpy@dest 000D  
          UART_Write_Text@text 0081                       isa$xinst 0000                       int$flags 0063  
                     _mystring 004F                     _INTCONbits 0FF2         ??_INTERRUPT_Initialize 0080  
                ??_ClearBuffer 000B                       intlevel1 0000                       intlevel2 0000  
                    strcpy@src 000E        __end_of_UART_Initialize 09C0                _UART_Write_Text 07CC  
                _displayBinary 06C6                     _UART_Write 09DA               UART_Write_Text@i 0083  
          __end_of_ClearBuffer 0936  
