

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Jan 14 00:21:09 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=3
    32                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=3
    33                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47   000000                     
    48                           ; Generated 25/07/2024 GMT
    49                           ; 
    50                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4520 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000FE0                     bsr             equ	4064
    83   000FE9                     fsr0            equ	4073
    84   000FEA                     fsr0h           equ	4074
    85   000FE9                     fsr0l           equ	4073
    86   000FE1                     fsr1            equ	4065
    87   000FE2                     fsr1h           equ	4066
    88   000FE1                     fsr1l           equ	4065
    89   000FD9                     fsr2            equ	4057
    90   000FDA                     fsr2h           equ	4058
    91   000FD9                     fsr2l           equ	4057
    92   000FEF                     indf0           equ	4079
    93   000FE7                     indf1           equ	4071
    94   000FDF                     indf2           equ	4063
    95   000FF2                     intcon          equ	4082
    96   000000                     nvmcon          equ	0
    97   000FF9                     pcl             equ	4089
    98   000FFA                     pclath          equ	4090
    99   000FFB                     pclatu          equ	4091
   100   000FEB                     plusw0          equ	4075
   101   000FE3                     plusw1          equ	4067
   102   000FDB                     plusw2          equ	4059
   103   000FED                     postdec0        equ	4077
   104   000FE5                     postdec1        equ	4069
   105   000FDD                     postdec2        equ	4061
   106   000FEE                     postinc0        equ	4078
   107   000FE6                     postinc1        equ	4070
   108   000FDE                     postinc2        equ	4062
   109   000FEC                     preinc0         equ	4076
   110   000FE4                     preinc1         equ	4068
   111   000FDC                     preinc2         equ	4060
   112   000FF3                     prod            equ	4083
   113   000FF4                     prodh           equ	4084
   114   000FF3                     prodl           equ	4083
   115   000FD8                     status          equ	4056
   116   000FF5                     tablat          equ	4085
   117   000FF6                     tblptr          equ	4086
   118   000FF7                     tblptrh         equ	4087
   119   000FF6                     tblptrl         equ	4086
   120   000FF8                     tblptru         equ	4088
   121   000FFD                     tosl            equ	4093
   122   000FE8                     wreg            equ	4072
   123   000F80                     PORTA           equ	3968	;# 
   124   000F81                     PORTB           equ	3969	;# 
   125   000F82                     PORTC           equ	3970	;# 
   126   000F83                     PORTD           equ	3971	;# 
   127   000F84                     PORTE           equ	3972	;# 
   128   000F89                     LATA            equ	3977	;# 
   129   000F8A                     LATB            equ	3978	;# 
   130   000F8B                     LATC            equ	3979	;# 
   131   000F8C                     LATD            equ	3980	;# 
   132   000F8D                     LATE            equ	3981	;# 
   133   000F92                     TRISA           equ	3986	;# 
   134   000F92                     DDRA            equ	3986	;# 
   135   000F93                     TRISB           equ	3987	;# 
   136   000F93                     DDRB            equ	3987	;# 
   137   000F94                     TRISC           equ	3988	;# 
   138   000F94                     DDRC            equ	3988	;# 
   139   000F95                     TRISD           equ	3989	;# 
   140   000F95                     DDRD            equ	3989	;# 
   141   000F96                     TRISE           equ	3990	;# 
   142   000F96                     DDRE            equ	3990	;# 
   143   000F9B                     OSCTUNE         equ	3995	;# 
   144   000F9D                     PIE1            equ	3997	;# 
   145   000F9E                     PIR1            equ	3998	;# 
   146   000F9F                     IPR1            equ	3999	;# 
   147   000FA0                     PIE2            equ	4000	;# 
   148   000FA1                     PIR2            equ	4001	;# 
   149   000FA2                     IPR2            equ	4002	;# 
   150   000FA6                     EECON1          equ	4006	;# 
   151   000FA7                     EECON2          equ	4007	;# 
   152   000FA8                     EEDATA          equ	4008	;# 
   153   000FA9                     EEADR           equ	4009	;# 
   154   000FAB                     RCSTA           equ	4011	;# 
   155   000FAB                     RCSTA1          equ	4011	;# 
   156   000FAC                     TXSTA           equ	4012	;# 
   157   000FAC                     TXSTA1          equ	4012	;# 
   158   000FAD                     TXREG           equ	4013	;# 
   159   000FAD                     TXREG1          equ	4013	;# 
   160   000FAE                     RCREG           equ	4014	;# 
   161   000FAE                     RCREG1          equ	4014	;# 
   162   000FAF                     SPBRG           equ	4015	;# 
   163   000FAF                     SPBRG1          equ	4015	;# 
   164   000FB0                     SPBRGH          equ	4016	;# 
   165   000FB1                     T3CON           equ	4017	;# 
   166   000FB2                     TMR3            equ	4018	;# 
   167   000FB2                     TMR3L           equ	4018	;# 
   168   000FB3                     TMR3H           equ	4019	;# 
   169   000FB4                     CMCON           equ	4020	;# 
   170   000FB5                     CVRCON          equ	4021	;# 
   171   000FB6                     ECCP1AS         equ	4022	;# 
   172   000FB6                     ECCPAS          equ	4022	;# 
   173   000FB7                     PWM1CON         equ	4023	;# 
   174   000FB7                     ECCP1DEL        equ	4023	;# 
   175   000FB8                     BAUDCON         equ	4024	;# 
   176   000FB8                     BAUDCTL         equ	4024	;# 
   177   000FBA                     CCP2CON         equ	4026	;# 
   178   000FBB                     CCPR2           equ	4027	;# 
   179   000FBB                     CCPR2L          equ	4027	;# 
   180   000FBC                     CCPR2H          equ	4028	;# 
   181   000FBD                     CCP1CON         equ	4029	;# 
   182   000FBE                     CCPR1           equ	4030	;# 
   183   000FBE                     CCPR1L          equ	4030	;# 
   184   000FBF                     CCPR1H          equ	4031	;# 
   185   000FC0                     ADCON2          equ	4032	;# 
   186   000FC1                     ADCON1          equ	4033	;# 
   187   000FC2                     ADCON0          equ	4034	;# 
   188   000FC3                     ADRES           equ	4035	;# 
   189   000FC3                     ADRESL          equ	4035	;# 
   190   000FC4                     ADRESH          equ	4036	;# 
   191   000FC5                     SSPCON2         equ	4037	;# 
   192   000FC6                     SSPCON1         equ	4038	;# 
   193   000FC7                     SSPSTAT         equ	4039	;# 
   194   000FC8                     SSPADD          equ	4040	;# 
   195   000FC9                     SSPBUF          equ	4041	;# 
   196   000FCA                     T2CON           equ	4042	;# 
   197   000FCB                     PR2             equ	4043	;# 
   198   000FCB                     MEMCON          equ	4043	;# 
   199   000FCC                     TMR2            equ	4044	;# 
   200   000FCD                     T1CON           equ	4045	;# 
   201   000FCE                     TMR1            equ	4046	;# 
   202   000FCE                     TMR1L           equ	4046	;# 
   203   000FCF                     TMR1H           equ	4047	;# 
   204   000FD0                     RCON            equ	4048	;# 
   205   000FD1                     WDTCON          equ	4049	;# 
   206   000FD2                     HLVDCON         equ	4050	;# 
   207   000FD2                     LVDCON          equ	4050	;# 
   208   000FD3                     OSCCON          equ	4051	;# 
   209   000FD5                     T0CON           equ	4053	;# 
   210   000FD6                     TMR0            equ	4054	;# 
   211   000FD6                     TMR0L           equ	4054	;# 
   212   000FD7                     TMR0H           equ	4055	;# 
   213   000FD8                     STATUS          equ	4056	;# 
   214   000FD9                     FSR2            equ	4057	;# 
   215   000FD9                     FSR2L           equ	4057	;# 
   216   000FDA                     FSR2H           equ	4058	;# 
   217   000FDB                     PLUSW2          equ	4059	;# 
   218   000FDC                     PREINC2         equ	4060	;# 
   219   000FDD                     POSTDEC2        equ	4061	;# 
   220   000FDE                     POSTINC2        equ	4062	;# 
   221   000FDF                     INDF2           equ	4063	;# 
   222   000FE0                     BSR             equ	4064	;# 
   223   000FE1                     FSR1            equ	4065	;# 
   224   000FE1                     FSR1L           equ	4065	;# 
   225   000FE2                     FSR1H           equ	4066	;# 
   226   000FE3                     PLUSW1          equ	4067	;# 
   227   000FE4                     PREINC1         equ	4068	;# 
   228   000FE5                     POSTDEC1        equ	4069	;# 
   229   000FE6                     POSTINC1        equ	4070	;# 
   230   000FE7                     INDF1           equ	4071	;# 
   231   000FE8                     WREG            equ	4072	;# 
   232   000FE9                     FSR0            equ	4073	;# 
   233   000FE9                     FSR0L           equ	4073	;# 
   234   000FEA                     FSR0H           equ	4074	;# 
   235   000FEB                     PLUSW0          equ	4075	;# 
   236   000FEC                     PREINC0         equ	4076	;# 
   237   000FED                     POSTDEC0        equ	4077	;# 
   238   000FEE                     POSTINC0        equ	4078	;# 
   239   000FEF                     INDF0           equ	4079	;# 
   240   000FF0                     INTCON3         equ	4080	;# 
   241   000FF1                     INTCON2         equ	4081	;# 
   242   000FF2                     INTCON          equ	4082	;# 
   243   000FF3                     PROD            equ	4083	;# 
   244   000FF3                     PRODL           equ	4083	;# 
   245   000FF4                     PRODH           equ	4084	;# 
   246   000FF5                     TABLAT          equ	4085	;# 
   247   000FF6                     TBLPTR          equ	4086	;# 
   248   000FF6                     TBLPTRL         equ	4086	;# 
   249   000FF7                     TBLPTRH         equ	4087	;# 
   250   000FF8                     TBLPTRU         equ	4088	;# 
   251   000FF9                     PCLAT           equ	4089	;# 
   252   000FF9                     PC              equ	4089	;# 
   253   000FF9                     PCL             equ	4089	;# 
   254   000FFA                     PCLATH          equ	4090	;# 
   255   000FFB                     PCLATU          equ	4091	;# 
   256   000FFC                     STKPTR          equ	4092	;# 
   257   000FFD                     TOS             equ	4093	;# 
   258   000FFD                     TOSL            equ	4093	;# 
   259   000FFE                     TOSH            equ	4094	;# 
   260   000FFF                     TOSU            equ	4095	;# 
   261   000F80                     PORTA           equ	3968	;# 
   262   000F81                     PORTB           equ	3969	;# 
   263   000F82                     PORTC           equ	3970	;# 
   264   000F83                     PORTD           equ	3971	;# 
   265   000F84                     PORTE           equ	3972	;# 
   266   000F89                     LATA            equ	3977	;# 
   267   000F8A                     LATB            equ	3978	;# 
   268   000F8B                     LATC            equ	3979	;# 
   269   000F8C                     LATD            equ	3980	;# 
   270   000F8D                     LATE            equ	3981	;# 
   271   000F92                     TRISA           equ	3986	;# 
   272   000F92                     DDRA            equ	3986	;# 
   273   000F93                     TRISB           equ	3987	;# 
   274   000F93                     DDRB            equ	3987	;# 
   275   000F94                     TRISC           equ	3988	;# 
   276   000F94                     DDRC            equ	3988	;# 
   277   000F95                     TRISD           equ	3989	;# 
   278   000F95                     DDRD            equ	3989	;# 
   279   000F96                     TRISE           equ	3990	;# 
   280   000F96                     DDRE            equ	3990	;# 
   281   000F9B                     OSCTUNE         equ	3995	;# 
   282   000F9D                     PIE1            equ	3997	;# 
   283   000F9E                     PIR1            equ	3998	;# 
   284   000F9F                     IPR1            equ	3999	;# 
   285   000FA0                     PIE2            equ	4000	;# 
   286   000FA1                     PIR2            equ	4001	;# 
   287   000FA2                     IPR2            equ	4002	;# 
   288   000FA6                     EECON1          equ	4006	;# 
   289   000FA7                     EECON2          equ	4007	;# 
   290   000FA8                     EEDATA          equ	4008	;# 
   291   000FA9                     EEADR           equ	4009	;# 
   292   000FAB                     RCSTA           equ	4011	;# 
   293   000FAB                     RCSTA1          equ	4011	;# 
   294   000FAC                     TXSTA           equ	4012	;# 
   295   000FAC                     TXSTA1          equ	4012	;# 
   296   000FAD                     TXREG           equ	4013	;# 
   297   000FAD                     TXREG1          equ	4013	;# 
   298   000FAE                     RCREG           equ	4014	;# 
   299   000FAE                     RCREG1          equ	4014	;# 
   300   000FAF                     SPBRG           equ	4015	;# 
   301   000FAF                     SPBRG1          equ	4015	;# 
   302   000FB0                     SPBRGH          equ	4016	;# 
   303   000FB1                     T3CON           equ	4017	;# 
   304   000FB2                     TMR3            equ	4018	;# 
   305   000FB2                     TMR3L           equ	4018	;# 
   306   000FB3                     TMR3H           equ	4019	;# 
   307   000FB4                     CMCON           equ	4020	;# 
   308   000FB5                     CVRCON          equ	4021	;# 
   309   000FB6                     ECCP1AS         equ	4022	;# 
   310   000FB6                     ECCPAS          equ	4022	;# 
   311   000FB7                     PWM1CON         equ	4023	;# 
   312   000FB7                     ECCP1DEL        equ	4023	;# 
   313   000FB8                     BAUDCON         equ	4024	;# 
   314   000FB8                     BAUDCTL         equ	4024	;# 
   315   000FBA                     CCP2CON         equ	4026	;# 
   316   000FBB                     CCPR2           equ	4027	;# 
   317   000FBB                     CCPR2L          equ	4027	;# 
   318   000FBC                     CCPR2H          equ	4028	;# 
   319   000FBD                     CCP1CON         equ	4029	;# 
   320   000FBE                     CCPR1           equ	4030	;# 
   321   000FBE                     CCPR1L          equ	4030	;# 
   322   000FBF                     CCPR1H          equ	4031	;# 
   323   000FC0                     ADCON2          equ	4032	;# 
   324   000FC1                     ADCON1          equ	4033	;# 
   325   000FC2                     ADCON0          equ	4034	;# 
   326   000FC3                     ADRES           equ	4035	;# 
   327   000FC3                     ADRESL          equ	4035	;# 
   328   000FC4                     ADRESH          equ	4036	;# 
   329   000FC5                     SSPCON2         equ	4037	;# 
   330   000FC6                     SSPCON1         equ	4038	;# 
   331   000FC7                     SSPSTAT         equ	4039	;# 
   332   000FC8                     SSPADD          equ	4040	;# 
   333   000FC9                     SSPBUF          equ	4041	;# 
   334   000FCA                     T2CON           equ	4042	;# 
   335   000FCB                     PR2             equ	4043	;# 
   336   000FCB                     MEMCON          equ	4043	;# 
   337   000FCC                     TMR2            equ	4044	;# 
   338   000FCD                     T1CON           equ	4045	;# 
   339   000FCE                     TMR1            equ	4046	;# 
   340   000FCE                     TMR1L           equ	4046	;# 
   341   000FCF                     TMR1H           equ	4047	;# 
   342   000FD0                     RCON            equ	4048	;# 
   343   000FD1                     WDTCON          equ	4049	;# 
   344   000FD2                     HLVDCON         equ	4050	;# 
   345   000FD2                     LVDCON          equ	4050	;# 
   346   000FD3                     OSCCON          equ	4051	;# 
   347   000FD5                     T0CON           equ	4053	;# 
   348   000FD6                     TMR0            equ	4054	;# 
   349   000FD6                     TMR0L           equ	4054	;# 
   350   000FD7                     TMR0H           equ	4055	;# 
   351   000FD8                     STATUS          equ	4056	;# 
   352   000FD9                     FSR2            equ	4057	;# 
   353   000FD9                     FSR2L           equ	4057	;# 
   354   000FDA                     FSR2H           equ	4058	;# 
   355   000FDB                     PLUSW2          equ	4059	;# 
   356   000FDC                     PREINC2         equ	4060	;# 
   357   000FDD                     POSTDEC2        equ	4061	;# 
   358   000FDE                     POSTINC2        equ	4062	;# 
   359   000FDF                     INDF2           equ	4063	;# 
   360   000FE0                     BSR             equ	4064	;# 
   361   000FE1                     FSR1            equ	4065	;# 
   362   000FE1                     FSR1L           equ	4065	;# 
   363   000FE2                     FSR1H           equ	4066	;# 
   364   000FE3                     PLUSW1          equ	4067	;# 
   365   000FE4                     PREINC1         equ	4068	;# 
   366   000FE5                     POSTDEC1        equ	4069	;# 
   367   000FE6                     POSTINC1        equ	4070	;# 
   368   000FE7                     INDF1           equ	4071	;# 
   369   000FE8                     WREG            equ	4072	;# 
   370   000FE9                     FSR0            equ	4073	;# 
   371   000FE9                     FSR0L           equ	4073	;# 
   372   000FEA                     FSR0H           equ	4074	;# 
   373   000FEB                     PLUSW0          equ	4075	;# 
   374   000FEC                     PREINC0         equ	4076	;# 
   375   000FED                     POSTDEC0        equ	4077	;# 
   376   000FEE                     POSTINC0        equ	4078	;# 
   377   000FEF                     INDF0           equ	4079	;# 
   378   000FF0                     INTCON3         equ	4080	;# 
   379   000FF1                     INTCON2         equ	4081	;# 
   380   000FF2                     INTCON          equ	4082	;# 
   381   000FF3                     PROD            equ	4083	;# 
   382   000FF3                     PRODL           equ	4083	;# 
   383   000FF4                     PRODH           equ	4084	;# 
   384   000FF5                     TABLAT          equ	4085	;# 
   385   000FF6                     TBLPTR          equ	4086	;# 
   386   000FF6                     TBLPTRL         equ	4086	;# 
   387   000FF7                     TBLPTRH         equ	4087	;# 
   388   000FF8                     TBLPTRU         equ	4088	;# 
   389   000FF9                     PCLAT           equ	4089	;# 
   390   000FF9                     PC              equ	4089	;# 
   391   000FF9                     PCL             equ	4089	;# 
   392   000FFA                     PCLATH          equ	4090	;# 
   393   000FFB                     PCLATU          equ	4091	;# 
   394   000FFC                     STKPTR          equ	4092	;# 
   395   000FFD                     TOS             equ	4093	;# 
   396   000FFD                     TOSL            equ	4093	;# 
   397   000FFE                     TOSH            equ	4094	;# 
   398   000FFF                     TOSU            equ	4095	;# 
   399   000F80                     PORTA           equ	3968	;# 
   400   000F81                     PORTB           equ	3969	;# 
   401   000F82                     PORTC           equ	3970	;# 
   402   000F83                     PORTD           equ	3971	;# 
   403   000F84                     PORTE           equ	3972	;# 
   404   000F89                     LATA            equ	3977	;# 
   405   000F8A                     LATB            equ	3978	;# 
   406   000F8B                     LATC            equ	3979	;# 
   407   000F8C                     LATD            equ	3980	;# 
   408   000F8D                     LATE            equ	3981	;# 
   409   000F92                     TRISA           equ	3986	;# 
   410   000F92                     DDRA            equ	3986	;# 
   411   000F93                     TRISB           equ	3987	;# 
   412   000F93                     DDRB            equ	3987	;# 
   413   000F94                     TRISC           equ	3988	;# 
   414   000F94                     DDRC            equ	3988	;# 
   415   000F95                     TRISD           equ	3989	;# 
   416   000F95                     DDRD            equ	3989	;# 
   417   000F96                     TRISE           equ	3990	;# 
   418   000F96                     DDRE            equ	3990	;# 
   419   000F9B                     OSCTUNE         equ	3995	;# 
   420   000F9D                     PIE1            equ	3997	;# 
   421   000F9E                     PIR1            equ	3998	;# 
   422   000F9F                     IPR1            equ	3999	;# 
   423   000FA0                     PIE2            equ	4000	;# 
   424   000FA1                     PIR2            equ	4001	;# 
   425   000FA2                     IPR2            equ	4002	;# 
   426   000FA6                     EECON1          equ	4006	;# 
   427   000FA7                     EECON2          equ	4007	;# 
   428   000FA8                     EEDATA          equ	4008	;# 
   429   000FA9                     EEADR           equ	4009	;# 
   430   000FAB                     RCSTA           equ	4011	;# 
   431   000FAB                     RCSTA1          equ	4011	;# 
   432   000FAC                     TXSTA           equ	4012	;# 
   433   000FAC                     TXSTA1          equ	4012	;# 
   434   000FAD                     TXREG           equ	4013	;# 
   435   000FAD                     TXREG1          equ	4013	;# 
   436   000FAE                     RCREG           equ	4014	;# 
   437   000FAE                     RCREG1          equ	4014	;# 
   438   000FAF                     SPBRG           equ	4015	;# 
   439   000FAF                     SPBRG1          equ	4015	;# 
   440   000FB0                     SPBRGH          equ	4016	;# 
   441   000FB1                     T3CON           equ	4017	;# 
   442   000FB2                     TMR3            equ	4018	;# 
   443   000FB2                     TMR3L           equ	4018	;# 
   444   000FB3                     TMR3H           equ	4019	;# 
   445   000FB4                     CMCON           equ	4020	;# 
   446   000FB5                     CVRCON          equ	4021	;# 
   447   000FB6                     ECCP1AS         equ	4022	;# 
   448   000FB6                     ECCPAS          equ	4022	;# 
   449   000FB7                     PWM1CON         equ	4023	;# 
   450   000FB7                     ECCP1DEL        equ	4023	;# 
   451   000FB8                     BAUDCON         equ	4024	;# 
   452   000FB8                     BAUDCTL         equ	4024	;# 
   453   000FBA                     CCP2CON         equ	4026	;# 
   454   000FBB                     CCPR2           equ	4027	;# 
   455   000FBB                     CCPR2L          equ	4027	;# 
   456   000FBC                     CCPR2H          equ	4028	;# 
   457   000FBD                     CCP1CON         equ	4029	;# 
   458   000FBE                     CCPR1           equ	4030	;# 
   459   000FBE                     CCPR1L          equ	4030	;# 
   460   000FBF                     CCPR1H          equ	4031	;# 
   461   000FC0                     ADCON2          equ	4032	;# 
   462   000FC1                     ADCON1          equ	4033	;# 
   463   000FC2                     ADCON0          equ	4034	;# 
   464   000FC3                     ADRES           equ	4035	;# 
   465   000FC3                     ADRESL          equ	4035	;# 
   466   000FC4                     ADRESH          equ	4036	;# 
   467   000FC5                     SSPCON2         equ	4037	;# 
   468   000FC6                     SSPCON1         equ	4038	;# 
   469   000FC7                     SSPSTAT         equ	4039	;# 
   470   000FC8                     SSPADD          equ	4040	;# 
   471   000FC9                     SSPBUF          equ	4041	;# 
   472   000FCA                     T2CON           equ	4042	;# 
   473   000FCB                     PR2             equ	4043	;# 
   474   000FCB                     MEMCON          equ	4043	;# 
   475   000FCC                     TMR2            equ	4044	;# 
   476   000FCD                     T1CON           equ	4045	;# 
   477   000FCE                     TMR1            equ	4046	;# 
   478   000FCE                     TMR1L           equ	4046	;# 
   479   000FCF                     TMR1H           equ	4047	;# 
   480   000FD0                     RCON            equ	4048	;# 
   481   000FD1                     WDTCON          equ	4049	;# 
   482   000FD2                     HLVDCON         equ	4050	;# 
   483   000FD2                     LVDCON          equ	4050	;# 
   484   000FD3                     OSCCON          equ	4051	;# 
   485   000FD5                     T0CON           equ	4053	;# 
   486   000FD6                     TMR0            equ	4054	;# 
   487   000FD6                     TMR0L           equ	4054	;# 
   488   000FD7                     TMR0H           equ	4055	;# 
   489   000FD8                     STATUS          equ	4056	;# 
   490   000FD9                     FSR2            equ	4057	;# 
   491   000FD9                     FSR2L           equ	4057	;# 
   492   000FDA                     FSR2H           equ	4058	;# 
   493   000FDB                     PLUSW2          equ	4059	;# 
   494   000FDC                     PREINC2         equ	4060	;# 
   495   000FDD                     POSTDEC2        equ	4061	;# 
   496   000FDE                     POSTINC2        equ	4062	;# 
   497   000FDF                     INDF2           equ	4063	;# 
   498   000FE0                     BSR             equ	4064	;# 
   499   000FE1                     FSR1            equ	4065	;# 
   500   000FE1                     FSR1L           equ	4065	;# 
   501   000FE2                     FSR1H           equ	4066	;# 
   502   000FE3                     PLUSW1          equ	4067	;# 
   503   000FE4                     PREINC1         equ	4068	;# 
   504   000FE5                     POSTDEC1        equ	4069	;# 
   505   000FE6                     POSTINC1        equ	4070	;# 
   506   000FE7                     INDF1           equ	4071	;# 
   507   000FE8                     WREG            equ	4072	;# 
   508   000FE9                     FSR0            equ	4073	;# 
   509   000FE9                     FSR0L           equ	4073	;# 
   510   000FEA                     FSR0H           equ	4074	;# 
   511   000FEB                     PLUSW0          equ	4075	;# 
   512   000FEC                     PREINC0         equ	4076	;# 
   513   000FED                     POSTDEC0        equ	4077	;# 
   514   000FEE                     POSTINC0        equ	4078	;# 
   515   000FEF                     INDF0           equ	4079	;# 
   516   000FF0                     INTCON3         equ	4080	;# 
   517   000FF1                     INTCON2         equ	4081	;# 
   518   000FF2                     INTCON          equ	4082	;# 
   519   000FF3                     PROD            equ	4083	;# 
   520   000FF3                     PRODL           equ	4083	;# 
   521   000FF4                     PRODH           equ	4084	;# 
   522   000FF5                     TABLAT          equ	4085	;# 
   523   000FF6                     TBLPTR          equ	4086	;# 
   524   000FF6                     TBLPTRL         equ	4086	;# 
   525   000FF7                     TBLPTRH         equ	4087	;# 
   526   000FF8                     TBLPTRU         equ	4088	;# 
   527   000FF9                     PCLAT           equ	4089	;# 
   528   000FF9                     PC              equ	4089	;# 
   529   000FF9                     PCL             equ	4089	;# 
   530   000FFA                     PCLATH          equ	4090	;# 
   531   000FFB                     PCLATU          equ	4091	;# 
   532   000FFC                     STKPTR          equ	4092	;# 
   533   000FFD                     TOS             equ	4093	;# 
   534   000FFD                     TOSL            equ	4093	;# 
   535   000FFE                     TOSH            equ	4094	;# 
   536   000FFF                     TOSU            equ	4095	;# 
   537   000F80                     PORTA           equ	3968	;# 
   538   000F81                     PORTB           equ	3969	;# 
   539   000F82                     PORTC           equ	3970	;# 
   540   000F83                     PORTD           equ	3971	;# 
   541   000F84                     PORTE           equ	3972	;# 
   542   000F89                     LATA            equ	3977	;# 
   543   000F8A                     LATB            equ	3978	;# 
   544   000F8B                     LATC            equ	3979	;# 
   545   000F8C                     LATD            equ	3980	;# 
   546   000F8D                     LATE            equ	3981	;# 
   547   000F92                     TRISA           equ	3986	;# 
   548   000F92                     DDRA            equ	3986	;# 
   549   000F93                     TRISB           equ	3987	;# 
   550   000F93                     DDRB            equ	3987	;# 
   551   000F94                     TRISC           equ	3988	;# 
   552   000F94                     DDRC            equ	3988	;# 
   553   000F95                     TRISD           equ	3989	;# 
   554   000F95                     DDRD            equ	3989	;# 
   555   000F96                     TRISE           equ	3990	;# 
   556   000F96                     DDRE            equ	3990	;# 
   557   000F9B                     OSCTUNE         equ	3995	;# 
   558   000F9D                     PIE1            equ	3997	;# 
   559   000F9E                     PIR1            equ	3998	;# 
   560   000F9F                     IPR1            equ	3999	;# 
   561   000FA0                     PIE2            equ	4000	;# 
   562   000FA1                     PIR2            equ	4001	;# 
   563   000FA2                     IPR2            equ	4002	;# 
   564   000FA6                     EECON1          equ	4006	;# 
   565   000FA7                     EECON2          equ	4007	;# 
   566   000FA8                     EEDATA          equ	4008	;# 
   567   000FA9                     EEADR           equ	4009	;# 
   568   000FAB                     RCSTA           equ	4011	;# 
   569   000FAB                     RCSTA1          equ	4011	;# 
   570   000FAC                     TXSTA           equ	4012	;# 
   571   000FAC                     TXSTA1          equ	4012	;# 
   572   000FAD                     TXREG           equ	4013	;# 
   573   000FAD                     TXREG1          equ	4013	;# 
   574   000FAE                     RCREG           equ	4014	;# 
   575   000FAE                     RCREG1          equ	4014	;# 
   576   000FAF                     SPBRG           equ	4015	;# 
   577   000FAF                     SPBRG1          equ	4015	;# 
   578   000FB0                     SPBRGH          equ	4016	;# 
   579   000FB1                     T3CON           equ	4017	;# 
   580   000FB2                     TMR3            equ	4018	;# 
   581   000FB2                     TMR3L           equ	4018	;# 
   582   000FB3                     TMR3H           equ	4019	;# 
   583   000FB4                     CMCON           equ	4020	;# 
   584   000FB5                     CVRCON          equ	4021	;# 
   585   000FB6                     ECCP1AS         equ	4022	;# 
   586   000FB6                     ECCPAS          equ	4022	;# 
   587   000FB7                     PWM1CON         equ	4023	;# 
   588   000FB7                     ECCP1DEL        equ	4023	;# 
   589   000FB8                     BAUDCON         equ	4024	;# 
   590   000FB8                     BAUDCTL         equ	4024	;# 
   591   000FBA                     CCP2CON         equ	4026	;# 
   592   000FBB                     CCPR2           equ	4027	;# 
   593   000FBB                     CCPR2L          equ	4027	;# 
   594   000FBC                     CCPR2H          equ	4028	;# 
   595   000FBD                     CCP1CON         equ	4029	;# 
   596   000FBE                     CCPR1           equ	4030	;# 
   597   000FBE                     CCPR1L          equ	4030	;# 
   598   000FBF                     CCPR1H          equ	4031	;# 
   599   000FC0                     ADCON2          equ	4032	;# 
   600   000FC1                     ADCON1          equ	4033	;# 
   601   000FC2                     ADCON0          equ	4034	;# 
   602   000FC3                     ADRES           equ	4035	;# 
   603   000FC3                     ADRESL          equ	4035	;# 
   604   000FC4                     ADRESH          equ	4036	;# 
   605   000FC5                     SSPCON2         equ	4037	;# 
   606   000FC6                     SSPCON1         equ	4038	;# 
   607   000FC7                     SSPSTAT         equ	4039	;# 
   608   000FC8                     SSPADD          equ	4040	;# 
   609   000FC9                     SSPBUF          equ	4041	;# 
   610   000FCA                     T2CON           equ	4042	;# 
   611   000FCB                     PR2             equ	4043	;# 
   612   000FCB                     MEMCON          equ	4043	;# 
   613   000FCC                     TMR2            equ	4044	;# 
   614   000FCD                     T1CON           equ	4045	;# 
   615   000FCE                     TMR1            equ	4046	;# 
   616   000FCE                     TMR1L           equ	4046	;# 
   617   000FCF                     TMR1H           equ	4047	;# 
   618   000FD0                     RCON            equ	4048	;# 
   619   000FD1                     WDTCON          equ	4049	;# 
   620   000FD2                     HLVDCON         equ	4050	;# 
   621   000FD2                     LVDCON          equ	4050	;# 
   622   000FD3                     OSCCON          equ	4051	;# 
   623   000FD5                     T0CON           equ	4053	;# 
   624   000FD6                     TMR0            equ	4054	;# 
   625   000FD6                     TMR0L           equ	4054	;# 
   626   000FD7                     TMR0H           equ	4055	;# 
   627   000FD8                     STATUS          equ	4056	;# 
   628   000FD9                     FSR2            equ	4057	;# 
   629   000FD9                     FSR2L           equ	4057	;# 
   630   000FDA                     FSR2H           equ	4058	;# 
   631   000FDB                     PLUSW2          equ	4059	;# 
   632   000FDC                     PREINC2         equ	4060	;# 
   633   000FDD                     POSTDEC2        equ	4061	;# 
   634   000FDE                     POSTINC2        equ	4062	;# 
   635   000FDF                     INDF2           equ	4063	;# 
   636   000FE0                     BSR             equ	4064	;# 
   637   000FE1                     FSR1            equ	4065	;# 
   638   000FE1                     FSR1L           equ	4065	;# 
   639   000FE2                     FSR1H           equ	4066	;# 
   640   000FE3                     PLUSW1          equ	4067	;# 
   641   000FE4                     PREINC1         equ	4068	;# 
   642   000FE5                     POSTDEC1        equ	4069	;# 
   643   000FE6                     POSTINC1        equ	4070	;# 
   644   000FE7                     INDF1           equ	4071	;# 
   645   000FE8                     WREG            equ	4072	;# 
   646   000FE9                     FSR0            equ	4073	;# 
   647   000FE9                     FSR0L           equ	4073	;# 
   648   000FEA                     FSR0H           equ	4074	;# 
   649   000FEB                     PLUSW0          equ	4075	;# 
   650   000FEC                     PREINC0         equ	4076	;# 
   651   000FED                     POSTDEC0        equ	4077	;# 
   652   000FEE                     POSTINC0        equ	4078	;# 
   653   000FEF                     INDF0           equ	4079	;# 
   654   000FF0                     INTCON3         equ	4080	;# 
   655   000FF1                     INTCON2         equ	4081	;# 
   656   000FF2                     INTCON          equ	4082	;# 
   657   000FF3                     PROD            equ	4083	;# 
   658   000FF3                     PRODL           equ	4083	;# 
   659   000FF4                     PRODH           equ	4084	;# 
   660   000FF5                     TABLAT          equ	4085	;# 
   661   000FF6                     TBLPTR          equ	4086	;# 
   662   000FF6                     TBLPTRL         equ	4086	;# 
   663   000FF7                     TBLPTRH         equ	4087	;# 
   664   000FF8                     TBLPTRU         equ	4088	;# 
   665   000FF9                     PCLAT           equ	4089	;# 
   666   000FF9                     PC              equ	4089	;# 
   667   000FF9                     PCL             equ	4089	;# 
   668   000FFA                     PCLATH          equ	4090	;# 
   669   000FFB                     PCLATU          equ	4091	;# 
   670   000FFC                     STKPTR          equ	4092	;# 
   671   000FFD                     TOS             equ	4093	;# 
   672   000FFD                     TOSL            equ	4093	;# 
   673   000FFE                     TOSH            equ	4094	;# 
   674   000FFF                     TOSU            equ	4095	;# 
   675   000F80                     PORTA           equ	3968	;# 
   676   000F81                     PORTB           equ	3969	;# 
   677   000F82                     PORTC           equ	3970	;# 
   678   000F83                     PORTD           equ	3971	;# 
   679   000F84                     PORTE           equ	3972	;# 
   680   000F89                     LATA            equ	3977	;# 
   681   000F8A                     LATB            equ	3978	;# 
   682   000F8B                     LATC            equ	3979	;# 
   683   000F8C                     LATD            equ	3980	;# 
   684   000F8D                     LATE            equ	3981	;# 
   685   000F92                     TRISA           equ	3986	;# 
   686   000F92                     DDRA            equ	3986	;# 
   687   000F93                     TRISB           equ	3987	;# 
   688   000F93                     DDRB            equ	3987	;# 
   689   000F94                     TRISC           equ	3988	;# 
   690   000F94                     DDRC            equ	3988	;# 
   691   000F95                     TRISD           equ	3989	;# 
   692   000F95                     DDRD            equ	3989	;# 
   693   000F96                     TRISE           equ	3990	;# 
   694   000F96                     DDRE            equ	3990	;# 
   695   000F9B                     OSCTUNE         equ	3995	;# 
   696   000F9D                     PIE1            equ	3997	;# 
   697   000F9E                     PIR1            equ	3998	;# 
   698   000F9F                     IPR1            equ	3999	;# 
   699   000FA0                     PIE2            equ	4000	;# 
   700   000FA1                     PIR2            equ	4001	;# 
   701   000FA2                     IPR2            equ	4002	;# 
   702   000FA6                     EECON1          equ	4006	;# 
   703   000FA7                     EECON2          equ	4007	;# 
   704   000FA8                     EEDATA          equ	4008	;# 
   705   000FA9                     EEADR           equ	4009	;# 
   706   000FAB                     RCSTA           equ	4011	;# 
   707   000FAB                     RCSTA1          equ	4011	;# 
   708   000FAC                     TXSTA           equ	4012	;# 
   709   000FAC                     TXSTA1          equ	4012	;# 
   710   000FAD                     TXREG           equ	4013	;# 
   711   000FAD                     TXREG1          equ	4013	;# 
   712   000FAE                     RCREG           equ	4014	;# 
   713   000FAE                     RCREG1          equ	4014	;# 
   714   000FAF                     SPBRG           equ	4015	;# 
   715   000FAF                     SPBRG1          equ	4015	;# 
   716   000FB0                     SPBRGH          equ	4016	;# 
   717   000FB1                     T3CON           equ	4017	;# 
   718   000FB2                     TMR3            equ	4018	;# 
   719   000FB2                     TMR3L           equ	4018	;# 
   720   000FB3                     TMR3H           equ	4019	;# 
   721   000FB4                     CMCON           equ	4020	;# 
   722   000FB5                     CVRCON          equ	4021	;# 
   723   000FB6                     ECCP1AS         equ	4022	;# 
   724   000FB6                     ECCPAS          equ	4022	;# 
   725   000FB7                     PWM1CON         equ	4023	;# 
   726   000FB7                     ECCP1DEL        equ	4023	;# 
   727   000FB8                     BAUDCON         equ	4024	;# 
   728   000FB8                     BAUDCTL         equ	4024	;# 
   729   000FBA                     CCP2CON         equ	4026	;# 
   730   000FBB                     CCPR2           equ	4027	;# 
   731   000FBB                     CCPR2L          equ	4027	;# 
   732   000FBC                     CCPR2H          equ	4028	;# 
   733   000FBD                     CCP1CON         equ	4029	;# 
   734   000FBE                     CCPR1           equ	4030	;# 
   735   000FBE                     CCPR1L          equ	4030	;# 
   736   000FBF                     CCPR1H          equ	4031	;# 
   737   000FC0                     ADCON2          equ	4032	;# 
   738   000FC1                     ADCON1          equ	4033	;# 
   739   000FC2                     ADCON0          equ	4034	;# 
   740   000FC3                     ADRES           equ	4035	;# 
   741   000FC3                     ADRESL          equ	4035	;# 
   742   000FC4                     ADRESH          equ	4036	;# 
   743   000FC5                     SSPCON2         equ	4037	;# 
   744   000FC6                     SSPCON1         equ	4038	;# 
   745   000FC7                     SSPSTAT         equ	4039	;# 
   746   000FC8                     SSPADD          equ	4040	;# 
   747   000FC9                     SSPBUF          equ	4041	;# 
   748   000FCA                     T2CON           equ	4042	;# 
   749   000FCB                     PR2             equ	4043	;# 
   750   000FCB                     MEMCON          equ	4043	;# 
   751   000FCC                     TMR2            equ	4044	;# 
   752   000FCD                     T1CON           equ	4045	;# 
   753   000FCE                     TMR1            equ	4046	;# 
   754   000FCE                     TMR1L           equ	4046	;# 
   755   000FCF                     TMR1H           equ	4047	;# 
   756   000FD0                     RCON            equ	4048	;# 
   757   000FD1                     WDTCON          equ	4049	;# 
   758   000FD2                     HLVDCON         equ	4050	;# 
   759   000FD2                     LVDCON          equ	4050	;# 
   760   000FD3                     OSCCON          equ	4051	;# 
   761   000FD5                     T0CON           equ	4053	;# 
   762   000FD6                     TMR0            equ	4054	;# 
   763   000FD6                     TMR0L           equ	4054	;# 
   764   000FD7                     TMR0H           equ	4055	;# 
   765   000FD8                     STATUS          equ	4056	;# 
   766   000FD9                     FSR2            equ	4057	;# 
   767   000FD9                     FSR2L           equ	4057	;# 
   768   000FDA                     FSR2H           equ	4058	;# 
   769   000FDB                     PLUSW2          equ	4059	;# 
   770   000FDC                     PREINC2         equ	4060	;# 
   771   000FDD                     POSTDEC2        equ	4061	;# 
   772   000FDE                     POSTINC2        equ	4062	;# 
   773   000FDF                     INDF2           equ	4063	;# 
   774   000FE0                     BSR             equ	4064	;# 
   775   000FE1                     FSR1            equ	4065	;# 
   776   000FE1                     FSR1L           equ	4065	;# 
   777   000FE2                     FSR1H           equ	4066	;# 
   778   000FE3                     PLUSW1          equ	4067	;# 
   779   000FE4                     PREINC1         equ	4068	;# 
   780   000FE5                     POSTDEC1        equ	4069	;# 
   781   000FE6                     POSTINC1        equ	4070	;# 
   782   000FE7                     INDF1           equ	4071	;# 
   783   000FE8                     WREG            equ	4072	;# 
   784   000FE9                     FSR0            equ	4073	;# 
   785   000FE9                     FSR0L           equ	4073	;# 
   786   000FEA                     FSR0H           equ	4074	;# 
   787   000FEB                     PLUSW0          equ	4075	;# 
   788   000FEC                     PREINC0         equ	4076	;# 
   789   000FED                     POSTDEC0        equ	4077	;# 
   790   000FEE                     POSTINC0        equ	4078	;# 
   791   000FEF                     INDF0           equ	4079	;# 
   792   000FF0                     INTCON3         equ	4080	;# 
   793   000FF1                     INTCON2         equ	4081	;# 
   794   000FF2                     INTCON          equ	4082	;# 
   795   000FF3                     PROD            equ	4083	;# 
   796   000FF3                     PRODL           equ	4083	;# 
   797   000FF4                     PRODH           equ	4084	;# 
   798   000FF5                     TABLAT          equ	4085	;# 
   799   000FF6                     TBLPTR          equ	4086	;# 
   800   000FF6                     TBLPTRL         equ	4086	;# 
   801   000FF7                     TBLPTRH         equ	4087	;# 
   802   000FF8                     TBLPTRU         equ	4088	;# 
   803   000FF9                     PCLAT           equ	4089	;# 
   804   000FF9                     PC              equ	4089	;# 
   805   000FF9                     PCL             equ	4089	;# 
   806   000FFA                     PCLATH          equ	4090	;# 
   807   000FFB                     PCLATU          equ	4091	;# 
   808   000FFC                     STKPTR          equ	4092	;# 
   809   000FFD                     TOS             equ	4093	;# 
   810   000FFD                     TOSL            equ	4093	;# 
   811   000FFE                     TOSH            equ	4094	;# 
   812   000FFF                     TOSU            equ	4095	;# 
   813   000F80                     PORTA           equ	3968	;# 
   814   000F81                     PORTB           equ	3969	;# 
   815   000F82                     PORTC           equ	3970	;# 
   816   000F83                     PORTD           equ	3971	;# 
   817   000F84                     PORTE           equ	3972	;# 
   818   000F89                     LATA            equ	3977	;# 
   819   000F8A                     LATB            equ	3978	;# 
   820   000F8B                     LATC            equ	3979	;# 
   821   000F8C                     LATD            equ	3980	;# 
   822   000F8D                     LATE            equ	3981	;# 
   823   000F92                     TRISA           equ	3986	;# 
   824   000F92                     DDRA            equ	3986	;# 
   825   000F93                     TRISB           equ	3987	;# 
   826   000F93                     DDRB            equ	3987	;# 
   827   000F94                     TRISC           equ	3988	;# 
   828   000F94                     DDRC            equ	3988	;# 
   829   000F95                     TRISD           equ	3989	;# 
   830   000F95                     DDRD            equ	3989	;# 
   831   000F96                     TRISE           equ	3990	;# 
   832   000F96                     DDRE            equ	3990	;# 
   833   000F9B                     OSCTUNE         equ	3995	;# 
   834   000F9D                     PIE1            equ	3997	;# 
   835   000F9E                     PIR1            equ	3998	;# 
   836   000F9F                     IPR1            equ	3999	;# 
   837   000FA0                     PIE2            equ	4000	;# 
   838   000FA1                     PIR2            equ	4001	;# 
   839   000FA2                     IPR2            equ	4002	;# 
   840   000FA6                     EECON1          equ	4006	;# 
   841   000FA7                     EECON2          equ	4007	;# 
   842   000FA8                     EEDATA          equ	4008	;# 
   843   000FA9                     EEADR           equ	4009	;# 
   844   000FAB                     RCSTA           equ	4011	;# 
   845   000FAB                     RCSTA1          equ	4011	;# 
   846   000FAC                     TXSTA           equ	4012	;# 
   847   000FAC                     TXSTA1          equ	4012	;# 
   848   000FAD                     TXREG           equ	4013	;# 
   849   000FAD                     TXREG1          equ	4013	;# 
   850   000FAE                     RCREG           equ	4014	;# 
   851   000FAE                     RCREG1          equ	4014	;# 
   852   000FAF                     SPBRG           equ	4015	;# 
   853   000FAF                     SPBRG1          equ	4015	;# 
   854   000FB0                     SPBRGH          equ	4016	;# 
   855   000FB1                     T3CON           equ	4017	;# 
   856   000FB2                     TMR3            equ	4018	;# 
   857   000FB2                     TMR3L           equ	4018	;# 
   858   000FB3                     TMR3H           equ	4019	;# 
   859   000FB4                     CMCON           equ	4020	;# 
   860   000FB5                     CVRCON          equ	4021	;# 
   861   000FB6                     ECCP1AS         equ	4022	;# 
   862   000FB6                     ECCPAS          equ	4022	;# 
   863   000FB7                     PWM1CON         equ	4023	;# 
   864   000FB7                     ECCP1DEL        equ	4023	;# 
   865   000FB8                     BAUDCON         equ	4024	;# 
   866   000FB8                     BAUDCTL         equ	4024	;# 
   867   000FBA                     CCP2CON         equ	4026	;# 
   868   000FBB                     CCPR2           equ	4027	;# 
   869   000FBB                     CCPR2L          equ	4027	;# 
   870   000FBC                     CCPR2H          equ	4028	;# 
   871   000FBD                     CCP1CON         equ	4029	;# 
   872   000FBE                     CCPR1           equ	4030	;# 
   873   000FBE                     CCPR1L          equ	4030	;# 
   874   000FBF                     CCPR1H          equ	4031	;# 
   875   000FC0                     ADCON2          equ	4032	;# 
   876   000FC1                     ADCON1          equ	4033	;# 
   877   000FC2                     ADCON0          equ	4034	;# 
   878   000FC3                     ADRES           equ	4035	;# 
   879   000FC3                     ADRESL          equ	4035	;# 
   880   000FC4                     ADRESH          equ	4036	;# 
   881   000FC5                     SSPCON2         equ	4037	;# 
   882   000FC6                     SSPCON1         equ	4038	;# 
   883   000FC7                     SSPSTAT         equ	4039	;# 
   884   000FC8                     SSPADD          equ	4040	;# 
   885   000FC9                     SSPBUF          equ	4041	;# 
   886   000FCA                     T2CON           equ	4042	;# 
   887   000FCB                     PR2             equ	4043	;# 
   888   000FCB                     MEMCON          equ	4043	;# 
   889   000FCC                     TMR2            equ	4044	;# 
   890   000FCD                     T1CON           equ	4045	;# 
   891   000FCE                     TMR1            equ	4046	;# 
   892   000FCE                     TMR1L           equ	4046	;# 
   893   000FCF                     TMR1H           equ	4047	;# 
   894   000FD0                     RCON            equ	4048	;# 
   895   000FD1                     WDTCON          equ	4049	;# 
   896   000FD2                     HLVDCON         equ	4050	;# 
   897   000FD2                     LVDCON          equ	4050	;# 
   898   000FD3                     OSCCON          equ	4051	;# 
   899   000FD5                     T0CON           equ	4053	;# 
   900   000FD6                     TMR0            equ	4054	;# 
   901   000FD6                     TMR0L           equ	4054	;# 
   902   000FD7                     TMR0H           equ	4055	;# 
   903   000FD8                     STATUS          equ	4056	;# 
   904   000FD9                     FSR2            equ	4057	;# 
   905   000FD9                     FSR2L           equ	4057	;# 
   906   000FDA                     FSR2H           equ	4058	;# 
   907   000FDB                     PLUSW2          equ	4059	;# 
   908   000FDC                     PREINC2         equ	4060	;# 
   909   000FDD                     POSTDEC2        equ	4061	;# 
   910   000FDE                     POSTINC2        equ	4062	;# 
   911   000FDF                     INDF2           equ	4063	;# 
   912   000FE0                     BSR             equ	4064	;# 
   913   000FE1                     FSR1            equ	4065	;# 
   914   000FE1                     FSR1L           equ	4065	;# 
   915   000FE2                     FSR1H           equ	4066	;# 
   916   000FE3                     PLUSW1          equ	4067	;# 
   917   000FE4                     PREINC1         equ	4068	;# 
   918   000FE5                     POSTDEC1        equ	4069	;# 
   919   000FE6                     POSTINC1        equ	4070	;# 
   920   000FE7                     INDF1           equ	4071	;# 
   921   000FE8                     WREG            equ	4072	;# 
   922   000FE9                     FSR0            equ	4073	;# 
   923   000FE9                     FSR0L           equ	4073	;# 
   924   000FEA                     FSR0H           equ	4074	;# 
   925   000FEB                     PLUSW0          equ	4075	;# 
   926   000FEC                     PREINC0         equ	4076	;# 
   927   000FED                     POSTDEC0        equ	4077	;# 
   928   000FEE                     POSTINC0        equ	4078	;# 
   929   000FEF                     INDF0           equ	4079	;# 
   930   000FF0                     INTCON3         equ	4080	;# 
   931   000FF1                     INTCON2         equ	4081	;# 
   932   000FF2                     INTCON          equ	4082	;# 
   933   000FF3                     PROD            equ	4083	;# 
   934   000FF3                     PRODL           equ	4083	;# 
   935   000FF4                     PRODH           equ	4084	;# 
   936   000FF5                     TABLAT          equ	4085	;# 
   937   000FF6                     TBLPTR          equ	4086	;# 
   938   000FF6                     TBLPTRL         equ	4086	;# 
   939   000FF7                     TBLPTRH         equ	4087	;# 
   940   000FF8                     TBLPTRU         equ	4088	;# 
   941   000FF9                     PCLAT           equ	4089	;# 
   942   000FF9                     PC              equ	4089	;# 
   943   000FF9                     PCL             equ	4089	;# 
   944   000FFA                     PCLATH          equ	4090	;# 
   945   000FFB                     PCLATU          equ	4091	;# 
   946   000FFC                     STKPTR          equ	4092	;# 
   947   000FFD                     TOS             equ	4093	;# 
   948   000FFD                     TOSL            equ	4093	;# 
   949   000FFE                     TOSH            equ	4094	;# 
   950   000FFF                     TOSU            equ	4095	;# 
   951   000F80                     PORTA           equ	3968	;# 
   952   000F81                     PORTB           equ	3969	;# 
   953   000F82                     PORTC           equ	3970	;# 
   954   000F83                     PORTD           equ	3971	;# 
   955   000F84                     PORTE           equ	3972	;# 
   956   000F89                     LATA            equ	3977	;# 
   957   000F8A                     LATB            equ	3978	;# 
   958   000F8B                     LATC            equ	3979	;# 
   959   000F8C                     LATD            equ	3980	;# 
   960   000F8D                     LATE            equ	3981	;# 
   961   000F92                     TRISA           equ	3986	;# 
   962   000F92                     DDRA            equ	3986	;# 
   963   000F93                     TRISB           equ	3987	;# 
   964   000F93                     DDRB            equ	3987	;# 
   965   000F94                     TRISC           equ	3988	;# 
   966   000F94                     DDRC            equ	3988	;# 
   967   000F95                     TRISD           equ	3989	;# 
   968   000F95                     DDRD            equ	3989	;# 
   969   000F96                     TRISE           equ	3990	;# 
   970   000F96                     DDRE            equ	3990	;# 
   971   000F9B                     OSCTUNE         equ	3995	;# 
   972   000F9D                     PIE1            equ	3997	;# 
   973   000F9E                     PIR1            equ	3998	;# 
   974   000F9F                     IPR1            equ	3999	;# 
   975   000FA0                     PIE2            equ	4000	;# 
   976   000FA1                     PIR2            equ	4001	;# 
   977   000FA2                     IPR2            equ	4002	;# 
   978   000FA6                     EECON1          equ	4006	;# 
   979   000FA7                     EECON2          equ	4007	;# 
   980   000FA8                     EEDATA          equ	4008	;# 
   981   000FA9                     EEADR           equ	4009	;# 
   982   000FAB                     RCSTA           equ	4011	;# 
   983   000FAB                     RCSTA1          equ	4011	;# 
   984   000FAC                     TXSTA           equ	4012	;# 
   985   000FAC                     TXSTA1          equ	4012	;# 
   986   000FAD                     TXREG           equ	4013	;# 
   987   000FAD                     TXREG1          equ	4013	;# 
   988   000FAE                     RCREG           equ	4014	;# 
   989   000FAE                     RCREG1          equ	4014	;# 
   990   000FAF                     SPBRG           equ	4015	;# 
   991   000FAF                     SPBRG1          equ	4015	;# 
   992   000FB0                     SPBRGH          equ	4016	;# 
   993   000FB1                     T3CON           equ	4017	;# 
   994   000FB2                     TMR3            equ	4018	;# 
   995   000FB2                     TMR3L           equ	4018	;# 
   996   000FB3                     TMR3H           equ	4019	;# 
   997   000FB4                     CMCON           equ	4020	;# 
   998   000FB5                     CVRCON          equ	4021	;# 
   999   000FB6                     ECCP1AS         equ	4022	;# 
  1000   000FB6                     ECCPAS          equ	4022	;# 
  1001   000FB7                     PWM1CON         equ	4023	;# 
  1002   000FB7                     ECCP1DEL        equ	4023	;# 
  1003   000FB8                     BAUDCON         equ	4024	;# 
  1004   000FB8                     BAUDCTL         equ	4024	;# 
  1005   000FBA                     CCP2CON         equ	4026	;# 
  1006   000FBB                     CCPR2           equ	4027	;# 
  1007   000FBB                     CCPR2L          equ	4027	;# 
  1008   000FBC                     CCPR2H          equ	4028	;# 
  1009   000FBD                     CCP1CON         equ	4029	;# 
  1010   000FBE                     CCPR1           equ	4030	;# 
  1011   000FBE                     CCPR1L          equ	4030	;# 
  1012   000FBF                     CCPR1H          equ	4031	;# 
  1013   000FC0                     ADCON2          equ	4032	;# 
  1014   000FC1                     ADCON1          equ	4033	;# 
  1015   000FC2                     ADCON0          equ	4034	;# 
  1016   000FC3                     ADRES           equ	4035	;# 
  1017   000FC3                     ADRESL          equ	4035	;# 
  1018   000FC4                     ADRESH          equ	4036	;# 
  1019   000FC5                     SSPCON2         equ	4037	;# 
  1020   000FC6                     SSPCON1         equ	4038	;# 
  1021   000FC7                     SSPSTAT         equ	4039	;# 
  1022   000FC8                     SSPADD          equ	4040	;# 
  1023   000FC9                     SSPBUF          equ	4041	;# 
  1024   000FCA                     T2CON           equ	4042	;# 
  1025   000FCB                     PR2             equ	4043	;# 
  1026   000FCB                     MEMCON          equ	4043	;# 
  1027   000FCC                     TMR2            equ	4044	;# 
  1028   000FCD                     T1CON           equ	4045	;# 
  1029   000FCE                     TMR1            equ	4046	;# 
  1030   000FCE                     TMR1L           equ	4046	;# 
  1031   000FCF                     TMR1H           equ	4047	;# 
  1032   000FD0                     RCON            equ	4048	;# 
  1033   000FD1                     WDTCON          equ	4049	;# 
  1034   000FD2                     HLVDCON         equ	4050	;# 
  1035   000FD2                     LVDCON          equ	4050	;# 
  1036   000FD3                     OSCCON          equ	4051	;# 
  1037   000FD5                     T0CON           equ	4053	;# 
  1038   000FD6                     TMR0            equ	4054	;# 
  1039   000FD6                     TMR0L           equ	4054	;# 
  1040   000FD7                     TMR0H           equ	4055	;# 
  1041   000FD8                     STATUS          equ	4056	;# 
  1042   000FD9                     FSR2            equ	4057	;# 
  1043   000FD9                     FSR2L           equ	4057	;# 
  1044   000FDA                     FSR2H           equ	4058	;# 
  1045   000FDB                     PLUSW2          equ	4059	;# 
  1046   000FDC                     PREINC2         equ	4060	;# 
  1047   000FDD                     POSTDEC2        equ	4061	;# 
  1048   000FDE                     POSTINC2        equ	4062	;# 
  1049   000FDF                     INDF2           equ	4063	;# 
  1050   000FE0                     BSR             equ	4064	;# 
  1051   000FE1                     FSR1            equ	4065	;# 
  1052   000FE1                     FSR1L           equ	4065	;# 
  1053   000FE2                     FSR1H           equ	4066	;# 
  1054   000FE3                     PLUSW1          equ	4067	;# 
  1055   000FE4                     PREINC1         equ	4068	;# 
  1056   000FE5                     POSTDEC1        equ	4069	;# 
  1057   000FE6                     POSTINC1        equ	4070	;# 
  1058   000FE7                     INDF1           equ	4071	;# 
  1059   000FE8                     WREG            equ	4072	;# 
  1060   000FE9                     FSR0            equ	4073	;# 
  1061   000FE9                     FSR0L           equ	4073	;# 
  1062   000FEA                     FSR0H           equ	4074	;# 
  1063   000FEB                     PLUSW0          equ	4075	;# 
  1064   000FEC                     PREINC0         equ	4076	;# 
  1065   000FED                     POSTDEC0        equ	4077	;# 
  1066   000FEE                     POSTINC0        equ	4078	;# 
  1067   000FEF                     INDF0           equ	4079	;# 
  1068   000FF0                     INTCON3         equ	4080	;# 
  1069   000FF1                     INTCON2         equ	4081	;# 
  1070   000FF2                     INTCON          equ	4082	;# 
  1071   000FF3                     PROD            equ	4083	;# 
  1072   000FF3                     PRODL           equ	4083	;# 
  1073   000FF4                     PRODH           equ	4084	;# 
  1074   000FF5                     TABLAT          equ	4085	;# 
  1075   000FF6                     TBLPTR          equ	4086	;# 
  1076   000FF6                     TBLPTRL         equ	4086	;# 
  1077   000FF7                     TBLPTRH         equ	4087	;# 
  1078   000FF8                     TBLPTRU         equ	4088	;# 
  1079   000FF9                     PCLAT           equ	4089	;# 
  1080   000FF9                     PC              equ	4089	;# 
  1081   000FF9                     PCL             equ	4089	;# 
  1082   000FFA                     PCLATH          equ	4090	;# 
  1083   000FFB                     PCLATU          equ	4091	;# 
  1084   000FFC                     STKPTR          equ	4092	;# 
  1085   000FFD                     TOS             equ	4093	;# 
  1086   000FFD                     TOSL            equ	4093	;# 
  1087   000FFE                     TOSH            equ	4094	;# 
  1088   000FFF                     TOSU            equ	4095	;# 
  1089                           
  1090                           	psect	mediumconst
  1091   007CBE                     __pmediumconst:
  1092                           	callstack 0
  1093   007CBE  00                 	db	0
  1094   007CBF  3769               	dw	14185
  1095   007CC1  31AC               	dw	12716
  1096   007CC3  2168               	dw	8552
  1097   007CC5  3322               	dw	13090
  1098   007CC7  0FB4               	dw	4020
  1099   007CC9  3314               	dw	13076
  1100   007CCB  2168               	dw	8552
  1101   007CCD  33A2               	dw	13218
  1102   007CCF                     __end_of_atanlo:
  1103                           	callstack 0
  1104   007CCF  6338               	dw	25400
  1105   007CD1  3EED               	dw	16109
  1106   007CD3  0FDA               	dw	4058
  1107   007CD5  3F49               	dw	16201
  1108   007CD7  985E               	dw	39006
  1109   007CD9  3F7B               	dw	16251
  1110   007CDB  0FDA               	dw	4058
  1111   007CDD  3FC9               	dw	16329
  1112   007CDF                     __end_of_atanhi:
  1113                           	callstack 0
  1114   007CDF  AC25               	dw	44069
  1115   007CE1  3D7C               	dw	15740
  1116   007CE3                     __end_of_aT4:
  1117                           	callstack 0
  1118   007CE3  1247               	dw	4679
  1119   007CE5  BDDA               	dw	48602
  1120   007CE7                     __end_of_aT3:
  1121                           	callstack 0
  1122   007CE7  F50D               	dw	62733
  1123   007CE9  3E11               	dw	15889
  1124   007CEB                     __end_of_aT2:
  1125                           	callstack 0
  1126   007CEB  CA98               	dw	51864
  1127   007CED  BE4C               	dw	48716
  1128   007CEF                     __end_of_aT1:
  1129                           	callstack 0
  1130   007CEF  AAA9               	dw	43689
  1131   007CF1  3EAA               	dw	16042
  1132   007CF3                     __end_of_aT0:
  1133                           	callstack 0
  1134   007CF3  BD2E               	dw	48430
  1135   007CF5  B3BB               	dw	46011
  1136   007CF7                     __end_of_pi_lo:
  1137                           	callstack 0
  1138   007CF7  0FDB               	dw	4059
  1139   007CF9  4049               	dw	16457
  1140   007CFB                     __end_of_pi:
  1141                           	callstack 0
  1142   007E2C                     _ACKEN          set	32300
  1143   007E2D                     _ACKDT          set	32301
  1144   007E2B                     _RCEN           set	32299
  1145   007E38                     _BF             set	32312
  1146   007E2A                     _PEN            set	32298
  1147   007E28                     _SEN            set	32296
  1148   007D5C                     _CREN           set	32092
  1149   007CF5                     _RCIF           set	31989
  1150   007E9C                     _IRCF0          set	32412
  1151   007E9D                     _IRCF1          set	32413
  1152   007E9E                     _IRCF2          set	32414
  1153   007E07                     _ADFM           set	32263
  1154   000F92                     _TRISA          set	3986
  1155   000F8A                     _LATBbits       set	3978
  1156   000F93                     _TRISB          set	3987
  1157   000F89                     _LATAbits       set	3977
  1158   000F89                     _LATA           set	3977
  1159   000F94                     _TRISCbits      set	3988
  1160   000F92                     _TRISAbits      set	3986
  1161   000FC5                     _SSPCON2bits    set	4037
  1162   000FC9                     _SSPBUF         set	4041
  1163   000FC7                     _SSPSTAT        set	4039
  1164   000FC8                     _SSPADD         set	4040
  1165   000FC5                     _SSPCON2        set	4037
  1166   000FC6                     _SSPCON1        set	4038
  1167   000FD3                     _OSCCON         set	4051
  1168   000FAE                     _RCREG          set	4014
  1169   000FAD                     _TXREG          set	4013
  1170   000F9D                     _PIE1bits       set	3997
  1171   000FAB                     _RCSTAbits      set	4011
  1172   000FAF                     _SPBRG          set	4015
  1173   000FB8                     _BAUDCONbits    set	4024
  1174   000FAC                     _TXSTAbits      set	4012
  1175   000FD0                     _RCONbits       set	4048
  1176   000F9F                     _IPR1bits       set	3999
  1177   000F9E                     _PIR1bits       set	3998
  1178   000FBD                     _CCP1CON        set	4029
  1179   000FC2                     _ADCON0bits     set	4034
  1180   000FC3                     _ADRESL         set	4035
  1181   000FC4                     _ADRESH         set	4036
  1182   000FC0                     _ADCON2bits     set	4032
  1183   000FC1                     _ADCON1         set	4033
  1184   000FF2                     _INTCONbits     set	4082
  1185   007CFB                     STR_8:
  1186   007CFB  41                 	db	65	;'A'
  1187   007CFC  54                 	db	84	;'T'
  1188   007CFD  2B                 	db	43
  1189   007CFE  43                 	db	67	;'C'
  1190   007CFF  4F                 	db	79	;'O'
  1191   007D00  4E                 	db	78	;'N'
  1192   007D01  4E                 	db	78	;'N'
  1193   007D02  31                 	db	49	;'1'
  1194   007D03  0D                 	db	13
  1195   007D04  0A                 	db	10
  1196   007D05  00                 	db	0
  1197   007D06                     STR_7:
  1198   007D06  41                 	db	65	;'A'
  1199   007D07  54                 	db	84	;'T'
  1200   007D08  2B                 	db	43
  1201   007D09  49                 	db	73	;'I'
  1202   007D0A  4E                 	db	78	;'N'
  1203   007D0B  51                 	db	81	;'Q'
  1204   007D0C  0D                 	db	13
  1205   007D0D  0A                 	db	10
  1206   007D0E  00                 	db	0
  1207   007D0F  4C                 	db	76	;'L'
  1208   007D10  4C                 	db	76	;'L'
  1209   007D11  4E                 	db	78	;'N'
  1210   007D12  0D                 	db	13
  1211   007D13  0A                 	db	10
  1212   007D14  00                 	db	0
  1213   007D15                     STR_5:
  1214   007D15  4C                 	db	76	;'L'
  1215   007D16  52                 	db	82	;'R'
  1216   007D17  4E                 	db	78	;'N'
  1217   007D18  0D                 	db	13
  1218   007D19  0A                 	db	10
  1219   007D1A  00                 	db	0
  1220   007D1B                     STR_6:
  1221   007D1B  41                 	db	65	;'A'
  1222   007D1C  54                 	db	84	;'T'
  1223   007D1D  0D                 	db	13
  1224   007D1E  0A                 	db	10
  1225   007D1F  00                 	db	0
  1226   007D20                     STR_3:
  1227   007D20  42                 	db	66	;'B'
  1228   007D21  46                 	db	70	;'F'
  1229   007D22  0D                 	db	13
  1230   007D23  0A                 	db	10
  1231   007D24  00                 	db	0
  1232   007D25                     STR_2:
  1233   007D25  42                 	db	66	;'B'
  1234   007D26  4E                 	db	78	;'N'
  1235   007D27  0D                 	db	13
  1236   007D28  0A                 	db	10
  1237   007D29  00                 	db	0
  1238   007D2A                     STR_1:
  1239   007D2A  25                 	db	37
  1240   007D2B  64                 	db	100	;'d'
  1241   007D2C  0D                 	db	13
  1242   007D2D  0A                 	db	10
  1243   007D2E  00                 	db	0
  1244   007D15                     STR_13          equ	STR_5
  1245   007D03                     STR_4           equ	STR_8+8
  1246   007D05                     STR_9           equ	STR_8+10
  1247   007D05                     STR_10          equ	STR_8+10
  1248   007D05                     STR_11          equ	STR_8+10
  1249   007D2F  00                 	db	0	; dummy byte at the end
  1250   000002                     __activetblptr  equ	2
  1251                           
  1252                           ; #config settings
  1253                           
  1254                           	psect	cinit
  1255   000C2E                     __pcinit:
  1256                           	callstack 0
  1257   000C2E                     start_initialization:
  1258                           	callstack 0
  1259   000C2E                     __initialization:
  1260                           	callstack 0
  1261                           
  1262                           ; Clear objects allocated to BANK0 (61 bytes)
  1263   000C2E  EE00  F0C1         	lfsr	0,__pbssBANK0
  1264   000C32  0E3D               	movlw	61
  1265   000C34                     clear_0:
  1266   000C34  6AEE               	clrf	postinc0,c
  1267   000C36  06E8               	decf	wreg,f,c
  1268   000C38  E1FD               	bnz	clear_0
  1269                           
  1270                           ; Clear objects allocated to COMRAM (48 bytes)
  1271   000C3A  EE00  F037         	lfsr	0,__pbssCOMRAM
  1272   000C3E  0E30               	movlw	48
  1273   000C40                     clear_1:
  1274   000C40  6AEE               	clrf	postinc0,c
  1275   000C42  06E8               	decf	wreg,f,c
  1276   000C44  E1FD               	bnz	clear_1
  1277   000C46                     end_of_initialization:
  1278                           	callstack 0
  1279   000C46                     __end_of__initialization:
  1280                           	callstack 0
  1281   000C46  9067               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1282   000C48  9267               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1283   000C4A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1284   000C4C  6EF8               	movwf	tblptru,c
  1285   000C4E  0100               	movlb	0
  1286   000C50  EFE1  F004         	goto	_main	;jump to C main() function
  1287                           
  1288                           	psect	bssCOMRAM
  1289   000037                     __pbssCOMRAM:
  1290                           	callstack 0
  1291   000037                     	ds	4
  1292   00003B                     	ds	4
  1293   00003F                     _angle:
  1294                           	callstack 0
  1295   00003F                     	ds	4
  1296   000043                     _pitch_offset:
  1297                           	callstack 0
  1298   000043                     	ds	4
  1299   000047                     _accZ:
  1300                           	callstack 0
  1301   000047                     	ds	2
  1302   000049                     _accX:
  1303                           	callstack 0
  1304   000049                     	ds	2
  1305   00004B                     _count:
  1306                           	callstack 0
  1307   00004B                     	ds	2
  1308   00004D                     _lenStr:
  1309                           	callstack 0
  1310   00004D                     	ds	2
  1311   00004F                     _accZ_low:
  1312                           	callstack 0
  1313   00004F                     	ds	1
  1314   000050                     _accZ_high:
  1315                           	callstack 0
  1316   000050                     	ds	1
  1317   000051                     _accX_low:
  1318                           	callstack 0
  1319   000051                     	ds	1
  1320   000052                     _accX_high:
  1321                           	callstack 0
  1322   000052                     	ds	1
  1323   000053                     _mystring:
  1324                           	callstack 0
  1325   000053                     	ds	20
  1326                           
  1327                           	psect	bssBANK0
  1328   0000C1                     __pbssBANK0:
  1329                           	callstack 0
  1330   0000C1                     _dbuf:
  1331                           	callstack 0
  1332   0000C1                     	ds	32
  1333   0000E1                     _str:
  1334                           	callstack 0
  1335   0000E1                     	ds	20
  1336   0000F5                     _width:
  1337                           	callstack 0
  1338   0000F5                     	ds	2
  1339   0000F7                     _prec:
  1340                           	callstack 0
  1341   0000F7                     	ds	2
  1342   0000F9                     _needSendMsg:
  1343                           	callstack 0
  1344   0000F9                     	ds	2
  1345   0000FB                     _isConnected:
  1346                           	callstack 0
  1347   0000FB                     	ds	2
  1348   0000FD                     _flags:
  1349                           	callstack 0
  1350   0000FD                     	ds	1
  1351                           
  1352                           	psect	cstackBANK0
  1353   000080                     __pcstackBANK0:
  1354                           	callstack 0
  1355   000080                     ?_ADC_Read:
  1356                           	callstack 0
  1357   000080                     ?___awdiv:
  1358                           	callstack 0
  1359   000080                     ?___awmod:
  1360                           	callstack 0
  1361   000080                     UART_Write@data:
  1362                           	callstack 0
  1363   000080                     ADC_Read@channel:
  1364                           	callstack 0
  1365   000080                     displayBinary@num:
  1366                           	callstack 0
  1367   000080                     ___awdiv@dividend:
  1368                           	callstack 0
  1369   000080                     ___awmod@dividend:
  1370                           	callstack 0
  1371   000080                     fputc@c:
  1372                           	callstack 0
  1373   000080                     
  1374                           ; 1 bytes @ 0x0
  1375   000080                     	ds	1
  1376   000081                     UART_Write_Text@text:
  1377                           	callstack 0
  1378                           
  1379                           ; 2 bytes @ 0x1
  1380   000081                     	ds	1
  1381   000082                     fputc@fp:
  1382                           	callstack 0
  1383   000082                     ___awdiv@divisor:
  1384                           	callstack 0
  1385   000082                     ___awmod@divisor:
  1386                           	callstack 0
  1387   000082                     ??_ADC_Read:
  1388   000082                     ??_displayBinary:
  1389                           
  1390                           ; 1 bytes @ 0x2
  1391   000082                     	ds	1
  1392   000083                     ??_UART_Write_Text:
  1393   000083                     ??_fputc:
  1394                           
  1395                           ; 1 bytes @ 0x3
  1396   000083                     	ds	1
  1397   000084                     ___awdiv@counter:
  1398                           	callstack 0
  1399   000084                     ___awmod@counter:
  1400                           	callstack 0
  1401   000084                     ADC_Read@digital:
  1402                           	callstack 0
  1403   000084                     
  1404                           ; 1 bytes @ 0x4
  1405   000084                     	ds	1
  1406   000085                     ___awdiv@sign:
  1407                           	callstack 0
  1408   000085                     ___awmod@sign:
  1409                           	callstack 0
  1410   000085                     UART_Write_Text@i:
  1411                           	callstack 0
  1412                           
  1413                           ; 2 bytes @ 0x5
  1414   000085                     	ds	1
  1415   000086                     ?_abs:
  1416                           	callstack 0
  1417   000086                     ___awdiv@quotient:
  1418                           	callstack 0
  1419   000086                     abs@a:
  1420                           	callstack 0
  1421                           
  1422                           ; 2 bytes @ 0x6
  1423   000086                     	ds	2
  1424   000088                     ??_abs:
  1425                           
  1426                           ; 1 bytes @ 0x8
  1427   000088                     	ds	2
  1428   00008A                     vfpfcnvrt@fp:
  1429                           	callstack 0
  1430                           
  1431                           ; 1 bytes @ 0xA
  1432   00008A                     	ds	1
  1433   00008B                     vfpfcnvrt@fmt:
  1434                           	callstack 0
  1435                           
  1436                           ; 1 bytes @ 0xB
  1437   00008B                     	ds	1
  1438   00008C                     vfpfcnvrt@ap:
  1439                           	callstack 0
  1440                           
  1441                           ; 1 bytes @ 0xC
  1442   00008C                     	ds	1
  1443   00008D                     ??_vfpfcnvrt:
  1444                           
  1445                           ; 1 bytes @ 0xD
  1446   00008D                     	ds	2
  1447   00008F                     vfpfcnvrt@done:
  1448                           	callstack 0
  1449                           
  1450                           ; 1 bytes @ 0xF
  1451   00008F                     	ds	1
  1452   000090                     vfpfcnvrt@cp:
  1453                           	callstack 0
  1454                           
  1455                           ; 2 bytes @ 0x10
  1456   000090                     	ds	2
  1457   000092                     vfpfcnvrt@convarg:
  1458                           	callstack 0
  1459                           
  1460                           ; 4 bytes @ 0x12
  1461   000092                     	ds	4
  1462   000096                     vfpfcnvrt@c:
  1463                           	callstack 0
  1464                           
  1465                           ; 1 bytes @ 0x16
  1466   000096                     	ds	1
  1467   000097                     ?_vfprintf:
  1468                           	callstack 0
  1469   000097                     vfprintf@fp:
  1470                           	callstack 0
  1471                           
  1472                           ; 1 bytes @ 0x17
  1473   000097                     	ds	1
  1474   000098                     vfprintf@fmt:
  1475                           	callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x18
  1478   000098                     	ds	2
  1479   00009A                     vfprintf@ap:
  1480                           	callstack 0
  1481                           
  1482                           ; 1 bytes @ 0x1A
  1483   00009A                     	ds	1
  1484   00009B                     vfprintf@cfmt:
  1485                           	callstack 0
  1486   00009B                     
  1487                           ; 1 bytes @ 0x1B
  1488   00009B                     	ds	2
  1489   00009D                     ?_sprintf:
  1490                           	callstack 0
  1491   00009D                     sprintf@s:
  1492                           	callstack 0
  1493                           
  1494                           ; 1 bytes @ 0x1D
  1495   00009D                     	ds	1
  1496   00009E                     sprintf@fmt:
  1497                           	callstack 0
  1498                           
  1499                           ; 2 bytes @ 0x1E
  1500   00009E                     	ds	4
  1501   0000A2                     sprintf@ap:
  1502                           	callstack 0
  1503   0000A2                     
  1504                           ; 1 bytes @ 0x22
  1505   0000A2                     	ds	1
  1506   0000A3                     sprintf@f:
  1507                           	callstack 0
  1508                           
  1509                           ; 11 bytes @ 0x23
  1510   0000A3                     	ds	11
  1511   0000AE                     Check_ADC@prev_sensor_val:
  1512                           	callstack 0
  1513                           
  1514                           ; 2 bytes @ 0x2E
  1515   0000AE                     	ds	2
  1516   0000B0                     ??_Check_ADC:
  1517                           
  1518                           ; 1 bytes @ 0x30
  1519   0000B0                     	ds	3
  1520   0000B3                     Check_ADC@tmp:
  1521                           	callstack 0
  1522                           
  1523                           ; 10 bytes @ 0x33
  1524   0000B3                     	ds	10
  1525   0000BD                     Check_ADC@bend_sensor_val:
  1526                           	callstack 0
  1527                           
  1528                           ; 2 bytes @ 0x3D
  1529   0000BD                     	ds	2
  1530   0000BF                     main@prev_bend_sensor_val:
  1531                           	callstack 0
  1532   0000BF                     
  1533                           ; 1 bytes @ 0x3F
  1534   0000BF                     	ds	2
  1535                           
  1536                           	psect	cstackCOMRAM
  1537   000001                     __pcstackCOMRAM:
  1538                           	callstack 0
  1539   000001                     i2UART_Write@data:
  1540                           	callstack 0
  1541   000001                     
  1542                           ; 1 bytes @ 0x0
  1543   000001                     	ds	1
  1544   000002                     i2UART_Write_Text@text:
  1545                           	callstack 0
  1546                           
  1547                           ; 2 bytes @ 0x1
  1548   000002                     	ds	2
  1549   000004                     ??i2_UART_Write_Text:
  1550                           
  1551                           ; 1 bytes @ 0x3
  1552   000004                     	ds	2
  1553   000006                     i2UART_Write_Text@i:
  1554                           	callstack 0
  1555                           
  1556                           ; 2 bytes @ 0x5
  1557   000006                     	ds	2
  1558   000008                     ??_Hi_ISR:
  1559                           
  1560                           ; 1 bytes @ 0x7
  1561   000008                     	ds	7
  1562   00000F                     ?_strlen:
  1563                           	callstack 0
  1564   00000F                     strlen@s:
  1565                           	callstack 0
  1566   00000F                     i1UART_Write@data:
  1567                           	callstack 0
  1568   00000F                     ClearBuffer@i:
  1569                           	callstack 0
  1570   00000F                     
  1571                           ; 1 bytes @ 0xE
  1572   00000F                     	ds	1
  1573   000010                     i1UART_Write_Text@text:
  1574                           	callstack 0
  1575                           
  1576                           ; 2 bytes @ 0xF
  1577   000010                     	ds	1
  1578   000011                     strcpy@dest:
  1579                           	callstack 0
  1580   000011                     strlen@a:
  1581                           	callstack 0
  1582   000011                     
  1583                           ; 1 bytes @ 0x10
  1584   000011                     	ds	1
  1585   000012                     strcpy@src:
  1586                           	callstack 0
  1587   000012                     ??i1_UART_Write_Text:
  1588                           
  1589                           ; 1 bytes @ 0x11
  1590   000012                     	ds	2
  1591   000014                     i1UART_Write_Text@i:
  1592                           	callstack 0
  1593   000014                     ??_strcpy:
  1594                           
  1595                           ; 1 bytes @ 0x13
  1596   000014                     	ds	2
  1597   000016                     MyusartRead@receivedData:
  1598                           	callstack 0
  1599   000016                     strcpy@d:
  1600                           	callstack 0
  1601   000016                     
  1602                           ; 1 bytes @ 0x15
  1603   000016                     	ds	1
  1604   000017                     ??_Lo_ISR:
  1605                           
  1606                           ; 1 bytes @ 0x16
  1607   000017                     	ds	12
  1608   000023                     Lo_ISR@command:
  1609                           	callstack 0
  1610                           
  1611                           ; 20 bytes @ 0x22
  1612   000023                     	ds	20
  1613                           
  1614 ;;
  1615 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1616 ;;
  1617 ;; *************** function _main *****************
  1618 ;; Defined at:
  1619 ;;		line 22 in file "main.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  prev_bend_se    2   63[BANK0 ] int 
  1624 ;;  blinker_dir     2    0        int 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1634 ;;      Params:         0       0       0       0       0       0       0
  1635 ;;      Locals:         0       2       0       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0       0       0
  1637 ;;      Totals:         0       2       0       0       0       0       0
  1638 ;;Total ram usage:        2 bytes
  1639 ;; Hardware stack levels required when called: 13
  1640 ;; This function calls:
  1641 ;;		_Check_ADC
  1642 ;;		_SYSTEM_Initialize
  1643 ;;		_UART_Write_Text
  1644 ;;		_displayBinary
  1645 ;; This function is called by:
  1646 ;;		Startup code after reset
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text0
  1651   0009C2                     __ptext0:
  1652                           	callstack 0
  1653   0009C2                     _main:
  1654                           	callstack 18
  1655   0009C2                     
  1656                           ;main.c: 25:     SYSTEM_Initialize() ;
  1657   0009C2  EC6A  F006         	call	_SYSTEM_Initialize	;wreg free
  1658   0009C6                     l2571:
  1659                           
  1660                           ;main.c: 31:         if(isConnected == 1 && needSendMsg == 1){
  1661   0009C6  0100               	movlb	0	; () banked
  1662   0009C8  05FB               	decf	_isConnected& (0+255),w,b
  1663   0009CA  11FC               	iorwf	(_isConnected+1)& (0+255),w,b
  1664   0009CC  A4D8               	btfss	status,2,c
  1665   0009CE  EFEB  F004         	goto	u2151
  1666   0009D2  EFED  F004         	goto	u2150
  1667   0009D6                     u2151:
  1668   0009D6  EF08  F005         	goto	l2581
  1669   0009DA                     u2150:
  1670   0009DA                     
  1671                           ; BSR set to: 0
  1672   0009DA  05F9               	decf	_needSendMsg& (0+255),w,b
  1673   0009DC  11FA               	iorwf	(_needSendMsg+1)& (0+255),w,b
  1674   0009DE  A4D8               	btfss	status,2,c
  1675   0009E0  EFF4  F004         	goto	u2161
  1676   0009E4  EFF6  F004         	goto	u2160
  1677   0009E8                     u2161:
  1678   0009E8  EF08  F005         	goto	l2581
  1679   0009EC                     u2160:
  1680   0009EC                     
  1681                           ; BSR set to: 0
  1682                           ;main.c: 32:             displayBinary(0);
  1683   0009EC  0E00               	movlw	0
  1684   0009EE  6F81               	movwf	(displayBinary@num+1)& (0+255),b
  1685   0009F0  0E00               	movlw	0
  1686   0009F2  6F80               	movwf	displayBinary@num& (0+255),b
  1687   0009F4  ECD8  F003         	call	_displayBinary	;wreg free
  1688   0009F8                     
  1689                           ;main.c: 33:             UART_Write_Text("LRN\r\n");
  1690   0009F8  0E15               	movlw	low STR_5
  1691   0009FA  0100               	movlb	0	; () banked
  1692   0009FC  6F81               	movwf	UART_Write_Text@text& (0+255),b
  1693   0009FE  0E7D               	movlw	high STR_5
  1694   000A00  6F82               	movwf	(UART_Write_Text@text+1)& (0+255),b
  1695   000A02  EC21  F004         	call	_UART_Write_Text	;wreg free
  1696   000A06                     
  1697                           ;main.c: 34:             needSendMsg = 0;
  1698   000A06  0E00               	movlw	0
  1699   000A08  0100               	movlb	0	; () banked
  1700   000A0A  6FFA               	movwf	(_needSendMsg+1)& (0+255),b
  1701   000A0C  0E00               	movlw	0
  1702   000A0E  6FF9               	movwf	_needSendMsg& (0+255),b
  1703   000A10                     l2581:
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;main.c: 37:         Check_ADC(prev_bend_sensor_val);
  1707   000A10  C0BF  F0AE         	movff	main@prev_bend_sensor_val,Check_ADC@prev_sensor_val
  1708   000A14  C0C0  F0AF         	movff	main@prev_bend_sensor_val+1,Check_ADC@prev_sensor_val+1
  1709   000A18  ECFF  F001         	call	_Check_ADC	;wreg free
  1710   000A1C  EFE3  F004         	goto	l2571
  1711   000A20  EF0E  F001         	goto	start
  1712   000A24                     __end_of_main:
  1713                           	callstack 0
  1714                           
  1715 ;; *************** function _displayBinary *****************
  1716 ;; Defined at:
  1717 ;;		line 14 in file "main.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  num             2    0[BANK0 ] int 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;		None
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      void 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1731 ;;      Params:         0       2       0       0       0       0       0
  1732 ;;      Locals:         0       0       0       0       0       0       0
  1733 ;;      Temps:          0       1       0       0       0       0       0
  1734 ;;      Totals:         0       3       0       0       0       0       0
  1735 ;;Total ram usage:        3 bytes
  1736 ;; Hardware stack levels used: 1
  1737 ;; Hardware stack levels required when called: 7
  1738 ;; This function calls:
  1739 ;;		Nothing
  1740 ;; This function is called by:
  1741 ;;		_main
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text1
  1746   0007B0                     __ptext1:
  1747                           	callstack 0
  1748   0007B0                     _displayBinary:
  1749                           	callstack 23
  1750   0007B0                     
  1751                           ;main.c: 16:     LATAbits.LATA1 = (num & 0x01) ? 1 : 0;
  1752   0007B0  0100               	movlb	0	; () banked
  1753   0007B2  B180               	btfsc	displayBinary@num& (0+255),0,b
  1754   0007B4  EFDE  F003         	goto	u2071
  1755   0007B8  EFE2  F003         	goto	u2070
  1756   0007BC                     u2071:
  1757   0007BC  6B82               	clrf	??_displayBinary& (0+255),b
  1758   0007BE  2B82               	incf	??_displayBinary& (0+255),f,b
  1759   0007C0  EFE4  F003         	goto	u2088
  1760   0007C4                     u2070:
  1761   0007C4  0100               	movlb	0	; () banked
  1762   0007C6  6B82               	clrf	??_displayBinary& (0+255),b
  1763   0007C8                     u2088:
  1764   0007C8  4782               	rlncf	??_displayBinary& (0+255),f,b
  1765   0007CA  5089               	movf	137,w,c	;volatile
  1766   0007CC  1982               	xorwf	??_displayBinary& (0+255),w,b
  1767   0007CE  0BFD               	andlw	-3
  1768   0007D0  1982               	xorwf	??_displayBinary& (0+255),w,b
  1769   0007D2  6E89               	movwf	137,c	;volatile
  1770                           
  1771                           ;main.c: 17:     LATAbits.LATA2 = (num & 0x02) ? 1 : 0;
  1772   0007D4  B380               	btfsc	displayBinary@num& (0+255),1,b
  1773   0007D6  EFEF  F003         	goto	u2091
  1774   0007DA  EFF3  F003         	goto	u2090
  1775   0007DE                     u2091:
  1776   0007DE  6B82               	clrf	??_displayBinary& (0+255),b
  1777   0007E0  2B82               	incf	??_displayBinary& (0+255),f,b
  1778   0007E2  EFF5  F003         	goto	u2108
  1779   0007E6                     u2090:
  1780   0007E6  0100               	movlb	0	; () banked
  1781   0007E8  6B82               	clrf	??_displayBinary& (0+255),b
  1782   0007EA                     u2108:
  1783   0007EA  4782               	rlncf	??_displayBinary& (0+255),f,b
  1784   0007EC  4782               	rlncf	??_displayBinary& (0+255),f,b
  1785   0007EE  5089               	movf	137,w,c	;volatile
  1786   0007F0  1982               	xorwf	??_displayBinary& (0+255),w,b
  1787   0007F2  0BFB               	andlw	-5
  1788   0007F4  1982               	xorwf	??_displayBinary& (0+255),w,b
  1789   0007F6  6E89               	movwf	137,c	;volatile
  1790                           
  1791                           ;main.c: 18:     LATAbits.LATA3 = (num & 0x04) ? 1 : 0;
  1792   0007F8  B580               	btfsc	displayBinary@num& (0+255),2,b
  1793   0007FA  EF01  F004         	goto	u2111
  1794   0007FE  EF05  F004         	goto	u2110
  1795   000802                     u2111:
  1796   000802  6B82               	clrf	??_displayBinary& (0+255),b
  1797   000804  2B82               	incf	??_displayBinary& (0+255),f,b
  1798   000806  EF07  F004         	goto	u2128
  1799   00080A                     u2110:
  1800   00080A  0100               	movlb	0	; () banked
  1801   00080C  6B82               	clrf	??_displayBinary& (0+255),b
  1802   00080E                     u2128:
  1803   00080E  4782               	rlncf	??_displayBinary& (0+255),f,b
  1804   000810  4782               	rlncf	??_displayBinary& (0+255),f,b
  1805   000812  4782               	rlncf	??_displayBinary& (0+255),f,b
  1806   000814  5089               	movf	137,w,c	;volatile
  1807   000816  1982               	xorwf	??_displayBinary& (0+255),w,b
  1808   000818  0BF7               	andlw	-9
  1809   00081A  1982               	xorwf	??_displayBinary& (0+255),w,b
  1810   00081C  6E89               	movwf	137,c	;volatile
  1811                           
  1812                           ;main.c: 19:     LATAbits.LATA4 = (num & 0x08) ? 1 : 0;
  1813   00081E  B780               	btfsc	displayBinary@num& (0+255),3,b
  1814   000820  EF14  F004         	goto	u2131
  1815   000824  EF18  F004         	goto	u2130
  1816   000828                     u2131:
  1817   000828  6B82               	clrf	??_displayBinary& (0+255),b
  1818   00082A  2B82               	incf	??_displayBinary& (0+255),f,b
  1819   00082C  EF1A  F004         	goto	u2148
  1820   000830                     u2130:
  1821   000830  0100               	movlb	0	; () banked
  1822   000832  6B82               	clrf	??_displayBinary& (0+255),b
  1823   000834                     u2148:
  1824   000834  3B82               	swapf	??_displayBinary& (0+255),f,b
  1825   000836  5089               	movf	137,w,c	;volatile
  1826   000838  1982               	xorwf	??_displayBinary& (0+255),w,b
  1827   00083A  0BEF               	andlw	-17
  1828   00083C  1982               	xorwf	??_displayBinary& (0+255),w,b
  1829   00083E  6E89               	movwf	137,c	;volatile
  1830   000840                     
  1831                           ; BSR set to: 0
  1832   000840  0012               	return		;funcret
  1833   000842                     __end_of_displayBinary:
  1834                           	callstack 0
  1835                           
  1836 ;; *************** function _SYSTEM_Initialize *****************
  1837 ;; Defined at:
  1838 ;;		line 60 in file "setting_hardaware/setting.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, status,2, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1852 ;;      Params:         0       0       0       0       0       0       0
  1853 ;;      Locals:         0       0       0       0       0       0       0
  1854 ;;      Temps:          0       0       0       0       0       0       0
  1855 ;;      Totals:         0       0       0       0       0       0       0
  1856 ;;Total ram usage:        0 bytes
  1857 ;; Hardware stack levels used: 1
  1858 ;; Hardware stack levels required when called: 8
  1859 ;; This function calls:
  1860 ;;		_ADC_Initialize
  1861 ;;		_INTERRUPT_Initialize
  1862 ;;		_OSCILLATOR_Initialize
  1863 ;;		_UART_Initialize
  1864 ;; This function is called by:
  1865 ;;		_main
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           	psect	text2
  1870   000CD4                     __ptext2:
  1871                           	callstack 0
  1872   000CD4                     _SYSTEM_Initialize:
  1873                           	callstack 22
  1874   000CD4                     
  1875                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
  1876   000CD4  EC73  F006         	call	_OSCILLATOR_Initialize	;wreg free
  1877   000CD8                     
  1878                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  1879   000CD8  EC02  F006         	call	_INTERRUPT_Initialize	;wreg free
  1880   000CDC                     
  1881                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
  1882   000CDC  EC2A  F006         	call	_UART_Initialize	;wreg free
  1883   000CE0                     
  1884                           ;setting_hardaware/setting.c: 70:     ADC_Initialize();
  1885   000CE0  EC3B  F006         	call	_ADC_Initialize	;wreg free
  1886   000CE4  0012               	return		;funcret
  1887   000CE6                     __end_of_SYSTEM_Initialize:
  1888                           	callstack 0
  1889                           
  1890 ;; *************** function _UART_Initialize *****************
  1891 ;; Defined at:
  1892 ;;		line 10 in file "setting_hardaware/uart.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, status,2
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1906 ;;      Params:         0       0       0       0       0       0       0
  1907 ;;      Locals:         0       0       0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0
  1909 ;;      Totals:         0       0       0       0       0       0       0
  1910 ;;Total ram usage:        0 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 7
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_SYSTEM_Initialize
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text3
  1921   000C54                     __ptext3:
  1922                           	callstack 0
  1923   000C54                     _UART_Initialize:
  1924                           	callstack 22
  1925   000C54                     
  1926                           ;setting_hardaware/uart.c: 21:     TRISCbits.TRISC6 = 1;
  1927   000C54  8C94               	bsf	148,6,c	;volatile
  1928                           
  1929                           ;setting_hardaware/uart.c: 22:     TRISCbits.TRISC7 = 1;
  1930   000C56  8E94               	bsf	148,7,c	;volatile
  1931                           
  1932                           ;setting_hardaware/uart.c: 25:     TXSTAbits.SYNC = 0;
  1933   000C58  98AC               	bcf	172,4,c	;volatile
  1934                           
  1935                           ;setting_hardaware/uart.c: 26:     BAUDCONbits.BRG16 = 0;
  1936   000C5A  96B8               	bcf	184,3,c	;volatile
  1937                           
  1938                           ;setting_hardaware/uart.c: 27:     TXSTAbits.BRGH = 1;
  1939   000C5C  84AC               	bsf	172,2,c	;volatile
  1940   000C5E                     
  1941                           ;setting_hardaware/uart.c: 28:     SPBRG = 25;
  1942   000C5E  0E19               	movlw	25
  1943   000C60  6EAF               	movwf	175,c	;volatile
  1944   000C62                     
  1945                           ;setting_hardaware/uart.c: 31:     RCSTAbits.SPEN = 1;
  1946   000C62  8EAB               	bsf	171,7,c	;volatile
  1947   000C64                     
  1948                           ;setting_hardaware/uart.c: 32:     PIR1bits.TXIF = 0;
  1949   000C64  989E               	bcf	158,4,c	;volatile
  1950   000C66                     
  1951                           ;setting_hardaware/uart.c: 33:     PIR1bits.RCIF = 1;
  1952   000C66  8A9E               	bsf	158,5,c	;volatile
  1953   000C68                     
  1954                           ;setting_hardaware/uart.c: 34:     TXSTAbits.TXEN = 1;
  1955   000C68  8AAC               	bsf	172,5,c	;volatile
  1956   000C6A                     
  1957                           ;setting_hardaware/uart.c: 35:     RCSTAbits.CREN = 1;
  1958   000C6A  88AB               	bsf	171,4,c	;volatile
  1959   000C6C                     
  1960                           ;setting_hardaware/uart.c: 36:     PIE1bits.TXIE = 0;
  1961   000C6C  989D               	bcf	157,4,c	;volatile
  1962   000C6E                     
  1963                           ;setting_hardaware/uart.c: 37:     IPR1bits.TXIP = 0;
  1964   000C6E  989F               	bcf	159,4,c	;volatile
  1965   000C70                     
  1966                           ;setting_hardaware/uart.c: 38:     PIE1bits.RCIE = 1;
  1967   000C70  8A9D               	bsf	157,5,c	;volatile
  1968   000C72                     
  1969                           ;setting_hardaware/uart.c: 39:     IPR1bits.RCIP = 0;
  1970   000C72  9A9F               	bcf	159,5,c	;volatile
  1971   000C74  0012               	return		;funcret
  1972   000C76                     __end_of_UART_Initialize:
  1973                           	callstack 0
  1974                           
  1975 ;; *************** function _OSCILLATOR_Initialize *****************
  1976 ;; Defined at:
  1977 ;;		line 74 in file "setting_hardaware/setting.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;		None
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;		None
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		None
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1991 ;;      Params:         0       0       0       0       0       0       0
  1992 ;;      Locals:         0       0       0       0       0       0       0
  1993 ;;      Temps:          0       0       0       0       0       0       0
  1994 ;;      Totals:         0       0       0       0       0       0       0
  1995 ;;Total ram usage:        0 bytes
  1996 ;; Hardware stack levels used: 1
  1997 ;; Hardware stack levels required when called: 7
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		_SYSTEM_Initialize
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text4
  2006   000CE6                     __ptext4:
  2007                           	callstack 0
  2008   000CE6                     _OSCILLATOR_Initialize:
  2009                           	callstack 22
  2010   000CE6                     
  2011                           ;setting_hardaware/setting.c: 76:     IRCF2 = 1;
  2012   000CE6  8CD3               	bsf	4051,6,c	;volatile
  2013                           
  2014                           ;setting_hardaware/setting.c: 77:     IRCF1 = 1;
  2015   000CE8  8AD3               	bsf	4051,5,c	;volatile
  2016                           
  2017                           ;setting_hardaware/setting.c: 78:     IRCF0 = 0;
  2018   000CEA  98D3               	bcf	4051,4,c	;volatile
  2019   000CEC  0012               	return		;funcret
  2020   000CEE                     __end_of_OSCILLATOR_Initialize:
  2021                           	callstack 0
  2022                           
  2023 ;; *************** function _INTERRUPT_Initialize *****************
  2024 ;; Defined at:
  2025 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;		None
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2039 ;;      Params:         0       0       0       0       0       0       0
  2040 ;;      Locals:         0       0       0       0       0       0       0
  2041 ;;      Temps:          0       0       0       0       0       0       0
  2042 ;;      Totals:         0       0       0       0       0       0       0
  2043 ;;Total ram usage:        0 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 7
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_SYSTEM_Initialize
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           	psect	text5
  2054   000C04                     __ptext5:
  2055                           	callstack 0
  2056   000C04                     _INTERRUPT_Initialize:
  2057                           	callstack 22
  2058   000C04                     
  2059                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
  2060   000C04  8ED0               	bsf	208,7,c	;volatile
  2061                           
  2062                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
  2063   000C06  8EF2               	bsf	242,7,c	;volatile
  2064                           
  2065                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
  2066   000C08  8CF2               	bsf	242,6,c	;volatile
  2067   000C0A                     
  2068                           ;setting_hardaware/interrupt_manager.c: 10:     ADCON1 = 0x0f;
  2069   000C0A  0E0F               	movlw	15
  2070   000C0C  6EC1               	movwf	193,c	;volatile
  2071   000C0E                     
  2072                           ;setting_hardaware/interrupt_manager.c: 11:     LATA = 0x00;
  2073   000C0E  6A89               	clrf	137,c	;volatile
  2074   000C10                     
  2075                           ;setting_hardaware/interrupt_manager.c: 12:     TRISAbits.TRISA0 = 1;
  2076   000C10  8092               	bsf	146,0,c	;volatile
  2077   000C12                     
  2078                           ;setting_hardaware/interrupt_manager.c: 13:     TRISAbits.TRISA1 = 0;
  2079   000C12  9292               	bcf	146,1,c	;volatile
  2080   000C14                     
  2081                           ;setting_hardaware/interrupt_manager.c: 14:     TRISAbits.TRISA2 = 0;
  2082   000C14  9492               	bcf	146,2,c	;volatile
  2083   000C16                     
  2084                           ;setting_hardaware/interrupt_manager.c: 15:     TRISAbits.TRISA3 = 0;
  2085   000C16  9692               	bcf	146,3,c	;volatile
  2086   000C18                     
  2087                           ;setting_hardaware/interrupt_manager.c: 16:     TRISAbits.TRISA4 = 0;
  2088   000C18  9892               	bcf	146,4,c	;volatile
  2089   000C1A                     
  2090                           ;setting_hardaware/interrupt_manager.c: 17:     LATAbits.LATA1 = 0;
  2091   000C1A  9289               	bcf	137,1,c	;volatile
  2092   000C1C                     
  2093                           ;setting_hardaware/interrupt_manager.c: 18:     LATAbits.LATA2 = 0;
  2094   000C1C  9489               	bcf	137,2,c	;volatile
  2095   000C1E                     
  2096                           ;setting_hardaware/interrupt_manager.c: 19:     LATAbits.LATA3 = 0;
  2097   000C1E  9689               	bcf	137,3,c	;volatile
  2098   000C20                     
  2099                           ;setting_hardaware/interrupt_manager.c: 20:     LATAbits.LATA4 = 0;
  2100   000C20  9889               	bcf	137,4,c	;volatile
  2101                           
  2102                           ;setting_hardaware/interrupt_manager.c: 23:     TRISB = 0x01;
  2103   000C22  0E01               	movlw	1
  2104   000C24  6E93               	movwf	147,c	;volatile
  2105   000C26                     
  2106                           ;setting_hardaware/interrupt_manager.c: 24:     LATBbits.LATB0 = 0;
  2107   000C26  908A               	bcf	138,0,c	;volatile
  2108   000C28                     
  2109                           ;setting_hardaware/interrupt_manager.c: 26:     INTCONbits.INT0IE = 1;
  2110   000C28  88F2               	bsf	242,4,c	;volatile
  2111   000C2A                     
  2112                           ;setting_hardaware/interrupt_manager.c: 27:     INTCONbits.INT0IF = 0;
  2113   000C2A  92F2               	bcf	242,1,c	;volatile
  2114   000C2C  0012               	return		;funcret
  2115   000C2E                     __end_of_INTERRUPT_Initialize:
  2116                           	callstack 0
  2117                           
  2118 ;; *************** function _ADC_Initialize *****************
  2119 ;; Defined at:
  2120 ;;		line 5 in file "setting_hardaware/adc.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2134 ;;      Params:         0       0       0       0       0       0       0
  2135 ;;      Locals:         0       0       0       0       0       0       0
  2136 ;;      Temps:          0       0       0       0       0       0       0
  2137 ;;      Totals:         0       0       0       0       0       0       0
  2138 ;;Total ram usage:        0 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; Hardware stack levels required when called: 7
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_SYSTEM_Initialize
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text6
  2149   000C76                     __ptext6:
  2150                           	callstack 0
  2151   000C76                     _ADC_Initialize:
  2152                           	callstack 22
  2153   000C76                     
  2154                           ;setting_hardaware/adc.c: 7:     TRISAbits.RA0 = 1;
  2155   000C76  8092               	bsf	146,0,c	;volatile
  2156   000C78                     
  2157                           ;setting_hardaware/adc.c: 9:     ADCON1 = 0x0e;
  2158   000C78  0E0E               	movlw	14
  2159   000C7A  6EC1               	movwf	193,c	;volatile
  2160   000C7C                     
  2161                           ;setting_hardaware/adc.c: 11:     ADFM = 1 ;
  2162   000C7C  8EC0               	bsf	4032,7,c	;volatile
  2163                           
  2164                           ;setting_hardaware/adc.c: 12:     ADCON2bits.ADCS = 7;
  2165   000C7E  0E07               	movlw	7
  2166   000C80  12C0               	iorwf	192,f,c	;volatile
  2167                           
  2168                           ;setting_hardaware/adc.c: 13:     ADCON2bits.ACQT = 0b001;
  2169   000C82  50C0               	movf	192,w,c	;volatile
  2170   000C84  0BC7               	andlw	-57
  2171   000C86  0908               	iorlw	8
  2172   000C88  6EC0               	movwf	192,c	;volatile
  2173   000C8A                     
  2174                           ;setting_hardaware/adc.c: 15:     ADRESH=0;
  2175   000C8A  6AC4               	clrf	196,c	;volatile
  2176   000C8C                     
  2177                           ;setting_hardaware/adc.c: 16:     ADRESL=0;
  2178   000C8C  6AC3               	clrf	195,c	;volatile
  2179   000C8E  0012               	return		;funcret
  2180   000C90                     __end_of_ADC_Initialize:
  2181                           	callstack 0
  2182                           
  2183 ;; *************** function _Check_ADC *****************
  2184 ;; Defined at:
  2185 ;;		line 33 in file "setting_hardaware/adc.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  prev_sensor_    2   46[BANK0 ] int 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  tmp            10   51[BANK0 ] unsigned char [10]
  2190 ;;  bend_sensor_    2   61[BANK0 ] int 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2200 ;;      Params:         0       2       0       0       0       0       0
  2201 ;;      Locals:         0      12       0       0       0       0       0
  2202 ;;      Temps:          0       3       0       0       0       0       0
  2203 ;;      Totals:         0      17       0       0       0       0       0
  2204 ;;Total ram usage:       17 bytes
  2205 ;; Hardware stack levels used: 1
  2206 ;; Hardware stack levels required when called: 12
  2207 ;; This function calls:
  2208 ;;		_ADC_Read
  2209 ;;		_UART_Write_Text
  2210 ;;		_sprintf
  2211 ;; This function is called by:
  2212 ;;		_main
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text7
  2217   0003FE                     __ptext7:
  2218                           	callstack 0
  2219   0003FE                     _Check_ADC:
  2220                           	callstack 18
  2221   0003FE                     
  2222                           ;setting_hardaware/adc.c: 35:     int bend_sensor_val=ADC_Read(bend_sensor_val);
  2223   0003FE  C0BD  F080         	movff	Check_ADC@bend_sensor_val,ADC_Read@channel
  2224   000402  C0BE  F081         	movff	Check_ADC@bend_sensor_val+1,ADC_Read@channel+1
  2225   000406  ECD1  F005         	call	_ADC_Read	;wreg free
  2226   00040A  C080  F0BD         	movff	?_ADC_Read,Check_ADC@bend_sensor_val
  2227   00040E  C081  F0BE         	movff	?_ADC_Read+1,Check_ADC@bend_sensor_val+1
  2228   000412                     
  2229                           ;setting_hardaware/adc.c: 37:     char tmp[10];;setting_hardaware/adc.c: 38:     sprintf
      +                          (tmp, "%d\r\n", bend_sensor_val);
  2230   000412  0EB3               	movlw	low Check_ADC@tmp
  2231   000414  0100               	movlb	0	; () banked
  2232   000416  6F9D               	movwf	sprintf@s& (0+255),b
  2233   000418  0E2A               	movlw	low STR_1
  2234   00041A  6F9E               	movwf	sprintf@fmt& (0+255),b
  2235   00041C  0E7D               	movlw	high STR_1
  2236   00041E  6F9F               	movwf	(sprintf@fmt+1)& (0+255),b
  2237   000420  C0BD  F0A0         	movff	Check_ADC@bend_sensor_val,?_sprintf+3
  2238   000424  C0BE  F0A1         	movff	Check_ADC@bend_sensor_val+1,?_sprintf+4
  2239   000428  EC7A  F005         	call	_sprintf	;wreg free
  2240   00042C                     
  2241                           ;setting_hardaware/adc.c: 39:     UART_Write_Text(tmp);
  2242   00042C  0EB3               	movlw	low Check_ADC@tmp
  2243   00042E  0100               	movlb	0	; () banked
  2244   000430  6F81               	movwf	UART_Write_Text@text& (0+255),b
  2245   000432  6B82               	clrf	(UART_Write_Text@text+1)& (0+255),b
  2246   000434  EC21  F004         	call	_UART_Write_Text	;wreg free
  2247   000438                     
  2248                           ;setting_hardaware/adc.c: 41:     if(prev_sensor_val<bend_sensor_val-5 || prev_sensor_va
      +                          l>bend_sensor_val+5)
  2249   000438  0EFB               	movlw	251
  2250   00043A  0100               	movlb	0	; () banked
  2251   00043C  25BD               	addwf	Check_ADC@bend_sensor_val& (0+255),w,b
  2252   00043E  6FB0               	movwf	??_Check_ADC& (0+255),b
  2253   000440  0EFF               	movlw	255
  2254   000442  21BE               	addwfc	(Check_ADC@bend_sensor_val+1)& (0+255),w,b
  2255   000444  6FB1               	movwf	(??_Check_ADC+1)& (0+255),b
  2256   000446  51B0               	movf	??_Check_ADC& (0+255),w,b
  2257   000448  5DAE               	subwf	Check_ADC@prev_sensor_val& (0+255),w,b
  2258   00044A  51AF               	movf	(Check_ADC@prev_sensor_val+1)& (0+255),w,b
  2259   00044C  0A80               	xorlw	128
  2260   00044E  6FB2               	movwf	(??_Check_ADC+2)& (0+255),b
  2261   000450  51B1               	movf	(??_Check_ADC+1)& (0+255),w,b
  2262   000452  0A80               	xorlw	128
  2263   000454  59B2               	subwfb	(??_Check_ADC+2)& (0+255),w,b
  2264   000456  A0D8               	btfss	status,0,c
  2265   000458  EF30  F002         	goto	u2041
  2266   00045C  EF32  F002         	goto	u2040
  2267   000460                     u2041:
  2268   000460  EF47  F002         	goto	l32
  2269   000464                     u2040:
  2270   000464                     
  2271                           ; BSR set to: 0
  2272   000464  0E05               	movlw	5
  2273   000466  25BD               	addwf	Check_ADC@bend_sensor_val& (0+255),w,b
  2274   000468  6FB0               	movwf	??_Check_ADC& (0+255),b
  2275   00046A  0E00               	movlw	0
  2276   00046C  21BE               	addwfc	(Check_ADC@bend_sensor_val+1)& (0+255),w,b
  2277   00046E  6FB1               	movwf	(??_Check_ADC+1)& (0+255),b
  2278   000470  51AE               	movf	Check_ADC@prev_sensor_val& (0+255),w,b
  2279   000472  5DB0               	subwf	??_Check_ADC& (0+255),w,b
  2280   000474  51B1               	movf	(??_Check_ADC+1)& (0+255),w,b
  2281   000476  0A80               	xorlw	128
  2282   000478  6FB2               	movwf	(??_Check_ADC+2)& (0+255),b
  2283   00047A  51AF               	movf	(Check_ADC@prev_sensor_val+1)& (0+255),w,b
  2284   00047C  0A80               	xorlw	128
  2285   00047E  59B2               	subwfb	(??_Check_ADC+2)& (0+255),w,b
  2286   000480  B0D8               	btfsc	status,0,c
  2287   000482  EF45  F002         	goto	u2051
  2288   000486  EF47  F002         	goto	u2050
  2289   00048A                     u2051:
  2290   00048A  EF4B  F002         	goto	l2551
  2291   00048E                     u2050:
  2292   00048E                     l32:
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;setting_hardaware/adc.c: 42:     {;setting_hardaware/adc.c: 43:         prev_sensor_val
      +                          =bend_sensor_val;
  2296   00048E  C0BD  F0AE         	movff	Check_ADC@bend_sensor_val,Check_ADC@prev_sensor_val
  2297   000492  C0BE  F0AF         	movff	Check_ADC@bend_sensor_val+1,Check_ADC@prev_sensor_val+1
  2298   000496                     l2551:
  2299                           
  2300                           ; BSR set to: 0
  2301                           ;setting_hardaware/adc.c: 46:     if(prev_sensor_val<=0x0130)
  2302   000496  BFAF               	btfsc	(Check_ADC@prev_sensor_val+1)& (0+255),7,b
  2303   000498  EF59  F002         	goto	u2060
  2304   00049C  0E31               	movlw	49
  2305   00049E  5DAE               	subwf	Check_ADC@prev_sensor_val& (0+255),w,b
  2306   0004A0  0E01               	movlw	1
  2307   0004A2  59AF               	subwfb	(Check_ADC@prev_sensor_val+1)& (0+255),w,b
  2308   0004A4  B0D8               	btfsc	status,0,c
  2309   0004A6  EF57  F002         	goto	u2061
  2310   0004AA  EF59  F002         	goto	u2060
  2311   0004AE                     u2061:
  2312   0004AE  EF61  F002         	goto	l2555
  2313   0004B2                     u2060:
  2314   0004B2                     
  2315                           ; BSR set to: 0
  2316                           ;setting_hardaware/adc.c: 47:     {;setting_hardaware/adc.c: 48:         UART_Write_Text
      +                          ("BN\r\n");
  2317   0004B2  0E25               	movlw	low STR_2
  2318   0004B4  6F81               	movwf	UART_Write_Text@text& (0+255),b
  2319   0004B6  0E7D               	movlw	high STR_2
  2320   0004B8  6F82               	movwf	(UART_Write_Text@text+1)& (0+255),b
  2321   0004BA  EC21  F004         	call	_UART_Write_Text	;wreg free
  2322                           
  2323                           ;setting_hardaware/adc.c: 49:     }
  2324   0004BE  EF67  F002         	goto	l35
  2325   0004C2                     l2555:
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;setting_hardaware/adc.c: 51:     {;setting_hardaware/adc.c: 52:         UART_Write_Text
      +                          ("BF\r\n");
  2329   0004C2  0E20               	movlw	low STR_3
  2330   0004C4  6F81               	movwf	UART_Write_Text@text& (0+255),b
  2331   0004C6  0E7D               	movlw	high STR_3
  2332   0004C8  6F82               	movwf	(UART_Write_Text@text+1)& (0+255),b
  2333   0004CA  EC21  F004         	call	_UART_Write_Text	;wreg free
  2334   0004CE                     l35:
  2335   0004CE  0012               	return		;funcret
  2336   0004D0                     __end_of_Check_ADC:
  2337                           	callstack 0
  2338                           
  2339 ;; *************** function _sprintf *****************
  2340 ;; Defined at:
  2341 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  s               1   29[BANK0 ] PTR unsigned char 
  2344 ;;		 -> Check_ADC@tmp(10), 
  2345 ;;  fmt             2   30[BANK0 ] PTR const unsigned char 
  2346 ;;		 -> STR_1(5), 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  f              11   35[BANK0 ] struct _IO_FILE
  2349 ;;  ret             2    0        int 
  2350 ;;  ap              1   34[BANK0 ] PTR void [1]
  2351 ;;		 -> ?_sprintf(2), 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  2   29[BANK0 ] int 
  2354 ;; Registers used:
  2355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2361 ;;      Params:         0       5       0       0       0       0       0
  2362 ;;      Locals:         0      12       0       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0       0       0
  2364 ;;      Totals:         0      17       0       0       0       0       0
  2365 ;;Total ram usage:       17 bytes
  2366 ;; Hardware stack levels used: 1
  2367 ;; Hardware stack levels required when called: 11
  2368 ;; This function calls:
  2369 ;;		_vfprintf
  2370 ;; This function is called by:
  2371 ;;		_Check_ADC
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text8
  2376   000AF4                     __ptext8:
  2377                           	callstack 0
  2378   000AF4                     _sprintf:
  2379                           	callstack 18
  2380   000AF4  0EA0               	movlw	low (?_sprintf+3)
  2381   000AF6  0100               	movlb	0	; () banked
  2382   000AF8  6FA2               	movwf	sprintf@ap& (0+255),b
  2383   000AFA  C09D  F0A3         	movff	sprintf@s,sprintf@f
  2384   000AFE                     
  2385                           ; BSR set to: 0
  2386   000AFE  0E00               	movlw	0
  2387   000B00  6FA6               	movwf	(sprintf@f+3)& (0+255),b
  2388   000B02  0E00               	movlw	0
  2389   000B04  6FA5               	movwf	(sprintf@f+2)& (0+255),b
  2390   000B06                     
  2391                           ; BSR set to: 0
  2392   000B06  0E00               	movlw	0
  2393   000B08  6FAD               	movwf	(sprintf@f+10)& (0+255),b
  2394   000B0A  0E00               	movlw	0
  2395   000B0C  6FAC               	movwf	(sprintf@f+9)& (0+255),b
  2396   000B0E                     
  2397                           ; BSR set to: 0
  2398   000B0E  0EA3               	movlw	low sprintf@f
  2399   000B10  6F97               	movwf	vfprintf@fp& (0+255),b
  2400   000B12  C09E  F098         	movff	sprintf@fmt,vfprintf@fmt
  2401   000B16  C09F  F099         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2402   000B1A  0EA2               	movlw	low sprintf@ap
  2403   000B1C  6F9A               	movwf	vfprintf@ap& (0+255),b
  2404   000B1E  EC38  F005         	call	_vfprintf	;wreg free
  2405   000B22  0100               	movlb	0	; () banked
  2406   000B24  519D               	movf	sprintf@s& (0+255),w,b
  2407   000B26  25A5               	addwf	(sprintf@f+2)& (0+255),w,b
  2408   000B28  6ED9               	movwf	fsr2l,c
  2409   000B2A  6ADA               	clrf	fsr2h,c
  2410   000B2C  6ADF               	clrf	indf2,c
  2411   000B2E                     
  2412                           ; BSR set to: 0
  2413   000B2E  0012               	return		;funcret
  2414   000B30                     __end_of_sprintf:
  2415                           	callstack 0
  2416                           
  2417 ;; *************** function _vfprintf *****************
  2418 ;; Defined at:
  2419 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  fp              1   23[BANK0 ] PTR struct _IO_FILE
  2422 ;;		 -> sprintf@f(11), 
  2423 ;;  fmt             2   24[BANK0 ] PTR const unsigned char 
  2424 ;;		 -> STR_1(5), 
  2425 ;;  ap              1   26[BANK0 ] PTR PTR void 
  2426 ;;		 -> sprintf@ap(1), 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  cfmt            2   27[BANK0 ] PTR unsigned char 
  2429 ;;		 -> STR_1(5), 
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  2   23[BANK0 ] int 
  2432 ;; Registers used:
  2433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2439 ;;      Params:         0       4       0       0       0       0       0
  2440 ;;      Locals:         0       2       0       0       0       0       0
  2441 ;;      Temps:          0       0       0       0       0       0       0
  2442 ;;      Totals:         0       6       0       0       0       0       0
  2443 ;;Total ram usage:        6 bytes
  2444 ;; Hardware stack levels used: 1
  2445 ;; Hardware stack levels required when called: 10
  2446 ;; This function calls:
  2447 ;;		_vfpfcnvrt
  2448 ;; This function is called by:
  2449 ;;		_sprintf
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text9
  2454   000A70                     __ptext9:
  2455                           	callstack 0
  2456   000A70                     _vfprintf:
  2457                           	callstack 18
  2458   000A70                     
  2459                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2460   000A70  C098  F09B         	movff	vfprintf@fmt,vfprintf@cfmt
  2461   000A74  C099  F09C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2462                           
  2463                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2464   000A78  EF47  F005         	goto	l2443
  2465   000A7C                     l2441:
  2466                           
  2467                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2468   000A7C  C097  F08A         	movff	vfprintf@fp,vfpfcnvrt@fp
  2469   000A80  0E9B               	movlw	low vfprintf@cfmt
  2470   000A82  0100               	movlb	0	; () banked
  2471   000A84  6F8B               	movwf	vfpfcnvrt@fmt& (0+255),b
  2472   000A86  C09A  F08C         	movff	vfprintf@ap,vfpfcnvrt@ap
  2473   000A8A  EC10  F001         	call	_vfpfcnvrt	;wreg free
  2474   000A8E                     l2443:
  2475                           
  2476                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2477   000A8E  C09B  FFF6         	movff	vfprintf@cfmt,tblptrl
  2478   000A92  C09C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2479   000A96                     	if	0	;tblptru may be non-zero
  2480   000A96                     	endif
  2481   000A96                     	if	0	;tblptru may be non-zero
  2482   000A96                     	endif
  2483   000A96  0008               	tblrd		*
  2484   000A98  50F5               	movf	tablat,w,c
  2485   000A9A  0900               	iorlw	0
  2486   000A9C  A4D8               	btfss	status,2,c
  2487   000A9E  EF53  F005         	goto	u1991
  2488   000AA2  EF55  F005         	goto	u1990
  2489   000AA6                     u1991:
  2490   000AA6  EF3E  F005         	goto	l2441
  2491   000AAA                     u1990:
  2492   000AAA                     
  2493                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2494   000AAA  0E00               	movlw	0
  2495   000AAC  0100               	movlb	0	; () banked
  2496   000AAE  6F98               	movwf	(?_vfprintf+1)& (0+255),b
  2497   000AB0  0E00               	movlw	0
  2498   000AB2  6F97               	movwf	?_vfprintf& (0+255),b
  2499   000AB4                     
  2500                           ; BSR set to: 0
  2501   000AB4  0012               	return		;funcret
  2502   000AB6                     __end_of_vfprintf:
  2503                           	callstack 0
  2504                           
  2505 ;; *************** function _vfpfcnvrt *****************
  2506 ;; Defined at:
  2507 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  2510 ;;		 -> sprintf@f(11), 
  2511 ;;  fmt             1   11[BANK0 ] PTR PTR unsigned char 
  2512 ;;		 -> vfprintf@cfmt(2), 
  2513 ;;  ap              1   12[BANK0 ] PTR PTR void 
  2514 ;;		 -> sprintf@ap(1), 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  convarg         4   18[BANK0 ] struct .
  2517 ;;  cp              2   16[BANK0 ] PTR unsigned char 
  2518 ;;		 -> STR_1(5), 
  2519 ;;  c               1   22[BANK0 ] unsigned char 
  2520 ;;  done            1   15[BANK0 ] _Bool 
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2530 ;;      Params:         0       3       0       0       0       0       0
  2531 ;;      Locals:         0       8       0       0       0       0       0
  2532 ;;      Temps:          0       2       0       0       0       0       0
  2533 ;;      Totals:         0      13       0       0       0       0       0
  2534 ;;Total ram usage:       13 bytes
  2535 ;; Hardware stack levels used: 1
  2536 ;; Hardware stack levels required when called: 9
  2537 ;; This function calls:
  2538 ;;		___awdiv
  2539 ;;		___awmod
  2540 ;;		_abs
  2541 ;;		_fputc
  2542 ;; This function is called by:
  2543 ;;		_vfprintf
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text10
  2548   000220                     __ptext10:
  2549                           	callstack 0
  2550   000220                     _vfpfcnvrt:
  2551                           	callstack 18
  2552   000220                     
  2553                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2554   000220  0100               	movlb	0	; () banked
  2555   000222  518B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2556   000224  6ED9               	movwf	fsr2l,c
  2557   000226  6ADA               	clrf	fsr2h,c
  2558   000228  CFDE FFF6          	movff	postinc2,tblptrl
  2559   00022C  CFDD FFF7          	movff	postdec2,tblptrh
  2560   000230                     	if	0	;tblptru may be non-zero
  2561   000230                     	endif
  2562   000230                     	if	0	;tblptru may be non-zero
  2563   000230                     	endif
  2564   000230  0008               	tblrd		*
  2565   000232  50F5               	movf	tablat,w,c
  2566   000234  0A25               	xorlw	37
  2567   000236  A4D8               	btfss	status,2,c
  2568   000238  EF20  F001         	goto	u1881
  2569   00023C  EF22  F001         	goto	u1880
  2570   000240                     u1881:
  2571   000240  EFED  F001         	goto	l2429
  2572   000244                     u1880:
  2573   000244                     
  2574                           ; BSR set to: 0
  2575                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2576   000244  518B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2577   000246  6ED9               	movwf	fsr2l,c
  2578   000248  6ADA               	clrf	fsr2h,c
  2579   00024A  2ADE               	incf	postinc2,f,c
  2580   00024C  0E00               	movlw	0
  2581   00024E  22DD               	addwfc	postdec2,f,c
  2582   000250                     
  2583                           ; BSR set to: 0
  2584                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2585   000250  0E00               	movlw	0
  2586   000252  6FF6               	movwf	(_width+1)& (0+255),b
  2587   000254  0E00               	movlw	0
  2588   000256  6FF5               	movwf	_width& (0+255),b
  2589   000258  C0F5  F0FD         	movff	_width,_flags
  2590   00025C                     
  2591                           ; BSR set to: 0
  2592                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2593   00025C  69F7               	setf	_prec& (0+255),b
  2594   00025E  69F8               	setf	(_prec+1)& (0+255),b
  2595   000260                     
  2596                           ; BSR set to: 0
  2597                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2598   000260  518B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2599   000262  6ED9               	movwf	fsr2l,c
  2600   000264  6ADA               	clrf	fsr2h,c
  2601   000266  CFDE F090          	movff	postinc2,vfpfcnvrt@cp
  2602   00026A  CFDD F091          	movff	postdec2,vfpfcnvrt@cp+1
  2603   00026E                     
  2604                           ; BSR set to: 0
  2605                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2606   00026E  C090  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2607   000272  C091  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2608   000276                     	if	0	;tblptru may be non-zero
  2609   000276                     	endif
  2610   000276                     	if	0	;tblptru may be non-zero
  2611   000276                     	endif
  2612   000276  0008               	tblrd		*
  2613   000278  50F5               	movf	tablat,w,c
  2614   00027A  0A64               	xorlw	100
  2615   00027C  B4D8               	btfsc	status,2,c
  2616   00027E  EF43  F001         	goto	u1891
  2617   000282  EF45  F001         	goto	u1890
  2618   000286                     u1891:
  2619   000286  EF53  F001         	goto	l2399
  2620   00028A                     u1890:
  2621   00028A                     
  2622                           ; BSR set to: 0
  2623   00028A  C090  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2624   00028E  C091  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2625   000292                     	if	0	;tblptru may be non-zero
  2626   000292                     	endif
  2627   000292                     	if	0	;tblptru may be non-zero
  2628   000292                     	endif
  2629   000292  0008               	tblrd		*
  2630   000294  50F5               	movf	tablat,w,c
  2631   000296  0A69               	xorlw	105
  2632   000298  A4D8               	btfss	status,2,c
  2633   00029A  EF51  F001         	goto	u1901
  2634   00029E  EF53  F001         	goto	u1900
  2635   0002A2                     u1901:
  2636   0002A2  EFE4  F001         	goto	l2425
  2637   0002A6                     u1900:
  2638   0002A6                     l2399:
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2642   0002A6  518C               	movf	vfpfcnvrt@ap& (0+255),w,b
  2643   0002A8  6ED9               	movwf	fsr2l,c
  2644   0002AA  6ADA               	clrf	fsr2h,c
  2645   0002AC  0E02               	movlw	2
  2646   0002AE  26DF               	addwf	indf2,f,c
  2647   0002B0  5CDF               	subwf	indf2,w,c
  2648   0002B2  6ED9               	movwf	fsr2l,c
  2649   0002B4  6ADA               	clrf	fsr2h,c
  2650   0002B6  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg
  2651   0002BA  CFDE F093          	movff	postinc2,vfpfcnvrt@convarg+1
  2652   0002BE                     
  2653                           ; BSR set to: 0
  2654                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2655   0002BE  0E01               	movlw	1
  2656   0002C0  2590               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2657   0002C2  6F8D               	movwf	??_vfpfcnvrt& (0+255),b
  2658   0002C4  0E00               	movlw	0
  2659   0002C6  2191               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2660   0002C8  6F8E               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2661   0002CA  518B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2662   0002CC  6ED9               	movwf	fsr2l,c
  2663   0002CE  6ADA               	clrf	fsr2h,c
  2664   0002D0  C08D  FFDE         	movff	??_vfpfcnvrt,postinc2
  2665   0002D4  C08E  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2666   0002D8                     
  2667                           ; BSR set to: 0
  2668                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2669   0002D8  0E20               	movlw	32
  2670   0002DA  6F96               	movwf	vfpfcnvrt@c& (0+255),b
  2671                           
  2672                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2673   0002DC  BF93               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2674   0002DE  EF73  F001         	goto	u1911
  2675   0002E2  EF76  F001         	goto	u1910
  2676   0002E6                     u1911:
  2677   0002E6  0E01               	movlw	1
  2678   0002E8  EF77  F001         	goto	u1920
  2679   0002EC                     u1910:
  2680   0002EC  0E00               	movlw	0
  2681   0002EE                     u1920:
  2682   0002EE  6F8F               	movwf	vfpfcnvrt@done& (0+255),b
  2683   0002F0                     l2405:
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2687   0002F0  0796               	decf	vfpfcnvrt@c& (0+255),f,b
  2688   0002F2  5196               	movf	vfpfcnvrt@c& (0+255),w,b
  2689   0002F4  0FC1               	addlw	low _dbuf
  2690   0002F6  6ED9               	movwf	fsr2l,c
  2691   0002F8  6ADA               	clrf	fsr2h,c
  2692   0002FA  C092  F080         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2693   0002FE  C093  F081         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2694   000302  0E00               	movlw	0
  2695   000304  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  2696   000306  0E0A               	movlw	10
  2697   000308  6F82               	movwf	___awmod@divisor& (0+255),b
  2698   00030A  EC2A  F003         	call	___awmod	;wreg free
  2699   00030E  C080  F086         	movff	?___awmod,abs@a
  2700   000312  C081  F087         	movff	?___awmod+1,abs@a+1
  2701   000316  ECB6  F005         	call	_abs	;wreg free
  2702   00031A  0100               	movlb	0	; () banked
  2703   00031C  5186               	movf	?_abs& (0+255),w,b
  2704   00031E  0F30               	addlw	48
  2705   000320  6EDF               	movwf	indf2,c
  2706   000322                     
  2707                           ; BSR set to: 0
  2708                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2709   000322  C092  F080         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2710   000326  C093  F081         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2711   00032A  0E00               	movlw	0
  2712   00032C  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  2713   00032E  0E0A               	movlw	10
  2714   000330  6F82               	movwf	___awdiv@divisor& (0+255),b
  2715   000332  EC68  F002         	call	___awdiv	;wreg free
  2716   000336  C080  F092         	movff	?___awdiv,vfpfcnvrt@convarg
  2717   00033A  C081  F093         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2718   00033E                     
  2719                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2720   00033E  0100               	movlb	0	; () banked
  2721   000340  5192               	movf	vfpfcnvrt@convarg& (0+255),w,b
  2722   000342  1193               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  2723   000344  B4D8               	btfsc	status,2,c
  2724   000346  EFA7  F001         	goto	u1931
  2725   00034A  EFA9  F001         	goto	u1930
  2726   00034E                     u1931:
  2727   00034E  EFB1  F001         	goto	l2413
  2728   000352                     u1930:
  2729   000352                     
  2730                           ; BSR set to: 0
  2731   000352  5196               	movf	vfpfcnvrt@c& (0+255),w,b
  2732   000354  A4D8               	btfss	status,2,c
  2733   000356  EFAF  F001         	goto	u1941
  2734   00035A  EFB1  F001         	goto	u1940
  2735   00035E                     u1941:
  2736   00035E  EF78  F001         	goto	l2405
  2737   000362                     u1940:
  2738   000362                     l2413:
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2742   000362  5196               	movf	vfpfcnvrt@c& (0+255),w,b
  2743   000364  B4D8               	btfsc	status,2,c
  2744   000366  EFB7  F001         	goto	u1951
  2745   00036A  EFB9  F001         	goto	u1950
  2746   00036E                     u1951:
  2747   00036E  EFD9  F001         	goto	l2423
  2748   000372                     u1950:
  2749   000372                     
  2750                           ; BSR set to: 0
  2751   000372  518F               	movf	vfpfcnvrt@done& (0+255),w,b
  2752   000374  B4D8               	btfsc	status,2,c
  2753   000376  EFBF  F001         	goto	u1961
  2754   00037A  EFC1  F001         	goto	u1960
  2755   00037E                     u1961:
  2756   00037E  EFD9  F001         	goto	l2423
  2757   000382                     u1960:
  2758   000382                     
  2759                           ; BSR set to: 0
  2760                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2761   000382  0796               	decf	vfpfcnvrt@c& (0+255),f,b
  2762   000384  5196               	movf	vfpfcnvrt@c& (0+255),w,b
  2763   000386  0FC1               	addlw	low _dbuf
  2764   000388  6ED9               	movwf	fsr2l,c
  2765   00038A  6ADA               	clrf	fsr2h,c
  2766   00038C  0E2D               	movlw	45
  2767   00038E  6EDF               	movwf	indf2,c
  2768   000390  EFD9  F001         	goto	l2423
  2769   000394                     l2419:
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2773   000394  5196               	movf	vfpfcnvrt@c& (0+255),w,b
  2774   000396  0FC1               	addlw	low _dbuf
  2775   000398  6ED9               	movwf	fsr2l,c
  2776   00039A  6ADA               	clrf	fsr2h,c
  2777   00039C  50DF               	movf	indf2,w,c
  2778   00039E  6F8D               	movwf	??_vfpfcnvrt& (0+255),b
  2779   0003A0  518D               	movf	??_vfpfcnvrt& (0+255),w,b
  2780   0003A2  6F80               	movwf	fputc@c& (0+255),b
  2781   0003A4  6B81               	clrf	(fputc@c+1)& (0+255),b
  2782   0003A6  C08A  F082         	movff	vfpfcnvrt@fp,fputc@fp
  2783   0003AA  EC82  F003         	call	_fputc	;wreg free
  2784   0003AE  0100               	movlb	0	; () banked
  2785   0003B0  2B96               	incf	vfpfcnvrt@c& (0+255),f,b
  2786   0003B2                     l2423:
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2790   0003B2  0E20               	movlw	32
  2791   0003B4  1996               	xorwf	vfpfcnvrt@c& (0+255),w,b
  2792   0003B6  A4D8               	btfss	status,2,c
  2793   0003B8  EFE0  F001         	goto	u1971
  2794   0003BC  EFE2  F001         	goto	u1970
  2795   0003C0                     u1971:
  2796   0003C0  EFCA  F001         	goto	l2419
  2797   0003C4                     u1970:
  2798   0003C4  EFFE  F001         	goto	l1167
  2799   0003C8                     l2425:
  2800                           
  2801                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2802   0003C8  0100               	movlb	0	; () banked
  2803   0003CA  518B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2804   0003CC  6ED9               	movwf	fsr2l,c
  2805   0003CE  6ADA               	clrf	fsr2h,c
  2806   0003D0  2ADE               	incf	postinc2,f,c
  2807   0003D2  0E00               	movlw	0
  2808   0003D4  22DD               	addwfc	postdec2,f,c
  2809   0003D6  EFFE  F001         	goto	l1167
  2810   0003DA                     l2429:
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2814   0003DA  518B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2815   0003DC  6ED9               	movwf	fsr2l,c
  2816   0003DE  6ADA               	clrf	fsr2h,c
  2817   0003E0  CFDE FFF6          	movff	postinc2,tblptrl
  2818   0003E4  CFDD FFF7          	movff	postdec2,tblptrh
  2819   0003E8                     	if	0	;tblptru may be non-zero
  2820   0003E8                     	endif
  2821   0003E8                     	if	0	;tblptru may be non-zero
  2822   0003E8                     	endif
  2823   0003E8  0008               	tblrd		*
  2824   0003EA  50F5               	movf	tablat,w,c
  2825   0003EC  6F80               	movwf	fputc@c& (0+255),b
  2826   0003EE  6B81               	clrf	(fputc@c+1)& (0+255),b
  2827   0003F0  C08A  F082         	movff	vfpfcnvrt@fp,fputc@fp
  2828   0003F4  EC82  F003         	call	_fputc	;wreg free
  2829   0003F8  EFE4  F001         	goto	l2425
  2830   0003FC                     l1167:
  2831                           
  2832                           ; BSR set to: 0
  2833   0003FC  0012               	return		;funcret
  2834   0003FE                     __end_of_vfpfcnvrt:
  2835                           	callstack 0
  2836                           
  2837 ;; *************** function _fputc *****************
  2838 ;; Defined at:
  2839 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  c               2    0[BANK0 ] int 
  2842 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  2843 ;;		 -> sprintf@f(11), 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;		None
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  2    0[BANK0 ] int 
  2848 ;; Registers used:
  2849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2855 ;;      Params:         0       3       0       0       0       0       0
  2856 ;;      Locals:         0       0       0       0       0       0       0
  2857 ;;      Temps:          0       5       0       0       0       0       0
  2858 ;;      Totals:         0       8       0       0       0       0       0
  2859 ;;Total ram usage:        8 bytes
  2860 ;; Hardware stack levels used: 1
  2861 ;; Hardware stack levels required when called: 8
  2862 ;; This function calls:
  2863 ;;		_putch
  2864 ;; This function is called by:
  2865 ;;		_vfpfcnvrt
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text11
  2870   000704                     __ptext11:
  2871                           	callstack 0
  2872   000704                     _fputc:
  2873                           	callstack 18
  2874   000704  0100               	movlb	0	; () banked
  2875   000706  5182               	movf	fputc@fp& (0+255),w,b
  2876   000708  B4D8               	btfsc	status,2,c
  2877   00070A  EF89  F003         	goto	u1831
  2878   00070E  EF8B  F003         	goto	u1830
  2879   000712                     u1831:
  2880   000712  EF93  F003         	goto	l2371
  2881   000716                     u1830:
  2882   000716                     
  2883                           ; BSR set to: 0
  2884   000716  5182               	movf	fputc@fp& (0+255),w,b
  2885   000718  A4D8               	btfss	status,2,c
  2886   00071A  EF91  F003         	goto	u1841
  2887   00071E  EF93  F003         	goto	u1840
  2888   000722                     u1841:
  2889   000722  EF98  F003         	goto	l2373
  2890   000726                     u1840:
  2891   000726                     l2371:
  2892                           
  2893                           ; BSR set to: 0
  2894   000726  5180               	movf	fputc@c& (0+255),w,b
  2895   000728  EC79  F006         	call	_putch
  2896   00072C  EFD7  F003         	goto	l1192
  2897   000730                     l2373:
  2898                           
  2899                           ; BSR set to: 0
  2900   000730  5182               	movf	fputc@fp& (0+255),w,b
  2901   000732  6ED9               	movwf	fsr2l,c
  2902   000734  6ADA               	clrf	fsr2h,c
  2903   000736  0E09               	movlw	9
  2904   000738  26D9               	addwf	fsr2l,f,c
  2905   00073A  50DE               	movf	postinc2,w,c
  2906   00073C  10DE               	iorwf	postinc2,w,c
  2907   00073E  B4D8               	btfsc	status,2,c
  2908   000740  EFA4  F003         	goto	u1851
  2909   000744  EFA6  F003         	goto	u1850
  2910   000748                     u1851:
  2911   000748  EFBF  F003         	goto	l2377
  2912   00074C                     u1850:
  2913   00074C                     
  2914                           ; BSR set to: 0
  2915   00074C  5182               	movf	fputc@fp& (0+255),w,b
  2916   00074E  6ED9               	movwf	fsr2l,c
  2917   000750  6ADA               	clrf	fsr2h,c
  2918   000752  0E09               	movlw	9
  2919   000754  26D9               	addwf	fsr2l,f,c
  2920   000756  5182               	movf	fputc@fp& (0+255),w,b
  2921   000758  6EE1               	movwf	fsr1l,c
  2922   00075A  6AE2               	clrf	fsr1h,c
  2923   00075C  0E02               	movlw	2
  2924   00075E  26E1               	addwf	fsr1l,f,c
  2925   000760  50DE               	movf	postinc2,w,c
  2926   000762  5CE6               	subwf	postinc1,w,c
  2927   000764  50E6               	movf	postinc1,w,c
  2928   000766  0A80               	xorlw	128
  2929   000768  6F87               	movwf	(??_fputc+4)& (0+255),b
  2930   00076A  50DE               	movf	postinc2,w,c
  2931   00076C  0A80               	xorlw	128
  2932   00076E  5987               	subwfb	(??_fputc+4)& (0+255),w,b
  2933   000770  B0D8               	btfsc	status,0,c
  2934   000772  EFBD  F003         	goto	u1861
  2935   000776  EFBF  F003         	goto	u1860
  2936   00077A                     u1861:
  2937   00077A  EFD7  F003         	goto	l1192
  2938   00077E                     u1860:
  2939   00077E                     l2377:
  2940                           
  2941                           ; BSR set to: 0
  2942   00077E  5182               	movf	fputc@fp& (0+255),w,b
  2943   000780  6ED9               	movwf	fsr2l,c
  2944   000782  6ADA               	clrf	fsr2h,c
  2945   000784  0E02               	movlw	2
  2946   000786  26D9               	addwf	fsr2l,f,c
  2947   000788  50DF               	movf	indf2,w,c
  2948   00078A  6F83               	movwf	??_fputc& (0+255),b
  2949   00078C  5182               	movf	fputc@fp& (0+255),w,b
  2950   00078E  6ED9               	movwf	fsr2l,c
  2951   000790  6ADA               	clrf	fsr2h,c
  2952   000792  50DF               	movf	indf2,w,c
  2953   000794  2583               	addwf	??_fputc& (0+255),w,b
  2954   000796  6ED9               	movwf	fsr2l,c
  2955   000798  6ADA               	clrf	fsr2h,c
  2956   00079A  C080  FFDF         	movff	fputc@c,indf2
  2957   00079E  5182               	movf	fputc@fp& (0+255),w,b
  2958   0007A0  6ED9               	movwf	fsr2l,c
  2959   0007A2  6ADA               	clrf	fsr2h,c
  2960   0007A4  0E02               	movlw	2
  2961   0007A6  26D9               	addwf	fsr2l,f,c
  2962   0007A8  2ADE               	incf	postinc2,f,c
  2963   0007AA  0E00               	movlw	0
  2964   0007AC  22DD               	addwfc	postdec2,f,c
  2965   0007AE                     l1192:
  2966   0007AE  0012               	return		;funcret
  2967   0007B0                     __end_of_fputc:
  2968                           	callstack 0
  2969                           
  2970 ;; *************** function _putch *****************
  2971 ;; Defined at:
  2972 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  c               1    wreg     unsigned char 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  c               1    0[COMRAM] unsigned char 
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  1    wreg      void 
  2979 ;; Registers used:
  2980 ;;		wreg
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2986 ;;      Params:         0       0       0       0       0       0       0
  2987 ;;      Locals:         0       0       0       0       0       0       0
  2988 ;;      Temps:          0       0       0       0       0       0       0
  2989 ;;      Totals:         0       0       0       0       0       0       0
  2990 ;;Total ram usage:        0 bytes
  2991 ;; Hardware stack levels used: 1
  2992 ;; Hardware stack levels required when called: 7
  2993 ;; This function calls:
  2994 ;;		Nothing
  2995 ;; This function is called by:
  2996 ;;		_fputc
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           	psect	text12
  3001   000CF2                     __ptext12:
  3002                           	callstack 0
  3003   000CF2                     _putch:
  3004                           	callstack 18
  3005   000CF2  0012               	return		;funcret
  3006   000CF4                     __end_of_putch:
  3007                           	callstack 0
  3008                           
  3009 ;; *************** function _abs *****************
  3010 ;; Defined at:
  3011 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  a               2    6[BANK0 ] int 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  2    6[BANK0 ] int 
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3025 ;;      Params:         0       2       0       0       0       0       0
  3026 ;;      Locals:         0       0       0       0       0       0       0
  3027 ;;      Temps:          0       2       0       0       0       0       0
  3028 ;;      Totals:         0       4       0       0       0       0       0
  3029 ;;Total ram usage:        4 bytes
  3030 ;; Hardware stack levels used: 1
  3031 ;; Hardware stack levels required when called: 7
  3032 ;; This function calls:
  3033 ;;		Nothing
  3034 ;; This function is called by:
  3035 ;;		_vfpfcnvrt
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           	psect	text13
  3040   000B6C                     __ptext13:
  3041                           	callstack 0
  3042   000B6C                     _abs:
  3043                           	callstack 19
  3044   000B6C  0100               	movlb	0	; () banked
  3045   000B6E  BF87               	btfsc	(abs@a+1)& (0+255),7,b
  3046   000B70  EFBC  F005         	goto	u1871
  3047   000B74  EFBE  F005         	goto	u1870
  3048   000B78                     u1871:
  3049   000B78  EFC4  F005         	goto	l1177
  3050   000B7C                     u1870:
  3051   000B7C                     
  3052                           ; BSR set to: 0
  3053   000B7C  C086  F086         	movff	abs@a,?_abs
  3054   000B80  C087  F087         	movff	abs@a+1,?_abs+1
  3055   000B84  EFD0  F005         	goto	l1180
  3056   000B88                     l1177:
  3057                           
  3058                           ; BSR set to: 0
  3059   000B88  C086  F088         	movff	abs@a,??_abs
  3060   000B8C  C087  F089         	movff	abs@a+1,??_abs+1
  3061   000B90  1F88               	comf	??_abs& (0+255),f,b
  3062   000B92  1F89               	comf	(??_abs+1)& (0+255),f,b
  3063   000B94  4B88               	infsnz	??_abs& (0+255),f,b
  3064   000B96  2B89               	incf	(??_abs+1)& (0+255),f,b
  3065   000B98  C088  F086         	movff	??_abs,?_abs
  3066   000B9C  C089  F087         	movff	??_abs+1,?_abs+1
  3067   000BA0                     l1180:
  3068                           
  3069                           ; BSR set to: 0
  3070   000BA0  0012               	return		;funcret
  3071   000BA2                     __end_of_abs:
  3072                           	callstack 0
  3073                           
  3074 ;; *************** function ___awmod *****************
  3075 ;; Defined at:
  3076 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  dividend        2    0[BANK0 ] int 
  3079 ;;  divisor         2    2[BANK0 ] int 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  sign            1    5[BANK0 ] unsigned char 
  3082 ;;  counter         1    4[BANK0 ] unsigned char 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  2    0[BANK0 ] int 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3092 ;;      Params:         0       4       0       0       0       0       0
  3093 ;;      Locals:         0       2       0       0       0       0       0
  3094 ;;      Temps:          0       0       0       0       0       0       0
  3095 ;;      Totals:         0       6       0       0       0       0       0
  3096 ;;Total ram usage:        6 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; Hardware stack levels required when called: 7
  3099 ;; This function calls:
  3100 ;;		Nothing
  3101 ;; This function is called by:
  3102 ;;		_vfpfcnvrt
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           	psect	text14
  3107   000654                     __ptext14:
  3108                           	callstack 0
  3109   000654                     ___awmod:
  3110                           	callstack 19
  3111   000654  0100               	movlb	0	; () banked
  3112   000656  6B85               	clrf	___awmod@sign& (0+255),b
  3113   000658                     
  3114                           ; BSR set to: 0
  3115   000658  BF81               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  3116   00065A  EF33  F003         	goto	u1770
  3117   00065E  EF31  F003         	goto	u1771
  3118   000662                     u1771:
  3119   000662  EF39  F003         	goto	l2339
  3120   000666                     u1770:
  3121   000666                     
  3122                           ; BSR set to: 0
  3123   000666  6D80               	negf	___awmod@dividend& (0+255),b
  3124   000668  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  3125   00066A  B0D8               	btfsc	status,0,c
  3126   00066C  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  3127   00066E                     
  3128                           ; BSR set to: 0
  3129   00066E  0E01               	movlw	1
  3130   000670  6F85               	movwf	___awmod@sign& (0+255),b
  3131   000672                     l2339:
  3132                           
  3133                           ; BSR set to: 0
  3134   000672  BF83               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  3135   000674  EF40  F003         	goto	u1780
  3136   000678  EF3E  F003         	goto	u1781
  3137   00067C                     u1781:
  3138   00067C  EF44  F003         	goto	l2343
  3139   000680                     u1780:
  3140   000680                     
  3141                           ; BSR set to: 0
  3142   000680  6D82               	negf	___awmod@divisor& (0+255),b
  3143   000682  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
  3144   000684  B0D8               	btfsc	status,0,c
  3145   000686  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
  3146   000688                     l2343:
  3147                           
  3148                           ; BSR set to: 0
  3149   000688  5182               	movf	___awmod@divisor& (0+255),w,b
  3150   00068A  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3151   00068C  B4D8               	btfsc	status,2,c
  3152   00068E  EF4B  F003         	goto	u1791
  3153   000692  EF4D  F003         	goto	u1790
  3154   000696                     u1791:
  3155   000696  EF71  F003         	goto	l2359
  3156   00069A                     u1790:
  3157   00069A                     
  3158                           ; BSR set to: 0
  3159   00069A  0E01               	movlw	1
  3160   00069C  6F84               	movwf	___awmod@counter& (0+255),b
  3161   00069E  EF55  F003         	goto	l2349
  3162   0006A2                     l2347:
  3163                           
  3164                           ; BSR set to: 0
  3165   0006A2  90D8               	bcf	status,0,c
  3166   0006A4  3782               	rlcf	___awmod@divisor& (0+255),f,b
  3167   0006A6  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3168   0006A8  2B84               	incf	___awmod@counter& (0+255),f,b
  3169   0006AA                     l2349:
  3170                           
  3171                           ; BSR set to: 0
  3172   0006AA  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3173   0006AC  EF5A  F003         	goto	u1801
  3174   0006B0  EF5C  F003         	goto	u1800
  3175   0006B4                     u1801:
  3176   0006B4  EF51  F003         	goto	l2347
  3177   0006B8                     u1800:
  3178   0006B8                     l2351:
  3179                           
  3180                           ; BSR set to: 0
  3181   0006B8  5182               	movf	___awmod@divisor& (0+255),w,b
  3182   0006BA  5D80               	subwf	___awmod@dividend& (0+255),w,b
  3183   0006BC  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  3184   0006BE  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  3185   0006C0  A0D8               	btfss	status,0,c
  3186   0006C2  EF65  F003         	goto	u1811
  3187   0006C6  EF67  F003         	goto	u1810
  3188   0006CA                     u1811:
  3189   0006CA  EF6B  F003         	goto	l2355
  3190   0006CE                     u1810:
  3191   0006CE                     
  3192                           ; BSR set to: 0
  3193   0006CE  5182               	movf	___awmod@divisor& (0+255),w,b
  3194   0006D0  5F80               	subwf	___awmod@dividend& (0+255),f,b
  3195   0006D2  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  3196   0006D4  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  3197   0006D6                     l2355:
  3198                           
  3199                           ; BSR set to: 0
  3200   0006D6  90D8               	bcf	status,0,c
  3201   0006D8  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  3202   0006DA  3382               	rrcf	___awmod@divisor& (0+255),f,b
  3203   0006DC                     
  3204                           ; BSR set to: 0
  3205   0006DC  2F84               	decfsz	___awmod@counter& (0+255),f,b
  3206   0006DE  EF5C  F003         	goto	l2351
  3207   0006E2                     l2359:
  3208                           
  3209                           ; BSR set to: 0
  3210   0006E2  5185               	movf	___awmod@sign& (0+255),w,b
  3211   0006E4  B4D8               	btfsc	status,2,c
  3212   0006E6  EF77  F003         	goto	u1821
  3213   0006EA  EF79  F003         	goto	u1820
  3214   0006EE                     u1821:
  3215   0006EE  EF7D  F003         	goto	l2363
  3216   0006F2                     u1820:
  3217   0006F2                     
  3218                           ; BSR set to: 0
  3219   0006F2  6D80               	negf	___awmod@dividend& (0+255),b
  3220   0006F4  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  3221   0006F6  B0D8               	btfsc	status,0,c
  3222   0006F8  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  3223   0006FA                     l2363:
  3224                           
  3225                           ; BSR set to: 0
  3226   0006FA  C080  F080         	movff	___awmod@dividend,?___awmod
  3227   0006FE  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
  3228   000702                     
  3229                           ; BSR set to: 0
  3230   000702  0012               	return		;funcret
  3231   000704                     __end_of___awmod:
  3232                           	callstack 0
  3233                           
  3234 ;; *************** function ___awdiv *****************
  3235 ;; Defined at:
  3236 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;  dividend        2    0[BANK0 ] int 
  3239 ;;  divisor         2    2[BANK0 ] int 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  quotient        2    6[BANK0 ] int 
  3242 ;;  sign            1    5[BANK0 ] unsigned char 
  3243 ;;  counter         1    4[BANK0 ] unsigned char 
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  2    0[BANK0 ] int 
  3246 ;; Registers used:
  3247 ;;		wreg, status,2, status,0
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3253 ;;      Params:         0       4       0       0       0       0       0
  3254 ;;      Locals:         0       4       0       0       0       0       0
  3255 ;;      Temps:          0       0       0       0       0       0       0
  3256 ;;      Totals:         0       8       0       0       0       0       0
  3257 ;;Total ram usage:        8 bytes
  3258 ;; Hardware stack levels used: 1
  3259 ;; Hardware stack levels required when called: 7
  3260 ;; This function calls:
  3261 ;;		Nothing
  3262 ;; This function is called by:
  3263 ;;		_vfpfcnvrt
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text15
  3268   0004D0                     __ptext15:
  3269                           	callstack 0
  3270   0004D0                     ___awdiv:
  3271                           	callstack 19
  3272   0004D0  0100               	movlb	0	; () banked
  3273   0004D2  6B85               	clrf	___awdiv@sign& (0+255),b
  3274   0004D4                     
  3275                           ; BSR set to: 0
  3276   0004D4  BF83               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  3277   0004D6  EF71  F002         	goto	u1710
  3278   0004DA  EF6F  F002         	goto	u1711
  3279   0004DE                     u1711:
  3280   0004DE  EF77  F002         	goto	l2295
  3281   0004E2                     u1710:
  3282   0004E2                     
  3283                           ; BSR set to: 0
  3284   0004E2  6D82               	negf	___awdiv@divisor& (0+255),b
  3285   0004E4  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3286   0004E6  B0D8               	btfsc	status,0,c
  3287   0004E8  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3288   0004EA                     
  3289                           ; BSR set to: 0
  3290   0004EA  0E01               	movlw	1
  3291   0004EC  6F85               	movwf	___awdiv@sign& (0+255),b
  3292   0004EE                     l2295:
  3293                           
  3294                           ; BSR set to: 0
  3295   0004EE  BF81               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  3296   0004F0  EF7E  F002         	goto	u1720
  3297   0004F4  EF7C  F002         	goto	u1721
  3298   0004F8                     u1721:
  3299   0004F8  EF84  F002         	goto	l2301
  3300   0004FC                     u1720:
  3301   0004FC                     
  3302                           ; BSR set to: 0
  3303   0004FC  6D80               	negf	___awdiv@dividend& (0+255),b
  3304   0004FE  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3305   000500  B0D8               	btfsc	status,0,c
  3306   000502  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3307   000504                     
  3308                           ; BSR set to: 0
  3309   000504  0E01               	movlw	1
  3310   000506  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  3311   000508                     l2301:
  3312                           
  3313                           ; BSR set to: 0
  3314   000508  0E00               	movlw	0
  3315   00050A  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  3316   00050C  0E00               	movlw	0
  3317   00050E  6F86               	movwf	___awdiv@quotient& (0+255),b
  3318   000510                     
  3319                           ; BSR set to: 0
  3320   000510  5182               	movf	___awdiv@divisor& (0+255),w,b
  3321   000512  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3322   000514  B4D8               	btfsc	status,2,c
  3323   000516  EF8F  F002         	goto	u1731
  3324   00051A  EF91  F002         	goto	u1730
  3325   00051E                     u1731:
  3326   00051E  EFB9  F002         	goto	l2323
  3327   000522                     u1730:
  3328   000522                     
  3329                           ; BSR set to: 0
  3330   000522  0E01               	movlw	1
  3331   000524  6F84               	movwf	___awdiv@counter& (0+255),b
  3332   000526  EF99  F002         	goto	l2309
  3333   00052A                     l2307:
  3334                           
  3335                           ; BSR set to: 0
  3336   00052A  90D8               	bcf	status,0,c
  3337   00052C  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  3338   00052E  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3339   000530  2B84               	incf	___awdiv@counter& (0+255),f,b
  3340   000532                     l2309:
  3341                           
  3342                           ; BSR set to: 0
  3343   000532  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3344   000534  EF9E  F002         	goto	u1741
  3345   000538  EFA0  F002         	goto	u1740
  3346   00053C                     u1741:
  3347   00053C  EF95  F002         	goto	l2307
  3348   000540                     u1740:
  3349   000540                     l2311:
  3350                           
  3351                           ; BSR set to: 0
  3352   000540  90D8               	bcf	status,0,c
  3353   000542  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  3354   000544  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3355   000546                     
  3356                           ; BSR set to: 0
  3357   000546  5182               	movf	___awdiv@divisor& (0+255),w,b
  3358   000548  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  3359   00054A  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3360   00054C  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3361   00054E  A0D8               	btfss	status,0,c
  3362   000550  EFAC  F002         	goto	u1751
  3363   000554  EFAE  F002         	goto	u1750
  3364   000558                     u1751:
  3365   000558  EFB3  F002         	goto	l2319
  3366   00055C                     u1750:
  3367   00055C                     
  3368                           ; BSR set to: 0
  3369   00055C  5182               	movf	___awdiv@divisor& (0+255),w,b
  3370   00055E  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  3371   000560  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3372   000562  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3373   000564                     
  3374                           ; BSR set to: 0
  3375   000564  8186               	bsf	___awdiv@quotient& (0+255),0,b
  3376   000566                     l2319:
  3377                           
  3378                           ; BSR set to: 0
  3379   000566  90D8               	bcf	status,0,c
  3380   000568  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3381   00056A  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  3382   00056C                     
  3383                           ; BSR set to: 0
  3384   00056C  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  3385   00056E  EFA0  F002         	goto	l2311
  3386   000572                     l2323:
  3387                           
  3388                           ; BSR set to: 0
  3389   000572  5185               	movf	___awdiv@sign& (0+255),w,b
  3390   000574  B4D8               	btfsc	status,2,c
  3391   000576  EFBF  F002         	goto	u1761
  3392   00057A  EFC1  F002         	goto	u1760
  3393   00057E                     u1761:
  3394   00057E  EFC5  F002         	goto	l2327
  3395   000582                     u1760:
  3396   000582                     
  3397                           ; BSR set to: 0
  3398   000582  6D86               	negf	___awdiv@quotient& (0+255),b
  3399   000584  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3400   000586  B0D8               	btfsc	status,0,c
  3401   000588  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3402   00058A                     l2327:
  3403                           
  3404                           ; BSR set to: 0
  3405   00058A  C086  F080         	movff	___awdiv@quotient,?___awdiv
  3406   00058E  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  3407   000592                     
  3408                           ; BSR set to: 0
  3409   000592  0012               	return		;funcret
  3410   000594                     __end_of___awdiv:
  3411                           	callstack 0
  3412                           
  3413 ;; *************** function _UART_Write_Text *****************
  3414 ;; Defined at:
  3415 ;;		line 51 in file "setting_hardaware/uart.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;  text            2    1[BANK0 ] PTR unsigned char 
  3418 ;;		 -> STR_13(6), STR_12(6), STR_8(11), STR_7(9), 
  3419 ;;		 -> STR_6(5), STR_5(6), STR_4(3), STR_3(5), 
  3420 ;;		 -> STR_2(5), Check_ADC@tmp(10), 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;  i               2    5[BANK0 ] int 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3432 ;;      Params:         0       2       0       0       0       0       0
  3433 ;;      Locals:         0       2       0       0       0       0       0
  3434 ;;      Temps:          0       2       0       0       0       0       0
  3435 ;;      Totals:         0       6       0       0       0       0       0
  3436 ;;Total ram usage:        6 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 8
  3439 ;; This function calls:
  3440 ;;		_UART_Write
  3441 ;; This function is called by:
  3442 ;;		_Check_ADC
  3443 ;;		_main
  3444 ;;		_Check_Gyroscope
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text16
  3449   000842                     __ptext16:
  3450                           	callstack 0
  3451   000842                     _UART_Write_Text:
  3452                           	callstack 22
  3453   000842                     
  3454                           ;setting_hardaware/uart.c: 52:     for(int i=0;text[i]!='\0';i++)
  3455   000842  0E00               	movlw	0
  3456   000844  0100               	movlb	0	; () banked
  3457   000846  6F86               	movwf	(UART_Write_Text@i+1)& (0+255),b
  3458   000848  0E00               	movlw	0
  3459   00084A  6F85               	movwf	UART_Write_Text@i& (0+255),b
  3460   00084C  EF44  F004         	goto	l2485
  3461   000850                     l2481:
  3462                           
  3463                           ;setting_hardaware/uart.c: 53:         UART_Write(text[i]);
  3464   000850  0100               	movlb	0	; () banked
  3465   000852  5185               	movf	UART_Write_Text@i& (0+255),w,b
  3466   000854  2581               	addwf	UART_Write_Text@text& (0+255),w,b
  3467   000856  6F83               	movwf	??_UART_Write_Text& (0+255),b
  3468   000858  5186               	movf	(UART_Write_Text@i+1)& (0+255),w,b
  3469   00085A  2182               	addwfc	(UART_Write_Text@text+1)& (0+255),w,b
  3470   00085C  6F84               	movwf	(??_UART_Write_Text+1)& (0+255),b
  3471   00085E  C083  FFF6         	movff	??_UART_Write_Text,tblptrl
  3472   000862  C084  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  3473   000866  6AF8               	clrf	tblptru,c
  3474   000868  0E05               	movlw	(high __ramtop+-1)
  3475   00086A  64F7               	cpfsgt	tblptrh,c
  3476   00086C  D003               	bra	u2017
  3477   00086E  0008               	tblrd		*
  3478   000870  50F5               	movf	tablat,w,c
  3479   000872  D005               	bra	u2010
  3480   000874                     u2017:
  3481   000874  CFF6 FFE9          	movff	tblptrl,fsr0l
  3482   000878  CFF7 FFEA          	movff	tblptrh,fsr0h
  3483   00087C  50EF               	movf	indf0,w,c
  3484   00087E                     u2010:
  3485   00087E  EC48  F006         	call	_UART_Write
  3486   000882  0100               	movlb	0	; () banked
  3487   000884  4B85               	infsnz	UART_Write_Text@i& (0+255),f,b
  3488   000886  2B86               	incf	(UART_Write_Text@i+1)& (0+255),f,b
  3489   000888                     l2485:
  3490                           
  3491                           ; BSR set to: 0
  3492   000888  5185               	movf	UART_Write_Text@i& (0+255),w,b
  3493   00088A  2581               	addwf	UART_Write_Text@text& (0+255),w,b
  3494   00088C  6F83               	movwf	??_UART_Write_Text& (0+255),b
  3495   00088E  5186               	movf	(UART_Write_Text@i+1)& (0+255),w,b
  3496   000890  2182               	addwfc	(UART_Write_Text@text+1)& (0+255),w,b
  3497   000892  6F84               	movwf	(??_UART_Write_Text+1)& (0+255),b
  3498   000894  C083  FFF6         	movff	??_UART_Write_Text,tblptrl
  3499   000898  C084  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  3500   00089C  6AF8               	clrf	tblptru,c
  3501   00089E  0E05               	movlw	(high __ramtop+-1)
  3502   0008A0  64F7               	cpfsgt	tblptrh,c
  3503   0008A2  D003               	bra	u2027
  3504   0008A4  0008               	tblrd		*
  3505   0008A6  50F5               	movf	tablat,w,c
  3506   0008A8  D005               	bra	u2020
  3507   0008AA                     u2027:
  3508   0008AA  CFF6 FFE9          	movff	tblptrl,fsr0l
  3509   0008AE  CFF7 FFEA          	movff	tblptrh,fsr0h
  3510   0008B2  50EF               	movf	indf0,w,c
  3511   0008B4                     u2020:
  3512   0008B4  0900               	iorlw	0
  3513   0008B6  A4D8               	btfss	status,2,c
  3514   0008B8  EF60  F004         	goto	u2031
  3515   0008BC  EF62  F004         	goto	u2030
  3516   0008C0                     u2031:
  3517   0008C0  EF28  F004         	goto	l2481
  3518   0008C4                     u2030:
  3519   0008C4  0012               	return		;funcret
  3520   0008C6                     __end_of_UART_Write_Text:
  3521                           	callstack 0
  3522                           
  3523 ;; *************** function _UART_Write *****************
  3524 ;; Defined at:
  3525 ;;		line 44 in file "setting_hardaware/uart.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  data            1    wreg     unsigned char 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  data            1    0[BANK0 ] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3539 ;;      Params:         0       0       0       0       0       0       0
  3540 ;;      Locals:         0       1       0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0
  3542 ;;      Totals:         0       1       0       0       0       0       0
  3543 ;;Total ram usage:        1 bytes
  3544 ;; Hardware stack levels used: 1
  3545 ;; Hardware stack levels required when called: 7
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_UART_Write_Text
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text17
  3554   000C90                     __ptext17:
  3555                           	callstack 0
  3556   000C90                     _UART_Write:
  3557                           	callstack 22
  3558                           
  3559                           ;incstack = 0
  3560                           ;UART_Write@data stored from wreg
  3561   000C90  0100               	movlb	0	; () banked
  3562   000C92  6F80               	movwf	UART_Write@data& (0+255),b
  3563   000C94                     l115:
  3564   000C94  A2AC               	btfss	172,1,c	;volatile
  3565   000C96  EF4F  F006         	goto	u1981
  3566   000C9A  EF51  F006         	goto	u1980
  3567   000C9E                     u1981:
  3568   000C9E  EF4A  F006         	goto	l115
  3569   000CA2                     u1980:
  3570   000CA2                     
  3571                           ;setting_hardaware/uart.c: 47:     TXREG = data;
  3572   000CA2  C080  FFAD         	movff	UART_Write@data,4013	;volatile
  3573   000CA6  0012               	return		;funcret
  3574   000CA8                     __end_of_UART_Write:
  3575                           	callstack 0
  3576                           
  3577 ;; *************** function _ADC_Read *****************
  3578 ;; Defined at:
  3579 ;;		line 19 in file "setting_hardaware/adc.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  channel         2    0[BANK0 ] int 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;  digital         2    4[BANK0 ] int 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  2    0[BANK0 ] int 
  3586 ;; Registers used:
  3587 ;;		wreg, status,2, status,0
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3593 ;;      Params:         0       2       0       0       0       0       0
  3594 ;;      Locals:         0       2       0       0       0       0       0
  3595 ;;      Temps:          0       2       0       0       0       0       0
  3596 ;;      Totals:         0       6       0       0       0       0       0
  3597 ;;Total ram usage:        6 bytes
  3598 ;; Hardware stack levels used: 1
  3599 ;; Hardware stack levels required when called: 7
  3600 ;; This function calls:
  3601 ;;		Nothing
  3602 ;; This function is called by:
  3603 ;;		_Check_ADC
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           	psect	text18
  3608   000BA2                     __ptext18:
  3609                           	callstack 0
  3610   000BA2                     _ADC_Read:
  3611                           	callstack 22
  3612   000BA2                     
  3613                           ;setting_hardaware/adc.c: 19: int ADC_Read(int channel);setting_hardaware/adc.c: 20: {;s
      +                          etting_hardaware/adc.c: 21:     int digital;;setting_hardaware/adc.c: 23:     ADCON0bits
      +                          .ADON = 1;
  3614   000BA2  80C2               	bsf	194,0,c	;volatile
  3615                           
  3616                           ;setting_hardaware/adc.c: 24:     ADCON0bits.GO = 1;
  3617   000BA4  82C2               	bsf	194,1,c	;volatile
  3618   000BA6                     l24:
  3619   000BA6  B2C2               	btfsc	194,1,c	;volatile
  3620   000BA8  EFD8  F005         	goto	u2001
  3621   000BAC  EFDA  F005         	goto	u2000
  3622   000BB0                     u2001:
  3623   000BB0  EFD3  F005         	goto	l24
  3624   000BB4                     u2000:
  3625   000BB4                     
  3626                           ;setting_hardaware/adc.c: 28:     digital = (ADRESH*256) | (ADRESL);
  3627   000BB4  50C3               	movf	195,w,c	;volatile
  3628   000BB6  CFC4 F082          	movff	4036,??_ADC_Read	;volatile
  3629   000BBA  0100               	movlb	0	; () banked
  3630   000BBC  6B83               	clrf	(??_ADC_Read+1)& (0+255),b
  3631   000BBE  C082  F083         	movff	??_ADC_Read,??_ADC_Read+1
  3632   000BC2  6B82               	clrf	??_ADC_Read& (0+255),b
  3633   000BC4  1182               	iorwf	??_ADC_Read& (0+255),w,b
  3634   000BC6  6F84               	movwf	ADC_Read@digital& (0+255),b
  3635   000BC8  5183               	movf	(??_ADC_Read+1)& (0+255),w,b
  3636   000BCA  6F85               	movwf	(ADC_Read@digital+1)& (0+255),b
  3637   000BCC                     
  3638                           ; BSR set to: 0
  3639                           ;setting_hardaware/adc.c: 30:     return(digital);
  3640   000BCC  C084  F080         	movff	ADC_Read@digital,?_ADC_Read
  3641   000BD0  C085  F081         	movff	ADC_Read@digital+1,?_ADC_Read+1
  3642   000BD4                     
  3643                           ; BSR set to: 0
  3644   000BD4  0012               	return		;funcret
  3645   000BD6                     __end_of_ADC_Read:
  3646                           	callstack 0
  3647                           
  3648 ;; *************** function _Lo_ISR *****************
  3649 ;; Defined at:
  3650 ;;		line 66 in file "main.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;		None
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  command        20   34[COMRAM] unsigned char [20]
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      void 
  3657 ;; Registers used:
  3658 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3664 ;;      Params:         0       0       0       0       0       0       0
  3665 ;;      Locals:        20       0       0       0       0       0       0
  3666 ;;      Temps:         12       0       0       0       0       0       0
  3667 ;;      Totals:        32       0       0       0       0       0       0
  3668 ;;Total ram usage:       32 bytes
  3669 ;; Hardware stack levels used: 1
  3670 ;; Hardware stack levels required when called: 6
  3671 ;; This function calls:
  3672 ;;		_ClearBuffer
  3673 ;;		_GetString
  3674 ;;		_MyusartRead
  3675 ;;		_strcpy
  3676 ;;		_strlen
  3677 ;; This function is called by:
  3678 ;;		Interrupt level 1
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	intcodelo
  3683   000018                     __pintcodelo:
  3684                           	callstack 0
  3685   000018                     _Lo_ISR:
  3686                           	callstack 18
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;incstack = 0
  3690   000018  8067               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3691   00001A  CFD8 F018          	movff	status,??_Lo_ISR+1
  3692   00001E  CFE8 F019          	movff	wreg,??_Lo_ISR+2
  3693   000022  CFE0 F01A          	movff	bsr,??_Lo_ISR+3
  3694   000026  CFE9 F01B          	movff	fsr0l,??_Lo_ISR+4
  3695   00002A  CFEA F01C          	movff	fsr0h,??_Lo_ISR+5
  3696   00002E  CFD9 F01D          	movff	fsr2l,??_Lo_ISR+6
  3697   000032  CFDA F01E          	movff	fsr2h,??_Lo_ISR+7
  3698   000036  CFF6 F01F          	movff	tblptrl,??_Lo_ISR+8
  3699   00003A  CFF7 F020          	movff	tblptrh,??_Lo_ISR+9
  3700   00003E  CFF8 F021          	movff	tblptru,??_Lo_ISR+10
  3701   000042  CFF5 F022          	movff	tablat,??_Lo_ISR+11
  3702   000046                     
  3703                           ;main.c: 68:     if(RCIF)
  3704   000046  AA9E               	btfss	3998,5,c	;volatile
  3705   000048  EF28  F000         	goto	i1u153_21
  3706   00004C  EF2A  F000         	goto	i1u153_20
  3707   000050                     i1u153_21:
  3708   000050  EFF6  F000         	goto	i1l212
  3709   000054                     i1u153_20:
  3710   000054                     
  3711                           ;main.c: 69:     {;main.c: 70:         if(RCSTAbits.OERR)
  3712   000054  A2AB               	btfss	171,1,c	;volatile
  3713   000056  EF2F  F000         	goto	i1u154_21
  3714   00005A  EF31  F000         	goto	i1u154_20
  3715   00005E                     i1u154_21:
  3716   00005E  EF34  F000         	goto	i1l2187
  3717   000062                     i1u154_20:
  3718   000062                     
  3719                           ;main.c: 71:         {;main.c: 72:             CREN = 0;
  3720   000062  98AB               	bcf	4011,4,c	;volatile
  3721                           
  3722                           ;main.c: 73:             __nop();
  3723   000064  0000               	nop	
  3724                           
  3725                           ;main.c: 74:             CREN = 1;
  3726   000066  88AB               	bsf	4011,4,c	;volatile
  3727   000068                     i1l2187:
  3728                           
  3729                           ;main.c: 77:         MyusartRead();
  3730   000068  EC5B  F005         	call	_MyusartRead	;wreg free
  3731   00006C                     
  3732                           ;main.c: 78:         char command[20];;main.c: 79:         if(RCREG == '\r' || RCREG == 
      +                          '\n'){
  3733   00006C  0E0D               	movlw	13
  3734   00006E  18AE               	xorwf	174,w,c	;volatile
  3735   000070  B4D8               	btfsc	status,2,c
  3736   000072  EF3D  F000         	goto	i1u155_21
  3737   000076  EF3F  F000         	goto	i1u155_20
  3738   00007A                     i1u155_21:
  3739   00007A  EF48  F000         	goto	i1l2193
  3740   00007E                     i1u155_20:
  3741   00007E  0E0A               	movlw	10
  3742   000080  18AE               	xorwf	174,w,c	;volatile
  3743   000082  A4D8               	btfss	status,2,c
  3744   000084  EF46  F000         	goto	i1u156_21
  3745   000088  EF48  F000         	goto	i1u156_20
  3746   00008C                     i1u156_21:
  3747   00008C  EF54  F000         	goto	i1l2197
  3748   000090                     i1u156_20:
  3749   000090                     i1l2193:
  3750                           
  3751                           ;main.c: 80:             strcpy(command, GetString());
  3752   000090  0E23               	movlw	low Lo_ISR@command
  3753   000092  6E11               	movwf	strcpy@dest^0,c
  3754   000094  EC77  F006         	call	_GetString	;wreg free
  3755   000098  6E17               	movwf	??_Lo_ISR^0,c
  3756   00009A  C017  F012         	movff	??_Lo_ISR,strcpy@src
  3757   00009E  6A13               	clrf	(strcpy@src+1)^0,c
  3758   0000A0  EC12  F005         	call	_strcpy	;wreg free
  3759   0000A4                     
  3760                           ;main.c: 81:             ClearBuffer();
  3761   0000A4  EC98  F005         	call	_ClearBuffer	;wreg free
  3762   0000A8                     i1l2197:
  3763                           
  3764                           ;main.c: 83:         if(command[0] == 'O' && command[1] == 'K' && strlen(command) == 2){
  3765   0000A8  0E4F               	movlw	79
  3766   0000AA  1823               	xorwf	Lo_ISR@command^0,w,c
  3767   0000AC  A4D8               	btfss	status,2,c
  3768   0000AE  EF5B  F000         	goto	i1u157_21
  3769   0000B2  EF5D  F000         	goto	i1u157_20
  3770   0000B6                     i1u157_21:
  3771   0000B6  EF83  F000         	goto	i1l2213
  3772   0000BA                     i1u157_20:
  3773   0000BA  0E4B               	movlw	75
  3774   0000BC  1824               	xorwf	(Lo_ISR@command+1)^0,w,c
  3775   0000BE  A4D8               	btfss	status,2,c
  3776   0000C0  EF64  F000         	goto	i1u158_21
  3777   0000C4  EF66  F000         	goto	i1u158_20
  3778   0000C8                     i1u158_21:
  3779   0000C8  EF83  F000         	goto	i1l2213
  3780   0000CC                     i1u158_20:
  3781   0000CC  0E23               	movlw	low Lo_ISR@command
  3782   0000CE  6E0F               	movwf	strlen@s^0,c
  3783   0000D0  ECEB  F005         	call	_strlen	;wreg free
  3784   0000D4  0E02               	movlw	2
  3785   0000D6  180F               	xorwf	?_strlen^0,w,c
  3786   0000D8  1010               	iorwf	(?_strlen+1)^0,w,c
  3787   0000DA  A4D8               	btfss	status,2,c
  3788   0000DC  EF72  F000         	goto	i1u159_21
  3789   0000E0  EF74  F000         	goto	i1u159_20
  3790   0000E4                     i1u159_21:
  3791   0000E4  EF83  F000         	goto	i1l2213
  3792   0000E8                     i1u159_20:
  3793   0000E8                     
  3794                           ;main.c: 84:             LATAbits.LATA1 = 1;
  3795   0000E8  8289               	bsf	137,1,c	;volatile
  3796   0000EA                     
  3797                           ;main.c: 85:             ClearBuffer();
  3798   0000EA  EC98  F005         	call	_ClearBuffer	;wreg free
  3799   0000EE                     
  3800                           ;main.c: 86:             strcpy(command, "");
  3801   0000EE  0E23               	movlw	low Lo_ISR@command
  3802   0000F0  6E11               	movwf	strcpy@dest^0,c
  3803   0000F2  0E05               	movlw	low (STR_8+10)
  3804   0000F4  6E12               	movwf	strcpy@src^0,c
  3805   0000F6  0E7D               	movlw	high (STR_8+10)
  3806   0000F8  6E13               	movwf	(strcpy@src+1)^0,c
  3807   0000FA  EC12  F005         	call	_strcpy	;wreg free
  3808   0000FE  EFF6  F000         	goto	i1l212
  3809   000102                     i1l2209:
  3810                           
  3811                           ;main.c: 87:             return;
  3812   000102  EFF6  F000         	goto	i1l212
  3813   000106                     i1l2213:
  3814   000106  0E2B               	movlw	43
  3815   000108  1823               	xorwf	Lo_ISR@command^0,w,c
  3816   00010A  A4D8               	btfss	status,2,c
  3817   00010C  EF8A  F000         	goto	i1u160_21
  3818   000110  EF8C  F000         	goto	i1u160_20
  3819   000114                     i1u160_21:
  3820   000114  EFBD  F000         	goto	i1l2233
  3821   000118                     i1u160_20:
  3822   000118  0E49               	movlw	73
  3823   00011A  1824               	xorwf	(Lo_ISR@command+1)^0,w,c
  3824   00011C  A4D8               	btfss	status,2,c
  3825   00011E  EF93  F000         	goto	i1u161_21
  3826   000122  EF95  F000         	goto	i1u161_20
  3827   000126                     i1u161_21:
  3828   000126  EFBD  F000         	goto	i1l2233
  3829   00012A                     i1u161_20:
  3830   00012A  0E4E               	movlw	78
  3831   00012C  1825               	xorwf	(Lo_ISR@command+2)^0,w,c
  3832   00012E  A4D8               	btfss	status,2,c
  3833   000130  EF9C  F000         	goto	i1u162_21
  3834   000134  EF9E  F000         	goto	i1u162_20
  3835   000138                     i1u162_21:
  3836   000138  EFBD  F000         	goto	i1l2233
  3837   00013C                     i1u162_20:
  3838   00013C  0E51               	movlw	81
  3839   00013E  1826               	xorwf	(Lo_ISR@command+3)^0,w,c
  3840   000140  A4D8               	btfss	status,2,c
  3841   000142  EFA5  F000         	goto	i1u163_21
  3842   000146  EFA7  F000         	goto	i1u163_20
  3843   00014A                     i1u163_21:
  3844   00014A  EFBD  F000         	goto	i1l2233
  3845   00014E                     i1u163_20:
  3846   00014E  0E45               	movlw	69
  3847   000150  1827               	xorwf	(Lo_ISR@command+4)^0,w,c
  3848   000152  A4D8               	btfss	status,2,c
  3849   000154  EFAE  F000         	goto	i1u164_21
  3850   000158  EFB0  F000         	goto	i1u164_20
  3851   00015C                     i1u164_21:
  3852   00015C  EFBD  F000         	goto	i1l2233
  3853   000160                     i1u164_20:
  3854   000160                     
  3855                           ;main.c: 90:             LATAbits.LATA2 = 1;
  3856   000160  8489               	bsf	137,2,c	;volatile
  3857   000162                     
  3858                           ;main.c: 91:             ClearBuffer();
  3859   000162  EC98  F005         	call	_ClearBuffer	;wreg free
  3860   000166                     
  3861                           ;main.c: 92:             strcpy(command, "");
  3862   000166  0E23               	movlw	low Lo_ISR@command
  3863   000168  6E11               	movwf	strcpy@dest^0,c
  3864   00016A  0E05               	movlw	low (STR_8+10)
  3865   00016C  6E12               	movwf	strcpy@src^0,c
  3866   00016E  0E7D               	movlw	high (STR_8+10)
  3867   000170  6E13               	movwf	(strcpy@src+1)^0,c
  3868   000172  EC12  F005         	call	_strcpy	;wreg free
  3869   000176  EFF6  F000         	goto	i1l212
  3870   00017A                     i1l2233:
  3871   00017A  0E2B               	movlw	43
  3872   00017C  1823               	xorwf	Lo_ISR@command^0,w,c
  3873   00017E  A4D8               	btfss	status,2,c
  3874   000180  EFC4  F000         	goto	i1u165_21
  3875   000184  EFC6  F000         	goto	i1u165_20
  3876   000188                     i1u165_21:
  3877   000188  EF81  F000         	goto	i1l2209
  3878   00018C                     i1u165_20:
  3879   00018C  0E43               	movlw	67
  3880   00018E  1824               	xorwf	(Lo_ISR@command+1)^0,w,c
  3881   000190  A4D8               	btfss	status,2,c
  3882   000192  EFCD  F000         	goto	i1u166_21
  3883   000196  EFCF  F000         	goto	i1u166_20
  3884   00019A                     i1u166_21:
  3885   00019A  EF81  F000         	goto	i1l2209
  3886   00019E                     i1u166_20:
  3887   00019E  0E6F               	movlw	111
  3888   0001A0  1825               	xorwf	(Lo_ISR@command+2)^0,w,c
  3889   0001A2  A4D8               	btfss	status,2,c
  3890   0001A4  EFD6  F000         	goto	i1u167_21
  3891   0001A8  EFD8  F000         	goto	i1u167_20
  3892   0001AC                     i1u167_21:
  3893   0001AC  EF81  F000         	goto	i1l2209
  3894   0001B0                     i1u167_20:
  3895   0001B0  0E6E               	movlw	110
  3896   0001B2  1826               	xorwf	(Lo_ISR@command+3)^0,w,c
  3897   0001B4  A4D8               	btfss	status,2,c
  3898   0001B6  EFDF  F000         	goto	i1u168_21
  3899   0001BA  EFE1  F000         	goto	i1u168_20
  3900   0001BE                     i1u168_21:
  3901   0001BE  EF81  F000         	goto	i1l2209
  3902   0001C2                     i1u168_20:
  3903   0001C2                     
  3904                           ;main.c: 96:             LATAbits.LATA3 = 1;
  3905   0001C2  8689               	bsf	137,3,c	;volatile
  3906                           
  3907                           ;main.c: 97:             PIE1bits.RCIE = 0;
  3908   0001C4  9A9D               	bcf	157,5,c	;volatile
  3909   0001C6                     
  3910                           ;main.c: 98:             isConnected = 1;
  3911   0001C6  0E00               	movlw	0
  3912   0001C8  0100               	movlb	0	; () banked
  3913   0001CA  6FFC               	movwf	(_isConnected+1)& (0+255),b
  3914   0001CC  0E01               	movlw	1
  3915   0001CE  6FFB               	movwf	_isConnected& (0+255),b
  3916                           
  3917                           ;main.c: 99:             needSendMsg = 1;
  3918   0001D0  0E00               	movlw	0
  3919   0001D2  6FFA               	movwf	(_needSendMsg+1)& (0+255),b
  3920   0001D4  0E01               	movlw	1
  3921   0001D6  6FF9               	movwf	_needSendMsg& (0+255),b
  3922   0001D8                     
  3923                           ; BSR set to: 0
  3924                           ;main.c: 100:             ClearBuffer();
  3925   0001D8  EC98  F005         	call	_ClearBuffer	;wreg free
  3926   0001DC                     
  3927                           ;main.c: 101:             strcpy(command, "");
  3928   0001DC  0E23               	movlw	low Lo_ISR@command
  3929   0001DE  6E11               	movwf	strcpy@dest^0,c
  3930   0001E0  0E05               	movlw	low (STR_8+10)
  3931   0001E2  6E12               	movwf	strcpy@src^0,c
  3932   0001E4  0E7D               	movlw	high (STR_8+10)
  3933   0001E6  6E13               	movwf	(strcpy@src+1)^0,c
  3934   0001E8  EC12  F005         	call	_strcpy	;wreg free
  3935   0001EC                     i1l212:
  3936   0001EC  C022  FFF5         	movff	??_Lo_ISR+11,tablat
  3937   0001F0  C021  FFF8         	movff	??_Lo_ISR+10,tblptru
  3938   0001F4  C020  FFF7         	movff	??_Lo_ISR+9,tblptrh
  3939   0001F8  C01F  FFF6         	movff	??_Lo_ISR+8,tblptrl
  3940   0001FC  C01E  FFDA         	movff	??_Lo_ISR+7,fsr2h
  3941   000200  C01D  FFD9         	movff	??_Lo_ISR+6,fsr2l
  3942   000204  C01C  FFEA         	movff	??_Lo_ISR+5,fsr0h
  3943   000208  C01B  FFE9         	movff	??_Lo_ISR+4,fsr0l
  3944   00020C  C01A  FFE0         	movff	??_Lo_ISR+3,bsr
  3945   000210  C019  FFE8         	movff	??_Lo_ISR+2,wreg
  3946   000214  C018  FFD8         	movff	??_Lo_ISR+1,status
  3947   000218  9067               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3948   00021A  0010               	retfie	
  3949   00021C                     __end_of_Lo_ISR:
  3950                           	callstack 0
  3951                           
  3952 ;; *************** function _strlen *****************
  3953 ;; Defined at:
  3954 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  s               1   14[COMRAM] PTR const unsigned char 
  3957 ;;		 -> Lo_ISR@command(20), 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;  a               1   16[COMRAM] PTR const unsigned char 
  3960 ;;		 -> Lo_ISR@command(20), 
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  2   14[COMRAM] unsigned int 
  3963 ;; Registers used:
  3964 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3970 ;;      Params:         2       0       0       0       0       0       0
  3971 ;;      Locals:         1       0       0       0       0       0       0
  3972 ;;      Temps:          0       0       0       0       0       0       0
  3973 ;;      Totals:         3       0       0       0       0       0       0
  3974 ;;Total ram usage:        3 bytes
  3975 ;; Hardware stack levels used: 1
  3976 ;; Hardware stack levels required when called: 3
  3977 ;; This function calls:
  3978 ;;		Nothing
  3979 ;; This function is called by:
  3980 ;;		_Lo_ISR
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text20
  3985   000BD6                     __ptext20:
  3986                           	callstack 0
  3987   000BD6                     _strlen:
  3988                           	callstack 20
  3989   000BD6  C00F  F011         	movff	strlen@s,strlen@a
  3990   000BDA  EFF0  F005         	goto	i1l2129
  3991   000BDE                     i1l2127:
  3992   000BDE  2A0F               	incf	strlen@s^0,f,c
  3993   000BE0                     i1l2129:
  3994   000BE0  500F               	movf	strlen@s^0,w,c
  3995   000BE2  6ED9               	movwf	fsr2l,c
  3996   000BE4  6ADA               	clrf	fsr2h,c
  3997   000BE6  50DF               	movf	indf2,w,c
  3998   000BE8  A4D8               	btfss	status,2,c
  3999   000BEA  EFF9  F005         	goto	i1u143_21
  4000   000BEE  EFFB  F005         	goto	i1u143_20
  4001   000BF2                     i1u143_21:
  4002   000BF2  EFEF  F005         	goto	i1l2127
  4003   000BF6                     i1u143_20:
  4004   000BF6  5011               	movf	strlen@a^0,w,c
  4005   000BF8  5C0F               	subwf	strlen@s^0,w,c
  4006   000BFA  6E0F               	movwf	?_strlen^0,c
  4007   000BFC  6A10               	clrf	(?_strlen+1)^0,c
  4008   000BFE  BE0F               	btfsc	?_strlen^0,7,c
  4009   000C00  0610               	decf	(?_strlen+1)^0,f,c
  4010   000C02  0012               	return		;funcret
  4011   000C04                     __end_of_strlen:
  4012                           	callstack 0
  4013                           
  4014 ;; *************** function _strcpy *****************
  4015 ;; Defined at:
  4016 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;  dest            1   16[COMRAM] PTR unsigned char 
  4019 ;;		 -> Lo_ISR@command(20), 
  4020 ;;  src             2   17[COMRAM] PTR const unsigned char 
  4021 ;;		 -> STR_11(1), STR_10(1), STR_9(1), mystring(20), 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;  d               1   21[COMRAM] PTR unsigned char 
  4024 ;;		 -> Lo_ISR@command(20), 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1   16[COMRAM] PTR unsigned char 
  4027 ;; Registers used:
  4028 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4034 ;;      Params:         3       0       0       0       0       0       0
  4035 ;;      Locals:         1       0       0       0       0       0       0
  4036 ;;      Temps:          2       0       0       0       0       0       0
  4037 ;;      Totals:         6       0       0       0       0       0       0
  4038 ;;Total ram usage:        6 bytes
  4039 ;; Hardware stack levels used: 1
  4040 ;; Hardware stack levels required when called: 3
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_Lo_ISR
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text21
  4049   000A24                     __ptext21:
  4050                           	callstack 0
  4051   000A24                     _strcpy:
  4052                           	callstack 20
  4053   000A24  C011  F016         	movff	strcpy@dest,strcpy@d
  4054   000A28                     i1l2123:
  4055   000A28  5012               	movf	strcpy@src^0,w,c
  4056   000A2A  6E14               	movwf	??_strcpy^0,c
  4057   000A2C  5013               	movf	(strcpy@src+1)^0,w,c
  4058   000A2E  6E15               	movwf	(??_strcpy+1)^0,c
  4059   000A30  4A12               	infsnz	strcpy@src^0,f,c
  4060   000A32  2A13               	incf	(strcpy@src+1)^0,f,c
  4061   000A34  C014  FFF6         	movff	??_strcpy,tblptrl
  4062   000A38  C015  FFF7         	movff	??_strcpy+1,tblptrh
  4063   000A3C  6AF8               	clrf	tblptru,c
  4064   000A3E  2A16               	incf	strcpy@d^0,f,c
  4065   000A40  0416               	decf	strcpy@d^0,w,c
  4066   000A42  6ED9               	movwf	fsr2l,c
  4067   000A44  6ADA               	clrf	fsr2h,c
  4068   000A46  0E05               	movlw	(high __ramtop+-1)
  4069   000A48  64F7               	cpfsgt	tblptrh,c
  4070   000A4A  D003               	bra	i1u141_27
  4071   000A4C  0008               	tblrd		*
  4072   000A4E  50F5               	movf	tablat,w,c
  4073   000A50  D005               	bra	i1u141_20
  4074   000A52                     i1u141_27:
  4075   000A52  CFF6 FFE9          	movff	tblptrl,fsr0l
  4076   000A56  CFF7 FFEA          	movff	tblptrh,fsr0h
  4077   000A5A  50EF               	movf	indf0,w,c
  4078   000A5C                     i1u141_20:
  4079   000A5C  6EDF               	movwf	indf2,c
  4080   000A5E  50DF               	movf	indf2,w,c
  4081   000A60  A4D8               	btfss	status,2,c
  4082   000A62  EF35  F005         	goto	i1u142_21
  4083   000A66  EF37  F005         	goto	i1u142_20
  4084   000A6A                     i1u142_21:
  4085   000A6A  EF14  F005         	goto	i1l2123
  4086   000A6E                     i1u142_20:
  4087   000A6E  0012               	return		;funcret
  4088   000A70                     __end_of_strcpy:
  4089                           	callstack 0
  4090                           
  4091 ;; *************** function _MyusartRead *****************
  4092 ;; Defined at:
  4093 ;;		line 62 in file "setting_hardaware/uart.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;		None
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  receivedData    1   21[COMRAM] unsigned char 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      void 
  4100 ;; Registers used:
  4101 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4107 ;;      Params:         0       0       0       0       0       0       0
  4108 ;;      Locals:         1       0       0       0       0       0       0
  4109 ;;      Temps:          0       0       0       0       0       0       0
  4110 ;;      Totals:         1       0       0       0       0       0       0
  4111 ;;Total ram usage:        1 bytes
  4112 ;; Hardware stack levels used: 1
  4113 ;; Hardware stack levels required when called: 5
  4114 ;; This function calls:
  4115 ;;		i1_UART_Write
  4116 ;;		i1_UART_Write_Text
  4117 ;; This function is called by:
  4118 ;;		_Lo_ISR
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text22
  4123   000AB6                     __ptext22:
  4124                           	callstack 0
  4125   000AB6                     _MyusartRead:
  4126                           	callstack 18
  4127   000AB6                     
  4128                           ;setting_hardaware/uart.c: 66:     unsigned char receivedData = RCREG;
  4129   000AB6  CFAE F016          	movff	4014,MyusartRead@receivedData	;volatile
  4130   000ABA                     
  4131                           ;setting_hardaware/uart.c: 67:     if(receivedData == '\r'){
  4132   000ABA  0E0D               	movlw	13
  4133   000ABC  1816               	xorwf	MyusartRead@receivedData^0,w,c
  4134   000ABE  A4D8               	btfss	status,2,c
  4135   000AC0  EF64  F005         	goto	i1u132_21
  4136   000AC4  EF66  F005         	goto	i1u132_20
  4137   000AC8                     i1u132_21:
  4138   000AC8  EF6E  F005         	goto	i1l2107
  4139   000ACC                     i1u132_20:
  4140   000ACC                     
  4141                           ;setting_hardaware/uart.c: 68:         UART_Write_Text("\r\n");
  4142   000ACC  0E03               	movlw	low (STR_8+8)
  4143   000ACE  6E10               	movwf	i1UART_Write_Text@text^0,c
  4144   000AD0  0E7D               	movlw	high (STR_8+8)
  4145   000AD2  6E11               	movwf	(i1UART_Write_Text@text+1)^0,c
  4146   000AD4  EC63  F004         	call	i1_UART_Write_Text	;wreg free
  4147   000AD8  EF79  F005         	goto	i1l133
  4148   000ADC                     i1l2107:
  4149                           
  4150                           ;setting_hardaware/uart.c: 71:     mystring[lenStr] = receivedData;
  4151   000ADC  504D               	movf	_lenStr^0,w,c
  4152   000ADE  0F53               	addlw	low _mystring
  4153   000AE0  6ED9               	movwf	fsr2l,c
  4154   000AE2  6ADA               	clrf	fsr2h,c
  4155   000AE4  C016  FFDF         	movff	MyusartRead@receivedData,indf2
  4156   000AE8                     
  4157                           ;setting_hardaware/uart.c: 72:     lenStr++;
  4158   000AE8  4A4D               	infsnz	_lenStr^0,f,c
  4159   000AEA  2A4E               	incf	(_lenStr+1)^0,f,c
  4160   000AEC                     
  4161                           ;setting_hardaware/uart.c: 73:     UART_Write(receivedData);
  4162   000AEC  5016               	movf	MyusartRead@receivedData^0,w,c
  4163   000AEE  EC54  F006         	call	i1_UART_Write
  4164   000AF2                     i1l133:
  4165   000AF2  0012               	return		;funcret
  4166   000AF4                     __end_of_MyusartRead:
  4167                           	callstack 0
  4168                           
  4169 ;; *************** function i1_UART_Write_Text *****************
  4170 ;; Defined at:
  4171 ;;		line 51 in file "setting_hardaware/uart.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  text            2   15[COMRAM] PTR unsigned char 
  4174 ;;		 -> STR_13(6), STR_12(6), STR_8(11), STR_7(9), 
  4175 ;;		 -> STR_6(5), STR_5(6), STR_4(3), STR_3(5), 
  4176 ;;		 -> STR_2(5), Check_ADC@tmp(10), 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  i               2   19[COMRAM] int 
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4188 ;;      Params:         2       0       0       0       0       0       0
  4189 ;;      Locals:         2       0       0       0       0       0       0
  4190 ;;      Temps:          2       0       0       0       0       0       0
  4191 ;;      Totals:         6       0       0       0       0       0       0
  4192 ;;Total ram usage:        6 bytes
  4193 ;; Hardware stack levels used: 1
  4194 ;; Hardware stack levels required when called: 4
  4195 ;; This function calls:
  4196 ;;		i1_UART_Write
  4197 ;; This function is called by:
  4198 ;;		_MyusartRead
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           	psect	text23
  4203   0008C6                     __ptext23:
  4204                           	callstack 0
  4205   0008C6                     i1_UART_Write_Text:
  4206                           	callstack 18
  4207   0008C6                     
  4208                           ;setting_hardaware/uart.c: 52:     for(int i=0;text[i]!='\0';i++)
  4209   0008C6  0E00               	movlw	0
  4210   0008C8  6E15               	movwf	(i1UART_Write_Text@i+1)^0,c
  4211   0008CA  0E00               	movlw	0
  4212   0008CC  6E14               	movwf	i1UART_Write_Text@i^0,c
  4213   0008CE  EF83  F004         	goto	i1l2059
  4214   0008D2                     i1l2055:
  4215                           
  4216                           ;setting_hardaware/uart.c: 53:         UART_Write(text[i]);
  4217   0008D2  5014               	movf	i1UART_Write_Text@i^0,w,c
  4218   0008D4  2410               	addwf	i1UART_Write_Text@text^0,w,c
  4219   0008D6  6E12               	movwf	??i1_UART_Write_Text^0,c
  4220   0008D8  5015               	movf	(i1UART_Write_Text@i+1)^0,w,c
  4221   0008DA  2011               	addwfc	(i1UART_Write_Text@text+1)^0,w,c
  4222   0008DC  6E13               	movwf	(??i1_UART_Write_Text+1)^0,c
  4223   0008DE  C012  FFF6         	movff	??i1_UART_Write_Text,tblptrl
  4224   0008E2  C013  FFF7         	movff	??i1_UART_Write_Text+1,tblptrh
  4225   0008E6  6AF8               	clrf	tblptru,c
  4226   0008E8  0E05               	movlw	(high __ramtop+-1)
  4227   0008EA  64F7               	cpfsgt	tblptrh,c
  4228   0008EC  D003               	bra	i1u125_27
  4229   0008EE  0008               	tblrd		*
  4230   0008F0  50F5               	movf	tablat,w,c
  4231   0008F2  D005               	bra	i1u125_20
  4232   0008F4                     i1u125_27:
  4233   0008F4  CFF6 FFE9          	movff	tblptrl,fsr0l
  4234   0008F8  CFF7 FFEA          	movff	tblptrh,fsr0h
  4235   0008FC  50EF               	movf	indf0,w,c
  4236   0008FE                     i1u125_20:
  4237   0008FE  EC54  F006         	call	i1_UART_Write
  4238   000902  4A14               	infsnz	i1UART_Write_Text@i^0,f,c
  4239   000904  2A15               	incf	(i1UART_Write_Text@i+1)^0,f,c
  4240   000906                     i1l2059:
  4241   000906  5014               	movf	i1UART_Write_Text@i^0,w,c
  4242   000908  2410               	addwf	i1UART_Write_Text@text^0,w,c
  4243   00090A  6E12               	movwf	??i1_UART_Write_Text^0,c
  4244   00090C  5015               	movf	(i1UART_Write_Text@i+1)^0,w,c
  4245   00090E  2011               	addwfc	(i1UART_Write_Text@text+1)^0,w,c
  4246   000910  6E13               	movwf	(??i1_UART_Write_Text+1)^0,c
  4247   000912  C012  FFF6         	movff	??i1_UART_Write_Text,tblptrl
  4248   000916  C013  FFF7         	movff	??i1_UART_Write_Text+1,tblptrh
  4249   00091A  6AF8               	clrf	tblptru,c
  4250   00091C  0E05               	movlw	(high __ramtop+-1)
  4251   00091E  64F7               	cpfsgt	tblptrh,c
  4252   000920  D003               	bra	i1u126_27
  4253   000922  0008               	tblrd		*
  4254   000924  50F5               	movf	tablat,w,c
  4255   000926  D005               	bra	i1u126_20
  4256   000928                     i1u126_27:
  4257   000928  CFF6 FFE9          	movff	tblptrl,fsr0l
  4258   00092C  CFF7 FFEA          	movff	tblptrh,fsr0h
  4259   000930  50EF               	movf	indf0,w,c
  4260   000932                     i1u126_20:
  4261   000932  0900               	iorlw	0
  4262   000934  A4D8               	btfss	status,2,c
  4263   000936  EF9F  F004         	goto	i1u127_21
  4264   00093A  EFA1  F004         	goto	i1u127_20
  4265   00093E                     i1u127_21:
  4266   00093E  EF69  F004         	goto	i1l2055
  4267   000942                     i1u127_20:
  4268   000942  0012               	return		;funcret
  4269   000944                     __end_ofi1_UART_Write_Text:
  4270                           	callstack 0
  4271                           
  4272 ;; *************** function i1_UART_Write *****************
  4273 ;; Defined at:
  4274 ;;		line 44 in file "setting_hardaware/uart.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  data            1    wreg     unsigned char 
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  data            1   14[COMRAM] unsigned char 
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      void 
  4281 ;; Registers used:
  4282 ;;		wreg
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4288 ;;      Params:         0       0       0       0       0       0       0
  4289 ;;      Locals:         1       0       0       0       0       0       0
  4290 ;;      Temps:          0       0       0       0       0       0       0
  4291 ;;      Totals:         1       0       0       0       0       0       0
  4292 ;;Total ram usage:        1 bytes
  4293 ;; Hardware stack levels used: 1
  4294 ;; Hardware stack levels required when called: 3
  4295 ;; This function calls:
  4296 ;;		Nothing
  4297 ;; This function is called by:
  4298 ;;		_MyusartRead
  4299 ;;		i1_UART_Write_Text
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           	psect	text24
  4304   000CA8                     __ptext24:
  4305                           	callstack 0
  4306   000CA8                     i1_UART_Write:
  4307                           	callstack 18
  4308                           
  4309                           ;incstack = 0
  4310                           ;i1UART_Write@data stored from wreg
  4311   000CA8  6E0F               	movwf	i1UART_Write@data^0,c
  4312   000CAA                     i1l115:
  4313   000CAA  A2AC               	btfss	172,1,c	;volatile
  4314   000CAC  EF5A  F006         	goto	i1u119_21
  4315   000CB0  EF5C  F006         	goto	i1u119_20
  4316   000CB4                     i1u119_21:
  4317   000CB4  EF55  F006         	goto	i1l115
  4318   000CB8                     i1u119_20:
  4319   000CB8                     
  4320                           ;setting_hardaware/uart.c: 47:     TXREG = data;
  4321   000CB8  C00F  FFAD         	movff	i1UART_Write@data,4013	;volatile
  4322   000CBC  0012               	return		;funcret
  4323   000CBE                     __end_ofi1_UART_Write:
  4324                           	callstack 0
  4325                           
  4326 ;; *************** function _GetString *****************
  4327 ;; Defined at:
  4328 ;;		line 77 in file "setting_hardaware/uart.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;		None
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1   14[COMRAM] PTR unsigned char 
  4335 ;; Registers used:
  4336 ;;		wreg
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4342 ;;      Params:         2       0       0       0       0       0       0
  4343 ;;      Locals:         0       0       0       0       0       0       0
  4344 ;;      Temps:          0       0       0       0       0       0       0
  4345 ;;      Totals:         2       0       0       0       0       0       0
  4346 ;;Total ram usage:        2 bytes
  4347 ;; Hardware stack levels used: 1
  4348 ;; Hardware stack levels required when called: 3
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_Lo_ISR
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text25
  4357   000CEE                     __ptext25:
  4358                           	callstack 0
  4359   000CEE                     _GetString:
  4360                           	callstack 20
  4361   000CEE                     
  4362                           ;setting_hardaware/uart.c: 78:     return mystring;
  4363   000CEE  0E53               	movlw	_mystring& (0+255)
  4364   000CF0  0012               	return		;funcret
  4365   000CF2                     __end_of_GetString:
  4366                           	callstack 0
  4367                           
  4368 ;; *************** function _ClearBuffer *****************
  4369 ;; Defined at:
  4370 ;;		line 56 in file "setting_hardaware/uart.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;		None
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  i               2   14[COMRAM] int 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      void 
  4377 ;; Registers used:
  4378 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4384 ;;      Params:         0       0       0       0       0       0       0
  4385 ;;      Locals:         2       0       0       0       0       0       0
  4386 ;;      Temps:          0       0       0       0       0       0       0
  4387 ;;      Totals:         2       0       0       0       0       0       0
  4388 ;;Total ram usage:        2 bytes
  4389 ;; Hardware stack levels used: 1
  4390 ;; Hardware stack levels required when called: 3
  4391 ;; This function calls:
  4392 ;;		Nothing
  4393 ;; This function is called by:
  4394 ;;		_Lo_ISR
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           	psect	text26
  4399   000B30                     __ptext26:
  4400                           	callstack 0
  4401   000B30                     _ClearBuffer:
  4402                           	callstack 20
  4403   000B30                     
  4404                           ;setting_hardaware/uart.c: 57:     for(int i = 0; i < 10 ; i++)
  4405   000B30  0E00               	movlw	0
  4406   000B32  6E10               	movwf	(ClearBuffer@i+1)^0,c
  4407   000B34  0E00               	movlw	0
  4408   000B36  6E0F               	movwf	ClearBuffer@i^0,c
  4409   000B38                     i1l2091:
  4410                           
  4411                           ;setting_hardaware/uart.c: 58:         mystring[i] = '\0';
  4412   000B38  500F               	movf	ClearBuffer@i^0,w,c
  4413   000B3A  0F53               	addlw	low _mystring
  4414   000B3C  6ED9               	movwf	fsr2l,c
  4415   000B3E  6ADA               	clrf	fsr2h,c
  4416   000B40  6ADF               	clrf	indf2,c
  4417   000B42  4A0F               	infsnz	ClearBuffer@i^0,f,c
  4418   000B44  2A10               	incf	(ClearBuffer@i+1)^0,f,c
  4419   000B46  BE10               	btfsc	(ClearBuffer@i+1)^0,7,c
  4420   000B48  EFAF  F005         	goto	i1u131_21
  4421   000B4C  5010               	movf	(ClearBuffer@i+1)^0,w,c
  4422   000B4E  E109               	bnz	i1u131_20
  4423   000B50  0E0A               	movlw	10
  4424   000B52  5C0F               	subwf	ClearBuffer@i^0,w,c
  4425   000B54  A0D8               	btfss	status,0,c
  4426   000B56  EFAF  F005         	goto	i1u131_21
  4427   000B5A  EFB1  F005         	goto	i1u131_20
  4428   000B5E                     i1u131_21:
  4429   000B5E  EF9C  F005         	goto	i1l2091
  4430   000B62                     i1u131_20:
  4431   000B62                     
  4432                           ;setting_hardaware/uart.c: 59:     lenStr = 0;
  4433   000B62  0E00               	movlw	0
  4434   000B64  6E4E               	movwf	(_lenStr+1)^0,c
  4435   000B66  0E00               	movlw	0
  4436   000B68  6E4D               	movwf	_lenStr^0,c
  4437   000B6A  0012               	return		;funcret
  4438   000B6C                     __end_of_ClearBuffer:
  4439                           	callstack 0
  4440                           
  4441 ;; *************** function _Hi_ISR *****************
  4442 ;; Defined at:
  4443 ;;		line 45 in file "main.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;		None
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;		None
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  1    wreg      void 
  4450 ;; Registers used:
  4451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4457 ;;      Params:         0       0       0       0       0       0       0
  4458 ;;      Locals:         0       0       0       0       0       0       0
  4459 ;;      Temps:          7       0       0       0       0       0       0
  4460 ;;      Totals:         7       0       0       0       0       0       0
  4461 ;;Total ram usage:        7 bytes
  4462 ;; Hardware stack levels used: 1
  4463 ;; Hardware stack levels required when called: 2
  4464 ;; This function calls:
  4465 ;;		i2_UART_Write_Text
  4466 ;; This function is called by:
  4467 ;;		Interrupt level 2
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           	psect	intcode
  4472   000008                     __pintcode:
  4473                           	callstack 0
  4474   000008                     _Hi_ISR:
  4475                           	callstack 18
  4476                           
  4477                           ;incstack = 0
  4478   000008  8267               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4479   00000A  EDCA  F002         	call	int_func,f	;refresh shadow registers
  4480                           
  4481                           	psect	intcode_body
  4482   000594                     __pintcode_body:
  4483                           	callstack 18
  4484   000594                     int_func:
  4485                           	callstack 18
  4486   000594  0006               	pop		; remove dummy address from shadow register refresh
  4487   000596  CFE9 F009          	movff	fsr0l,??_Hi_ISR+1
  4488   00059A  CFEA F00A          	movff	fsr0h,??_Hi_ISR+2
  4489   00059E  CFF6 F00B          	movff	tblptrl,??_Hi_ISR+3
  4490   0005A2  CFF7 F00C          	movff	tblptrh,??_Hi_ISR+4
  4491   0005A6  CFF8 F00D          	movff	tblptru,??_Hi_ISR+5
  4492   0005AA  CFF5 F00E          	movff	tablat,??_Hi_ISR+6
  4493   0005AE                     
  4494                           ;main.c: 47:     if (INTCONbits.RBIF) {
  4495   0005AE  A0F2               	btfss	242,0,c	;volatile
  4496   0005B0  EFDC  F002         	goto	i2u149_41
  4497   0005B4  EFDE  F002         	goto	i2u149_40
  4498   0005B8                     i2u149_41:
  4499   0005B8  EF1C  F003         	goto	i2l201
  4500   0005BC                     i2u149_40:
  4501   0005BC                     
  4502                           ;main.c: 48:         _delay((unsigned long)((100)*(4000000/4000.0)));
  4503   0005BC  0E82               	movlw	130
  4504   0005BE  6E08               	movwf	??_Hi_ISR^0,c
  4505   0005C0  0EDE               	movlw	222
  4506   0005C2                     i2u219_47:
  4507   0005C2  2EE8               	decfsz	wreg,f,c
  4508   0005C4  D7FE               	bra	i2u219_47
  4509   0005C6  2E08               	decfsz	??_Hi_ISR^0,f,c
  4510   0005C8  D7FC               	bra	i2u219_47
  4511   0005CA                     
  4512                           ;main.c: 49:         if(count == 0){
  4513   0005CA  504B               	movf	_count^0,w,c
  4514   0005CC  104C               	iorwf	(_count+1)^0,w,c
  4515   0005CE  A4D8               	btfss	status,2,c
  4516   0005D0  EFEC  F002         	goto	i2u150_41
  4517   0005D4  EFEE  F002         	goto	i2u150_40
  4518   0005D8                     i2u150_41:
  4519   0005D8  EFF6  F002         	goto	i2l2167
  4520   0005DC                     i2u150_40:
  4521   0005DC                     
  4522                           ;main.c: 50:             UART_Write_Text("AT\r\n");
  4523   0005DC  0E1B               	movlw	low STR_6
  4524   0005DE  6E02               	movwf	i2UART_Write_Text@text^0,c
  4525   0005E0  0E7D               	movlw	high STR_6
  4526   0005E2  6E03               	movwf	(i2UART_Write_Text@text+1)^0,c
  4527   0005E4  ECA2  F004         	call	i2_UART_Write_Text	;wreg free
  4528                           
  4529                           ;main.c: 51:         }
  4530   0005E8  EF19  F003         	goto	i2l2177
  4531   0005EC                     i2l2167:
  4532   0005EC  044B               	decf	_count^0,w,c
  4533   0005EE  104C               	iorwf	(_count+1)^0,w,c
  4534   0005F0  A4D8               	btfss	status,2,c
  4535   0005F2  EFFD  F002         	goto	i2u151_41
  4536   0005F6  EFFF  F002         	goto	i2u151_40
  4537   0005FA                     i2u151_41:
  4538   0005FA  EF07  F003         	goto	i2l2171
  4539   0005FE                     i2u151_40:
  4540   0005FE                     
  4541                           ;main.c: 53:             UART_Write_Text("AT+INQ\r\n");
  4542   0005FE  0E06               	movlw	low STR_7
  4543   000600  6E02               	movwf	i2UART_Write_Text@text^0,c
  4544   000602  0E7D               	movlw	high STR_7
  4545   000604  6E03               	movwf	(i2UART_Write_Text@text+1)^0,c
  4546   000606  ECA2  F004         	call	i2_UART_Write_Text	;wreg free
  4547                           
  4548                           ;main.c: 54:         }
  4549   00060A  EF19  F003         	goto	i2l2177
  4550   00060E                     i2l2171:
  4551   00060E  0E02               	movlw	2
  4552   000610  184B               	xorwf	_count^0,w,c
  4553   000612  104C               	iorwf	(_count+1)^0,w,c
  4554   000614  A4D8               	btfss	status,2,c
  4555   000616  EF0F  F003         	goto	i2u152_41
  4556   00061A  EF11  F003         	goto	i2u152_40
  4557   00061E                     i2u152_41:
  4558   00061E  EF19  F003         	goto	i2l2177
  4559   000622                     i2u152_40:
  4560   000622                     
  4561                           ;main.c: 56:             UART_Write_Text("AT+CONN1\r\n");
  4562   000622  0EFB               	movlw	low STR_8
  4563   000624  6E02               	movwf	i2UART_Write_Text@text^0,c
  4564   000626  0E7C               	movlw	high STR_8
  4565   000628  6E03               	movwf	(i2UART_Write_Text@text+1)^0,c
  4566   00062A  ECA2  F004         	call	i2_UART_Write_Text	;wreg free
  4567   00062E                     
  4568                           ;main.c: 57:             count = -1;
  4569   00062E  684B               	setf	_count^0,c
  4570   000630  684C               	setf	(_count+1)^0,c
  4571   000632                     i2l2177:
  4572                           
  4573                           ;main.c: 59:         count++;
  4574   000632  4A4B               	infsnz	_count^0,f,c
  4575   000634  2A4C               	incf	(_count+1)^0,f,c
  4576   000636                     
  4577                           ;main.c: 61:         INTCONbits.INT0IF = 0;
  4578   000636  92F2               	bcf	242,1,c	;volatile
  4579   000638                     i2l201:
  4580   000638  C00E  FFF5         	movff	??_Hi_ISR+6,tablat
  4581   00063C  C00D  FFF8         	movff	??_Hi_ISR+5,tblptru
  4582   000640  C00C  FFF7         	movff	??_Hi_ISR+4,tblptrh
  4583   000644  C00B  FFF6         	movff	??_Hi_ISR+3,tblptrl
  4584   000648  C00A  FFEA         	movff	??_Hi_ISR+2,fsr0h
  4585   00064C  C009  FFE9         	movff	??_Hi_ISR+1,fsr0l
  4586   000650  9267               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4587   000652  0011               	retfie		f
  4588   000654                     __end_of_Hi_ISR:
  4589                           	callstack 0
  4590                           
  4591 ;; *************** function i2_UART_Write_Text *****************
  4592 ;; Defined at:
  4593 ;;		line 51 in file "setting_hardaware/uart.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  text            2    1[COMRAM] PTR unsigned char 
  4596 ;;		 -> STR_13(6), STR_12(6), STR_8(11), STR_7(9), 
  4597 ;;		 -> STR_6(5), STR_5(6), STR_4(3), STR_3(5), 
  4598 ;;		 -> STR_2(5), Check_ADC@tmp(10), 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  i               2    5[COMRAM] int 
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      void 
  4603 ;; Registers used:
  4604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4610 ;;      Params:         2       0       0       0       0       0       0
  4611 ;;      Locals:         2       0       0       0       0       0       0
  4612 ;;      Temps:          2       0       0       0       0       0       0
  4613 ;;      Totals:         6       0       0       0       0       0       0
  4614 ;;Total ram usage:        6 bytes
  4615 ;; Hardware stack levels used: 1
  4616 ;; Hardware stack levels required when called: 1
  4617 ;; This function calls:
  4618 ;;		i2_UART_Write
  4619 ;; This function is called by:
  4620 ;;		_Hi_ISR
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text28
  4625   000944                     __ptext28:
  4626                           	callstack 0
  4627   000944                     i2_UART_Write_Text:
  4628                           	callstack 18
  4629   000944                     
  4630                           ;setting_hardaware/uart.c: 52:     for(int i=0;text[i]!='\0';i++)
  4631   000944  0E00               	movlw	0
  4632   000946  6E07               	movwf	(i2UART_Write_Text@i+1)^0,c
  4633   000948  0E00               	movlw	0
  4634   00094A  6E06               	movwf	i2UART_Write_Text@i^0,c
  4635   00094C  EFC2  F004         	goto	i2l2141
  4636   000950                     i2l2137:
  4637                           
  4638                           ;setting_hardaware/uart.c: 53:         UART_Write(text[i]);
  4639   000950  5006               	movf	i2UART_Write_Text@i^0,w,c
  4640   000952  2402               	addwf	i2UART_Write_Text@text^0,w,c
  4641   000954  6E04               	movwf	??i2_UART_Write_Text^0,c
  4642   000956  5007               	movf	(i2UART_Write_Text@i+1)^0,w,c
  4643   000958  2003               	addwfc	(i2UART_Write_Text@text+1)^0,w,c
  4644   00095A  6E05               	movwf	(??i2_UART_Write_Text+1)^0,c
  4645   00095C  C004  FFF6         	movff	??i2_UART_Write_Text,tblptrl
  4646   000960  C005  FFF7         	movff	??i2_UART_Write_Text+1,tblptrh
  4647   000964  6AF8               	clrf	tblptru,c
  4648   000966  0E05               	movlw	(high __ramtop+-1)
  4649   000968  64F7               	cpfsgt	tblptrh,c
  4650   00096A  D003               	bra	i2u144_47
  4651   00096C  0008               	tblrd		*
  4652   00096E  50F5               	movf	tablat,w,c
  4653   000970  D005               	bra	i2u144_40
  4654   000972                     i2u144_47:
  4655   000972  CFF6 FFE9          	movff	tblptrl,fsr0l
  4656   000976  CFF7 FFEA          	movff	tblptrh,fsr0h
  4657   00097A  50EF               	movf	indf0,w,c
  4658   00097C                     i2u144_40:
  4659   00097C  EC5F  F006         	call	i2_UART_Write
  4660   000980  4A06               	infsnz	i2UART_Write_Text@i^0,f,c
  4661   000982  2A07               	incf	(i2UART_Write_Text@i+1)^0,f,c
  4662   000984                     i2l2141:
  4663   000984  5006               	movf	i2UART_Write_Text@i^0,w,c
  4664   000986  2402               	addwf	i2UART_Write_Text@text^0,w,c
  4665   000988  6E04               	movwf	??i2_UART_Write_Text^0,c
  4666   00098A  5007               	movf	(i2UART_Write_Text@i+1)^0,w,c
  4667   00098C  2003               	addwfc	(i2UART_Write_Text@text+1)^0,w,c
  4668   00098E  6E05               	movwf	(??i2_UART_Write_Text+1)^0,c
  4669   000990  C004  FFF6         	movff	??i2_UART_Write_Text,tblptrl
  4670   000994  C005  FFF7         	movff	??i2_UART_Write_Text+1,tblptrh
  4671   000998  6AF8               	clrf	tblptru,c
  4672   00099A  0E05               	movlw	(high __ramtop+-1)
  4673   00099C  64F7               	cpfsgt	tblptrh,c
  4674   00099E  D003               	bra	i2u145_47
  4675   0009A0  0008               	tblrd		*
  4676   0009A2  50F5               	movf	tablat,w,c
  4677   0009A4  D005               	bra	i2u145_40
  4678   0009A6                     i2u145_47:
  4679   0009A6  CFF6 FFE9          	movff	tblptrl,fsr0l
  4680   0009AA  CFF7 FFEA          	movff	tblptrh,fsr0h
  4681   0009AE  50EF               	movf	indf0,w,c
  4682   0009B0                     i2u145_40:
  4683   0009B0  0900               	iorlw	0
  4684   0009B2  A4D8               	btfss	status,2,c
  4685   0009B4  EFDE  F004         	goto	i2u146_41
  4686   0009B8  EFE0  F004         	goto	i2u146_40
  4687   0009BC                     i2u146_41:
  4688   0009BC  EFA8  F004         	goto	i2l2137
  4689   0009C0                     i2u146_40:
  4690   0009C0  0012               	return		;funcret
  4691   0009C2                     __end_ofi2_UART_Write_Text:
  4692                           	callstack 0
  4693                           
  4694 ;; *************** function i2_UART_Write *****************
  4695 ;; Defined at:
  4696 ;;		line 44 in file "setting_hardaware/uart.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  data            1    wreg     unsigned char 
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  data            1    0[COMRAM] unsigned char 
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  1    wreg      void 
  4703 ;; Registers used:
  4704 ;;		wreg
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4710 ;;      Params:         0       0       0       0       0       0       0
  4711 ;;      Locals:         1       0       0       0       0       0       0
  4712 ;;      Temps:          0       0       0       0       0       0       0
  4713 ;;      Totals:         1       0       0       0       0       0       0
  4714 ;;Total ram usage:        1 bytes
  4715 ;; Hardware stack levels used: 1
  4716 ;; This function calls:
  4717 ;;		Nothing
  4718 ;; This function is called by:
  4719 ;;		i2_UART_Write_Text
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           	psect	text29
  4724   000CBE                     __ptext29:
  4725                           	callstack 0
  4726   000CBE                     i2_UART_Write:
  4727                           	callstack 18
  4728                           
  4729                           ;incstack = 0
  4730                           ;i2UART_Write@data stored from wreg
  4731   000CBE  6E01               	movwf	i2UART_Write@data^0,c
  4732   000CC0                     i2l115:
  4733   000CC0  A2AC               	btfss	172,1,c	;volatile
  4734   000CC2  EF65  F006         	goto	i2u124_41
  4735   000CC6  EF67  F006         	goto	i2u124_40
  4736   000CCA                     i2u124_41:
  4737   000CCA  EF60  F006         	goto	i2l115
  4738   000CCE                     i2u124_40:
  4739   000CCE                     
  4740                           ;setting_hardaware/uart.c: 47:     TXREG = data;
  4741   000CCE  C001  FFAD         	movff	i2UART_Write@data,4013	;volatile
  4742   000CD2  0012               	return		;funcret
  4743   000CD4                     __end_ofi2_UART_Write:
  4744                           	callstack 0
  4745                           
  4746                           	psect	rparam
  4747   000001                     ___rparam_used  equ	1
  4748   000000                     ___param_bank   equ	0
  4749   000000                     __Lparam        equ	__Lrparam
  4750   000000                     __Hparam        equ	__Hrparam
  4751                           
  4752                           	psect	temp
  4753   000067                     btemp:
  4754                           	callstack 0
  4755   000067                     	ds	1
  4756   000067                     int$flags       set	btemp
  4757   000068                     wtemp8          set	btemp+1
  4758   000068                     ttemp5          set	btemp+1
  4759   00006B                     ttemp6          set	btemp+4
  4760   00006F                     ttemp7          set	btemp+8
  4761                           
  4762                           	psect	idloc
  4763                           
  4764                           ;Config register IDLOC0 @ 0x200000
  4765                           ;	unspecified, using default values
  4766   200000                     	org	2097152
  4767   200000  FF                 	db	255
  4768                           
  4769                           ;Config register IDLOC1 @ 0x200001
  4770                           ;	unspecified, using default values
  4771   200001                     	org	2097153
  4772   200001  FF                 	db	255
  4773                           
  4774                           ;Config register IDLOC2 @ 0x200002
  4775                           ;	unspecified, using default values
  4776   200002                     	org	2097154
  4777   200002  FF                 	db	255
  4778                           
  4779                           ;Config register IDLOC3 @ 0x200003
  4780                           ;	unspecified, using default values
  4781   200003                     	org	2097155
  4782   200003  FF                 	db	255
  4783                           
  4784                           ;Config register IDLOC4 @ 0x200004
  4785                           ;	unspecified, using default values
  4786   200004                     	org	2097156
  4787   200004  FF                 	db	255
  4788                           
  4789                           ;Config register IDLOC5 @ 0x200005
  4790                           ;	unspecified, using default values
  4791   200005                     	org	2097157
  4792   200005  FF                 	db	255
  4793                           
  4794                           ;Config register IDLOC6 @ 0x200006
  4795                           ;	unspecified, using default values
  4796   200006                     	org	2097158
  4797   200006  FF                 	db	255
  4798                           
  4799                           ;Config register IDLOC7 @ 0x200007
  4800                           ;	unspecified, using default values
  4801   200007                     	org	2097159
  4802   200007  FF                 	db	255
  4803                           
  4804                           	psect	config
  4805                           
  4806                           ; Padding undefined space
  4807   300000                     	org	3145728
  4808   300000  FF                 	db	255
  4809                           
  4810                           ;Config register CONFIG1H @ 0x300001
  4811                           ;	Oscillator Selection bits
  4812                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  4813                           ;	Fail-Safe Clock Monitor Enable bit
  4814                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4815                           ;	Internal/External Oscillator Switchover bit
  4816                           ;	IESO = ON, Oscillator Switchover mode enabled
  4817   300001                     	org	3145729
  4818   300001  88                 	db	136
  4819                           
  4820                           ;Config register CONFIG2L @ 0x300002
  4821                           ;	Power-up Timer Enable bit
  4822                           ;	PWRT = OFF, PWRT disabled
  4823                           ;	Brown-out Reset Enable bits
  4824                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4825                           ;	Brown Out Reset Voltage bits
  4826                           ;	BORV = 3, Minimum setting
  4827   300002                     	org	3145730
  4828   300002  1F                 	db	31
  4829                           
  4830                           ;Config register CONFIG2H @ 0x300003
  4831                           ;	Watchdog Timer Enable bit
  4832                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4833                           ;	Watchdog Timer Postscale Select bits
  4834                           ;	WDTPS = 1, 1:1
  4835   300003                     	org	3145731
  4836   300003  00                 	db	0
  4837                           
  4838                           ; Padding undefined space
  4839   300004                     	org	3145732
  4840   300004  FF                 	db	255
  4841                           
  4842                           ;Config register CONFIG3H @ 0x300005
  4843                           ;	CCP2 MUX bit
  4844                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4845                           ;	PORTB A/D Enable bit
  4846                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4847                           ;	Low-Power Timer1 Oscillator Enable bit
  4848                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4849                           ;	MCLR Pin Enable bit
  4850                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4851   300005                     	org	3145733
  4852   300005  83                 	db	131
  4853                           
  4854                           ;Config register CONFIG4L @ 0x300006
  4855                           ;	Stack Full/Underflow Reset Enable bit
  4856                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4857                           ;	Single-Supply ICSP Enable bit
  4858                           ;	LVP = OFF, Single-Supply ICSP disabled
  4859                           ;	Extended Instruction Set Enable bit
  4860                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4861                           ;	Background Debugger Enable bit
  4862                           ;	DEBUG = 0x1, unprogrammed default
  4863   300006                     	org	3145734
  4864   300006  81                 	db	129
  4865                           
  4866                           ; Padding undefined space
  4867   300007                     	org	3145735
  4868   300007  FF                 	db	255
  4869                           
  4870                           ;Config register CONFIG5L @ 0x300008
  4871                           ;	Code Protection bit
  4872                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4873                           ;	Code Protection bit
  4874                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4875                           ;	Code Protection bit
  4876                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4877                           ;	Code Protection bit
  4878                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4879   300008                     	org	3145736
  4880   300008  0F                 	db	15
  4881                           
  4882                           ;Config register CONFIG5H @ 0x300009
  4883                           ;	Boot Block Code Protection bit
  4884                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4885                           ;	Data EEPROM Code Protection bit
  4886                           ;	CPD = OFF, Data EEPROM not code-protected
  4887   300009                     	org	3145737
  4888   300009  C0                 	db	192
  4889                           
  4890                           ;Config register CONFIG6L @ 0x30000A
  4891                           ;	Write Protection bit
  4892                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4893                           ;	Write Protection bit
  4894                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4895                           ;	Write Protection bit
  4896                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4897                           ;	Write Protection bit
  4898                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4899   30000A                     	org	3145738
  4900   30000A  0F                 	db	15
  4901                           
  4902                           ;Config register CONFIG6H @ 0x30000B
  4903                           ;	Configuration Register Write Protection bit
  4904                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4905                           ;	Boot Block Write Protection bit
  4906                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4907                           ;	Data EEPROM Write Protection bit
  4908                           ;	WRTD = OFF, Data EEPROM not write-protected
  4909   30000B                     	org	3145739
  4910   30000B  E0                 	db	224
  4911                           
  4912                           ;Config register CONFIG7L @ 0x30000C
  4913                           ;	Table Read Protection bit
  4914                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4915                           ;	Table Read Protection bit
  4916                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4917                           ;	Table Read Protection bit
  4918                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4919                           ;	Table Read Protection bit
  4920                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4921   30000C                     	org	3145740
  4922   30000C  0F                 	db	15
  4923                           
  4924                           ;Config register CONFIG7H @ 0x30000D
  4925                           ;	Boot Block Table Read Protection bit
  4926                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4927   30000D                     	org	3145741
  4928   30000D  40                 	db	64
  4929                           tosu	equ	0xFFF
  4930                           tosh	equ	0xFFE
  4931                           tosl	equ	0xFFD
  4932                           stkptr	equ	0xFFC
  4933                           pclatu	equ	0xFFB
  4934                           pclath	equ	0xFFA
  4935                           pcl	equ	0xFF9
  4936                           tblptru	equ	0xFF8
  4937                           tblptrh	equ	0xFF7
  4938                           tblptrl	equ	0xFF6
  4939                           tablat	equ	0xFF5
  4940                           prodh	equ	0xFF4
  4941                           prodl	equ	0xFF3
  4942                           indf0	equ	0xFEF
  4943                           postinc0	equ	0xFEE
  4944                           postdec0	equ	0xFED
  4945                           preinc0	equ	0xFEC
  4946                           plusw0	equ	0xFEB
  4947                           fsr0h	equ	0xFEA
  4948                           fsr0l	equ	0xFE9
  4949                           wreg	equ	0xFE8
  4950                           indf1	equ	0xFE7
  4951                           postinc1	equ	0xFE6
  4952                           postdec1	equ	0xFE5
  4953                           preinc1	equ	0xFE4
  4954                           plusw1	equ	0xFE3
  4955                           fsr1h	equ	0xFE2
  4956                           fsr1l	equ	0xFE1
  4957                           bsr	equ	0xFE0
  4958                           indf2	equ	0xFDF
  4959                           postinc2	equ	0xFDE
  4960                           postdec2	equ	0xFDD
  4961                           preinc2	equ	0xFDC
  4962                           plusw2	equ	0xFDB
  4963                           fsr2h	equ	0xFDA
  4964                           fsr2l	equ	0xFD9
  4965                           status	equ	0xFD8

Data Sizes:
    Strings     52
    Constant    60
    Data        0
    BSS         109
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     54     102
    BANK0           128     65     126
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> Check_ADC@tmp(BANK0[10]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> Check_ADC@tmp(BANK0[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    S1714$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> Check_ADC@tmp(BANK0[10]), 

    S1714$source	PTR const unsigned char  size(2) Largest target is 0

    sp__GetString	PTR unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> Check_ADC@tmp(BANK0[10]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), STR_10(CODE[1]), STR_11(CODE[1]), STR_9(CODE[1]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 20
		 -> Lo_ISR@command(COMRAM[20]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 11
		 -> Check_ADC@tmp(BANK0[10]), STR_12(CODE[6]), STR_13(CODE[6]), STR_2(CODE[5]), 
		 -> STR_3(CODE[5]), STR_4(CODE[3]), STR_5(CODE[6]), STR_6(CODE[5]), 
		 -> STR_7(CODE[9]), STR_8(CODE[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_MyusartRead
    _Lo_ISR->_strcpy
    _strcpy->_GetString
    _MyusartRead->i1_UART_Write_Text
    i1_UART_Write_Text->i1_UART_Write

Critical Paths under _Hi_ISR in COMRAM

    _Hi_ISR->i2_UART_Write_Text
    i2_UART_Write_Text->i2_UART_Write

Critical Paths under _main in BANK0

    _main->_Check_ADC
    _Check_ADC->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _UART_Write_Text->_UART_Write

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3535
                                             63 BANK0      2     2      0
                          _Check_ADC
                  _SYSTEM_Initialize
                    _UART_Write_Text
                      _displayBinary
 ---------------------------------------------------------------------------------
 (1) _displayBinary                                        3     1      2     127
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_ADC                                           17    15      2    3179
                                             46 BANK0     17    15      2
                           _ADC_Read
                    _UART_Write_Text
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    14      5    2598
                                             29 BANK0     17    12      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4    2286
                                             23 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    2086
                                             10 BANK0     13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     329
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      96
                                              6 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     439
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     451
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      6     4      2     195
                                              1 BANK0      6     4      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      47
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             6     4      2      37
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Lo_ISR                                              32    32      0     819
                                             22 COMRAM    32    32      0
                        _ClearBuffer
                          _GetString
                        _MyusartRead
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               3     1      2      91
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               6     3      3      81
                                             16 COMRAM     6     3      3
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (8) _MyusartRead                                          1     1      0     216
                                             21 COMRAM     1     1      0
                       i1_UART_Write
                  i1_UART_Write_Text
 ---------------------------------------------------------------------------------
 (9) i1_UART_Write_Text                                    6     4      2     120
                                             15 COMRAM     6     4      2
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (10) i1_UART_Write                                        1     1      0      29
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _GetString                                            2     0      2       0
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _ClearBuffer                                          2     2      0      68
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _Hi_ISR                                              7     7      0     122
                                              7 COMRAM     7     7      0
                  i2_UART_Write_Text
 ---------------------------------------------------------------------------------
 (12) i2_UART_Write_Text                                   6     4      2     122
                                              1 COMRAM     6     4      2
                       i2_UART_Write
 ---------------------------------------------------------------------------------
 (13) i2_UART_Write                                        1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_ADC
     _ADC_Read
     _UART_Write_Text
       _UART_Write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _SYSTEM_Initialize
     _ADC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _UART_Write_Text
   _displayBinary

 _Lo_ISR (ROOT)
   _ClearBuffer
   _GetString
   _MyusartRead
     i1_UART_Write
     i1_UART_Write_Text
       i1_UART_Write
   _strcpy
     _GetString (ARG)
   _strlen

 _Hi_ISR (ROOT)
   i2_UART_Write_Text
     i2_UART_Write

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1518      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK5           239      0       0      0.0%
BANK5              239      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128     65     126     98.4%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     54     102     81.0%
BITBIGSFR_1h        38      0       0      0.0%
BITBIGSFRh          18      0       0      0.0%
BITBIGSFR_1llh      12      0       0      0.0%
BITBIGSFR_5h         9      0       0      0.0%
BITBIGSFRl           9      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_5l         2      0       0      0.0%
BITBIGSFR_1lh        1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     228      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Jan 14 00:21:09 2025

                           l21 0C8E                             _BF 7E38                             l24 0BA6  
                           l32 048E                             l27 0BD4                             l35 04CE  
                           l65 0C2C                             l82 0CE4                             l85 0CEC  
                 ___awdiv@sign 0085                             _pi 7CF7                             bsr 0FE0  
                          l112 0C74                            l115 0C94                            l124 08C4  
                          l118 0CA6                            l181 0840                            l565 0592  
                          l578 0702                            _PEN 7E2A                            _SEN 7E28  
                          _aT0 7CEF                            _aT1 7CEB                            _aT2 7CE7  
                          _aT3 7CE3                            _aT4 7CDF                            _abs 0B6C  
                          _str 00E1                   ___awmod@sign 0085                 ?_displayBinary 0080  
                          wreg 0FE8       Check_ADC@prev_sensor_val 00AE                           l1203 0CF2  
                         ?_abs 0086                           l1129 0B2E                           l1180 0BA0  
                         l2301 0508                           l1173 0AB4                           l2311 0540  
                         l2303 0510                           l1167 03FC                           l1192 07AE  
                         l2321 056C                           l2313 0546                           l2305 0522  
                         l1177 0B88                           l2401 02BE                           l2315 055C  
                         l2307 052A                           l2323 0572                           l2331 0654  
                         l2411 0352                           l2403 02D8                           l2325 0582  
                         l2317 0564                           l2309 0532                           l2341 0680  
                         l2333 0658                           l2421 03AE                           l2413 0362  
                         l2405 02F0                           l2501 0C18                           l2327 058A  
                         l2319 0566                           l2351 06B8                           l2343 0688  
                         l2335 0666                           l2415 0372                           l2423 03B2  
                         l2407 0322                           l2511 0C26                           l2503 0C1A  
                         l2361 06F2                           l2353 06CE                           l2345 069A  
                         l2337 066E                           l2417 0382                           l2409 033E  
                         l2425 03C8                           l2441 0A7C                           l2513 0C28  
                         l2505 0C1C                           l2521 0C5E                           l2435 0C94  
                         l2291 04E2                           l2363 06FA                           l2355 06D6  
                         l2347 06A2                           l2339 0672                           l2371 0726  
                         l2419 0394                           l2443 0A8E                           l2451 0C78  
                         l2515 0C2A                           l2507 0C1E                           l2531 0C6A  
                         l2523 0C62                           l2461 0BB4                           l2437 0CA2  
                         l2293 04EA                           l2357 06DC                           l2349 06AA  
                         l2381 0B6C                           l2373 0730                           l2429 03DA  
                         l2445 0AAA                           l2541 03FE                           l2453 0C7C  
                         l2509 0C20                           l2517 0CE6                           l2533 0C6C  
                         l2525 0C64                           l2463 0BCC                           l2295 04EE  
                         l2287 04D0                           l2359 06E2                           l2383 0B7C  
                         l2375 074C                           l2367 0704                           l2391 025C  
                         l2439 0A70                           l2471 0B06                           l2551 0496  
                         l2543 0412                           l2455 0C8A                           l2535 0C6E  
                         l2527 0C66                           l2519 0C54                           l2481 0850  
                         l2297 04FC                           l2289 04D4                           l2377 077E  
                         l2369 0716                           l2393 0260                           l2385 0220  
                         l2473 0B0E                           l2553 04B2                           l2545 042C  
                         l2457 0C8C                           l2449 0C76                           l2537 0C70  
                         l2529 0C68                           l2561 0CDC                           l2459 0BA2  
                         l2483 0882                           l2299 0504                           l2395 026E  
                         l2387 0244                           l2475 0B22                           l2467 0AF4  
                         l2555 04C2                           l2547 0438                           l2491 0C0E  
                         l2539 0C72                           l2563 0CE0                           l2571 09C6  
                         l2485 0888                           l2397 028A                           l2389 0250  
                         l2469 0AFE                           l2549 0464                           l2493 0C10  
                         l2557 0CD4                           l2565 07B0                           l2573 09DA  
                         l2581 0A10                           l2479 0842                           l2399 02A6  
                         l2495 0C12                           l2487 0C04                           l2559 0CD8  
                         l2575 09EC                           l2567 09C2                           l2497 0C14  
                         l2489 0C0A                           l2577 09F8                           l2569 09C6  
                         l2499 0C16                           l2579 0A06                           _ADFM 7E07  
                         STR_1 7D2A                           STR_2 7D25                           STR_3 7D20  
                         STR_4 7D03                           STR_5 7D15                           STR_6 7D1B  
                         STR_7 7D06                           STR_8 7CFB                           STR_9 7D05  
                         _CREN 7D5C                           u2000 0BB4                           u2001 0BB0  
                         u2010 087E                           u2020 08B4                           u2030 08C4  
                         u2110 080A                           u2031 08C0                           u2111 0802  
                         u2040 0464                           u2017 0874                           u2041 0460  
                         u2050 048E                           u2130 0830                           u2027 08AA  
                         u2051 048A                           u2131 0828                           u2060 04B2  
                         u2108 07EA                           u2061 04AE                           _LATA 0F89  
                         u2070 07C4                           u2150 09DA                           u2071 07BC  
                         u2151 09D6                           u2128 080E                           u2160 09EC  
                         u2161 09E8                           u2090 07E6                           u2091 07DE  
                         u2148 0834                           u1710 04E2                           u1711 04DE  
                         u1720 04FC                           u1800 06B8                           u2088 07C8  
                         u1721 04F8                           u1801 06B4                           u1730 0522  
                         u1810 06CE                           u1731 051E                           u1811 06CA  
                         u1740 0540                           u1820 06F2                           u1900 02A6  
                         u1741 053C                           u1821 06EE                           u1901 02A2  
                         u1750 055C                           u1830 0716                           u1910 02EC  
                         u1751 0558                           u1831 0712                           u1911 02E6  
                         u1760 0582                           u1840 0726                           u1920 02EE  
                         u1761 057E                           u1841 0722                           u1770 0666  
                         u1850 074C                           u1930 0352                           u1771 0662  
                         u1851 0748                           u1931 034E                           u1780 0680  
                         u1860 077E                           u1940 0362                           u1781 067C  
                         u1861 077A                           u1941 035E                           u1790 069A  
                         u1870 0B7C                           u1950 0372                           u1791 0696  
                         u1871 0B78                           u1951 036E                           u1960 0382  
                         u1880 0244                           u1961 037E                           u1881 0240  
                         u1970 03C4                           u1890 028A                           u1971 03C0  
                         u1891 0286                           u1980 0CA2                           u1981 0C9E  
                         u1990 0AAA                           u1991 0AA6                           _RCIF 7CF5  
                         _RCEN 7E2B                           _accX 0049                           _accZ 0047  
                         abs@a 0086                           _dbuf 00C1                           _main 09C2  
                         _prec 00F7                           fsr0h 0FEA                           fsr1h 0FE2  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 0067               __end_of_ADC_Read 0BD6                           start 021C  
                 ___param_bank 0000        __end_of_UART_Write_Text 08C6                          ??_abs 0088  
             ?_UART_Initialize 0001  __end_of_OSCILLATOR_Initialize 0CEE                          ?_main 0001  
                        _ACKEN 7E2C                          _ACKDT 7E2D                __end_of___awdiv 0594  
                        STR_10 7D05                          STR_11 7D05                          STR_12 7D0F  
              __end_of___awmod 0704                ___awdiv@divisor 0082                          _IRCF0 7E9C  
                        _IRCF1 7E9D                          _IRCF2 7E9E                          i1l115 0CAA  
                        i1l124 0942                          i1l212 01EC                          i1l133 0AF2  
                        i1l118 0CBC                          i1l136 0CF0                          i1l129 0B6A  
                        i2l201 0638                          i2l115 0CC0                          i2l124 09C0  
                        i2l118 0CD2                ___awdiv@counter 0084                          _RCREG 0FAE  
                 vfpfcnvrt@fmt 008B                          _SPBRG 0FAF                          _TRISA 0F92  
                        _TRISB 0F93                          _TXREG 0FAD                    ?_UART_Write 0001  
                        _angle 003F                          _flags 00FD                          _count 004B  
                        _fputc 0704                          _pi_lo 7CF3                          _width 00F5  
                        _putch 0CF2                    _ClearBuffer 0B30                          tablat 0FF5  
                        ttemp5 0068                          ttemp6 006B                          ttemp7 006F  
                        status 0FD8                          wtemp8 0068                __end_of_sprintf 0B30  
              __initialization 0C2E                   __end_of_main 0A24                         ??_main 00BF  
              ??_displayBinary 0082                  __activetblptr 0002             i1UART_Write_Text@i 0014  
                       _ADCON1 0FC1                         ?_fputc 0080                         _ADRESH 0FC4  
                       _ADRESL 0FC3               ___awdiv@dividend 0080                         ?_putch 0001  
                       i1l2101 0ABA                         i1l2111 0AEC                         i1l2103 0ACC  
                       i1l1215 0C02                         i1l1209 0A6E                         i1l2121 0A24  
                       i1l2201 00CC                         i1l2115 0CEE                         i1l2107 0ADC  
                       i1l2123 0A28                         i1l2131 0BF6                         i1l2203 00E8  
                       i1l2053 08C6                         i1l2109 0AE8                         i1l2125 0BD6  
                       i1l2221 014E                         i1l2205 00EA                         i1l2213 0106  
                       i1l2055 08D2                         i1l2127 0BDE                         i1l2223 0160  
                       i1l2215 0118                         i1l2207 00EE                         i1l2057 0902  
                       i1l2129 0BE0                         i1l2241 01C2                         i1l2225 0162  
                       i1l2217 012A                         i1l2233 017A                         i1l2209 0102  
                       i1l2091 0B38                         i1l2059 0906                         i1l2243 01C6  
                       i1l2235 018C                         i1l2227 0166                         i1l2219 013C  
                       i1l2093 0B42                         i1l2085 0B30                         i1l2245 01D8  
                       i1l2237 019E                         i1l2181 0046                         i1l2095 0B46  
                       i1l2247 01DC                         i1l2239 01B0                         i1l2191 007E  
                       i1l2183 0054                         i1l2097 0B62                         i1l2193 0090  
                       i1l2185 0062                         i1l2099 0AB6                         i1l2195 00A4  
                       i1l2187 0068                         i1l2197 00A8                         i1l2189 006C  
                       i1l2199 00BA                         i1l1953 0CAA                         i2l2051 0CCE  
                       i1l1955 0CB8                         i2l2141 0984                         i2l2135 0944  
                       i2l2049 0CC0                         i2l2137 0950                         i2l2161 05BC  
                       i2l2139 0980                         i2l2171 060E                         i2l2163 05CA  
                       i2l2173 0622                         i2l2165 05DC                         i2l2175 062E  
                       i2l2167 05EC                         i2l2159 05AE                         i2l2169 05FE  
                       i2l2177 0632                         i2l2179 0636                         _OSCCON 0FD3  
                vfpfcnvrt@done 008F                         _SSPADD 0FC8                         _SSPBUF 0FC9  
                       _Hi_ISR 0008                         _Lo_ISR 0018                   vfprintf@cfmt 009B  
                    ??___awdiv 0084                      ??___awmod 0084               ?_UART_Write_Text 0081  
                       _atanhi 7CCF                         _atanlo 7CBF                ADC_Read@channel 0080  
                       _lenStr 004D                ADC_Read@digital 0084                         clear_0 0C34  
                       clear_1 0C40               ___awdiv@quotient 0086                ___awmod@divisor 0082  
                       isa$std 0001                ___awmod@counter 0084                         _strcpy 0A24  
                       _strlen 0BD6                         fputc@c 0080                      ?_ADC_Read 0080  
                 __mediumconst 7CBE                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8                         putch@c 0001              __end_of_Check_ADC 04D0  
             __end_of_vfprintf 0AB6                      ??_sprintf 00A2              _SYSTEM_Initialize 0CD4  
                   __accesstop 0080        __end_of__initialization 0C46             ?_SYSTEM_Initialize 0001  
                ___rparam_used 0001              __end_of_GetString 0CF2                  ?i1_UART_Write 0001  
               __pcstackCOMRAM 0001            ??_SYSTEM_Initialize 0080                  __end_of_fputc 07B0  
                __end_of_pi_lo 7CF7                  __end_of_putch 0CF4                     __end_of_pi 7CFB  
                   ??_ADC_Read 0082                  ??_MyusartRead 0016                  ?i2_UART_Write 0001  
                      ??_fputc 0083      __end_of_SYSTEM_Initialize 0CE6                        ??_putch 0080  
                   __pbssBANK0 00C1          i1UART_Write_Text@text 0010                        ?_Hi_ISR 0001  
             i2UART_Write@data 0001                        ?_Lo_ISR 0001                 ??i1_UART_Write 000F  
           i2UART_Write_Text@i 0006                        _CCP1CON 0FBD                        ?_strcpy 0011  
                      ?_strlen 000F                 ??i2_UART_Write 0001                   ??_UART_Write 0080  
                      _SSPCON1 0FC6                        _SSPCON2 0FC5                        _SSPSTAT 0FC7  
                 ?_ClearBuffer 0001            __end_of_MyusartRead 0AF4                        __Hparam 0000  
                      __Lparam 0000                   Check_ADC@tmp 00B3                        ___awdiv 04D0  
                      ___awmod 0654             __end_of_UART_Write 0CA8                      ?_vfprintf 0097  
                      __pcinit 0C2E                        __ramtop 0600                        __ptext0 09C2  
                      __ptext1 07B0                        __ptext2 0CD4                        __ptext3 0C54  
                      __ptext4 0CE6                        __ptext5 0C04                        __ptext6 0C76  
                      __ptext7 03FE                        __ptext8 0AF4                        __ptext9 0A70  
        _OSCILLATOR_Initialize 0CE6               ___awmod@dividend 0080                        _sprintf 0AF4  
               __pintcode_body 0594           end_of_initialization 0C46                        fputc@fp 0082  
                __Lmediumconst 7CBE                        int_func 0594              __end_of_vfpfcnvrt 03FE  
                    _RCSTAbits 0FAB                        postdec2 0FDD                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE               vfpfcnvrt@convarg 0092  
                   ??_vfprintf 009B       Check_ADC@bend_sensor_val 00BD                        strcpy@d 0016  
                      strlen@a 0011                        strlen@s 000F                 UART_Write@data 0080  
        __end_of_displayBinary 0842                      _TRISAbits 0F92                      _TRISCbits 0F94  
                  _MyusartRead 0AB6           __end_ofi1_UART_Write 0CBE                      _Check_ADC 03FE  
                    _TXSTAbits 0FAC                 __end_of_Hi_ISR 0654                 __end_of_Lo_ISR 021C  
         __end_ofi2_UART_Write 0CD4   __end_of_INTERRUPT_Initialize 0C2E                      _GetString 0CEE  
                  vfpfcnvrt@ap 008C                    vfpfcnvrt@cp 0090                    vfpfcnvrt@fp 008A  
            i1_UART_Write_Text 08C6                    _BAUDCONbits 0FB8                 __end_of_atanhi 7CDF  
               __end_of_atanlo 7CCF                 _ADC_Initialize 0C76         ?_OSCILLATOR_Initialize 0001  
           ?i1_UART_Write_Text 0010                 __end_of_strcpy 0A70                 __end_of_strlen 0C04  
          start_initialization 0C2E                    __end_of_aT0 7CF3                    __end_of_aT1 7CEF  
                  __end_of_aT2 7CEB                    __end_of_aT3 7CE7                    __end_of_aT4 7CE3  
                  __end_of_abs 0BA2            ??i1_UART_Write_Text 0012                   ClearBuffer@i 000F  
            ??_UART_Initialize 0080                     ?_Check_ADC 00AE                       ??_Hi_ISR 0008  
                     ??_Lo_ISR 0017                    vfprintf@fmt 0098      __end_ofi1_UART_Write_Text 0944  
       __end_of_ADC_Initialize 0C90                     ?_GetString 000F                       ??_strcpy 0014  
                     ??_strlen 0011               displayBinary@num 0080                      _accX_high 0052  
                    _accZ_high 0050                    __pbssCOMRAM 0037              i2_UART_Write_Text 0944  
                __pcstackBANK0 0080             ?i2_UART_Write_Text 0002          i2UART_Write_Text@text 0002  
          ??i2_UART_Write_Text 0004                  Lo_ISR@command 0023                      __pintcode 0008  
                __pmediumconst 7CBE                       ?___awdiv 0080                       ?___awmod 0080  
              ?_ADC_Initialize 0001       main@prev_bend_sensor_val 00BF                    __pintcodelo 0018  
    __end_ofi2_UART_Write_Text 09C2                      fabsf@F465 0037                       _ADC_Read 0BA2  
                     ?_sprintf 009D              ??_UART_Write_Text 0083           _INTERRUPT_Initialize 0C04  
                  _isConnected 00FB                    ??_Check_ADC 00B0                       _LATAbits 0F89  
                     _LATBbits 0F8A                       _IPR1bits 0F9F                       _PIE1bits 0F9D  
                     i1u131_20 0B62                       i1u131_21 0B5E                       i1u132_20 0ACC  
                     i1u132_21 0AC8                       i1u125_20 08FE                       i1u141_20 0A5C  
                     i1u125_27 08F4                       i1u141_27 0A52                       i1u126_20 0932  
                     i1u142_20 0A6E                       i1u142_21 0A6A                       i1u126_27 0928  
                     i1u119_20 0CB8                       i1u127_20 0942                       i1u143_20 0BF6  
                     i1u119_21 0CB4                       i1u127_21 093E                       i1u143_21 0BF2  
                     i1u160_20 0118                       i1u160_21 0114                       i1u161_20 012A  
                     i1u153_20 0054                       i1u161_21 0126                       i1u153_21 0050  
                     i1u162_20 013C                       i1u154_20 0062                       i1u162_21 0138  
                     i1u154_21 005E                       i1u163_20 014E                       i1u155_20 007E  
                     i1u163_21 014A                       i1u155_21 007A                       i1u164_20 0160  
                     i1u156_20 0090                       i1u164_21 015C                       i1u156_21 008C  
                     i1u165_20 018C                       i1u157_20 00BA                       i1u165_21 0188  
                     i1u157_21 00B6                       i1u166_20 019E                       i1u158_20 00CC  
                     i1u166_21 019A                       i1u158_21 00C8                       i1u167_20 01B0  
                     i1u159_20 00E8                       i1u167_21 01AC                       i1u159_21 00E4  
                     i1u168_20 01C2                       i1u168_21 01BE                       i2u124_40 0CCE  
                     i2u124_41 0CCA                       i2u150_40 05DC                       i2u150_41 05D8  
                     i2u151_40 05FE                       i2u151_41 05FA                       i2u144_40 097C  
                     i2u152_40 0622                       i2u152_41 061E                       i2u144_47 0972  
                     i2u145_40 09B0                       i2u145_47 09A6                       i2u146_40 09C0  
                     i2u146_41 09BC                       i2u219_47 05C2                       i2u149_40 05BC  
                     i2u149_41 05B8                       _PIR1bits 0F9E                   i1_UART_Write 0CA8  
                     _RCONbits 0FD0                    ??_GetString 0011                      _vfpfcnvrt 0220  
                   _ADCON0bits 0FC2                     _ADCON2bits 0FC0        MyusartRead@receivedData 0016  
                 ?_MyusartRead 0001                    _needSendMsg 00F9                   i2_UART_Write 0CBE  
                   vfpfcnvrt@c 0096          ?_INTERRUPT_Initialize 0001               i1UART_Write@data 000F  
                     __Hrparam 0000                     vfprintf@ap 009A                       __Lrparam 0000  
                   vfprintf@fp 0097        ??_OSCILLATOR_Initialize 0080                     ?_vfpfcnvrt 008A  
                     _accX_low 0051                       _accZ_low 004F             ___fpclassifyf@F465 003B  
              _UART_Initialize 0C54                     sprintf@fmt 009E                   _pitch_offset 0043  
                     __ptext10 0220                       __ptext11 0704                       __ptext20 0BD6  
                     __ptext12 0CF2                       __ptext21 0A24                       __ptext13 0B6C  
                     __ptext22 0AB6                       __ptext14 0654                       __ptext23 08C6  
                     __ptext15 04D0                       __ptext24 0CA8                       __ptext16 0842  
                     __ptext25 0CEE                       __ptext17 0C90                       __ptext26 0B30  
                     __ptext18 0BA2                       __ptext28 0944                       __ptext29 0CBE  
                   strcpy@dest 0011            UART_Write_Text@text 0081                       isa$xinst 0000  
                     int$flags 0067                       _vfprintf 0A70                       _mystring 0053  
                   _INTCONbits 0FF2         ??_INTERRUPT_Initialize 0080                  ??_ClearBuffer 000F  
                     intlevel1 0000                       intlevel2 0000                      sprintf@ap 00A2  
                    strcpy@src 0012               ??_ADC_Initialize 0080        __end_of_UART_Initialize 0C76  
                  ??_vfpfcnvrt 008D                _UART_Write_Text 0842                       sprintf@f 00A3  
                     sprintf@s 009D                  _displayBinary 07B0                     _UART_Write 0C90  
                  _SSPCON2bits 0FC5               UART_Write_Text@i 0085            __end_of_ClearBuffer 0B6C  
